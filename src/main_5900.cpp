// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingVideoStats
#include "Oculus/Platform/MessageWithLivestreamingVideoStats.hpp"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingVideoStats.GetDataFromMessage
Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::MessageWithLivestreamingVideoStats::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingVideoStats::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingVideoStats.GetLivestreamingVideoStats
Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLivestreamingVideoStats::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingVideoStats* (MessageWithLivestreamingVideoStats::*)(System::IntPtr)>(&MessageWithLivestreamingVideoStats::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingVideoStats*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLivestreamingVideoStats::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLivestreamingVideoStats::*)(System::IntPtr)>(&MessageWithLivestreamingVideoStats::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingVideoStats*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLivestreamingVideoStats::*)(System::IntPtr)>(&MessageWithLivestreamingVideoStats::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingVideoStats*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats
// Il2CppName: GetLivestreamingVideoStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingVideoStats* (MessageWithLivestreamingVideoStats::*)()>(&MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingVideoStats*), "GetLivestreamingVideoStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingAdminSnapshot
#include "Oculus/Platform/MessageWithMatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingAdminSnapshot.GetDataFromMessage
Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingAdminSnapshot.GetMatchmakingAdminSnapshot
Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithMatchmakingAdminSnapshot::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingAdminSnapshot* (MessageWithMatchmakingAdminSnapshot::*)(System::IntPtr)>(&MessageWithMatchmakingAdminSnapshot::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingAdminSnapshot*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingAdminSnapshot::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingAdminSnapshot::*)(System::IntPtr)>(&MessageWithMatchmakingAdminSnapshot::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingAdminSnapshot*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingAdminSnapshot::*)(System::IntPtr)>(&MessageWithMatchmakingAdminSnapshot::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingAdminSnapshot*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot
// Il2CppName: GetMatchmakingAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingAdminSnapshot* (MessageWithMatchmakingAdminSnapshot::*)()>(&MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingAdminSnapshot*), "GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingEnqueueResult
#include "Oculus/Platform/MessageWithMatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResult.GetDataFromMessage
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResult.GetMatchmakingEnqueueResult
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithMatchmakingEnqueueResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingEnqueueResult* (MessageWithMatchmakingEnqueueResult::*)(System::IntPtr)>(&MessageWithMatchmakingEnqueueResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingEnqueueResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingEnqueueResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingEnqueueResult::*)(System::IntPtr)>(&MessageWithMatchmakingEnqueueResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingEnqueueResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingEnqueueResult::*)(System::IntPtr)>(&MessageWithMatchmakingEnqueueResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingEnqueueResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult
// Il2CppName: GetMatchmakingEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingEnqueueResult* (MessageWithMatchmakingEnqueueResult::*)()>(&MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingEnqueueResult*), "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/MessageWithMatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom.GetDataFromMessage
Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom.GetMatchmakingEnqueueResultAndRoom
Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* (MessageWithMatchmakingEnqueueResultAndRoom::*)(System::IntPtr)>(&MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingEnqueueResultAndRoom*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingEnqueueResultAndRoom::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingEnqueueResultAndRoom::*)(System::IntPtr)>(&MessageWithMatchmakingEnqueueResultAndRoom::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingEnqueueResultAndRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingEnqueueResultAndRoom::*)(System::IntPtr)>(&MessageWithMatchmakingEnqueueResultAndRoom::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingEnqueueResultAndRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom
// Il2CppName: GetMatchmakingEnqueueResultAndRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* (MessageWithMatchmakingEnqueueResultAndRoom::*)()>(&MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingEnqueueResultAndRoom*), "GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats
#include "Oculus/Platform/MessageWithMatchmakingStatsUnderMatchmakingStats.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats.GetDataFromMessage
Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats.GetMatchmakingStats
Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingStats* (MessageWithMatchmakingStatsUnderMatchmakingStats::*)(System::IntPtr)>(&MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingStatsUnderMatchmakingStats*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingStatsUnderMatchmakingStats::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingStatsUnderMatchmakingStats::*)(System::IntPtr)>(&MessageWithMatchmakingStatsUnderMatchmakingStats::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingStatsUnderMatchmakingStats*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingStatsUnderMatchmakingStats::*)(System::IntPtr)>(&MessageWithMatchmakingStatsUnderMatchmakingStats::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingStatsUnderMatchmakingStats*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats
// Il2CppName: GetMatchmakingStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingStats* (MessageWithMatchmakingStatsUnderMatchmakingStats::*)()>(&MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingStatsUnderMatchmakingStats*), "GetMatchmakingStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncConnection
#include "Oculus/Platform/MessageWithNetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncConnection.GetDataFromMessage
Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::MessageWithNetSyncConnection::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncConnection::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncConnection.GetNetSyncConnection
Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::MessageWithNetSyncConnection::GetNetSyncConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncConnection::GetNetSyncConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithNetSyncConnection::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncConnection* (MessageWithNetSyncConnection::*)(System::IntPtr)>(&MessageWithNetSyncConnection::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncConnection*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncConnection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncConnection::*)(System::IntPtr)>(&MessageWithNetSyncConnection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncConnection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncConnection::*)(System::IntPtr)>(&MessageWithNetSyncConnection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncConnection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncConnection::GetNetSyncConnection
// Il2CppName: GetNetSyncConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncConnection* (MessageWithNetSyncConnection::*)()>(&MessageWithNetSyncConnection::GetNetSyncConnection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncConnection*), "GetNetSyncConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSessionList
#include "Oculus/Platform/MessageWithNetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionList.GetDataFromMessage
Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::MessageWithNetSyncSessionList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSessionList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionList.GetNetSyncSessionList
Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::MessageWithNetSyncSessionList::GetNetSyncSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSessionList::GetNetSyncSessionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSessionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithNetSyncSessionList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSessionList* (MessageWithNetSyncSessionList::*)(System::IntPtr)>(&MessageWithNetSyncSessionList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSessionList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncSessionList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncSessionList::*)(System::IntPtr)>(&MessageWithNetSyncSessionList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSessionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncSessionList::*)(System::IntPtr)>(&MessageWithNetSyncSessionList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSessionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncSessionList::GetNetSyncSessionList
// Il2CppName: GetNetSyncSessionList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSessionList* (MessageWithNetSyncSessionList::*)()>(&MessageWithNetSyncSessionList::GetNetSyncSessionList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSessionList*), "GetNetSyncSessionList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification
#include "Oculus/Platform/MessageWithNetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification.GetDataFromMessage
Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification.GetNetSyncSessionsChangedNotification
Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSessionsChangedNotification* (MessageWithNetSyncSessionsChangedNotification::*)(System::IntPtr)>(&MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSessionsChangedNotification*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncSessionsChangedNotification::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncSessionsChangedNotification::*)(System::IntPtr)>(&MessageWithNetSyncSessionsChangedNotification::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSessionsChangedNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncSessionsChangedNotification::*)(System::IntPtr)>(&MessageWithNetSyncSessionsChangedNotification::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSessionsChangedNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification
// Il2CppName: GetNetSyncSessionsChangedNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSessionsChangedNotification* (MessageWithNetSyncSessionsChangedNotification::*)()>(&MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSessionsChangedNotification*), "GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult
#include "Oculus/Platform/MessageWithNetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult.GetDataFromMessage
Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult.GetNetSyncSetSessionPropertyResult
Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSetSessionPropertyResult* (MessageWithNetSyncSetSessionPropertyResult::*)(System::IntPtr)>(&MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSetSessionPropertyResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncSetSessionPropertyResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncSetSessionPropertyResult::*)(System::IntPtr)>(&MessageWithNetSyncSetSessionPropertyResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSetSessionPropertyResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncSetSessionPropertyResult::*)(System::IntPtr)>(&MessageWithNetSyncSetSessionPropertyResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSetSessionPropertyResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult
// Il2CppName: GetNetSyncSetSessionPropertyResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSetSessionPropertyResult* (MessageWithNetSyncSetSessionPropertyResult::*)()>(&MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncSetSessionPropertyResult*), "GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList
#include "Oculus/Platform/MessageWithNetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList.GetDataFromMessage
Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList.GetNetSyncVoipAttenuationValueList
Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetNetSyncVoipAttenuationValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetNetSyncVoipAttenuationValueList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncVoipAttenuationValueList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithNetSyncVoipAttenuationValueList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncVoipAttenuationValueList* (MessageWithNetSyncVoipAttenuationValueList::*)(System::IntPtr)>(&MessageWithNetSyncVoipAttenuationValueList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncVoipAttenuationValueList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncVoipAttenuationValueList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncVoipAttenuationValueList::*)(System::IntPtr)>(&MessageWithNetSyncVoipAttenuationValueList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncVoipAttenuationValueList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetSyncVoipAttenuationValueList::*)(System::IntPtr)>(&MessageWithNetSyncVoipAttenuationValueList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncVoipAttenuationValueList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetSyncVoipAttenuationValueList::GetNetSyncVoipAttenuationValueList
// Il2CppName: GetNetSyncVoipAttenuationValueList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncVoipAttenuationValueList* (MessageWithNetSyncVoipAttenuationValueList::*)()>(&MessageWithNetSyncVoipAttenuationValueList::GetNetSyncVoipAttenuationValueList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetSyncVoipAttenuationValueList*), "GetNetSyncVoipAttenuationValueList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithOrgScopedID
#include "Oculus/Platform/MessageWithOrgScopedID.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithOrgScopedID.GetDataFromMessage
Oculus::Platform::Models::OrgScopedID* Oculus::Platform::MessageWithOrgScopedID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithOrgScopedID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithOrgScopedID.GetOrgScopedID
Oculus::Platform::Models::OrgScopedID* Oculus::Platform::MessageWithOrgScopedID::GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithOrgScopedID::GetOrgScopedID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithOrgScopedID::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::OrgScopedID* (MessageWithOrgScopedID::*)(System::IntPtr)>(&MessageWithOrgScopedID::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithOrgScopedID*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithOrgScopedID::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithOrgScopedID::*)(System::IntPtr)>(&MessageWithOrgScopedID::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithOrgScopedID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithOrgScopedID::*)(System::IntPtr)>(&MessageWithOrgScopedID::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithOrgScopedID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithOrgScopedID::GetOrgScopedID
// Il2CppName: GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::OrgScopedID* (MessageWithOrgScopedID::*)()>(&MessageWithOrgScopedID::GetOrgScopedID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithOrgScopedID*), "GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithParty
#include "Oculus/Platform/MessageWithParty.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithParty.GetDataFromMessage
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithParty::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithParty::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithParty.GetParty
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithParty::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithParty::GetParty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithParty::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Party* (MessageWithParty::*)(System::IntPtr)>(&MessageWithParty::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithParty*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithParty::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithParty::*)(System::IntPtr)>(&MessageWithParty::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithParty*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithParty::*)(System::IntPtr)>(&MessageWithParty::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithParty*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithParty::GetParty
// Il2CppName: GetParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Party* (MessageWithParty::*)()>(&MessageWithParty::GetParty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithParty*), "GetParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyUnderCurrentParty
#include "Oculus/Platform/MessageWithPartyUnderCurrentParty.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyUnderCurrentParty.GetDataFromMessage
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithPartyUnderCurrentParty::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyUnderCurrentParty::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyUnderCurrentParty.GetParty
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithPartyUnderCurrentParty::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyUnderCurrentParty::GetParty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithPartyUnderCurrentParty::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Party* (MessageWithPartyUnderCurrentParty::*)(System::IntPtr)>(&MessageWithPartyUnderCurrentParty::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyUnderCurrentParty*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPartyUnderCurrentParty::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPartyUnderCurrentParty::*)(System::IntPtr)>(&MessageWithPartyUnderCurrentParty::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyUnderCurrentParty*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPartyUnderCurrentParty::*)(System::IntPtr)>(&MessageWithPartyUnderCurrentParty::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyUnderCurrentParty*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPartyUnderCurrentParty::GetParty
// Il2CppName: GetParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Party* (MessageWithPartyUnderCurrentParty::*)()>(&MessageWithPartyUnderCurrentParty::GetParty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyUnderCurrentParty*), "GetParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyID
#include "Oculus/Platform/MessageWithPartyID.hpp"
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyID.GetDataFromMessage
Oculus::Platform::Models::PartyID* Oculus::Platform::MessageWithPartyID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyID.GetPartyID
Oculus::Platform::Models::PartyID* Oculus::Platform::MessageWithPartyID::GetPartyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyID::GetPartyID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyID*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithPartyID::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PartyID* (MessageWithPartyID::*)(System::IntPtr)>(&MessageWithPartyID::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyID*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPartyID::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPartyID::*)(System::IntPtr)>(&MessageWithPartyID::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPartyID::*)(System::IntPtr)>(&MessageWithPartyID::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPartyID::GetPartyID
// Il2CppName: GetPartyID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PartyID* (MessageWithPartyID::*)()>(&MessageWithPartyID::GetPartyID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyID*), "GetPartyID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyUpdateNotification
#include "Oculus/Platform/MessageWithPartyUpdateNotification.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyUpdateNotification.GetDataFromMessage
Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::MessageWithPartyUpdateNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyUpdateNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyUpdateNotification.GetPartyUpdateNotification
Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::MessageWithPartyUpdateNotification::GetPartyUpdateNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyUpdateNotification::GetPartyUpdateNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithPartyUpdateNotification::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PartyUpdateNotification* (MessageWithPartyUpdateNotification::*)(System::IntPtr)>(&MessageWithPartyUpdateNotification::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyUpdateNotification*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPartyUpdateNotification::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPartyUpdateNotification::*)(System::IntPtr)>(&MessageWithPartyUpdateNotification::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyUpdateNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPartyUpdateNotification::*)(System::IntPtr)>(&MessageWithPartyUpdateNotification::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyUpdateNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPartyUpdateNotification::GetPartyUpdateNotification
// Il2CppName: GetPartyUpdateNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PartyUpdateNotification* (MessageWithPartyUpdateNotification::*)()>(&MessageWithPartyUpdateNotification::GetPartyUpdateNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPartyUpdateNotification*), "GetPartyUpdateNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPidList
#include "Oculus/Platform/MessageWithPidList.hpp"
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPidList.GetDataFromMessage
Oculus::Platform::Models::PidList* Oculus::Platform::MessageWithPidList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPidList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PidList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPidList.GetPidList
Oculus::Platform::Models::PidList* Oculus::Platform::MessageWithPidList::GetPidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPidList::GetPidList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPidList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PidList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithPidList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PidList* (MessageWithPidList::*)(System::IntPtr)>(&MessageWithPidList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPidList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPidList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPidList::*)(System::IntPtr)>(&MessageWithPidList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPidList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPidList::*)(System::IntPtr)>(&MessageWithPidList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPidList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPidList::GetPidList
// Il2CppName: GetPidList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PidList* (MessageWithPidList::*)()>(&MessageWithPidList::GetPidList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPidList*), "GetPidList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithProductList
#include "Oculus/Platform/MessageWithProductList.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithProductList.GetDataFromMessage
Oculus::Platform::Models::ProductList* Oculus::Platform::MessageWithProductList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithProductList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ProductList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithProductList.GetProductList
Oculus::Platform::Models::ProductList* Oculus::Platform::MessageWithProductList::GetProductList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithProductList::GetProductList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProductList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ProductList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithProductList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ProductList* (MessageWithProductList::*)(System::IntPtr)>(&MessageWithProductList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithProductList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithProductList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithProductList::*)(System::IntPtr)>(&MessageWithProductList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithProductList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithProductList::*)(System::IntPtr)>(&MessageWithProductList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithProductList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithProductList::GetProductList
// Il2CppName: GetProductList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ProductList* (MessageWithProductList::*)()>(&MessageWithProductList::GetProductList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithProductList*), "GetProductList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPurchase
#include "Oculus/Platform/MessageWithPurchase.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPurchase.GetDataFromMessage
Oculus::Platform::Models::Purchase* Oculus::Platform::MessageWithPurchase::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPurchase::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Purchase*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPurchase.GetPurchase
Oculus::Platform::Models::Purchase* Oculus::Platform::MessageWithPurchase::GetPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPurchase::GetPurchase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Purchase*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithPurchase::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Purchase* (MessageWithPurchase::*)(System::IntPtr)>(&MessageWithPurchase::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPurchase*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPurchase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPurchase::*)(System::IntPtr)>(&MessageWithPurchase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPurchase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPurchase::*)(System::IntPtr)>(&MessageWithPurchase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPurchase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPurchase::GetPurchase
// Il2CppName: GetPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Purchase* (MessageWithPurchase::*)()>(&MessageWithPurchase::GetPurchase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPurchase*), "GetPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPurchaseList
#include "Oculus/Platform/MessageWithPurchaseList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPurchaseList.GetDataFromMessage
Oculus::Platform::Models::PurchaseList* Oculus::Platform::MessageWithPurchaseList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPurchaseList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPurchaseList.GetPurchaseList
Oculus::Platform::Models::PurchaseList* Oculus::Platform::MessageWithPurchaseList::GetPurchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPurchaseList::GetPurchaseList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchaseList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithPurchaseList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PurchaseList* (MessageWithPurchaseList::*)(System::IntPtr)>(&MessageWithPurchaseList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPurchaseList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPurchaseList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPurchaseList::*)(System::IntPtr)>(&MessageWithPurchaseList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPurchaseList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPurchaseList::*)(System::IntPtr)>(&MessageWithPurchaseList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPurchaseList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPurchaseList::GetPurchaseList
// Il2CppName: GetPurchaseList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PurchaseList* (MessageWithPurchaseList::*)()>(&MessageWithPurchaseList::GetPurchaseList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPurchaseList*), "GetPurchaseList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoom
#include "Oculus/Platform/MessageWithRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithRoom::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (MessageWithRoom::*)(System::IntPtr)>(&MessageWithRoom::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoom*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoom::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoom::*)(System::IntPtr)>(&MessageWithRoom::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoom::*)(System::IntPtr)>(&MessageWithRoom::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoom::GetRoom
// Il2CppName: GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (MessageWithRoom::*)()>(&MessageWithRoom::GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoom*), "GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomUnderCurrentRoom
#include "Oculus/Platform/MessageWithRoomUnderCurrentRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderCurrentRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderCurrentRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithRoomUnderCurrentRoom::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (MessageWithRoomUnderCurrentRoom::*)(System::IntPtr)>(&MessageWithRoomUnderCurrentRoom::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomUnderCurrentRoom*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomUnderCurrentRoom::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomUnderCurrentRoom::*)(System::IntPtr)>(&MessageWithRoomUnderCurrentRoom::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomUnderCurrentRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomUnderCurrentRoom::*)(System::IntPtr)>(&MessageWithRoomUnderCurrentRoom::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomUnderCurrentRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomUnderCurrentRoom::GetRoom
// Il2CppName: GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (MessageWithRoomUnderCurrentRoom::*)()>(&MessageWithRoomUnderCurrentRoom::GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomUnderCurrentRoom*), "GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomUnderViewerRoom
#include "Oculus/Platform/MessageWithRoomUnderViewerRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderViewerRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderViewerRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomUnderViewerRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderViewerRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderViewerRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomUnderViewerRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithRoomUnderViewerRoom::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (MessageWithRoomUnderViewerRoom::*)(System::IntPtr)>(&MessageWithRoomUnderViewerRoom::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomUnderViewerRoom*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomUnderViewerRoom::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomUnderViewerRoom::*)(System::IntPtr)>(&MessageWithRoomUnderViewerRoom::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomUnderViewerRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomUnderViewerRoom::*)(System::IntPtr)>(&MessageWithRoomUnderViewerRoom::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomUnderViewerRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomUnderViewerRoom::GetRoom
// Il2CppName: GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (MessageWithRoomUnderViewerRoom::*)()>(&MessageWithRoomUnderViewerRoom::GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomUnderViewerRoom*), "GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomList
#include "Oculus/Platform/MessageWithRoomList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomList.GetDataFromMessage
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithRoomList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomList.GetRoomList
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithRoomList::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomList::GetRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithRoomList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomList* (MessageWithRoomList::*)(System::IntPtr)>(&MessageWithRoomList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomList::*)(System::IntPtr)>(&MessageWithRoomList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomList::*)(System::IntPtr)>(&MessageWithRoomList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomList::GetRoomList
// Il2CppName: GetRoomList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomList* (MessageWithRoomList::*)()>(&MessageWithRoomList::GetRoomList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomList*), "GetRoomList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomInviteNotification
#include "Oculus/Platform/MessageWithRoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotification.GetDataFromMessage
Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::MessageWithRoomInviteNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomInviteNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotification.GetRoomInviteNotification
Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::MessageWithRoomInviteNotification::GetRoomInviteNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomInviteNotification::GetRoomInviteNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithRoomInviteNotification::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomInviteNotification* (MessageWithRoomInviteNotification::*)(System::IntPtr)>(&MessageWithRoomInviteNotification::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomInviteNotification*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomInviteNotification::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomInviteNotification::*)(System::IntPtr)>(&MessageWithRoomInviteNotification::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomInviteNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomInviteNotification::*)(System::IntPtr)>(&MessageWithRoomInviteNotification::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomInviteNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomInviteNotification::GetRoomInviteNotification
// Il2CppName: GetRoomInviteNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomInviteNotification* (MessageWithRoomInviteNotification::*)()>(&MessageWithRoomInviteNotification::GetRoomInviteNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomInviteNotification*), "GetRoomInviteNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomInviteNotificationList
#include "Oculus/Platform/MessageWithRoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotificationList.GetDataFromMessage
Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::MessageWithRoomInviteNotificationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomInviteNotificationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotificationList.GetRoomInviteNotificationList
Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotificationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithRoomInviteNotificationList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomInviteNotificationList* (MessageWithRoomInviteNotificationList::*)(System::IntPtr)>(&MessageWithRoomInviteNotificationList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomInviteNotificationList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomInviteNotificationList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomInviteNotificationList::*)(System::IntPtr)>(&MessageWithRoomInviteNotificationList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomInviteNotificationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithRoomInviteNotificationList::*)(System::IntPtr)>(&MessageWithRoomInviteNotificationList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomInviteNotificationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList
// Il2CppName: GetRoomInviteNotificationList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomInviteNotificationList* (MessageWithRoomInviteNotificationList::*)()>(&MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithRoomInviteNotificationList*), "GetRoomInviteNotificationList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSdkAccountList
#include "Oculus/Platform/MessageWithSdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSdkAccountList.GetDataFromMessage
Oculus::Platform::Models::SdkAccountList* Oculus::Platform::MessageWithSdkAccountList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSdkAccountList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSdkAccountList.GetSdkAccountList
Oculus::Platform::Models::SdkAccountList* Oculus::Platform::MessageWithSdkAccountList::GetSdkAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSdkAccountList::GetSdkAccountList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSdkAccountList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithSdkAccountList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SdkAccountList* (MessageWithSdkAccountList::*)(System::IntPtr)>(&MessageWithSdkAccountList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSdkAccountList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithSdkAccountList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithSdkAccountList::*)(System::IntPtr)>(&MessageWithSdkAccountList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSdkAccountList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithSdkAccountList::*)(System::IntPtr)>(&MessageWithSdkAccountList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSdkAccountList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithSdkAccountList::GetSdkAccountList
// Il2CppName: GetSdkAccountList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SdkAccountList* (MessageWithSdkAccountList::*)()>(&MessageWithSdkAccountList::GetSdkAccountList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSdkAccountList*), "GetSdkAccountList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithShareMediaResult
#include "Oculus/Platform/MessageWithShareMediaResult.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithShareMediaResult.GetDataFromMessage
Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::MessageWithShareMediaResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithShareMediaResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithShareMediaResult.GetShareMediaResult
Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::MessageWithShareMediaResult::GetShareMediaResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithShareMediaResult::GetShareMediaResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithShareMediaResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ShareMediaResult* (MessageWithShareMediaResult::*)(System::IntPtr)>(&MessageWithShareMediaResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithShareMediaResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithShareMediaResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithShareMediaResult::*)(System::IntPtr)>(&MessageWithShareMediaResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithShareMediaResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithShareMediaResult::*)(System::IntPtr)>(&MessageWithShareMediaResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithShareMediaResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithShareMediaResult::GetShareMediaResult
// Il2CppName: GetShareMediaResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ShareMediaResult* (MessageWithShareMediaResult::*)()>(&MessageWithShareMediaResult::GetShareMediaResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithShareMediaResult*), "GetShareMediaResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MessageWithString
#include "Oculus/Platform/MessageWithString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithString.GetDataFromMessage
::Il2CppString* Oculus::Platform::MessageWithString::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithString::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithString.GetString
::Il2CppString* Oculus::Platform::MessageWithString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithString::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MessageWithString::*)(System::IntPtr)>(&MessageWithString::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithString*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithString::*)(System::IntPtr)>(&MessageWithString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithString::*)(System::IntPtr)>(&MessageWithString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MessageWithString::*)()>(&MessageWithString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSystemPermission
#include "Oculus/Platform/MessageWithSystemPermission.hpp"
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSystemPermission.GetDataFromMessage
Oculus::Platform::Models::SystemPermission* Oculus::Platform::MessageWithSystemPermission::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSystemPermission::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemPermission*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSystemPermission.GetSystemPermission
Oculus::Platform::Models::SystemPermission* Oculus::Platform::MessageWithSystemPermission::GetSystemPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSystemPermission::GetSystemPermission");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSystemPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemPermission*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithSystemPermission::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SystemPermission* (MessageWithSystemPermission::*)(System::IntPtr)>(&MessageWithSystemPermission::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSystemPermission*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithSystemPermission::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithSystemPermission::*)(System::IntPtr)>(&MessageWithSystemPermission::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSystemPermission*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithSystemPermission::*)(System::IntPtr)>(&MessageWithSystemPermission::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSystemPermission*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithSystemPermission::GetSystemPermission
// Il2CppName: GetSystemPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SystemPermission* (MessageWithSystemPermission::*)()>(&MessageWithSystemPermission::GetSystemPermission)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSystemPermission*), "GetSystemPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSystemVoipState
#include "Oculus/Platform/MessageWithSystemVoipState.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSystemVoipState.GetDataFromMessage
Oculus::Platform::Models::SystemVoipState* Oculus::Platform::MessageWithSystemVoipState::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSystemVoipState::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSystemVoipState.GetSystemVoipState
Oculus::Platform::Models::SystemVoipState* Oculus::Platform::MessageWithSystemVoipState::GetSystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSystemVoipState::GetSystemVoipState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithSystemVoipState::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SystemVoipState* (MessageWithSystemVoipState::*)(System::IntPtr)>(&MessageWithSystemVoipState::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSystemVoipState*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithSystemVoipState::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithSystemVoipState::*)(System::IntPtr)>(&MessageWithSystemVoipState::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSystemVoipState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithSystemVoipState::*)(System::IntPtr)>(&MessageWithSystemVoipState::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSystemVoipState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithSystemVoipState::GetSystemVoipState
// Il2CppName: GetSystemVoipState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SystemVoipState* (MessageWithSystemVoipState::*)()>(&MessageWithSystemVoipState::GetSystemVoipState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithSystemVoipState*), "GetSystemVoipState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUser
#include "Oculus/Platform/MessageWithUser.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUser.GetDataFromMessage
Oculus::Platform::Models::User* Oculus::Platform::MessageWithUser::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUser::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::User*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUser.GetUser
Oculus::Platform::Models::User* Oculus::Platform::MessageWithUser::GetUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUser::GetUser");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::User*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithUser::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::User* (MessageWithUser::*)(System::IntPtr)>(&MessageWithUser::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUser*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUser::*)(System::IntPtr)>(&MessageWithUser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUser::*)(System::IntPtr)>(&MessageWithUser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUser::GetUser
// Il2CppName: GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::User* (MessageWithUser::*)()>(&MessageWithUser::GetUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUser*), "GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserAndRoomList
#include "Oculus/Platform/MessageWithUserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserAndRoomList.GetDataFromMessage
Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::MessageWithUserAndRoomList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserAndRoomList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserAndRoomList.GetUserAndRoomList
Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::MessageWithUserAndRoomList::GetUserAndRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserAndRoomList::GetUserAndRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserAndRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithUserAndRoomList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserAndRoomList* (MessageWithUserAndRoomList::*)(System::IntPtr)>(&MessageWithUserAndRoomList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserAndRoomList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserAndRoomList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserAndRoomList::*)(System::IntPtr)>(&MessageWithUserAndRoomList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserAndRoomList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserAndRoomList::*)(System::IntPtr)>(&MessageWithUserAndRoomList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserAndRoomList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserAndRoomList::GetUserAndRoomList
// Il2CppName: GetUserAndRoomList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserAndRoomList* (MessageWithUserAndRoomList::*)()>(&MessageWithUserAndRoomList::GetUserAndRoomList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserAndRoomList*), "GetUserAndRoomList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserList
#include "Oculus/Platform/MessageWithUserList.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserList.GetDataFromMessage
Oculus::Platform::Models::UserList* Oculus::Platform::MessageWithUserList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserList.GetUserList
Oculus::Platform::Models::UserList* Oculus::Platform::MessageWithUserList::GetUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserList::GetUserList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithUserList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserList* (MessageWithUserList::*)(System::IntPtr)>(&MessageWithUserList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserList::*)(System::IntPtr)>(&MessageWithUserList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserList::*)(System::IntPtr)>(&MessageWithUserList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserList::GetUserList
// Il2CppName: GetUserList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserList* (MessageWithUserList::*)()>(&MessageWithUserList::GetUserList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserList*), "GetUserList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserDataStoreUpdateResponse
#include "Oculus/Platform/MessageWithUserDataStoreUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserDataStoreUpdateResponse.GetDataFromMessage
Oculus::Platform::Models::UserDataStoreUpdateResponse* Oculus::Platform::MessageWithUserDataStoreUpdateResponse::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserDataStoreUpdateResponse::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserDataStoreUpdateResponse*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserDataStoreUpdateResponse.GetUserDataStoreUpdateResponse
Oculus::Platform::Models::UserDataStoreUpdateResponse* Oculus::Platform::MessageWithUserDataStoreUpdateResponse::GetUserDataStoreUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserDataStoreUpdateResponse::GetUserDataStoreUpdateResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserDataStoreUpdateResponse*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithUserDataStoreUpdateResponse::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserDataStoreUpdateResponse* (MessageWithUserDataStoreUpdateResponse::*)(System::IntPtr)>(&MessageWithUserDataStoreUpdateResponse::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserDataStoreUpdateResponse*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserDataStoreUpdateResponse::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserDataStoreUpdateResponse::*)(System::IntPtr)>(&MessageWithUserDataStoreUpdateResponse::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserDataStoreUpdateResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserDataStoreUpdateResponse::*)(System::IntPtr)>(&MessageWithUserDataStoreUpdateResponse::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserDataStoreUpdateResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserDataStoreUpdateResponse::GetUserDataStoreUpdateResponse
// Il2CppName: GetUserDataStoreUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserDataStoreUpdateResponse* (MessageWithUserDataStoreUpdateResponse::*)()>(&MessageWithUserDataStoreUpdateResponse::GetUserDataStoreUpdateResponse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserDataStoreUpdateResponse*), "GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserProof
#include "Oculus/Platform/MessageWithUserProof.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserProof.GetDataFromMessage
Oculus::Platform::Models::UserProof* Oculus::Platform::MessageWithUserProof::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserProof::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserProof*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserProof.GetUserProof
Oculus::Platform::Models::UserProof* Oculus::Platform::MessageWithUserProof::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserProof::GetUserProof");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserProof*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithUserProof::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserProof* (MessageWithUserProof::*)(System::IntPtr)>(&MessageWithUserProof::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserProof*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserProof::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserProof::*)(System::IntPtr)>(&MessageWithUserProof::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserProof*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserProof::*)(System::IntPtr)>(&MessageWithUserProof::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserProof*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserProof::GetUserProof
// Il2CppName: GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserProof* (MessageWithUserProof::*)()>(&MessageWithUserProof::GetUserProof)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserProof*), "GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserReportID
#include "Oculus/Platform/MessageWithUserReportID.hpp"
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserReportID.GetDataFromMessage
Oculus::Platform::Models::UserReportID* Oculus::Platform::MessageWithUserReportID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserReportID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserReportID.GetUserReportID
Oculus::Platform::Models::UserReportID* Oculus::Platform::MessageWithUserReportID::GetUserReportID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserReportID::GetUserReportID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithUserReportID::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserReportID* (MessageWithUserReportID::*)(System::IntPtr)>(&MessageWithUserReportID::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserReportID*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserReportID::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserReportID::*)(System::IntPtr)>(&MessageWithUserReportID::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserReportID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserReportID::*)(System::IntPtr)>(&MessageWithUserReportID::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserReportID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithUserReportID::GetUserReportID
// Il2CppName: GetUserReportID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserReportID* (MessageWithUserReportID::*)()>(&MessageWithUserReportID::GetUserReportID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithUserReportID*), "GetUserReportID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetworkingPeer
#include "Oculus/Platform/MessageWithNetworkingPeer.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetworkingPeer.GetDataFromMessage
Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::MessageWithNetworkingPeer::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetworkingPeer::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetworkingPeer.GetNetworkingPeer
Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::MessageWithNetworkingPeer::GetNetworkingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetworkingPeer::GetNetworkingPeer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithNetworkingPeer::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetworkingPeer* (MessageWithNetworkingPeer::*)(System::IntPtr)>(&MessageWithNetworkingPeer::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetworkingPeer*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetworkingPeer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetworkingPeer::*)(System::IntPtr)>(&MessageWithNetworkingPeer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetworkingPeer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithNetworkingPeer::*)(System::IntPtr)>(&MessageWithNetworkingPeer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetworkingPeer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithNetworkingPeer::GetNetworkingPeer
// Il2CppName: GetNetworkingPeer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetworkingPeer* (MessageWithNetworkingPeer::*)()>(&MessageWithNetworkingPeer::GetNetworkingPeer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithNetworkingPeer*), "GetNetworkingPeer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPingResult
#include "Oculus/Platform/MessageWithPingResult.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPingResult.GetDataFromMessage
Oculus::Platform::Models::PingResult* Oculus::Platform::MessageWithPingResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPingResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PingResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPingResult.GetPingResult
Oculus::Platform::Models::PingResult* Oculus::Platform::MessageWithPingResult::GetPingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPingResult::GetPingResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PingResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithPingResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PingResult* (MessageWithPingResult::*)(System::IntPtr)>(&MessageWithPingResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPingResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPingResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPingResult::*)(System::IntPtr)>(&MessageWithPingResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPingResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPingResult::*)(System::IntPtr)>(&MessageWithPingResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPingResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPingResult::GetPingResult
// Il2CppName: GetPingResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PingResult* (MessageWithPingResult::*)()>(&MessageWithPingResult::GetPingResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPingResult*), "GetPingResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardDidUpdate
#include "Oculus/Platform/MessageWithLeaderboardDidUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardDidUpdate.GetDataFromMessage
bool Oculus::Platform::MessageWithLeaderboardDidUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardDidUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardDidUpdate.GetLeaderboardDidUpdate
bool Oculus::Platform::MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLeaderboardDidUpdate::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MessageWithLeaderboardDidUpdate::*)(System::IntPtr)>(&MessageWithLeaderboardDidUpdate::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardDidUpdate*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLeaderboardDidUpdate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLeaderboardDidUpdate::*)(System::IntPtr)>(&MessageWithLeaderboardDidUpdate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardDidUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLeaderboardDidUpdate::*)(System::IntPtr)>(&MessageWithLeaderboardDidUpdate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardDidUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate
// Il2CppName: GetLeaderboardDidUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MessageWithLeaderboardDidUpdate::*)()>(&MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardDidUpdate*), "GetLeaderboardDidUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingNotification
#include "Oculus/Platform/MessageWithMatchmakingNotification.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingNotification.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithMatchmakingNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingNotification.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithMatchmakingNotification::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingNotification::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithMatchmakingNotification::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (MessageWithMatchmakingNotification::*)(System::IntPtr)>(&MessageWithMatchmakingNotification::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingNotification*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingNotification::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingNotification::*)(System::IntPtr)>(&MessageWithMatchmakingNotification::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingNotification::*)(System::IntPtr)>(&MessageWithMatchmakingNotification::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingNotification::GetRoom
// Il2CppName: GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (MessageWithMatchmakingNotification::*)()>(&MessageWithMatchmakingNotification::GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingNotification*), "GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingBrowseResult
#include "Oculus/Platform/MessageWithMatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetDataFromMessage
Oculus::Platform::Models::MatchmakingBrowseResult* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingBrowseResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingBrowseResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetMatchmakingEnqueueResult
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetRoomList
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingBrowseResult::GetRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithMatchmakingBrowseResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingBrowseResult* (MessageWithMatchmakingBrowseResult::*)(System::IntPtr)>(&MessageWithMatchmakingBrowseResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingBrowseResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingBrowseResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingBrowseResult::*)(System::IntPtr)>(&MessageWithMatchmakingBrowseResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingBrowseResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithMatchmakingBrowseResult::*)(System::IntPtr)>(&MessageWithMatchmakingBrowseResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingBrowseResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult
// Il2CppName: GetMatchmakingEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingEnqueueResult* (MessageWithMatchmakingBrowseResult::*)()>(&MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingBrowseResult*), "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MessageWithMatchmakingBrowseResult::GetRoomList
// Il2CppName: GetRoomList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomList* (MessageWithMatchmakingBrowseResult::*)()>(&MessageWithMatchmakingBrowseResult::GetRoomList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithMatchmakingBrowseResult*), "GetRoomList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithHttpTransferUpdate
#include "Oculus/Platform/MessageWithHttpTransferUpdate.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithHttpTransferUpdate.GetDataFromMessage
Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::MessageWithHttpTransferUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithHttpTransferUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithHttpTransferUpdate.GetHttpTransferUpdate
Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::MessageWithHttpTransferUpdate::GetHttpTransferUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithHttpTransferUpdate::GetHttpTransferUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithHttpTransferUpdate::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::HttpTransferUpdate* (MessageWithHttpTransferUpdate::*)(System::IntPtr)>(&MessageWithHttpTransferUpdate::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithHttpTransferUpdate*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithHttpTransferUpdate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithHttpTransferUpdate::*)(System::IntPtr)>(&MessageWithHttpTransferUpdate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithHttpTransferUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithHttpTransferUpdate::*)(System::IntPtr)>(&MessageWithHttpTransferUpdate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithHttpTransferUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithHttpTransferUpdate::GetHttpTransferUpdate
// Il2CppName: GetHttpTransferUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::HttpTransferUpdate* (MessageWithHttpTransferUpdate::*)()>(&MessageWithHttpTransferUpdate::GetHttpTransferUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithHttpTransferUpdate*), "GetHttpTransferUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPlatformInitialize
#include "Oculus/Platform/MessageWithPlatformInitialize.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPlatformInitialize.GetDataFromMessage
Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::MessageWithPlatformInitialize::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPlatformInitialize::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPlatformInitialize.GetPlatformInitialize
Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::MessageWithPlatformInitialize::GetPlatformInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPlatformInitialize::GetPlatformInitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithPlatformInitialize::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PlatformInitialize* (MessageWithPlatformInitialize::*)(System::IntPtr)>(&MessageWithPlatformInitialize::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPlatformInitialize*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPlatformInitialize::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPlatformInitialize::*)(System::IntPtr)>(&MessageWithPlatformInitialize::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPlatformInitialize*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithPlatformInitialize::*)(System::IntPtr)>(&MessageWithPlatformInitialize::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPlatformInitialize*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithPlatformInitialize::GetPlatformInitialize
// Il2CppName: GetPlatformInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PlatformInitialize* (MessageWithPlatformInitialize::*)()>(&MessageWithPlatformInitialize::GetPlatformInitialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithPlatformInitialize*), "GetPlatformInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF894
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Unknown
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Unknown
void Oculus::Platform::NetSyncConnectionStatus::_set_Unknown(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF8CC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Connecting
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Connecting
void Oculus::Platform::NetSyncConnectionStatus::_set_Connecting(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Connecting", value));
}
// [DescriptionAttribute] Offset: 0xDFF904
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Disconnected
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Disconnected
void Oculus::Platform::NetSyncConnectionStatus::_set_Disconnected(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Disconnected", value));
}
// [DescriptionAttribute] Offset: 0xDFF93C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Connected
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Connected
void Oculus::Platform::NetSyncConnectionStatus::_set_Connected(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Connected", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF974
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Unknown
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Unknown
void Oculus::Platform::NetSyncDisconnectReason::_set_Unknown(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF9AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason LocalTerminated
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_LocalTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_LocalTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "LocalTerminated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason LocalTerminated
void Oculus::Platform::NetSyncDisconnectReason::_set_LocalTerminated(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_LocalTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "LocalTerminated", value));
}
// [DescriptionAttribute] Offset: 0xDFF9E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason ServerTerminated
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_ServerTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_ServerTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "ServerTerminated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason ServerTerminated
void Oculus::Platform::NetSyncDisconnectReason::_set_ServerTerminated(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_ServerTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "ServerTerminated", value));
}
// [DescriptionAttribute] Offset: 0xDFFA1C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Failed
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Failed
void Oculus::Platform::NetSyncDisconnectReason::_set_Failed(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Failed", value));
}
// [DescriptionAttribute] Offset: 0xDFFA54
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Lost
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Lost() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_Lost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Lost"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Lost
void Oculus::Platform::NetSyncDisconnectReason::_set_Lost(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_Lost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Lost", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.NetSyncOptions
#include "Oculus/Platform/NetSyncOptions.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetVoipGroup
void Oculus::Platform::NetSyncOptions::SetVoipGroup(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncOptions::SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetVoipStreamDefault
void Oculus::Platform::NetSyncOptions::SetVoipStreamDefault(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncOptions::SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetZoneId
void Oculus::Platform::NetSyncOptions::SetZoneId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncOptions::SetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::NetSyncOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.NetSyncOptions.Finalize
void Oculus::Platform::NetSyncOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NetSyncOptions::SetVoipGroup
// Il2CppName: SetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncOptions::*)(::Il2CppString*)>(&NetSyncOptions::SetVoipGroup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncOptions*), "SetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NetSyncOptions::SetVoipStreamDefault
// Il2CppName: SetVoipStreamDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncOptions::*)(Oculus::Platform::NetSyncVoipStreamMode)>(&NetSyncOptions::SetVoipStreamDefault)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncOptions*), "SetVoipStreamDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::NetSyncVoipStreamMode>()});
  }
};
// Writing MetadataGetter for method: NetSyncOptions::SetZoneId
// Il2CppName: SetZoneId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncOptions::*)(::Il2CppString*)>(&NetSyncOptions::SetZoneId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncOptions*), "SetZoneId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NetSyncOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&NetSyncOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetSyncOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncOptions::*)()>(&NetSyncOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncOptions::*)()>(&NetSyncOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetSyncOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncOptions::*)()>(&NetSyncOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFFA8C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource Unknown
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource Unknown
void Oculus::Platform::NetSyncVoipMicSource::_set_Unknown(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFFAC4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource None
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource None
void Oculus::Platform::NetSyncVoipMicSource::_set_None(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "None", value));
}
// [DescriptionAttribute] Offset: 0xDFFAFC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource Internal
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource Internal
void Oculus::Platform::NetSyncVoipMicSource::_set_Internal(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "Internal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFFB34
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Unknown
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Unknown
void Oculus::Platform::NetSyncVoipStreamMode::_set_Unknown(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFFB6C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Ambisonic
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Ambisonic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_get_Ambisonic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Ambisonic"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Ambisonic
void Oculus::Platform::NetSyncVoipStreamMode::_set_Ambisonic(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_set_Ambisonic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Ambisonic", value));
}
// [DescriptionAttribute] Offset: 0xDFFBA4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Mono
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Mono
void Oculus::Platform::NetSyncVoipStreamMode::_set_Mono(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Mono", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Packet.ReadBytes
uint64_t Oculus::Platform::Packet::ReadBytes(::Array<uint8_t>* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, destination);
}
// Autogenerated method: Oculus.Platform.Packet.get_SenderID
uint64_t Oculus::Platform::Packet::get_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::get_SenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Size
uint64_t Oculus::Platform::Packet::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Policy
Oculus::Platform::SendPolicy Oculus::Platform::Packet::get_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::get_Policy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Policy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SendPolicy, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Dispose
void Oculus::Platform::Packet::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Finalize
void Oculus::Platform::Packet::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Packet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Packet::*)(System::IntPtr)>(&Packet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Packet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Packet::*)(System::IntPtr)>(&Packet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Packet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Packet::ReadBytes
// Il2CppName: ReadBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (Packet::*)(::Array<uint8_t>*)>(&Packet::ReadBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Packet*), "ReadBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Packet::get_SenderID
// Il2CppName: get_SenderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (Packet::*)()>(&Packet::get_SenderID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Packet*), "get_SenderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Packet::get_Size
// Il2CppName: get_Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (Packet::*)()>(&Packet::get_Size)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Packet*), "get_Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Packet::get_Policy
// Il2CppName: get_Policy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::SendPolicy (Packet::*)()>(&Packet::get_Policy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Packet*), "get_Policy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Packet::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Packet::*)()>(&Packet::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Packet*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Packet::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Packet::*)()>(&Packet::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Packet*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFFBDC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Unknown
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Unknown
void Oculus::Platform::PartyUpdateAction::_set_Unknown(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFFC14
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Join
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Join
void Oculus::Platform::PartyUpdateAction::_set_Join(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Join", value));
}
// [DescriptionAttribute] Offset: 0xDFFC4C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Leave
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Leave
void Oculus::Platform::PartyUpdateAction::_set_Leave(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Leave", value));
}
// [DescriptionAttribute] Offset: 0xDFFC84
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Invite
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Invite
void Oculus::Platform::PartyUpdateAction::_set_Invite(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Invite", value));
}
// [DescriptionAttribute] Offset: 0xDFFCBC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Uninvite
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Uninvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Uninvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Uninvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Uninvite
void Oculus::Platform::PartyUpdateAction::_set_Uninvite(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Uninvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Uninvite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PeerConnectionState
#include "Oculus/Platform/PeerConnectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFFCF4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Unknown
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Unknown
void Oculus::Platform::PeerConnectionState::_set_Unknown(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFFD2C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Connected
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Connected
void Oculus::Platform::PeerConnectionState::_set_Connected(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Connected", value));
}
// [DescriptionAttribute] Offset: 0xDFFD64
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Timeout
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Timeout
void Oculus::Platform::PeerConnectionState::_set_Timeout(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Timeout", value));
}
// [DescriptionAttribute] Offset: 0xDFFD9C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Closed
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Closed
void Oculus::Platform::PeerConnectionState::_set_Closed(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Closed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionGrantStatus
#include "Oculus/Platform/PermissionGrantStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFFDD4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Unknown
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Unknown
void Oculus::Platform::PermissionGrantStatus::_set_Unknown(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFFE0C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Granted
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Granted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_get_Granted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Granted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Granted
void Oculus::Platform::PermissionGrantStatus::_set_Granted(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_set_Granted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Granted", value));
}
// [DescriptionAttribute] Offset: 0xDFFE44
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Denied
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Denied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_get_Denied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Denied"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Denied
void Oculus::Platform::PermissionGrantStatus::_set_Denied(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_set_Denied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Denied", value));
}
// [DescriptionAttribute] Offset: 0xDFFE7C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Blocked
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_get_Blocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Blocked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Blocked
void Oculus::Platform::PermissionGrantStatus::_set_Blocked(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_set_Blocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Blocked", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionType
#include "Oculus/Platform/PermissionType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFFEB4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Unknown
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Unknown
void Oculus::Platform::PermissionType::_set_Unknown(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFFEEC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Microphone
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_get_Microphone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Microphone"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Microphone
void Oculus::Platform::PermissionType::_set_Microphone(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_set_Microphone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Microphone", value));
}
// [DescriptionAttribute] Offset: 0xDFFF24
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType WriteExternalStorage
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_WriteExternalStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_get_WriteExternalStorage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "WriteExternalStorage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType WriteExternalStorage
void Oculus::Platform::PermissionType::_set_WriteExternalStorage(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_set_WriteExternalStorage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "WriteExternalStorage", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Core
#include "Oculus/Platform/Core.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean IsPlatformInitialized
bool Oculus::Platform::Core::_get_IsPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::_get_IsPlatformInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "IsPlatformInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean IsPlatformInitialized
void Oculus::Platform::Core::_set_IsPlatformInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::_set_IsPlatformInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "IsPlatformInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean LogMessages
bool Oculus::Platform::Core::_get_LogMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::_get_LogMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "LogMessages"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean LogMessages
void Oculus::Platform::Core::_set_LogMessages(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::_set_LogMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "LogMessages", value));
}
// Autogenerated method: Oculus.Platform.Core.IsInitialized
bool Oculus::Platform::Core::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.ForceInitialized
void Oculus::Platform::Core::ForceInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::ForceInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "ForceInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.getAppID
::Il2CppString* Oculus::Platform::Core::getAppID(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::getAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "getAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::Core::AsyncInitialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.Initialize
void Oculus::Platform::Core::Initialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.GetAppIDFromConfig
::Il2CppString* Oculus::Platform::Core::GetAppIDFromConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::GetAppIDFromConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "GetAppIDFromConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core..cctor
void Oculus::Platform::Core::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Core::IsInitialized
// Il2CppName: IsInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Core::IsInitialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), "IsInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Core::ForceInitialized
// Il2CppName: ForceInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Core::ForceInitialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), "ForceInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Core::getAppID
// Il2CppName: getAppID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&Core::getAppID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), "getAppID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Core::AsyncInitialize
// Il2CppName: AsyncInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* (*)(::Il2CppString*)>(&Core::AsyncInitialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), "AsyncInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Core::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&Core::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Core::GetAppIDFromConfig
// Il2CppName: GetAppIDFromConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&Core::GetAppIDFromConfig)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), "GetAppIDFromConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Core::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Core::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Core::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Core::*)()>(&Core::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Core::*)()>(&Core::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Core*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ApplicationLifecycle
#include "Oculus/Platform/ApplicationLifecycle.hpp"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.GetLaunchDetails
Oculus::Platform::Models::LaunchDetails* Oculus::Platform::ApplicationLifecycle::GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ApplicationLifecycle::GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchDetails*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.LogDeeplinkResult
void Oculus::Platform::ApplicationLifecycle::LogDeeplinkResult(::Il2CppString* trackingID, Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ApplicationLifecycle::LogDeeplinkResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "LogDeeplinkResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.SetLaunchIntentChangedNotificationCallback
void Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "SetLaunchIntentChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: ApplicationLifecycle::GetLaunchDetails
// Il2CppName: GetLaunchDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchDetails* (*)()>(&ApplicationLifecycle::GetLaunchDetails)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationLifecycle*), "GetLaunchDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ApplicationLifecycle::LogDeeplinkResult
// Il2CppName: LogDeeplinkResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, Oculus::Platform::LaunchResult)>(&ApplicationLifecycle::LogDeeplinkResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationLifecycle*), "LogDeeplinkResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LaunchResult>()});
  }
};
// Writing MetadataGetter for method: ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback
// Il2CppName: SetLaunchIntentChangedNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback*)>(&ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationLifecycle*), "SetLaunchIntentChangedNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<::Il2CppString*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Rooms
#include "Oculus/Platform/Rooms.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomOptions
#include "Oculus/Platform/RoomOptions.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Rooms.UpdateDataStore
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateDataStore(uint64_t roomID, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetRoomInviteNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate2(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.Get
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrent
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrentForUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers
Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers2
Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers2(Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.GetModeratedRooms
Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetModeratedRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.InviteUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::InviteUser(uint64_t roomID, ::Il2CppString* inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::InviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "InviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.Rooms.Join
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.Join2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join2(uint64_t roomID, Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::Join2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.KickUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::KickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "KickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(kickDurationSeconds)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.Rooms.LaunchInvitableUserFlow
Oculus::Platform::Request* Oculus::Platform::Rooms::LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.Leave
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.SetDescription
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::SetDescription(uint64_t roomID, ::Il2CppString* description) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateMembershipLockStatus
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateMembershipLockStatus(uint64_t roomID, Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(membershipLockStatus)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateOwner
Oculus::Platform::Request* Oculus::Platform::Rooms::UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdatePrivateRoomJoinPolicy
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy(uint64_t roomID, Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(newJoinPolicy)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteAcceptedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteAcceptedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteReceivedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteReceivedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetUpdateNotificationCallback
void Oculus::Platform::Rooms::SetUpdateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.GetNextRoomListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetNextRoomListPage(Oculus::Platform::Models::RoomList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetNextRoomListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetNextRoomListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Writing MetadataGetter for method: Rooms::UpdateDataStore
// Il2CppName: UpdateDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*)>(&Rooms::UpdateDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "UpdateDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: Rooms::SetRoomInviteNotificationCallback
// Il2CppName: SetRoomInviteNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback*)>(&Rooms::SetRoomInviteNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "SetRoomInviteNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<::Il2CppString*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: Rooms::CreateAndJoinPrivate
// Il2CppName: CreateAndJoinPrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(Oculus::Platform::RoomJoinPolicy, uint, bool)>(&Rooms::CreateAndJoinPrivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "CreateAndJoinPrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomJoinPolicy>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Rooms::CreateAndJoinPrivate2
// Il2CppName: CreateAndJoinPrivate2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(Oculus::Platform::RoomJoinPolicy, uint, Oculus::Platform::RoomOptions*)>(&Rooms::CreateAndJoinPrivate2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "CreateAndJoinPrivate2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomJoinPolicy>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomOptions*>()});
  }
};
// Writing MetadataGetter for method: Rooms::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t)>(&Rooms::Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Rooms::GetCurrent
// Il2CppName: GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)()>(&Rooms::GetCurrent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rooms::GetCurrentForUser
// Il2CppName: GetCurrentForUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t)>(&Rooms::GetCurrentForUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "GetCurrentForUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Rooms::GetInvitableUsers
// Il2CppName: GetInvitableUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* (*)()>(&Rooms::GetInvitableUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "GetInvitableUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rooms::GetInvitableUsers2
// Il2CppName: GetInvitableUsers2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* (*)(Oculus::Platform::RoomOptions*)>(&Rooms::GetInvitableUsers2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "GetInvitableUsers2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomOptions*>()});
  }
};
// Writing MetadataGetter for method: Rooms::GetModeratedRooms
// Il2CppName: GetModeratedRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>* (*)()>(&Rooms::GetModeratedRooms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "GetModeratedRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rooms::InviteUser
// Il2CppName: InviteUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, ::Il2CppString*)>(&Rooms::InviteUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "InviteUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Rooms::Join
// Il2CppName: Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, bool)>(&Rooms::Join)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Rooms::Join2
// Il2CppName: Join2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, Oculus::Platform::RoomOptions*)>(&Rooms::Join2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "Join2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomOptions*>()});
  }
};
// Writing MetadataGetter for method: Rooms::KickUser
// Il2CppName: KickUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, uint64_t, int)>(&Rooms::KickUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "KickUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Rooms::LaunchInvitableUserFlow
// Il2CppName: LaunchInvitableUserFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(uint64_t)>(&Rooms::LaunchInvitableUserFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "LaunchInvitableUserFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Rooms::Leave
// Il2CppName: Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t)>(&Rooms::Leave)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Rooms::SetDescription
// Il2CppName: SetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, ::Il2CppString*)>(&Rooms::SetDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "SetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Rooms::UpdateMembershipLockStatus
// Il2CppName: UpdateMembershipLockStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, Oculus::Platform::RoomMembershipLockStatus)>(&Rooms::UpdateMembershipLockStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "UpdateMembershipLockStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomMembershipLockStatus>()});
  }
};
// Writing MetadataGetter for method: Rooms::UpdateOwner
// Il2CppName: UpdateOwner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(uint64_t, uint64_t)>(&Rooms::UpdateOwner)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "UpdateOwner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Rooms::UpdatePrivateRoomJoinPolicy
// Il2CppName: UpdatePrivateRoomJoinPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, Oculus::Platform::RoomJoinPolicy)>(&Rooms::UpdatePrivateRoomJoinPolicy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomJoinPolicy>()});
  }
};
// Writing MetadataGetter for method: Rooms::SetRoomInviteAcceptedNotificationCallback
// Il2CppName: SetRoomInviteAcceptedNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback*)>(&Rooms::SetRoomInviteAcceptedNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "SetRoomInviteAcceptedNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<::Il2CppString*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: Rooms::SetRoomInviteReceivedNotificationCallback
// Il2CppName: SetRoomInviteReceivedNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>::Callback*)>(&Rooms::SetRoomInviteReceivedNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "SetRoomInviteReceivedNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: Rooms::SetUpdateNotificationCallback
// Il2CppName: SetUpdateNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback*)>(&Rooms::SetUpdateNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "SetUpdateNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: Rooms::GetNextRoomListPage
// Il2CppName: GetNextRoomListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>* (*)(Oculus::Platform::Models::RoomList*)>(&Rooms::GetNextRoomListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rooms*), "GetNextRoomListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::RoomList*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking
#include "Oculus/Platform/Matchmaking.hpp"
// Including type: Oculus.Platform.Matchmaking/CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking.ReportResultsInsecure
Oculus::Platform::Request* Oculus::Platform::Matchmaking::ReportResultsInsecure(uint64_t roomID, System::Collections::Generic::Dictionary_2<::Il2CppString*, int>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::ReportResultsInsecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "ReportResultsInsecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetStats
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>* Oculus::Platform::Matchmaking::GetStats(::Il2CppString* pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse(::Il2CppString* pool, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Browse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Browse2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel(::Il2CppString* pool, ::Il2CppString* requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue(::Il2CppString* pool, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Enqueue2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom(uint64_t roomID, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom2(uint64_t roomID, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetAdminSnapshot
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>* Oculus::Platform::Matchmaking::GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.JoinRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.StartMatch
Oculus::Platform::Request* Oculus::Platform::Matchmaking::StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::StartMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "StartMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Matchmaking.SetMatchFoundNotificationCallback
void Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "SetMatchFoundNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: Matchmaking::ReportResultsInsecure
// Il2CppName: ReportResultsInsecure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(uint64_t, System::Collections::Generic::Dictionary_2<::Il2CppString*, int>*)>(&Matchmaking::ReportResultsInsecure)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "ReportResultsInsecure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::Dictionary_2<::Il2CppString*, int>*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::GetStats
// Il2CppName: GetStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>* (*)(::Il2CppString*, uint, Oculus::Platform::MatchmakingStatApproach)>(&Matchmaking::GetStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "GetStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingStatApproach>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::Browse
// Il2CppName: Browse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* (*)(::Il2CppString*, Oculus::Platform::Matchmaking::CustomQuery*)>(&Matchmaking::Browse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "Browse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Matchmaking::CustomQuery*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::Browse2
// Il2CppName: Browse2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* (*)(::Il2CppString*, Oculus::Platform::MatchmakingOptions*)>(&Matchmaking::Browse2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "Browse2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingOptions*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::Cancel
// Il2CppName: Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(::Il2CppString*, ::Il2CppString*)>(&Matchmaking::Cancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::Cancel
// Il2CppName: Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)()>(&Matchmaking::Cancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Matchmaking::CreateAndEnqueueRoom
// Il2CppName: CreateAndEnqueueRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* (*)(::Il2CppString*, uint, bool, Oculus::Platform::Matchmaking::CustomQuery*)>(&Matchmaking::CreateAndEnqueueRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "CreateAndEnqueueRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Matchmaking::CustomQuery*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::CreateAndEnqueueRoom2
// Il2CppName: CreateAndEnqueueRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* (*)(::Il2CppString*, Oculus::Platform::MatchmakingOptions*)>(&Matchmaking::CreateAndEnqueueRoom2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "CreateAndEnqueueRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingOptions*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::CreateRoom
// Il2CppName: CreateRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(::Il2CppString*, uint, bool)>(&Matchmaking::CreateRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "CreateRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::CreateRoom2
// Il2CppName: CreateRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(::Il2CppString*, Oculus::Platform::MatchmakingOptions*)>(&Matchmaking::CreateRoom2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "CreateRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingOptions*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::Enqueue
// Il2CppName: Enqueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* (*)(::Il2CppString*, Oculus::Platform::Matchmaking::CustomQuery*)>(&Matchmaking::Enqueue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "Enqueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Matchmaking::CustomQuery*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::Enqueue2
// Il2CppName: Enqueue2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* (*)(::Il2CppString*, Oculus::Platform::MatchmakingOptions*)>(&Matchmaking::Enqueue2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "Enqueue2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingOptions*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::EnqueueRoom
// Il2CppName: EnqueueRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* (*)(uint64_t, Oculus::Platform::Matchmaking::CustomQuery*)>(&Matchmaking::EnqueueRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "EnqueueRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Matchmaking::CustomQuery*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::EnqueueRoom2
// Il2CppName: EnqueueRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* (*)(uint64_t, Oculus::Platform::MatchmakingOptions*)>(&Matchmaking::EnqueueRoom2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "EnqueueRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingOptions*>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::GetAdminSnapshot
// Il2CppName: GetAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>* (*)()>(&Matchmaking::GetAdminSnapshot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "GetAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Matchmaking::JoinRoom
// Il2CppName: JoinRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* (*)(uint64_t, bool)>(&Matchmaking::JoinRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "JoinRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::StartMatch
// Il2CppName: StartMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(uint64_t)>(&Matchmaking::StartMatch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "StartMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Matchmaking::SetMatchFoundNotificationCallback
// Il2CppName: SetMatchFoundNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback*)>(&Matchmaking::SetMatchFoundNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking*), "SetMatchFoundNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking/CustomQuery.ToUnmanaged
System::IntPtr Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUnmanaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Matchmaking::CustomQuery::ToUnmanaged
// Il2CppName: ToUnmanaged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Matchmaking::CustomQuery::*)()>(&Matchmaking::CustomQuery::ToUnmanaged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking::CustomQuery*), "ToUnmanaged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Matchmaking::CustomQuery::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Matchmaking::CustomQuery::*)()>(&Matchmaking::CustomQuery::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking::CustomQuery*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Matchmaking::CustomQuery::*)()>(&Matchmaking::CustomQuery::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking::CustomQuery*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/CustomQuery/Criterion
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Matchmaking::CustomQuery::Criterion::Criterion
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Matchmaking::CustomQuery::Criterion::*)(::Il2CppString*, Oculus::Platform::MatchmakingCriterionImportance)>(&Matchmaking::CustomQuery::Criterion::Criterion<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking::CustomQuery::Criterion), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingCriterionImportance>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Matchmaking::CustomQuery::Criterion::*)(::Il2CppString*, Oculus::Platform::MatchmakingCriterionImportance)>(&Matchmaking::CustomQuery::Criterion::Criterion<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Matchmaking::CustomQuery::Criterion), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingCriterionImportance>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Net
#include "Oculus/Platform/Net.hpp"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Net.ReadPacket
Oculus::Platform::Packet* Oculus::Platform::Net::ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Packet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.SendPacket
bool Oculus::Platform::Net::SendPacket(uint64_t userID, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SendPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.Connect
void Oculus::Platform::Net::Connect(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Accept
void Oculus::Platform::Net::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Close
void Oculus::Platform::Net::Close(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.IsConnected
bool Oculus::Platform::Net::IsConnected(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SendPacketToCurrentRoom
bool Oculus::Platform::Net::SendPacketToCurrentRoom(::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.AcceptForCurrentRoom
bool Oculus::Platform::Net::AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.CloseForCurrentRoom
void Oculus::Platform::Net::CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.Ping
Oculus::Platform::Request_1<Oculus::Platform::Models::PingResult*>* Oculus::Platform::Net::Ping(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PingResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SetConnectionStateChangedCallback
void Oculus::Platform::Net::SetConnectionStateChangedCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SetConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPeerConnectRequestCallback
void Oculus::Platform::Net::SetPeerConnectRequestCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SetPeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPingResultNotificationCallback
void Oculus::Platform::Net::SetPingResultNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::PingResult*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SetPingResultNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPingResultNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: Net::ReadPacket
// Il2CppName: ReadPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Packet* (*)()>(&Net::ReadPacket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "ReadPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Net::SendPacket
// Il2CppName: SendPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::Array<uint8_t>*, Oculus::Platform::SendPolicy)>(&Net::SendPacket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "SendPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::SendPolicy>()});
  }
};
// Writing MetadataGetter for method: Net::Connect
// Il2CppName: Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Net::Connect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Net::Accept
// Il2CppName: Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Net::Accept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Net::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Net::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Net::IsConnected
// Il2CppName: IsConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&Net::IsConnected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Net::SendPacketToCurrentRoom
// Il2CppName: SendPacketToCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<uint8_t>*, Oculus::Platform::SendPolicy)>(&Net::SendPacketToCurrentRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "SendPacketToCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::SendPolicy>()});
  }
};
// Writing MetadataGetter for method: Net::AcceptForCurrentRoom
// Il2CppName: AcceptForCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Net::AcceptForCurrentRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "AcceptForCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Net::CloseForCurrentRoom
// Il2CppName: CloseForCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Net::CloseForCurrentRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "CloseForCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Net::Ping
// Il2CppName: Ping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PingResult*>* (*)(uint64_t)>(&Net::Ping)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "Ping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Net::SetConnectionStateChangedCallback
// Il2CppName: SetConnectionStateChangedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback*)>(&Net::SetConnectionStateChangedCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "SetConnectionStateChangedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: Net::SetPeerConnectRequestCallback
// Il2CppName: SetPeerConnectRequestCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback*)>(&Net::SetPeerConnectRequestCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "SetPeerConnectRequestCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: Net::SetPingResultNotificationCallback
// Il2CppName: SetPingResultNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::PingResult*>::Callback*)>(&Net::SetPingResultNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Net*), "SetPingResultNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::PingResult*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Leaderboards
#include "Oculus/Platform/Leaderboards.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Leaderboards.GetNextEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetNextEntries(Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetPreviousEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetPreviousEntries(Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.Get
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardList*>* Oculus::Platform::Leaderboards::Get(::Il2CppString* leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntries(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesAfterRank
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesAfterRank(::Il2CppString* leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesByIds
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesByIds(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs);
}
// Autogenerated method: Oculus.Platform.Leaderboards.WriteEntry
Oculus::Platform::Request_1<bool>* Oculus::Platform::Leaderboards::WriteEntry(::Il2CppString* leaderboardName, int64_t score, ::Array<uint8_t>* extraData, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, score, extraData, forceUpdate);
}
// Autogenerated method: Oculus.Platform.Leaderboards.WriteEntryWithSupplementaryMetric
Oculus::Platform::Request_1<bool>* Oculus::Platform::Leaderboards::WriteEntryWithSupplementaryMetric(::Il2CppString* leaderboardName, int64_t score, int64_t supplementaryMetric, ::Array<uint8_t>* extraData, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::WriteEntryWithSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, forceUpdate);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetNextLeaderboardListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardList*>* Oculus::Platform::Leaderboards::GetNextLeaderboardListPage(Oculus::Platform::Models::LeaderboardList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetNextLeaderboardListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetNextLeaderboardListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Writing MetadataGetter for method: Leaderboards::GetNextEntries
// Il2CppName: GetNextEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* (*)(Oculus::Platform::Models::LeaderboardEntryList*)>(&Leaderboards::GetNextEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "GetNextEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::LeaderboardEntryList*>()});
  }
};
// Writing MetadataGetter for method: Leaderboards::GetPreviousEntries
// Il2CppName: GetPreviousEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* (*)(Oculus::Platform::Models::LeaderboardEntryList*)>(&Leaderboards::GetPreviousEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "GetPreviousEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::LeaderboardEntryList*>()});
  }
};
// Writing MetadataGetter for method: Leaderboards::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardList*>* (*)(::Il2CppString*)>(&Leaderboards::Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Leaderboards::GetEntries
// Il2CppName: GetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* (*)(::Il2CppString*, int, Oculus::Platform::LeaderboardFilterType, Oculus::Platform::LeaderboardStartAt)>(&Leaderboards::GetEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "GetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardFilterType>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>()});
  }
};
// Writing MetadataGetter for method: Leaderboards::GetEntriesAfterRank
// Il2CppName: GetEntriesAfterRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* (*)(::Il2CppString*, int, uint64_t)>(&Leaderboards::GetEntriesAfterRank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "GetEntriesAfterRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Leaderboards::GetEntriesByIds
// Il2CppName: GetEntriesByIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* (*)(::Il2CppString*, int, Oculus::Platform::LeaderboardStartAt, ::Array<uint64_t>*)>(&Leaderboards::GetEntriesByIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "GetEntriesByIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: Leaderboards::WriteEntry
// Il2CppName: WriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<bool>* (*)(::Il2CppString*, int64_t, ::Array<uint8_t>*, bool)>(&Leaderboards::WriteEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "WriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Leaderboards::WriteEntryWithSupplementaryMetric
// Il2CppName: WriteEntryWithSupplementaryMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<bool>* (*)(::Il2CppString*, int64_t, int64_t, ::Array<uint8_t>*, bool)>(&Leaderboards::WriteEntryWithSupplementaryMetric)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Leaderboards::GetNextLeaderboardListPage
// Il2CppName: GetNextLeaderboardListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardList*>* (*)(Oculus::Platform::Models::LeaderboardList*)>(&Leaderboards::GetNextLeaderboardListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboards*), "GetNextLeaderboardListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::LeaderboardList*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Challenges
#include "Oculus/Platform/Challenges.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.ChallengeOptions
#include "Oculus/Platform/ChallengeOptions.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Challenges.GetNextEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetNextEntries(Oculus::Platform::Models::ChallengeEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetPreviousEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetPreviousEntries(Oculus::Platform::Models::ChallengeEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetNextChallenges
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetNextChallenges(Oculus::Platform::Models::ChallengeList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetPreviousChallenges
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetPreviousChallenges(Oculus::Platform::Models::ChallengeList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.Create
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Create(::Il2CppString* leaderboardName, Oculus::Platform::ChallengeOptions* challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.Challenges.DeclineInvite
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Delete
Oculus::Platform::Request* Oculus::Platform::Challenges::Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Get
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntries(uint64_t challengeID, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntriesAfterRank
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntriesByIds
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntriesByIds(uint64_t challengeID, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs);
}
// Autogenerated method: Oculus.Platform.Challenges.GetList
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetList(Oculus::Platform::ChallengeOptions* challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.Challenges.Join
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Leave
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.UpdateInfo
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::UpdateInfo(uint64_t challengeID, Oculus::Platform::ChallengeOptions* challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Writing MetadataGetter for method: Challenges::GetNextEntries
// Il2CppName: GetNextEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* (*)(Oculus::Platform::Models::ChallengeEntryList*)>(&Challenges::GetNextEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "GetNextEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::ChallengeEntryList*>()});
  }
};
// Writing MetadataGetter for method: Challenges::GetPreviousEntries
// Il2CppName: GetPreviousEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* (*)(Oculus::Platform::Models::ChallengeEntryList*)>(&Challenges::GetPreviousEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "GetPreviousEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::ChallengeEntryList*>()});
  }
};
// Writing MetadataGetter for method: Challenges::GetNextChallenges
// Il2CppName: GetNextChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* (*)(Oculus::Platform::Models::ChallengeList*)>(&Challenges::GetNextChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "GetNextChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::ChallengeList*>()});
  }
};
// Writing MetadataGetter for method: Challenges::GetPreviousChallenges
// Il2CppName: GetPreviousChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* (*)(Oculus::Platform::Models::ChallengeList*)>(&Challenges::GetPreviousChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "GetPreviousChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::ChallengeList*>()});
  }
};
// Writing MetadataGetter for method: Challenges::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* (*)(::Il2CppString*, Oculus::Platform::ChallengeOptions*)>(&Challenges::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ChallengeOptions*>()});
  }
};
// Writing MetadataGetter for method: Challenges::DeclineInvite
// Il2CppName: DeclineInvite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* (*)(uint64_t)>(&Challenges::DeclineInvite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "DeclineInvite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Challenges::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(uint64_t)>(&Challenges::Delete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Challenges::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* (*)(uint64_t)>(&Challenges::Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Challenges::GetEntries
// Il2CppName: GetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* (*)(uint64_t, int, Oculus::Platform::LeaderboardFilterType, Oculus::Platform::LeaderboardStartAt)>(&Challenges::GetEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "GetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardFilterType>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>()});
  }
};
// Writing MetadataGetter for method: Challenges::GetEntriesAfterRank
// Il2CppName: GetEntriesAfterRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* (*)(uint64_t, int, uint64_t)>(&Challenges::GetEntriesAfterRank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "GetEntriesAfterRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Challenges::GetEntriesByIds
// Il2CppName: GetEntriesByIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* (*)(uint64_t, int, Oculus::Platform::LeaderboardStartAt, ::Array<uint64_t>*)>(&Challenges::GetEntriesByIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "GetEntriesByIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: Challenges::GetList
// Il2CppName: GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* (*)(Oculus::Platform::ChallengeOptions*, int)>(&Challenges::GetList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ChallengeOptions*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Challenges::Join
// Il2CppName: Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* (*)(uint64_t)>(&Challenges::Join)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Challenges::Leave
// Il2CppName: Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* (*)(uint64_t)>(&Challenges::Leave)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Challenges::UpdateInfo
// Il2CppName: UpdateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* (*)(uint64_t, Oculus::Platform::ChallengeOptions*)>(&Challenges::UpdateInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenges*), "UpdateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ChallengeOptions*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Voip
#include "Oculus/Platform/Voip.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.CAPI/FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Voip.Start
void Oculus::Platform::Voip::Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Accept
void Oculus::Platform::Voip::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Stop
void Oculus::Platform::Voip::Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneFilterCallback
void Oculus::Platform::Voip::SetMicrophoneFilterCallback(Oculus::Platform::CAPI::FilterCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneMuted
void Oculus::Platform::Voip::SetMicrophoneMuted(Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipMicrophoneMuted
Oculus::Platform::VoipMuteState Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipStatus
Oculus::Platform::SystemVoipStatus Oculus::Platform::Voip::GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetIsConnectionUsingDtx
Oculus::Platform::VoipDtxState Oculus::Platform::Voip::GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetLocalBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetRemoteBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.SetNewConnectionOptions
void Oculus::Platform::Voip::SetNewConnectionOptions(Oculus::Platform::VoipOptions* voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipSuppressed
Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>* Oculus::Platform::Voip::SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipConnectRequestCallback
void Oculus::Platform::Voip::SetVoipConnectRequestCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetVoipConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipStateChangeCallback
void Oculus::Platform::Voip::SetVoipStateChangeCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetVoipStateChangeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipStateChangeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipStateNotificationCallback
void Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::SystemVoipState*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipStateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: Voip::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Voip::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Voip::Accept
// Il2CppName: Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Voip::Accept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Voip::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Voip::Stop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Voip::SetMicrophoneFilterCallback
// Il2CppName: SetMicrophoneFilterCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::CAPI::FilterCallback*)>(&Voip::SetMicrophoneFilterCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "SetMicrophoneFilterCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::CAPI::FilterCallback*>()});
  }
};
// Writing MetadataGetter for method: Voip::SetMicrophoneMuted
// Il2CppName: SetMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::VoipMuteState)>(&Voip::SetMicrophoneMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "SetMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipMuteState>()});
  }
};
// Writing MetadataGetter for method: Voip::GetSystemVoipMicrophoneMuted
// Il2CppName: GetSystemVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipMuteState (*)()>(&Voip::GetSystemVoipMicrophoneMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Voip::GetSystemVoipStatus
// Il2CppName: GetSystemVoipStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::SystemVoipStatus (*)()>(&Voip::GetSystemVoipStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "GetSystemVoipStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Voip::GetIsConnectionUsingDtx
// Il2CppName: GetIsConnectionUsingDtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipDtxState (*)(uint64_t)>(&Voip::GetIsConnectionUsingDtx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "GetIsConnectionUsingDtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Voip::GetLocalBitrate
// Il2CppName: GetLocalBitrate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipBitrate (*)(uint64_t)>(&Voip::GetLocalBitrate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "GetLocalBitrate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Voip::GetRemoteBitrate
// Il2CppName: GetRemoteBitrate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipBitrate (*)(uint64_t)>(&Voip::GetRemoteBitrate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "GetRemoteBitrate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Voip::SetNewConnectionOptions
// Il2CppName: SetNewConnectionOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::VoipOptions*)>(&Voip::SetNewConnectionOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "SetNewConnectionOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipOptions*>()});
  }
};
// Writing MetadataGetter for method: Voip::SetSystemVoipSuppressed
// Il2CppName: SetSystemVoipSuppressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>* (*)(bool)>(&Voip::SetSystemVoipSuppressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "SetSystemVoipSuppressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Voip::SetVoipConnectRequestCallback
// Il2CppName: SetVoipConnectRequestCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback*)>(&Voip::SetVoipConnectRequestCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "SetVoipConnectRequestCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: Voip::SetVoipStateChangeCallback
// Il2CppName: SetVoipStateChangeCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback*)>(&Voip::SetVoipStateChangeCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "SetVoipStateChangeCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: Voip::SetSystemVoipStateNotificationCallback
// Il2CppName: SetSystemVoipStateNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::SystemVoipState*>::Callback*)>(&Voip::SetSystemVoipStateNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Voip*), "SetSystemVoipStateNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::SystemVoipState*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Users
#include "Oculus/Platform/Users.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.UserOptions
#include "Oculus/Platform/UserOptions.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserLocale
::Il2CppString* Oculus::Platform::Users::GetLoggedInUserLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetLoggedInUserLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.Get
Oculus::Platform::Request_1<Oculus::Platform::Models::User*>* Oculus::Platform::Users::Get(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::User*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetAccessToken
Oculus::Platform::Request_1<::Il2CppString*>* Oculus::Platform::Users::GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUser
Oculus::Platform::Request_1<Oculus::Platform::Models::User*>* Oculus::Platform::Users::GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::User*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserFriends
Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* Oculus::Platform::Users::GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetLoggedInUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserFriendsAndRooms
Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetLoggedInUserFriendsAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserRecentlyMetUsersAndRooms
Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetLoggedInUserRecentlyMetUsersAndRooms(Oculus::Platform::UserOptions* userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetLoggedInUserRecentlyMetUsersAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.Users.GetOrgScopedID
Oculus::Platform::Request_1<Oculus::Platform::Models::OrgScopedID*>* Oculus::Platform::Users::GetOrgScopedID(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::OrgScopedID*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetSdkAccounts
Oculus::Platform::Request_1<Oculus::Platform::Models::SdkAccountList*>* Oculus::Platform::Users::GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetSdkAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetSdkAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::SdkAccountList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetUserProof
Oculus::Platform::Request_1<Oculus::Platform::Models::UserProof*>* Oculus::Platform::Users::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserProof*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.LaunchFriendRequestFlow
Oculus::Platform::Request_1<Oculus::Platform::Models::LaunchFriendRequestFlowResult*>* Oculus::Platform::Users::LaunchFriendRequestFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::LaunchFriendRequestFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "LaunchFriendRequestFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LaunchFriendRequestFlowResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.LaunchProfile
Oculus::Platform::Request* Oculus::Platform::Users::LaunchProfile(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::LaunchProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "LaunchProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetNextUserAndRoomListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetNextUserAndRoomListPage(Oculus::Platform::Models::UserAndRoomList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetNextUserAndRoomListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetNextUserAndRoomListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Users.GetNextUserListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* Oculus::Platform::Users::GetNextUserListPage(Oculus::Platform::Models::UserList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Users::GetNextUserListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetNextUserListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Writing MetadataGetter for method: Users::GetLoggedInUserLocale
// Il2CppName: GetLoggedInUserLocale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&Users::GetLoggedInUserLocale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetLoggedInUserLocale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Users::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::User*>* (*)(uint64_t)>(&Users::Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Users::GetAccessToken
// Il2CppName: GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<::Il2CppString*>* (*)()>(&Users::GetAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Users::GetLoggedInUser
// Il2CppName: GetLoggedInUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::User*>* (*)()>(&Users::GetLoggedInUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetLoggedInUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Users::GetLoggedInUserFriends
// Il2CppName: GetLoggedInUserFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* (*)()>(&Users::GetLoggedInUserFriends)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetLoggedInUserFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Users::GetLoggedInUserFriendsAndRooms
// Il2CppName: GetLoggedInUserFriendsAndRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>* (*)()>(&Users::GetLoggedInUserFriendsAndRooms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Users::GetLoggedInUserRecentlyMetUsersAndRooms
// Il2CppName: GetLoggedInUserRecentlyMetUsersAndRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>* (*)(Oculus::Platform::UserOptions*)>(&Users::GetLoggedInUserRecentlyMetUsersAndRooms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::UserOptions*>()});
  }
};
// Writing MetadataGetter for method: Users::GetOrgScopedID
// Il2CppName: GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::OrgScopedID*>* (*)(uint64_t)>(&Users::GetOrgScopedID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Users::GetSdkAccounts
// Il2CppName: GetSdkAccounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::SdkAccountList*>* (*)()>(&Users::GetSdkAccounts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetSdkAccounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Users::GetUserProof
// Il2CppName: GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserProof*>* (*)()>(&Users::GetUserProof)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Users::LaunchFriendRequestFlow
// Il2CppName: LaunchFriendRequestFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LaunchFriendRequestFlowResult*>* (*)(uint64_t)>(&Users::LaunchFriendRequestFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "LaunchFriendRequestFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Users::LaunchProfile
// Il2CppName: LaunchProfile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(uint64_t)>(&Users::LaunchProfile)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "LaunchProfile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Users::GetNextUserAndRoomListPage
// Il2CppName: GetNextUserAndRoomListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserAndRoomList*>* (*)(Oculus::Platform::Models::UserAndRoomList*)>(&Users::GetNextUserAndRoomListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetNextUserAndRoomListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::UserAndRoomList*>()});
  }
};
// Writing MetadataGetter for method: Users::GetNextUserListPage
// Il2CppName: GetNextUserListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* (*)(Oculus::Platform::Models::UserList*)>(&Users::GetNextUserListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Users*), "GetNextUserListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::UserList*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Achievements
#include "Oculus/Platform/Achievements.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Achievements.AddCount
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddCount(::Il2CppString* name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.Achievements.AddFields
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddFields(::Il2CppString* name, ::Il2CppString* fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllDefinitions
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllProgress
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetDefinitionsByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetDefinitionsByName(::Array<::Il2CppString*>* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.GetProgressByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetProgressByName(::Array<::Il2CppString*>* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.Unlock
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::Unlock(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementDefinitionListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage(Oculus::Platform::Models::AchievementDefinitionList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementDefinitionListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementProgressListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetNextAchievementProgressListPage(Oculus::Platform::Models::AchievementProgressList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetNextAchievementProgressListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementProgressListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Writing MetadataGetter for method: Achievements::AddCount
// Il2CppName: AddCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* (*)(::Il2CppString*, uint64_t)>(&Achievements::AddCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "AddCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Achievements::AddFields
// Il2CppName: AddFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* (*)(::Il2CppString*, ::Il2CppString*)>(&Achievements::AddFields)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "AddFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Achievements::GetAllDefinitions
// Il2CppName: GetAllDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* (*)()>(&Achievements::GetAllDefinitions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "GetAllDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Achievements::GetAllProgress
// Il2CppName: GetAllProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* (*)()>(&Achievements::GetAllProgress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "GetAllProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Achievements::GetDefinitionsByName
// Il2CppName: GetDefinitionsByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* (*)(::Array<::Il2CppString*>*)>(&Achievements::GetDefinitionsByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "GetDefinitionsByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: Achievements::GetProgressByName
// Il2CppName: GetProgressByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* (*)(::Array<::Il2CppString*>*)>(&Achievements::GetProgressByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "GetProgressByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: Achievements::Unlock
// Il2CppName: Unlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* (*)(::Il2CppString*)>(&Achievements::Unlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "Unlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Achievements::GetNextAchievementDefinitionListPage
// Il2CppName: GetNextAchievementDefinitionListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* (*)(Oculus::Platform::Models::AchievementDefinitionList*)>(&Achievements::GetNextAchievementDefinitionListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "GetNextAchievementDefinitionListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::AchievementDefinitionList*>()});
  }
};
// Writing MetadataGetter for method: Achievements::GetNextAchievementProgressListPage
// Il2CppName: GetNextAchievementProgressListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* (*)(Oculus::Platform::Models::AchievementProgressList*)>(&Achievements::GetNextAchievementProgressListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Achievements*), "GetNextAchievementProgressListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::AchievementProgressList*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Application
#include "Oculus/Platform/Application.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Application.GetVersion
Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>* Oculus::Platform::Application::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Application::GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Application.LaunchOtherApp
Oculus::Platform::Request_1<::Il2CppString*>* Oculus::Platform::Application::LaunchOtherApp(uint64_t appID, Oculus::Platform::ApplicationOptions* deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Application::LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Writing MetadataGetter for method: Application::GetVersion
// Il2CppName: GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>* (*)()>(&Application::GetVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Application*), "GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Application::LaunchOtherApp
// Il2CppName: LaunchOtherApp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<::Il2CppString*>* (*)(uint64_t, Oculus::Platform::ApplicationOptions*)>(&Application::LaunchOtherApp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Application*), "LaunchOtherApp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ApplicationOptions*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AssetFile
#include "Oculus/Platform/AssetFile.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AssetFile.Delete
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DeleteById
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::DeleteById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DeleteById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DeleteByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::DeleteByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::DeleteByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DeleteByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.Download
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadById
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::DownloadById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::DownloadByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::DownloadByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancel
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancelById
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancelById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancelByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancelByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancelByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.GetList
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetailsList*>* Oculus::Platform::AssetFile::GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetailsList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.AssetFile.Status
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.StatusById
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::StatusById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "StatusById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.StatusByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::StatusByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::StatusByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "StatusByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.SetDownloadUpdateNotificationCallback
void Oculus::Platform::AssetFile::SetDownloadUpdateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AssetFile::SetDownloadUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "SetDownloadUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: AssetFile::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* (*)(uint64_t)>(&AssetFile::Delete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: AssetFile::DeleteById
// Il2CppName: DeleteById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* (*)(uint64_t)>(&AssetFile::DeleteById)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "DeleteById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: AssetFile::DeleteByName
// Il2CppName: DeleteByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* (*)(::Il2CppString*)>(&AssetFile::DeleteByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "DeleteByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AssetFile::Download
// Il2CppName: Download
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* (*)(uint64_t)>(&AssetFile::Download)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "Download", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: AssetFile::DownloadById
// Il2CppName: DownloadById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* (*)(uint64_t)>(&AssetFile::DownloadById)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "DownloadById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: AssetFile::DownloadByName
// Il2CppName: DownloadByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* (*)(::Il2CppString*)>(&AssetFile::DownloadByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "DownloadByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AssetFile::DownloadCancel
// Il2CppName: DownloadCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* (*)(uint64_t)>(&AssetFile::DownloadCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "DownloadCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: AssetFile::DownloadCancelById
// Il2CppName: DownloadCancelById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* (*)(uint64_t)>(&AssetFile::DownloadCancelById)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "DownloadCancelById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: AssetFile::DownloadCancelByName
// Il2CppName: DownloadCancelByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* (*)(::Il2CppString*)>(&AssetFile::DownloadCancelByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "DownloadCancelByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AssetFile::GetList
// Il2CppName: GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetailsList*>* (*)()>(&AssetFile::GetList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssetFile::Status
// Il2CppName: Status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* (*)(uint64_t)>(&AssetFile::Status)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "Status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: AssetFile::StatusById
// Il2CppName: StatusById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* (*)(uint64_t)>(&AssetFile::StatusById)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "StatusById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: AssetFile::StatusByName
// Il2CppName: StatusByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* (*)(::Il2CppString*)>(&AssetFile::StatusByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "StatusByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AssetFile::SetDownloadUpdateNotificationCallback
// Il2CppName: SetDownloadUpdateNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>::Callback*)>(&AssetFile::SetDownloadUpdateNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFile*), "SetDownloadUpdateNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CloudStorage
#include "Oculus/Platform/CloudStorage.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CloudStorage.Delete
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::Delete(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.Load
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>* Oculus::Platform::CloudStorage::Load(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadBucketMetadata
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>* Oculus::Platform::CloudStorage::LoadBucketMetadata(::Il2CppString* bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::LoadBucketMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadBucketMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadConflictMetadata
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageConflictMetadata*>* Oculus::Platform::CloudStorage::LoadConflictMetadata(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::LoadConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageConflictMetadata*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadHandle
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>* Oculus::Platform::CloudStorage::LoadHandle(::Il2CppString* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::LoadHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadMetadata
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadata*>* Oculus::Platform::CloudStorage::LoadMetadata(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::LoadMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadata*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.ResolveKeepLocal
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::ResolveKeepLocal(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::ResolveKeepLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "ResolveKeepLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.ResolveKeepRemote
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::ResolveKeepRemote(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::ResolveKeepRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "ResolveKeepRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.Save
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::Save(::Il2CppString* bucket, ::Il2CppString* key, ::Array<uint8_t>* data, int64_t counter, ::Il2CppString* extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, data, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CloudStorage.GetNextCloudStorageMetadataListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>* Oculus::Platform::CloudStorage::GetNextCloudStorageMetadataListPage(Oculus::Platform::Models::CloudStorageMetadataList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage::GetNextCloudStorageMetadataListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "GetNextCloudStorageMetadataListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Writing MetadataGetter for method: CloudStorage::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* (*)(::Il2CppString*, ::Il2CppString*)>(&CloudStorage::Delete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>* (*)(::Il2CppString*, ::Il2CppString*)>(&CloudStorage::Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::LoadBucketMetadata
// Il2CppName: LoadBucketMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>* (*)(::Il2CppString*)>(&CloudStorage::LoadBucketMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "LoadBucketMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::LoadConflictMetadata
// Il2CppName: LoadConflictMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageConflictMetadata*>* (*)(::Il2CppString*, ::Il2CppString*)>(&CloudStorage::LoadConflictMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "LoadConflictMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::LoadHandle
// Il2CppName: LoadHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>* (*)(::Il2CppString*)>(&CloudStorage::LoadHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "LoadHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::LoadMetadata
// Il2CppName: LoadMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadata*>* (*)(::Il2CppString*, ::Il2CppString*)>(&CloudStorage::LoadMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "LoadMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::ResolveKeepLocal
// Il2CppName: ResolveKeepLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&CloudStorage::ResolveKeepLocal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "ResolveKeepLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::ResolveKeepRemote
// Il2CppName: ResolveKeepRemote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&CloudStorage::ResolveKeepRemote)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "ResolveKeepRemote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::Save
// Il2CppName: Save
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* (*)(::Il2CppString*, ::Il2CppString*, ::Array<uint8_t>*, int64_t, ::Il2CppString*)>(&CloudStorage::Save)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "Save", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CloudStorage::GetNextCloudStorageMetadataListPage
// Il2CppName: GetNextCloudStorageMetadataListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>* (*)(Oculus::Platform::Models::CloudStorageMetadataList*)>(&CloudStorage::GetNextCloudStorageMetadataListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage*), "GetNextCloudStorageMetadataListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::CloudStorageMetadataList*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CloudStorage2
#include "Oculus/Platform/CloudStorage2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CloudStorage2.GetUserDirectoryPath
Oculus::Platform::Request_1<::Il2CppString*>* Oculus::Platform::CloudStorage2::GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorage2::GetUserDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage2", "GetUserDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: CloudStorage2::GetUserDirectoryPath
// Il2CppName: GetUserDirectoryPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<::Il2CppString*>* (*)()>(&CloudStorage2::GetUserDirectoryPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorage2*), "GetUserDirectoryPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Entitlements
#include "Oculus/Platform/Entitlements.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Entitlements.IsUserEntitledToApplication
Oculus::Platform::Request* Oculus::Platform::Entitlements::IsUserEntitledToApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Entitlements::IsUserEntitledToApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Entitlements", "IsUserEntitledToApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Entitlements::IsUserEntitledToApplication
// Il2CppName: IsUserEntitledToApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)()>(&Entitlements::IsUserEntitledToApplication)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Entitlements*), "IsUserEntitledToApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.IAP
#include "Oculus/Platform/IAP.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IAP.ConsumePurchase
Oculus::Platform::Request* Oculus::Platform::IAP::ConsumePurchase(::Il2CppString* sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IAP::ConsumePurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "ConsumePurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.IAP.GetProductsBySKU
Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>* Oculus::Platform::IAP::GetProductsBySKU(::Array<::Il2CppString*>* skus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IAP::GetProductsBySKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetProductsBySKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skus)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skus);
}
// Autogenerated method: Oculus.Platform.IAP.GetViewerPurchases
Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IAP::GetViewerPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetViewerPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.IAP.GetViewerPurchasesDurableCache
Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IAP::GetViewerPurchasesDurableCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.IAP.LaunchCheckoutFlow
Oculus::Platform::Request_1<Oculus::Platform::Models::Purchase*>* Oculus::Platform::IAP::LaunchCheckoutFlow(::Il2CppString* sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IAP::LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Purchase*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.IAP.GetNextProductListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>* Oculus::Platform::IAP::GetNextProductListPage(Oculus::Platform::Models::ProductList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IAP::GetNextProductListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetNextProductListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.IAP.GetNextPurchaseListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetNextPurchaseListPage(Oculus::Platform::Models::PurchaseList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IAP::GetNextPurchaseListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetNextPurchaseListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Writing MetadataGetter for method: IAP::ConsumePurchase
// Il2CppName: ConsumePurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(::Il2CppString*)>(&IAP::ConsumePurchase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAP*), "ConsumePurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: IAP::GetProductsBySKU
// Il2CppName: GetProductsBySKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>* (*)(::Array<::Il2CppString*>*)>(&IAP::GetProductsBySKU)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAP*), "GetProductsBySKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: IAP::GetViewerPurchases
// Il2CppName: GetViewerPurchases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* (*)()>(&IAP::GetViewerPurchases)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAP*), "GetViewerPurchases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IAP::GetViewerPurchasesDurableCache
// Il2CppName: GetViewerPurchasesDurableCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* (*)()>(&IAP::GetViewerPurchasesDurableCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAP*), "GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IAP::LaunchCheckoutFlow
// Il2CppName: LaunchCheckoutFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Purchase*>* (*)(::Il2CppString*)>(&IAP::LaunchCheckoutFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAP*), "LaunchCheckoutFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: IAP::GetNextProductListPage
// Il2CppName: GetNextProductListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>* (*)(Oculus::Platform::Models::ProductList*)>(&IAP::GetNextProductListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAP*), "GetNextProductListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::ProductList*>()});
  }
};
// Writing MetadataGetter for method: IAP::GetNextPurchaseListPage
// Il2CppName: GetNextPurchaseListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* (*)(Oculus::Platform::Models::PurchaseList*)>(&IAP::GetNextPurchaseListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAP*), "GetNextPurchaseListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::PurchaseList*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.LanguagePack
#include "Oculus/Platform/LanguagePack.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.LanguagePack.GetCurrent
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::LanguagePack::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LanguagePack::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "LanguagePack", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.LanguagePack.SetCurrent
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::LanguagePack::SetCurrent(::Il2CppString* tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LanguagePack::SetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "LanguagePack", "SetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tag);
}
// Writing MetadataGetter for method: LanguagePack::GetCurrent
// Il2CppName: GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* (*)()>(&LanguagePack::GetCurrent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguagePack*), "GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LanguagePack::SetCurrent
// Il2CppName: SetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* (*)(::Il2CppString*)>(&LanguagePack::SetCurrent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguagePack*), "SetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Livestreaming
#include "Oculus/Platform/Livestreaming.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Livestreaming.GetStatus
Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>* Oculus::Platform::Livestreaming::GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Livestreaming::GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Livestreaming.LaunchLivestreamingFlow
Oculus::Platform::Request* Oculus::Platform::Livestreaming::LaunchLivestreamingFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Livestreaming::LaunchLivestreamingFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "LaunchLivestreamingFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Livestreaming.PauseStream
Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>* Oculus::Platform::Livestreaming::PauseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Livestreaming::PauseStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "PauseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Livestreaming.ResumeStream
Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>* Oculus::Platform::Livestreaming::ResumeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Livestreaming::ResumeStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "ResumeStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Livestreaming.SetStatusUpdateNotificationCallback
void Oculus::Platform::Livestreaming::SetStatusUpdateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::LivestreamingStatus*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Livestreaming::SetStatusUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "SetStatusUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: Livestreaming::GetStatus
// Il2CppName: GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>* (*)()>(&Livestreaming::GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Livestreaming*), "GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Livestreaming::LaunchLivestreamingFlow
// Il2CppName: LaunchLivestreamingFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)()>(&Livestreaming::LaunchLivestreamingFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Livestreaming*), "LaunchLivestreamingFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Livestreaming::PauseStream
// Il2CppName: PauseStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>* (*)()>(&Livestreaming::PauseStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Livestreaming*), "PauseStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Livestreaming::ResumeStream
// Il2CppName: ResumeStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LivestreamingStatus*>* (*)()>(&Livestreaming::ResumeStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Livestreaming*), "ResumeStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Livestreaming::SetStatusUpdateNotificationCallback
// Il2CppName: SetStatusUpdateNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::LivestreamingStatus*>::Callback*)>(&Livestreaming::SetStatusUpdateNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Livestreaming*), "SetStatusUpdateNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::LivestreamingStatus*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Media
#include "Oculus/Platform/Media.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Media.ShareToFacebook
Oculus::Platform::Request_1<Oculus::Platform::Models::ShareMediaResult*>* Oculus::Platform::Media::ShareToFacebook(::Il2CppString* postTextSuggestion, ::Il2CppString* filePath, Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Media::ShareToFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Media", "ShareToFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ShareMediaResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Writing MetadataGetter for method: Media::ShareToFacebook
// Il2CppName: ShareToFacebook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::ShareMediaResult*>* (*)(::Il2CppString*, ::Il2CppString*, Oculus::Platform::MediaContentType)>(&Media::ShareToFacebook)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Media*), "ShareToFacebook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MediaContentType>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSync
#include "Oculus/Platform/NetSync.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.NetSync.SetConnectionStatusChangedNotificationCallback
void Oculus::Platform::NetSync::SetConnectionStatusChangedNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetSyncConnection*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSync::SetConnectionStatusChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "NetSync", "SetConnectionStatusChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.NetSync.SetSessionsChangedNotificationCallback
void Oculus::Platform::NetSync::SetSessionsChangedNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetSyncSessionsChangedNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSync::SetSessionsChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "NetSync", "SetSessionsChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: NetSync::SetConnectionStatusChangedNotificationCallback
// Il2CppName: SetConnectionStatusChangedNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetSyncConnection*>::Callback*)>(&NetSync::SetConnectionStatusChangedNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSync*), "SetConnectionStatusChangedNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetSyncConnection*>::Callback*>()});
  }
};
// Writing MetadataGetter for method: NetSync::SetSessionsChangedNotificationCallback
// Il2CppName: SetSessionsChangedNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetSyncSessionsChangedNotification*>::Callback*)>(&NetSync::SetSessionsChangedNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSync*), "SetSessionsChangedNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetSyncSessionsChangedNotification*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Notifications
#include "Oculus/Platform/Notifications.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Notifications.GetRoomInviteNotifications
Oculus::Platform::Request_1<Oculus::Platform::Models::RoomInviteNotificationList*>* Oculus::Platform::Notifications::GetRoomInviteNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Notifications::GetRoomInviteNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Notifications", "GetRoomInviteNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomInviteNotificationList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Notifications.MarkAsRead
Oculus::Platform::Request* Oculus::Platform::Notifications::MarkAsRead(uint64_t notificationID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Notifications::MarkAsRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Notifications", "MarkAsRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, notificationID);
}
// Autogenerated method: Oculus.Platform.Notifications.GetNextRoomInviteNotificationListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::RoomInviteNotificationList*>* Oculus::Platform::Notifications::GetNextRoomInviteNotificationListPage(Oculus::Platform::Models::RoomInviteNotificationList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Notifications::GetNextRoomInviteNotificationListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Notifications", "GetNextRoomInviteNotificationListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomInviteNotificationList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Writing MetadataGetter for method: Notifications::GetRoomInviteNotifications
// Il2CppName: GetRoomInviteNotifications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomInviteNotificationList*>* (*)()>(&Notifications::GetRoomInviteNotifications)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Notifications*), "GetRoomInviteNotifications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Notifications::MarkAsRead
// Il2CppName: MarkAsRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(uint64_t)>(&Notifications::MarkAsRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Notifications*), "MarkAsRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Notifications::GetNextRoomInviteNotificationListPage
// Il2CppName: GetNextRoomInviteNotificationListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomInviteNotificationList*>* (*)(Oculus::Platform::Models::RoomInviteNotificationList*)>(&Notifications::GetNextRoomInviteNotificationListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Notifications*), "GetNextRoomInviteNotificationListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::RoomInviteNotificationList*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Parties
#include "Oculus/Platform/Parties.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Parties.GetCurrent
Oculus::Platform::Request_1<Oculus::Platform::Models::Party*>* Oculus::Platform::Parties::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Parties::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Parties", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Party*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Parties.SetPartyUpdateNotificationCallback
void Oculus::Platform::Parties::SetPartyUpdateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::PartyUpdateNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Parties::SetPartyUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Parties", "SetPartyUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: Parties::GetCurrent
// Il2CppName: GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::Party*>* (*)()>(&Parties::GetCurrent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Parties*), "GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Parties::SetPartyUpdateNotificationCallback
// Il2CppName: SetPartyUpdateNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::PartyUpdateNotification*>::Callback*)>(&Parties::SetPartyUpdateNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Parties*), "SetPartyUpdateNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::PartyUpdateNotification*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RichPresence
#include "Oculus/Platform/RichPresence.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.RichPresenceOptions
#include "Oculus/Platform/RichPresenceOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.RichPresence.Clear
Oculus::Platform::Request* Oculus::Platform::RichPresence::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresence::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "RichPresence", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.RichPresence.GetDestinations
Oculus::Platform::Request_1<Oculus::Platform::Models::DestinationList*>* Oculus::Platform::RichPresence::GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresence::GetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "RichPresence", "GetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::DestinationList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.RichPresence.Set
Oculus::Platform::Request* Oculus::Platform::RichPresence::Set(Oculus::Platform::RichPresenceOptions* richPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresence::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "RichPresence", "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, richPresenceOptions);
}
// Autogenerated method: Oculus.Platform.RichPresence.GetNextDestinationListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::DestinationList*>* Oculus::Platform::RichPresence::GetNextDestinationListPage(Oculus::Platform::Models::DestinationList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresence::GetNextDestinationListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "RichPresence", "GetNextDestinationListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::DestinationList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Writing MetadataGetter for method: RichPresence::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)()>(&RichPresence::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresence*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RichPresence::GetDestinations
// Il2CppName: GetDestinations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::DestinationList*>* (*)()>(&RichPresence::GetDestinations)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresence*), "GetDestinations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RichPresence::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (*)(Oculus::Platform::RichPresenceOptions*)>(&RichPresence::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresence*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RichPresenceOptions*>()});
  }
};
// Writing MetadataGetter for method: RichPresence::GetNextDestinationListPage
// Il2CppName: GetNextDestinationListPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::DestinationList*>* (*)(Oculus::Platform::Models::DestinationList*)>(&RichPresence::GetNextDestinationListPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresence*), "GetNextDestinationListPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::DestinationList*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.UserDataStore
#include "Oculus/Platform/UserDataStore.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.UserDataStore.PrivateDeleteEntryByKey
Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>* Oculus::Platform::UserDataStore::PrivateDeleteEntryByKey(uint64_t userID, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserDataStore::PrivateDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PrivateDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PrivateGetEntries
Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>* Oculus::Platform::UserDataStore::PrivateGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserDataStore::PrivateGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PrivateGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PrivateGetEntryByKey
Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>* Oculus::Platform::UserDataStore::PrivateGetEntryByKey(uint64_t userID, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserDataStore::PrivateGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PrivateGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PrivateWriteEntry
Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>* Oculus::Platform::UserDataStore::PrivateWriteEntry(uint64_t userID, ::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserDataStore::PrivateWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PrivateWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PublicDeleteEntryByKey
Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>* Oculus::Platform::UserDataStore::PublicDeleteEntryByKey(uint64_t userID, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserDataStore::PublicDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PublicDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PublicGetEntries
Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>* Oculus::Platform::UserDataStore::PublicGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserDataStore::PublicGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PublicGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PublicGetEntryByKey
Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>* Oculus::Platform::UserDataStore::PublicGetEntryByKey(uint64_t userID, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserDataStore::PublicGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PublicGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PublicWriteEntry
Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>* Oculus::Platform::UserDataStore::PublicWriteEntry(uint64_t userID, ::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserDataStore::PublicWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PublicWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key, value);
}
// Writing MetadataGetter for method: UserDataStore::PrivateDeleteEntryByKey
// Il2CppName: PrivateDeleteEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>* (*)(uint64_t, ::Il2CppString*)>(&UserDataStore::PrivateDeleteEntryByKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserDataStore*), "PrivateDeleteEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UserDataStore::PrivateGetEntries
// Il2CppName: PrivateGetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>* (*)(uint64_t)>(&UserDataStore::PrivateGetEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserDataStore*), "PrivateGetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: UserDataStore::PrivateGetEntryByKey
// Il2CppName: PrivateGetEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>* (*)(uint64_t, ::Il2CppString*)>(&UserDataStore::PrivateGetEntryByKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserDataStore*), "PrivateGetEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UserDataStore::PrivateWriteEntry
// Il2CppName: PrivateWriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>* (*)(uint64_t, ::Il2CppString*, ::Il2CppString*)>(&UserDataStore::PrivateWriteEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserDataStore*), "PrivateWriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UserDataStore::PublicDeleteEntryByKey
// Il2CppName: PublicDeleteEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>* (*)(uint64_t, ::Il2CppString*)>(&UserDataStore::PublicDeleteEntryByKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserDataStore*), "PublicDeleteEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UserDataStore::PublicGetEntries
// Il2CppName: PublicGetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>* (*)(uint64_t)>(&UserDataStore::PublicGetEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserDataStore*), "PublicGetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: UserDataStore::PublicGetEntryByKey
// Il2CppName: PublicGetEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>* (*)(uint64_t, ::Il2CppString*)>(&UserDataStore::PublicGetEntryByKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserDataStore*), "PublicGetEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UserDataStore::PublicWriteEntry
// Il2CppName: PublicWriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::UserDataStoreUpdateResponse*>* (*)(uint64_t, ::Il2CppString*, ::Il2CppString*)>(&UserDataStore::PublicWriteEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserDataStore*), "PublicWriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Vrcamera
#include "Oculus/Platform/Vrcamera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Vrcamera.SetGetSurfaceUpdateNotificationCallback
void Oculus::Platform::Vrcamera::SetGetSurfaceUpdateNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Vrcamera::SetGetSurfaceUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Vrcamera", "SetGetSurfaceUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: Vrcamera::SetGetSurfaceUpdateNotificationCallback
// Il2CppName: SetGetSurfaceUpdateNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback*)>(&Vrcamera::SetGetSurfaceUpdateNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vrcamera*), "SetGetSurfaceUpdateNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<::Il2CppString*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformInitializeResult
#include "Oculus/Platform/PlatformInitializeResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFFF5C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult Success
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult Success
void Oculus::Platform::PlatformInitializeResult::_set_Success(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "Success", value));
}
// [DescriptionAttribute] Offset: 0xDFFF94
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult Uninitialized
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult Uninitialized
void Oculus::Platform::PlatformInitializeResult::_set_Uninitialized(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "Uninitialized", value));
}
// [DescriptionAttribute] Offset: 0xDFFFCC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult PreLoaded
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_PreLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_PreLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "PreLoaded"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult PreLoaded
void Oculus::Platform::PlatformInitializeResult::_set_PreLoaded(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_PreLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "PreLoaded", value));
}
// [DescriptionAttribute] Offset: 0xE00004
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult FileInvalid
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_FileInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_FileInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "FileInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult FileInvalid
void Oculus::Platform::PlatformInitializeResult::_set_FileInvalid(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_FileInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "FileInvalid", value));
}
// [DescriptionAttribute] Offset: 0xE0003C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult SignatureInvalid
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_SignatureInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_SignatureInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "SignatureInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult SignatureInvalid
void Oculus::Platform::PlatformInitializeResult::_set_SignatureInvalid(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_SignatureInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "SignatureInvalid", value));
}
// [DescriptionAttribute] Offset: 0xE00074
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult UnableToVerify
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_UnableToVerify() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_UnableToVerify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "UnableToVerify"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult UnableToVerify
void Oculus::Platform::PlatformInitializeResult::_set_UnableToVerify(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_UnableToVerify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "UnableToVerify", value));
}
// [DescriptionAttribute] Offset: 0xE000AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult VersionMismatch
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_VersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_VersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "VersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult VersionMismatch
void Oculus::Platform::PlatformInitializeResult::_set_VersionMismatch(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_VersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "VersionMismatch", value));
}
// [DescriptionAttribute] Offset: 0xE000E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult Unknown
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult Unknown
void Oculus::Platform::PlatformInitializeResult::_set_Unknown(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE0011C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult InvalidCredentials
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_InvalidCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_InvalidCredentials");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "InvalidCredentials"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult InvalidCredentials
void Oculus::Platform::PlatformInitializeResult::_set_InvalidCredentials(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_InvalidCredentials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "InvalidCredentials", value));
}
// [DescriptionAttribute] Offset: 0xE00154
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult NotEntitled
Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_NotEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_get_NotEntitled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "NotEntitled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult NotEntitled
void Oculus::Platform::PlatformInitializeResult::_set_NotEntitled(Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInitializeResult::_set_NotEntitled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "NotEntitled", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.PlatformInternal
#include "Oculus/Platform/PlatformInternal.hpp"
// Including type: Oculus.Platform.PlatformInternal/MessageTypeInternal
#include "Oculus/Platform/PlatformInternal_MessageTypeInternal.hpp"
// Including type: Oculus.Platform.PlatformInternal/HTTP
#include "Oculus/Platform/PlatformInternal_HTTP.hpp"
// Including type: Oculus.Platform.PlatformInternal/Users
#include "Oculus/Platform/PlatformInternal_Users.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.PlatformInternal.CrashApplication
void Oculus::Platform::PlatformInternal::CrashApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::CrashApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal", "CrashApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformInternal.ParseMessageHandle
Oculus::Platform::Message* Oculus::Platform::PlatformInternal::ParseMessageHandle(System::IntPtr messageHandle, Oculus::Platform::Message::MessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::ParseMessageHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal", "ParseMessageHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle), ::il2cpp_utils::ExtractType(messageType)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, messageHandle, messageType);
}
// Autogenerated method: Oculus.Platform.PlatformInternal.InitializeStandaloneAsync
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::PlatformInternal::InitializeStandaloneAsync(uint64_t appID, ::Il2CppString* accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::InitializeStandaloneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal", "InitializeStandaloneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appID, accessToken);
}
// Writing MetadataGetter for method: PlatformInternal::CrashApplication
// Il2CppName: CrashApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlatformInternal::CrashApplication)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformInternal*), "CrashApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformInternal::ParseMessageHandle
// Il2CppName: ParseMessageHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Message* (*)(System::IntPtr, Oculus::Platform::Message::MessageType)>(&PlatformInternal::ParseMessageHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformInternal*), "ParseMessageHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::MessageType>()});
  }
};
// Writing MetadataGetter for method: PlatformInternal::InitializeStandaloneAsync
// Il2CppName: InitializeStandaloneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* (*)(uint64_t, ::Il2CppString*)>(&PlatformInternal::InitializeStandaloneAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformInternal*), "InitializeStandaloneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformInternal/MessageTypeInternal
#include "Oculus/Platform/PlatformInternal_MessageTypeInternal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal AbuseReport_LaunchAdvancedReportFlow
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_AbuseReport_LaunchAdvancedReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_AbuseReport_LaunchAdvancedReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "AbuseReport_LaunchAdvancedReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal AbuseReport_LaunchAdvancedReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_AbuseReport_LaunchAdvancedReportFlow(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_AbuseReport_LaunchAdvancedReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "AbuseReport_LaunchAdvancedReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Application_ExecuteCoordinatedLaunch
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Application_ExecuteCoordinatedLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Application_ExecuteCoordinatedLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Application_ExecuteCoordinatedLaunch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Application_ExecuteCoordinatedLaunch
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Application_ExecuteCoordinatedLaunch(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Application_ExecuteCoordinatedLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Application_ExecuteCoordinatedLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Application_GetInstalledApplications
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Application_GetInstalledApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Application_GetInstalledApplications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Application_GetInstalledApplications"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Application_GetInstalledApplications
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Application_GetInstalledApplications(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Application_GetInstalledApplications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Application_GetInstalledApplications", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Avatar_UpdateMetaData
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Avatar_UpdateMetaData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Avatar_UpdateMetaData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Avatar_UpdateMetaData"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Avatar_UpdateMetaData
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Avatar_UpdateMetaData(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Avatar_UpdateMetaData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Avatar_UpdateMetaData", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Cal_FinalizeApplication
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_FinalizeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_FinalizeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_FinalizeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Cal_FinalizeApplication
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_FinalizeApplication(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_FinalizeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_FinalizeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Cal_GetSuggestedApplications
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_GetSuggestedApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_GetSuggestedApplications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_GetSuggestedApplications"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Cal_GetSuggestedApplications
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_GetSuggestedApplications(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_GetSuggestedApplications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_GetSuggestedApplications", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Cal_ProposeApplication
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_ProposeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_ProposeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_ProposeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Cal_ProposeApplication
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_ProposeApplication(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_ProposeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_ProposeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Colocation_GetCurrentMapUuid
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_GetCurrentMapUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_GetCurrentMapUuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_GetCurrentMapUuid"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Colocation_GetCurrentMapUuid
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_GetCurrentMapUuid(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_GetCurrentMapUuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_GetCurrentMapUuid", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Colocation_RequestMap
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_RequestMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_RequestMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_RequestMap"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Colocation_RequestMap
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_RequestMap(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_RequestMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_RequestMap", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Colocation_ShareMap
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_ShareMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_ShareMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_ShareMap"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Colocation_ShareMap
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_ShareMap(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_ShareMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_ShareMap", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal GraphAPI_Get
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GraphAPI_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GraphAPI_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GraphAPI_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal GraphAPI_Get
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GraphAPI_Get(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GraphAPI_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GraphAPI_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal GraphAPI_Post
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GraphAPI_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GraphAPI_Post");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GraphAPI_Post"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal GraphAPI_Post
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GraphAPI_Post(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GraphAPI_Post");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GraphAPI_Post", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal GroupPresence_LaunchInvitePanel
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GroupPresence_LaunchInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GroupPresence_LaunchInvitePanel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GroupPresence_LaunchInvitePanel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal GroupPresence_LaunchInvitePanel
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GroupPresence_LaunchInvitePanel(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GroupPresence_LaunchInvitePanel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GroupPresence_LaunchInvitePanel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal HTTP_Get
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal HTTP_Get
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_Get(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal HTTP_GetToFile
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_GetToFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_GetToFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_GetToFile"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal HTTP_GetToFile
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_GetToFile(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_GetToFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_GetToFile", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal HTTP_MultiPartPost
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_MultiPartPost() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_MultiPartPost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_MultiPartPost"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal HTTP_MultiPartPost
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_MultiPartPost(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_MultiPartPost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_MultiPartPost", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal HTTP_Post
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_Post");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_Post"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal HTTP_Post
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_Post(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_Post");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_Post", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_IsAllowedForApplication
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_IsAllowedForApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_IsAllowedForApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_IsAllowedForApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_IsAllowedForApplication
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_IsAllowedForApplication(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_IsAllowedForApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_IsAllowedForApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_StartPartyStream
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StartPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StartPartyStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StartPartyStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_StartPartyStream
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StartPartyStream(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StartPartyStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StartPartyStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_StartStream
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StartStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StartStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StartStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_StartStream
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StartStream(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StartStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StartStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_StopPartyStream
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StopPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StopPartyStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StopPartyStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_StopPartyStream
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StopPartyStream(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StopPartyStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StopPartyStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_StopStream
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StopStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StopStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StopStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_StopStream
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StopStream(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StopStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StopStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_UpdateCommentsOverlayVisibility
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_UpdateCommentsOverlayVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_UpdateCommentsOverlayVisibility");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_UpdateCommentsOverlayVisibility"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_UpdateCommentsOverlayVisibility
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_UpdateCommentsOverlayVisibility(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_UpdateCommentsOverlayVisibility");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_UpdateCommentsOverlayVisibility", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_UpdateMicStatus
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_UpdateMicStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_UpdateMicStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_UpdateMicStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Livestreaming_UpdateMicStatus
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_UpdateMicStatus(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_UpdateMicStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_UpdateMicStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_Connect
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_Connect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_Connect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_Connect
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_Connect(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_Connect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_Connect", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_Disconnect
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_Disconnect
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_Disconnect(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_GetSessions
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetSessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetSessions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetSessions"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_GetSessions
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetSessions(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetSessions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetSessions", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_GetVoipAttenuation
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetVoipAttenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetVoipAttenuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetVoipAttenuation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_GetVoipAttenuation
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetVoipAttenuation(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetVoipAttenuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetVoipAttenuation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_GetVoipAttenuationDefault
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetVoipAttenuationDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetVoipAttenuationDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetVoipAttenuationDefault"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_GetVoipAttenuationDefault
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetVoipAttenuationDefault(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetVoipAttenuationDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetVoipAttenuationDefault", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipAttenuation
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipAttenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipAttenuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipAttenuation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipAttenuation
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipAttenuation(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipAttenuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipAttenuation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipAttenuationModel
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipAttenuationModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipAttenuationModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipAttenuationModel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipAttenuationModel
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipAttenuationModel(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipAttenuationModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipAttenuationModel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipChannelCfg
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipChannelCfg() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipChannelCfg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipChannelCfg"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipChannelCfg
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipChannelCfg(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipChannelCfg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipChannelCfg", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipGroup
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipGroup"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipGroup
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipGroup(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipGroup", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipListentoChannels
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipListentoChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipListentoChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipListentoChannels"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipListentoChannels
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipListentoChannels(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipListentoChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipListentoChannels", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipMicSource
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipMicSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipMicSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipMicSource"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipMicSource
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipMicSource(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipMicSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipMicSource", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipSessionMuted
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipSessionMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipSessionMuted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipSessionMuted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipSessionMuted
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipSessionMuted(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipSessionMuted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipSessionMuted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipSpeaktoChannels
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipSpeaktoChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipSpeaktoChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipSpeaktoChannels"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipSpeaktoChannels
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipSpeaktoChannels(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipSpeaktoChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipSpeaktoChannels", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipStreamMode
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipStreamMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipStreamMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipStreamMode"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal NetSync_SetVoipStreamMode
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipStreamMode(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipStreamMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipStreamMode", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Create
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Create"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Create
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Create(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Create", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_GatherInApplication
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_GatherInApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_GatherInApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_GatherInApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_GatherInApplication
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_GatherInApplication(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_GatherInApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_GatherInApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Get
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Get
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Get(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_GetCurrentForUser
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_GetCurrentForUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_GetCurrentForUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_GetCurrentForUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_GetCurrentForUser
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_GetCurrentForUser(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_GetCurrentForUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_GetCurrentForUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Invite
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Invite
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Invite(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Invite", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Join
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Join
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Join(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Leave
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Party_Leave
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Leave(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal RichPresence_SetDestination
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetDestination");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetDestination"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal RichPresence_SetDestination
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetDestination(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetDestination");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetDestination", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal RichPresence_SetIsJoinable
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetIsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetIsJoinable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetIsJoinable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal RichPresence_SetIsJoinable
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetIsJoinable(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetIsJoinable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetIsJoinable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal RichPresence_SetLobbySession
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetLobbySession() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetLobbySession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetLobbySession"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal RichPresence_SetLobbySession
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetLobbySession(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetLobbySession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetLobbySession", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal RichPresence_SetMatchSession
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetMatchSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetMatchSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetMatchSession"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal RichPresence_SetMatchSession
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetMatchSession(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetMatchSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetMatchSession", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Room_CreateOrUpdateAndJoinNamed
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_CreateOrUpdateAndJoinNamed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_CreateOrUpdateAndJoinNamed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_CreateOrUpdateAndJoinNamed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Room_CreateOrUpdateAndJoinNamed
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_CreateOrUpdateAndJoinNamed(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_CreateOrUpdateAndJoinNamed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_CreateOrUpdateAndJoinNamed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Room_GetNamedRooms
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_GetNamedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_GetNamedRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_GetNamedRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Room_GetNamedRooms
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_GetNamedRooms(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_GetNamedRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_GetNamedRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Room_GetSocialRooms
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_GetSocialRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_GetSocialRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_GetSocialRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal Room_GetSocialRooms
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_GetSocialRooms(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_GetSocialRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_GetSocialRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal SystemPermissions_GetStatus
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_SystemPermissions_GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_SystemPermissions_GetStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "SystemPermissions_GetStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal SystemPermissions_GetStatus
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_SystemPermissions_GetStatus(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_SystemPermissions_GetStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "SystemPermissions_GetStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal SystemPermissions_LaunchDeeplink
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_SystemPermissions_LaunchDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_SystemPermissions_LaunchDeeplink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "SystemPermissions_LaunchDeeplink"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal SystemPermissions_LaunchDeeplink
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_SystemPermissions_LaunchDeeplink(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_SystemPermissions_LaunchDeeplink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "SystemPermissions_LaunchDeeplink", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_CancelRecordingForReportFlow
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_CancelRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_CancelRecordingForReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_CancelRecordingForReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_CancelRecordingForReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_CancelRecordingForReportFlow(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_CancelRecordingForReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_CancelRecordingForReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_GetLinkedAccounts
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_GetLinkedAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_GetLinkedAccounts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_GetLinkedAccounts"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_GetLinkedAccounts
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_GetLinkedAccounts(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_GetLinkedAccounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_GetLinkedAccounts", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_LaunchBlockFlow
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchBlockFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchBlockFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchBlockFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_LaunchBlockFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchBlockFlow(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchBlockFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchBlockFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_LaunchReportFlow
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_LaunchReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchReportFlow(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_LaunchReportFlow2
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchReportFlow2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchReportFlow2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchReportFlow2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_LaunchReportFlow2
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchReportFlow2(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchReportFlow2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchReportFlow2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_LaunchUnblockFlow
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchUnblockFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchUnblockFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchUnblockFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_LaunchUnblockFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchUnblockFlow(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchUnblockFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchUnblockFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_NewEntitledTestUser
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewEntitledTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewEntitledTestUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewEntitledTestUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_NewEntitledTestUser
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewEntitledTestUser(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewEntitledTestUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewEntitledTestUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_NewTestUser
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewTestUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewTestUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_NewTestUser
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewTestUser(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewTestUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewTestUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_NewTestUserFriends
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewTestUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewTestUserFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewTestUserFriends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_NewTestUserFriends
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewTestUserFriends(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewTestUserFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewTestUserFriends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_StartRecordingForReportFlow
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StartRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StartRecordingForReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StartRecordingForReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_StartRecordingForReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StartRecordingForReportFlow(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StartRecordingForReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StartRecordingForReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_StopRecordingAndLaunchReportFlow
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StopRecordingAndLaunchReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StopRecordingAndLaunchReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StopRecordingAndLaunchReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_StopRecordingAndLaunchReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StopRecordingAndLaunchReportFlow(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StopRecordingAndLaunchReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StopRecordingAndLaunchReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_StopRecordingAndLaunchReportFlow2
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StopRecordingAndLaunchReportFlow2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StopRecordingAndLaunchReportFlow2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StopRecordingAndLaunchReportFlow2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_StopRecordingAndLaunchReportFlow2
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StopRecordingAndLaunchReportFlow2(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StopRecordingAndLaunchReportFlow2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StopRecordingAndLaunchReportFlow2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_TestUserCreateDeviceManifest
Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_TestUserCreateDeviceManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_TestUserCreateDeviceManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_TestUserCreateDeviceManifest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/MessageTypeInternal User_TestUserCreateDeviceManifest
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_TestUserCreateDeviceManifest(Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_TestUserCreateDeviceManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_TestUserCreateDeviceManifest", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformInternal/HTTP
#include "Oculus/Platform/PlatformInternal_HTTP.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.PlatformInternal/HTTP.SetHttpTransferUpdateCallback
void Oculus::Platform::PlatformInternal::HTTP::SetHttpTransferUpdateCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::HttpTransferUpdate*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::HTTP::SetHttpTransferUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal/HTTP", "SetHttpTransferUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Writing MetadataGetter for method: PlatformInternal::HTTP::SetHttpTransferUpdateCallback
// Il2CppName: SetHttpTransferUpdateCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(typename Oculus::Platform::Message_1<Oculus::Platform::Models::HttpTransferUpdate*>::Callback*)>(&PlatformInternal::HTTP::SetHttpTransferUpdateCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformInternal::HTTP*), "SetHttpTransferUpdateCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<typename Oculus::Platform::Message_1<Oculus::Platform::Models::HttpTransferUpdate*>::Callback*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.PlatformInternal/Users
#include "Oculus/Platform/PlatformInternal_Users.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.PlatformInternal/Users.GetLinkedAccounts
Oculus::Platform::Request_1<Oculus::Platform::Models::LinkedAccountList*>* Oculus::Platform::PlatformInternal::Users::GetLinkedAccounts(::Array<Oculus::Platform::ServiceProvider>* providers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformInternal::Users::GetLinkedAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal/Users", "GetLinkedAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providers)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LinkedAccountList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, providers);
}
// Writing MetadataGetter for method: PlatformInternal::Users::GetLinkedAccounts
// Il2CppName: GetLinkedAccounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::LinkedAccountList*>* (*)(::Array<Oculus::Platform::ServiceProvider>*)>(&PlatformInternal::Users::GetLinkedAccounts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformInternal::Users*), "GetLinkedAccounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::ServiceProvider>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.PlatformSettings
#include "Oculus/Platform/PlatformSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.PlatformSettings instance
Oculus::Platform::PlatformSettings* Oculus::Platform::PlatformSettings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformSettings*>("Oculus.Platform", "PlatformSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.PlatformSettings instance
void Oculus::Platform::PlatformSettings::_set_instance(Oculus::Platform::PlatformSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformSettings", "instance", value));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_AppID
::Il2CppString* Oculus::Platform::PlatformSettings::get_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::get_AppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "get_AppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_AppID
void Oculus::Platform::PlatformSettings::set_AppID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::set_AppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "set_AppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_MobileAppID
::Il2CppString* Oculus::Platform::PlatformSettings::get_MobileAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::get_MobileAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "get_MobileAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_MobileAppID
void Oculus::Platform::PlatformSettings::set_MobileAppID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::set_MobileAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "set_MobileAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_UseStandalonePlatform
bool Oculus::Platform::PlatformSettings::get_UseStandalonePlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::get_UseStandalonePlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "get_UseStandalonePlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_UseStandalonePlatform
void Oculus::Platform::PlatformSettings::set_UseStandalonePlatform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::set_UseStandalonePlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "set_UseStandalonePlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_Instance
Oculus::Platform::PlatformSettings* Oculus::Platform::PlatformSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::PlatformSettings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_Instance
void Oculus::Platform::PlatformSettings::set_Instance(Oculus::Platform::PlatformSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PlatformSettings::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Writing MetadataGetter for method: PlatformSettings::get_AppID
// Il2CppName: get_AppID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&PlatformSettings::get_AppID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), "get_AppID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformSettings::set_AppID
// Il2CppName: set_AppID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&PlatformSettings::set_AppID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), "set_AppID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlatformSettings::get_MobileAppID
// Il2CppName: get_MobileAppID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&PlatformSettings::get_MobileAppID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), "get_MobileAppID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformSettings::set_MobileAppID
// Il2CppName: set_MobileAppID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&PlatformSettings::set_MobileAppID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), "set_MobileAppID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlatformSettings::get_UseStandalonePlatform
// Il2CppName: get_UseStandalonePlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlatformSettings::get_UseStandalonePlatform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), "get_UseStandalonePlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformSettings::set_UseStandalonePlatform
// Il2CppName: set_UseStandalonePlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PlatformSettings::set_UseStandalonePlatform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), "set_UseStandalonePlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlatformSettings::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::PlatformSettings* (*)()>(&PlatformSettings::get_Instance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformSettings::set_Instance
// Il2CppName: set_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::PlatformSettings*)>(&PlatformSettings::set_Instance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), "set_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::PlatformSettings*>()});
  }
};
// Writing MetadataGetter for method: PlatformSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformSettings::*)()>(&PlatformSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformSettings::*)()>(&PlatformSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Request.get_RequestID
uint64_t Oculus::Platform::Request::get_RequestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Request::get_RequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Request.set_RequestID
void Oculus::Platform::Request::set_RequestID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Request::set_RequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Request.OnComplete
Oculus::Platform::Request* Oculus::Platform::Request::OnComplete(Oculus::Platform::Message::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Request::OnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(this, ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Request.HandleMessage
void Oculus::Platform::Request::HandleMessage(Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Request::HandleMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Request.RunCallbacks
void Oculus::Platform::Request::RunCallbacks(uint limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Request::RunCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Request", "RunCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limit)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, limit);
}
// Writing MetadataGetter for method: Request::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Request::*)(uint64_t)>(&Request::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Request*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Request::*)(uint64_t)>(&Request::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Request*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Request::get_RequestID
// Il2CppName: get_RequestID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (Request::*)()>(&Request::get_RequestID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Request*), "get_RequestID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Request::set_RequestID
// Il2CppName: set_RequestID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Request::*)(uint64_t)>(&Request::set_RequestID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Request*), "set_RequestID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Request::OnComplete
// Il2CppName: OnComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request* (Request::*)(Oculus::Platform::Message::Callback*)>(&Request::OnComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Request*), "OnComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::Callback*>()});
  }
};
// Writing MetadataGetter for method: Request::HandleMessage
// Il2CppName: HandleMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Request::*)(Oculus::Platform::Message*)>(&Request::HandleMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Request*), "HandleMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message*>()});
  }
};
// Writing MetadataGetter for method: Request::RunCallbacks
// Il2CppName: RunCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint)>(&Request::RunCallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Request*), "RunCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RichPresenceExtraContext
#include "Oculus/Platform/RichPresenceExtraContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE001CC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext Unknown
Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext Unknown
void Oculus::Platform::RichPresenceExtraContext::_set_Unknown(Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE00204
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext None
Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext None
void Oculus::Platform::RichPresenceExtraContext::_set_None(Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "None", value));
}
// [DescriptionAttribute] Offset: 0xE0023C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext CurrentCapacity
Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_CurrentCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_get_CurrentCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "CurrentCapacity"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext CurrentCapacity
void Oculus::Platform::RichPresenceExtraContext::_set_CurrentCapacity(Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_set_CurrentCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "CurrentCapacity", value));
}
// [DescriptionAttribute] Offset: 0xE00274
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext StartedAgo
Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_StartedAgo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_get_StartedAgo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "StartedAgo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext StartedAgo
void Oculus::Platform::RichPresenceExtraContext::_set_StartedAgo(Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_set_StartedAgo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "StartedAgo", value));
}
// [DescriptionAttribute] Offset: 0xE002AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext EndingIn
Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_EndingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_get_EndingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "EndingIn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext EndingIn
void Oculus::Platform::RichPresenceExtraContext::_set_EndingIn(Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_set_EndingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "EndingIn", value));
}
// [DescriptionAttribute] Offset: 0xE002E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext LookingForAMatch
Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_LookingForAMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_get_LookingForAMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "LookingForAMatch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext LookingForAMatch
void Oculus::Platform::RichPresenceExtraContext::_set_LookingForAMatch(Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceExtraContext::_set_LookingForAMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "LookingForAMatch", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.RichPresenceOptions
#include "Oculus/Platform/RichPresenceOptions.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.RichPresenceExtraContext
#include "Oculus/Platform/RichPresenceExtraContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetApiName
void Oculus::Platform::RichPresenceOptions::SetApiName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetCurrentCapacity
void Oculus::Platform::RichPresenceOptions::SetCurrentCapacity(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetCurrentCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetDeeplinkMessageOverride
void Oculus::Platform::RichPresenceOptions::SetDeeplinkMessageOverride(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetEndTime
void Oculus::Platform::RichPresenceOptions::SetEndTime(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetExtraContext
void Oculus::Platform::RichPresenceOptions::SetExtraContext(Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetExtraContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExtraContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetInstanceId
void Oculus::Platform::RichPresenceOptions::SetInstanceId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetInstanceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInstanceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetIsIdle
void Oculus::Platform::RichPresenceOptions::SetIsIdle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetIsIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetIsJoinable
void Oculus::Platform::RichPresenceOptions::SetIsJoinable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetMaxCapacity
void Oculus::Platform::RichPresenceOptions::SetMaxCapacity(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetMaxCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetStartTime
void Oculus::Platform::RichPresenceOptions::SetStartTime(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::SetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::RichPresenceOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.RichPresenceOptions.Finalize
void Oculus::Platform::RichPresenceOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RichPresenceOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: RichPresenceOptions::SetApiName
// Il2CppName: SetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(::Il2CppString*)>(&RichPresenceOptions::SetApiName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetCurrentCapacity
// Il2CppName: SetCurrentCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(uint)>(&RichPresenceOptions::SetCurrentCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetCurrentCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetDeeplinkMessageOverride
// Il2CppName: SetDeeplinkMessageOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(::Il2CppString*)>(&RichPresenceOptions::SetDeeplinkMessageOverride)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetDeeplinkMessageOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetEndTime
// Il2CppName: SetEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(System::DateTime)>(&RichPresenceOptions::SetEndTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetExtraContext
// Il2CppName: SetExtraContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(Oculus::Platform::RichPresenceExtraContext)>(&RichPresenceOptions::SetExtraContext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetExtraContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RichPresenceExtraContext>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetInstanceId
// Il2CppName: SetInstanceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(::Il2CppString*)>(&RichPresenceOptions::SetInstanceId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetInstanceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetIsIdle
// Il2CppName: SetIsIdle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(bool)>(&RichPresenceOptions::SetIsIdle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetIsIdle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetIsJoinable
// Il2CppName: SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(bool)>(&RichPresenceOptions::SetIsJoinable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetMaxCapacity
// Il2CppName: SetMaxCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(uint)>(&RichPresenceOptions::SetMaxCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetMaxCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::SetStartTime
// Il2CppName: SetStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)(System::DateTime)>(&RichPresenceOptions::SetStartTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "SetStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&RichPresenceOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)()>(&RichPresenceOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)()>(&RichPresenceOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RichPresenceOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RichPresenceOptions::*)()>(&RichPresenceOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RichPresenceOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE0031C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy None
Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy None
void Oculus::Platform::RoomJoinPolicy::_set_None(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "None", value));
}
// [DescriptionAttribute] Offset: 0xE00354
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy Everyone
Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_Everyone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_get_Everyone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "Everyone"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy Everyone
void Oculus::Platform::RoomJoinPolicy::_set_Everyone(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_set_Everyone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "Everyone", value));
}
// [DescriptionAttribute] Offset: 0xE0038C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy FriendsOfMembers
Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_FriendsOfMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_get_FriendsOfMembers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "FriendsOfMembers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy FriendsOfMembers
void Oculus::Platform::RoomJoinPolicy::_set_FriendsOfMembers(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_set_FriendsOfMembers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "FriendsOfMembers", value));
}
// [DescriptionAttribute] Offset: 0xE003C4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy FriendsOfOwner
Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_FriendsOfOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_get_FriendsOfOwner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "FriendsOfOwner"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy FriendsOfOwner
void Oculus::Platform::RoomJoinPolicy::_set_FriendsOfOwner(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_set_FriendsOfOwner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "FriendsOfOwner", value));
}
// [DescriptionAttribute] Offset: 0xE003FC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy InvitedUsers
Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_get_InvitedUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "InvitedUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy InvitedUsers
void Oculus::Platform::RoomJoinPolicy::_set_InvitedUsers(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_set_InvitedUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "InvitedUsers", value));
}
// [DescriptionAttribute] Offset: 0xE00434
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy Unknown
Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy Unknown
void Oculus::Platform::RoomJoinPolicy::_set_Unknown(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinPolicy::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "Unknown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomJoinability
#include "Oculus/Platform/RoomJoinability.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE0046C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability Unknown
Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability Unknown
void Oculus::Platform::RoomJoinability::_set_Unknown(Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE004A4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability AreIn
Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_AreIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_get_AreIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "AreIn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability AreIn
void Oculus::Platform::RoomJoinability::_set_AreIn(Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_set_AreIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "AreIn", value));
}
// [DescriptionAttribute] Offset: 0xE004DC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability AreKicked
Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_AreKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_get_AreKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "AreKicked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability AreKicked
void Oculus::Platform::RoomJoinability::_set_AreKicked(Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_set_AreKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "AreKicked", value));
}
// [DescriptionAttribute] Offset: 0xE00514
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability CanJoin
Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_CanJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_get_CanJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "CanJoin"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability CanJoin
void Oculus::Platform::RoomJoinability::_set_CanJoin(Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_set_CanJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "CanJoin", value));
}
// [DescriptionAttribute] Offset: 0xE0054C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability IsFull
Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_get_IsFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "IsFull"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability IsFull
void Oculus::Platform::RoomJoinability::_set_IsFull(Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_set_IsFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "IsFull", value));
}
// [DescriptionAttribute] Offset: 0xE00584
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability NoViewer
Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_NoViewer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_get_NoViewer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "NoViewer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability NoViewer
void Oculus::Platform::RoomJoinability::_set_NoViewer(Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_set_NoViewer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "NoViewer", value));
}
// [DescriptionAttribute] Offset: 0xE005BC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability PolicyPrevents
Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_PolicyPrevents() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_get_PolicyPrevents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "PolicyPrevents"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability PolicyPrevents
void Oculus::Platform::RoomJoinability::_set_PolicyPrevents(Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomJoinability::_set_PolicyPrevents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "PolicyPrevents", value));
}
