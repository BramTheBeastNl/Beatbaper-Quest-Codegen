// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRComposition
#include "GlobalNamespace/OVRComposition.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRComposition.CompositionMethod
GlobalNamespace::OVRManager::CompositionMethod GlobalNamespace::OVRComposition::CompositionMethod_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRComposition::CompositionMethod_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompositionMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.Update
void GlobalNamespace::OVRComposition::Update_NEW(UnityEngine::GameObject* gameObject, UnityEngine::Camera* mainCamera, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityBackgroundCameraGameObject, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityForegroundCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRComposition::Update_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject, mainCamera, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameObject, mainCamera, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject);
}
// Autogenerated method: OVRComposition.Cleanup
void GlobalNamespace::OVRComposition::Cleanup_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRComposition::Cleanup_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RecenterPose
void GlobalNamespace::OVRComposition::RecenterPose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRComposition::RecenterPose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RefreshCameraRig
void GlobalNamespace::OVRComposition::RefreshCameraRig(UnityEngine::GameObject* parentObject, UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRComposition::RefreshCameraRig");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshCameraRig", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentObject, mainCamera)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentObject, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraWorldSpacePose
GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose(GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeCameraWorldSpacePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(extrinsics)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated method: OVRComposition.ComputeCameraTrackingSpacePose
GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose(GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeCameraTrackingSpacePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(extrinsics)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCompositionUtil
#include "GlobalNamespace/OVRCompositionUtil.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy(UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy(UnityEngine::GameObject*& obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: OVRCompositionUtil.ConvertCameraDevice
GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice(GlobalNamespace::OVRManager::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ConvertCameraDevice", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::CameraDevice, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRCompositionUtil.ToBoundaryType
GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRCompositionUtil::ToBoundaryType(GlobalNamespace::OVRManager::VirtualGreenScreenType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCompositionUtil::ToBoundaryType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ToBoundaryType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRBoundary::BoundaryType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: OVRCompositionUtil.GetWorldPosition
UnityEngine::Vector3 GlobalNamespace::OVRCompositionUtil::GetWorldPosition(UnityEngine::Vector3 trackingSpacePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCompositionUtil::GetWorldPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetWorldPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackingSpacePosition)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingSpacePosition);
}
// Autogenerated method: OVRCompositionUtil.GetMaximumBoundaryDistance
float GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance(UnityEngine::Camera* camera, GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetMaximumBoundaryDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(camera, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, camera, boundaryType);
}
// Autogenerated method: OVRCompositionUtil.BuildBoundaryMesh
UnityEngine::Mesh* GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh(GlobalNamespace::OVRBoundary::BoundaryType boundaryType, float topY, float bottomY) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "BuildBoundaryMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boundaryType, topY, bottomY)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boundaryType, topY, bottomY);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRExternalComposition.RefreshCameraObjects
void GlobalNamespace::OVRExternalComposition::RefreshCameraObjects(UnityEngine::GameObject* parentObject, UnityEngine::Camera* mainCamera, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityBackgroundCameraGameObject, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityForegroundCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::RefreshCameraObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshCameraObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentObject, mainCamera, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentObject, mainCamera, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject);
}
// Autogenerated method: OVRExternalComposition.RefreshAudioFilter
void GlobalNamespace::OVRExternalComposition::RefreshAudioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::RefreshAudioFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshAudioFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.CastMrcFrame
int GlobalNamespace::OVRExternalComposition::CastMrcFrame(int castTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::CastMrcFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CastMrcFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(castTextureIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, castTextureIndex);
}
// Autogenerated method: OVRExternalComposition.SetCameraTargetTexture
void GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture(int drawTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCameraTargetTexture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(drawTextureIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, drawTextureIndex);
}
// Autogenerated method: OVRExternalComposition.CleanupAudioFilter
void GlobalNamespace::OVRExternalComposition::CleanupAudioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::CleanupAudioFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CleanupAudioFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.CacheAudioData
void GlobalNamespace::OVRExternalComposition::CacheAudioData(::Array<float>* data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::CacheAudioData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CacheAudioData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, channels)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRExternalComposition.GetAndResetAudioData
void GlobalNamespace::OVRExternalComposition::GetAndResetAudioData(::Array<float>*& audioData, int& audioFrames, int& channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::GetAndResetAudioData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAndResetAudioData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(audioData, audioFrames, channels)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, audioData, audioFrames, channels);
}
// Autogenerated method: OVRExternalComposition.CompositionMethod
GlobalNamespace::OVRManager::CompositionMethod GlobalNamespace::OVRExternalComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::CompositionMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompositionMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.Update
void GlobalNamespace::OVRExternalComposition::Update(UnityEngine::GameObject* gameObject, UnityEngine::Camera* mainCamera, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityBackgroundCameraGameObject, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityForegroundCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject, mainCamera, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameObject, mainCamera, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject);
}
// Autogenerated method: OVRExternalComposition.Cleanup
void GlobalNamespace::OVRExternalComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExternalComposition::Cleanup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMRAudioFilter.Start
void GlobalNamespace::OVRMRAudioFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMRAudioFilter::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMRAudioFilter.OnAudioFilterRead
void GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead(::Array<float>* data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, channels)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSandwichComposition
#include "GlobalNamespace/OVRSandwichComposition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
// Including type: OVRBoundary/BoundaryTestResult
#include "GlobalNamespace/OVRBoundary_BoundaryTestResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cachedVector3fSize
int GlobalNamespace::OVRBoundary::_get_cachedVector3fSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::_get_cachedVector3fSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRBoundary", "cachedVector3fSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cachedVector3fSize
void GlobalNamespace::OVRBoundary::_set_cachedVector3fSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::_set_cachedVector3fSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedVector3fSize", value));
}
// Autogenerated static field getter
// Get static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRNativeBuffer*>("", "OVRBoundary", "cachedGeometryNativeBuffer"));
}
// Autogenerated static field setter
// Set static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer(GlobalNamespace::OVRNativeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryNativeBuffer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] cachedGeometryManagedBuffer
::Array<float>* GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<float>*>("", "OVRBoundary", "cachedGeometryManagedBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] cachedGeometryManagedBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryManagedBuffer", value));
}
// Autogenerated method: OVRBoundary.GetConfigured
bool GlobalNamespace::OVRBoundary::GetConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::GetConfigured");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConfigured", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.TestNode
GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestNode(GlobalNamespace::OVRBoundary::Node node, GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::TestNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TestNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, node, boundaryType);
}
// Autogenerated method: OVRBoundary.TestPoint
GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestPoint(UnityEngine::Vector3 point, GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::TestPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TestPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(point, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRBoundary.GetGeometry
::Array<UnityEngine::Vector3>* GlobalNamespace::OVRBoundary::GetGeometry(GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::GetGeometry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGeometry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetDimensions
UnityEngine::Vector3 GlobalNamespace::OVRBoundary::GetDimensions(GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::GetDimensions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDimensions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetVisible
bool GlobalNamespace::OVRBoundary::GetVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::GetVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetVisible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.SetVisible
void GlobalNamespace::OVRBoundary::SetVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::SetVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRBoundary..cctor
void GlobalNamespace::OVRBoundary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRBoundary", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandLeft
GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::Node::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandLeft
void GlobalNamespace::OVRBoundary::Node::_set_HandLeft(GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::Node::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandRight
GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::Node::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandRight
void GlobalNamespace::OVRBoundary::Node::_set_HandRight(GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::Node::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node Head
GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::Node::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node Head
void GlobalNamespace::OVRBoundary::Node::_set_Head(GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::Node::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "Head", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType OuterBoundary
GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType OuterBoundary
void GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary(GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType PlayArea
GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType PlayArea
void GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea(GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "PlayArea", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCameraRig.get_leftEyeCamera
UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_leftEyeCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftEyeCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_rightEyeCamera
UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_rightEyeCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightEyeCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_trackingSpace
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackingSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackingSpace
void GlobalNamespace::OVRCameraRig::set_trackingSpace(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_trackingSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftEyeAnchor
void GlobalNamespace::OVRCameraRig::set_leftEyeAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_centerEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_centerEyeAnchor
void GlobalNamespace::OVRCameraRig::set_centerEyeAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightEyeAnchor
void GlobalNamespace::OVRCameraRig::set_rightEyeAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftHandAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_leftHandAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightHandAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rightHandAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftControllerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightControllerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_trackerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::get_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackerAnchor
void GlobalNamespace::OVRCameraRig::set_trackerAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::set_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_trackerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.add_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::add_UpdatedAnchors(System::Action_1<GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::add_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.remove_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors(System::Action_1<GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.Awake
void GlobalNamespace::OVRCameraRig::Awake_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::Awake_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Start
void GlobalNamespace::OVRCameraRig::Start_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::Start_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.FixedUpdate
void GlobalNamespace::OVRCameraRig::FixedUpdate_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::FixedUpdate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Update
void GlobalNamespace::OVRCameraRig::Update_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::Update_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.OnDestroy
void GlobalNamespace::OVRCameraRig::OnDestroy_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::OnDestroy_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.UpdateAnchors
void GlobalNamespace::OVRCameraRig::UpdateAnchors_NEW(bool updateEyeAnchors, bool updateHandAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::UpdateAnchors_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateAnchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(updateEyeAnchors, updateHandAnchors)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateEyeAnchors, updateHandAnchors);
}
// Autogenerated method: OVRCameraRig.OnBeforeRenderCallback
void GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBeforeRenderCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.RaiseUpdatedAnchorsEvent
void GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RaiseUpdatedAnchorsEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.EnsureGameObjectIntegrity
void GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureGameObjectIntegrity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.ConfigureAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::ConfigureAnchor_NEW(UnityEngine::Transform* root, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::ConfigureAnchor_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root, name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, root, name);
}
// Autogenerated method: OVRCameraRig.ComputeTrackReferenceMatrix
UnityEngine::Matrix4x4 GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeTrackReferenceMatrix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRExtensions
#include "GlobalNamespace/OVRExtensions.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRExtensions.ToTrackingSpacePose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToTrackingSpacePose(UnityEngine::Transform* transform, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToTrackingSpacePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, camera)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(GlobalNamespace::OVRPose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackingSpacePose)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRExtensions.ToHeadSpacePose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToHeadSpacePose(UnityEngine::Transform* transform, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToHeadSpacePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToHeadSpacePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, camera)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToOVRPose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(UnityEngine::Transform* t, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, isLocal)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, isLocal);
}
// Autogenerated method: OVRExtensions.FromOVRPose
void GlobalNamespace::OVRExtensions::FromOVRPose(UnityEngine::Transform* t, GlobalNamespace::OVRPose pose, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FromOVRPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromOVRPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, pose, isLocal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, pose, isLocal);
}
// Autogenerated method: OVRExtensions.ToOVRPose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(GlobalNamespace::OVRPlugin::Posef p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p);
}
// Autogenerated method: OVRExtensions.ToFrustum
GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRExtensions::ToFrustum(GlobalNamespace::OVRPlugin::Frustumf f) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToFrustum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFrustum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRTracker::Frustum, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: OVRExtensions.FromColorf
UnityEngine::Color GlobalNamespace::OVRExtensions::FromColorf(GlobalNamespace::OVRPlugin::Colorf c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FromColorf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromColorf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.ToColorf
GlobalNamespace::OVRPlugin::Colorf GlobalNamespace::OVRExtensions::ToColorf(UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToColorf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToColorf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Colorf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.FromVector3f
UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromVector3f(GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FromVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedXVector3f
UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedXVector3f(GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FromFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedZVector3f
UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedZVector3f(GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FromFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector3f
GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToVector3f(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedXVector3f
GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedXVector3f(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedZVector3f
GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedZVector3f(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromQuatf
UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromQuatf(GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FromQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedXQuatf
UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedXQuatf(GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FromFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedZQuatf
UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedZQuatf(GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FromFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToQuatf
GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToQuatf(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedXQuatf
GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedXQuatf(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedZQuatf
GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedZQuatf(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ToFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ConvertToHMDMatrix34
OVR::OpenVR::HmdMatrix34_t GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34(UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ConvertToHMDMatrix34", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(m)));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::HmdMatrix34_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, m);
}
// Autogenerated method: OVRExtensions.FindChildRecursive
UnityEngine::Transform* GlobalNamespace::OVRExtensions::FindChildRecursive(UnityEngine::Transform* parent, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRExtensions::FindChildRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FindChildRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent, name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parent, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Acceleration
GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Acceleration
void GlobalNamespace::NodeStatePropertyType::_set_Acceleration(GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularAcceleration
GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularAcceleration
void GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration(GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Velocity
GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Velocity
void GlobalNamespace::NodeStatePropertyType::_set_Velocity(GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularVelocity
GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularVelocity
void GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity(GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Position
GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Position"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Position
void GlobalNamespace::NodeStatePropertyType::_set_Position(GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Orientation
GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_get_Orientation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Orientation"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Orientation
void GlobalNamespace::NodeStatePropertyType::_set_Orientation(GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodeStatePropertyType::_set_Orientation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Orientation", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNodeStateProperties
#include "GlobalNamespace/OVRNodeStateProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>* GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>*>("", "OVRNodeStateProperties", "nodeStateList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
void GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList(System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNodeStateProperties", "nodeStateList", value));
}
// Autogenerated method: OVRNodeStateProperties.IsHmdPresent
bool GlobalNamespace::OVRNodeStateProperties::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyVector3
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3(UnityEngine::XR::XRNode nodeType, GlobalNamespace::NodeStatePropertyType propertyType, GlobalNamespace::OVRPlugin::Node ovrpNodeType, GlobalNamespace::OVRPlugin::Step stepType, UnityEngine::Vector3& retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyVector3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeType, propertyType, ovrpNodeType, stepType, retVec)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, retVec);
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion(UnityEngine::XR::XRNode nodeType, GlobalNamespace::NodeStatePropertyType propertyType, GlobalNamespace::OVRPlugin::Node ovrpNodeType, GlobalNamespace::OVRPlugin::Step stepType, UnityEngine::Quaternion& retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyQuaternion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeType, propertyType, ovrpNodeType, stepType, retQuat)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, retQuat);
}
// Autogenerated method: OVRNodeStateProperties.ValidateProperty
bool GlobalNamespace::OVRNodeStateProperties::ValidateProperty(UnityEngine::XR::XRNode nodeType, UnityEngine::XR::XRNodeState& requestedNodeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::ValidateProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "ValidateProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeType, requestedNodeState)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeType, requestedNodeState);
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateVector3
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3(UnityEngine::XR::XRNode nodeType, GlobalNamespace::NodeStatePropertyType propertyType, UnityEngine::Vector3& retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateVector3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeType, propertyType, retVec)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeType, propertyType, retVec);
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion(UnityEngine::XR::XRNode nodeType, GlobalNamespace::NodeStatePropertyType propertyType, UnityEngine::Quaternion& retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateQuaternion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeType, propertyType, retQuat)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeType, propertyType, retQuat);
}
// Autogenerated method: OVRNodeStateProperties..cctor
void GlobalNamespace::OVRNodeStateProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNodeStateProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPose.get_identity
GlobalNamespace::OVRPose GlobalNamespace::OVRPose::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::get_identity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPose", "get_identity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPose.Inverse
GlobalNamespace::OVRPose GlobalNamespace::OVRPose::Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::Inverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Inverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(*this, ___internal__method);
}
// Autogenerated method: OVRPose.flipZ
GlobalNamespace::OVRPose GlobalNamespace::OVRPose::flipZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::flipZ");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "flipZ", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(*this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef_Legacy
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::ToPosef_Legacy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToPosef_Legacy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(*this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::ToPosef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToPosef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(*this, ___internal__method);
}
// Autogenerated method: OVRPose.Equals
bool GlobalNamespace::OVRPose::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: OVRPose.GetHashCode
int GlobalNamespace::OVRPose::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: OVRPose.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::OVRPose& x, const GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPose", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::OVRPose& x, const GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPose", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Multiply
GlobalNamespace::OVRPose GlobalNamespace::operator*(const GlobalNamespace::OVRPose& lhs, const GlobalNamespace::OVRPose& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPose::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPose", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRNativeBuffer.Reset
void GlobalNamespace::OVRNativeBuffer::Reset(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNativeBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numBytes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.GetCapacity
int GlobalNamespace::OVRNativeBuffer::GetCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNativeBuffer::GetCapacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCapacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.GetPointer
System::IntPtr GlobalNamespace::OVRNativeBuffer::GetPointer(int byteOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNativeBuffer::GetPointer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPointer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(byteOffset)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, byteOffset);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNativeBuffer::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNativeBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: OVRNativeBuffer.Reallocate
void GlobalNamespace::OVRNativeBuffer::Reallocate(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNativeBuffer::Reallocate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reallocate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numBytes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.Release
void GlobalNamespace::OVRNativeBuffer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNativeBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Finalize
void GlobalNamespace::OVRNativeBuffer::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNativeBuffer::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDebugHeadController
#include "GlobalNamespace/OVRDebugHeadController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRDebugHeadController.Awake
void GlobalNamespace::OVRDebugHeadController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugHeadController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Start
void GlobalNamespace::OVRDebugHeadController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugHeadController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Update
void GlobalNamespace::OVRDebugHeadController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugHeadController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRDisplay/LatencyData
#include "GlobalNamespace/OVRDisplay_LatencyData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRDisplay.Update
void GlobalNamespace::OVRDisplay::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.add_RecenteredPose
void GlobalNamespace::OVRDisplay::add_RecenteredPose(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::add_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_RecenteredPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.remove_RecenteredPose
void GlobalNamespace::OVRDisplay::remove_RecenteredPose(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::remove_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_RecenteredPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.RecenterPose
void GlobalNamespace::OVRDisplay::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::RecenterPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_acceleration
UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularAcceleration
UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_angularAcceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_angularAcceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_velocity
UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_velocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularVelocity
UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.GetEyeRenderDesc
GlobalNamespace::OVRDisplay::EyeRenderDesc GlobalNamespace::OVRDisplay::GetEyeRenderDesc(UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::GetEyeRenderDesc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEyeRenderDesc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eye)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRDisplay::EyeRenderDesc, false>(this, ___internal__method, eye);
}
// Autogenerated method: OVRDisplay.get_latency
GlobalNamespace::OVRDisplay::LatencyData GlobalNamespace::OVRDisplay::get_latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_latency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_latency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRDisplay::LatencyData, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_appFramerate
float GlobalNamespace::OVRDisplay::get_appFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_appFramerate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_appFramerate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_recommendedMSAALevel
int GlobalNamespace::OVRDisplay::get_recommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_recommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_recommendedMSAALevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequenciesAvailable
::Array<float>* GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_displayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequency
float GlobalNamespace::OVRDisplay::get_displayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::get_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_displayFrequency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.set_displayFrequency
void GlobalNamespace::OVRDisplay::set_displayFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::set_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_displayFrequency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.UpdateTextures
void GlobalNamespace::OVRDisplay::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.ConfigureEyeDesc
void GlobalNamespace::OVRDisplay::ConfigureEyeDesc(UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDisplay::ConfigureEyeDesc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureEyeDesc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eye)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eye);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHaptics
#include "GlobalNamespace/OVRHaptics.hpp"
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
::Array<GlobalNamespace::OVRHaptics::OVRHapticsChannel*>* GlobalNamespace::OVRHaptics::_get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::_get_Channels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<GlobalNamespace::OVRHaptics::OVRHapticsChannel*>*>("", "OVRHaptics", "Channels"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
void GlobalNamespace::OVRHaptics::_set_Channels(::Array<GlobalNamespace::OVRHaptics::OVRHapticsChannel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::_set_Channels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "Channels", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_LeftChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::_get_LeftChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "LeftChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
void GlobalNamespace::OVRHaptics::_set_LeftChannel(GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::_set_LeftChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "LeftChannel", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_RightChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::_get_RightChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "RightChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
void GlobalNamespace::OVRHaptics::_set_RightChannel(GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::_set_RightChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "RightChannel", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
::Array<GlobalNamespace::OVRHaptics::OVRHapticsOutput*>* GlobalNamespace::OVRHaptics::_get_m_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::_get_m_outputs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<GlobalNamespace::OVRHaptics::OVRHapticsOutput*>*>("", "OVRHaptics", "m_outputs"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
void GlobalNamespace::OVRHaptics::_set_m_outputs(::Array<GlobalNamespace::OVRHaptics::OVRHapticsOutput*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::_set_m_outputs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "m_outputs", value));
}
// Autogenerated method: OVRHaptics..cctor
void GlobalNamespace::OVRHaptics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics.Process
void GlobalNamespace::OVRHaptics::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Process");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics", "Process", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCE3B24
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleRateHz>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleRateHz>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE3B34
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE3B44
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE3B54
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE3B64
// Autogenerated static field getter
// Get static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE3B74
// Autogenerated static field getter
// Get static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated method: OVRHaptics/Config.get_SampleRateHz
int GlobalNamespace::OVRHaptics::Config::get_SampleRateHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::get_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleRateHz", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleRateHz
void GlobalNamespace::OVRHaptics::Config::set_SampleRateHz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::set_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleRateHz", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_SampleSizeInBytes
int GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleSizeInBytes
void GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumSafeSamplesQueued
int GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumSafeSamplesQueued
void GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_OptimalBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_OptimalBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MaximumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MaximumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config..cctor
void GlobalNamespace::OVRHaptics::Config::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.Load
void GlobalNamespace::OVRHaptics::Config::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::Config::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt(GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue(GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix(GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Process
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt(GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue(GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix(GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_ReadCount
int GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ReadCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_ReadCount
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ReadCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_Clip
GlobalNamespace::OVRHapticsClip* GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Clip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRHapticsClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_Clip
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip(GlobalNamespace::OVRHapticsClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Clip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRHapticsClip.get_Count
int GlobalNamespace::OVRHapticsClip::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Count
void GlobalNamespace::OVRHapticsClip::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::set_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Capacity
int GlobalNamespace::OVRHapticsClip::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Capacity
void GlobalNamespace::OVRHapticsClip::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::set_Capacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Samples
::Array<uint8_t>* GlobalNamespace::OVRHapticsClip::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::get_Samples");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Samples
void GlobalNamespace::OVRHapticsClip::set_Samples(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::set_Samples");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Samples", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.WriteSample
void GlobalNamespace::OVRHapticsClip::WriteSample(uint8_t sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::WriteSample");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteSample", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sample)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sample);
}
// Autogenerated method: OVRHapticsClip.Reset
void GlobalNamespace::OVRHapticsClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.InitializeFromAudioFloatTrack
void GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack(::Array<float>* sourceData, double sourceFrequency, int sourceChannelCount, int sourceChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeFromAudioFloatTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceData, sourceFrequency, sourceChannelCount, sourceChannel)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceData, sourceFrequency, sourceChannelCount, sourceChannel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHeadsetEmulator
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X_PITCH
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X_PITCH
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_Y
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_Y
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_HEIGHT
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_HEIGHT
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_ROLL
float GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MAX_ROLL"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_ROLL
void GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MAX_ROLL", value));
}
// Autogenerated method: OVRHeadsetEmulator.Start
void GlobalNamespace::OVRHeadsetEmulator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.Update
void GlobalNamespace::OVRHeadsetEmulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsEmulationActivated
bool GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEmulationActivated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsTweakingPitch
bool GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsTweakingPitch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator/OpMode
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode Off
GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode Off
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off(GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode EditorOnly
GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "EditorOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode EditorOnly
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly(GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "EditorOnly", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "AlwaysOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn(GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "AlwaysOn", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
// Including type: OVRInput/HapticInfo
#include "GlobalNamespace/OVRInput_HapticInfo.hpp"
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Including type: OVRInput/OVRControllerTouch
#include "GlobalNamespace/OVRInput_OVRControllerTouch.hpp"
// Including type: OVRInput/OVRControllerLTouch
#include "GlobalNamespace/OVRInput_OVRControllerLTouch.hpp"
// Including type: OVRInput/OVRControllerRTouch
#include "GlobalNamespace/OVRInput_OVRControllerRTouch.hpp"
// Including type: OVRInput/OVRControllerHands
#include "GlobalNamespace/OVRInput_OVRControllerHands.hpp"
// Including type: OVRInput/OVRControllerLHand
#include "GlobalNamespace/OVRInput_OVRControllerLHand.hpp"
// Including type: OVRInput/OVRControllerRHand
#include "GlobalNamespace/OVRInput_OVRControllerRHand.hpp"
// Including type: OVRInput/OVRControllerRemote
#include "GlobalNamespace/OVRInput_OVRControllerRemote.hpp"
// Including type: OVRInput/OVRControllerGamepadPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadPC.hpp"
// Including type: OVRInput/OVRControllerGamepadMac
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac.hpp"
// Including type: OVRInput/OVRControllerGamepadAndroid
#include "GlobalNamespace/OVRInput_OVRControllerGamepadAndroid.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: OVR.OpenVR.ETrackedDeviceProperty
#include "OVR/OpenVR/ETrackedDeviceProperty.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_DEADZONE_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_DEADZONE_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
System::Collections::Generic::List_1<GlobalNamespace::OVRInput::OVRControllerBase*>* GlobalNamespace::OVRInput::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OVRInput::OVRControllerBase*>*>("", "OVRInput", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
void GlobalNamespace::OVRInput::_set_controllers(System::Collections::Generic::List_1<GlobalNamespace::OVRInput::OVRControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "controllers", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller activeControllerType
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_activeControllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_activeControllerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput", "activeControllerType"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller activeControllerType
void GlobalNamespace::OVRInput::_set_activeControllerType(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_activeControllerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "activeControllerType", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller connectedControllerTypes
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_connectedControllerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_connectedControllerTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput", "connectedControllerTypes"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller connectedControllerTypes
void GlobalNamespace::OVRInput::_set_connectedControllerTypes(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_connectedControllerTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "connectedControllerTypes", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Step stepType
GlobalNamespace::OVRPlugin::Step GlobalNamespace::OVRInput::_get_stepType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_stepType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Step>("", "OVRInput", "stepType"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Step stepType
void GlobalNamespace::OVRInput::_set_stepType(GlobalNamespace::OVRPlugin::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_stepType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "stepType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 fixedUpdateCount
int GlobalNamespace::OVRInput::_get_fixedUpdateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_fixedUpdateCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "fixedUpdateCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 fixedUpdateCount
void GlobalNamespace::OVRInput::_set_fixedUpdateCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_fixedUpdateCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "fixedUpdateCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveController
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get__pluginSupportsActiveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveController"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveController
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveController(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set__pluginSupportsActiveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveController", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveControllerCached
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveControllerCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveControllerCached
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _pluginSupportsActiveControllerMinVersion
System::Version* GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRInput", "_pluginSupportsActiveControllerMinVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _pluginSupportsActiveControllerMinVersion
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerMinVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_HAPTIC_CHANNELS
int GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "NUM_HAPTIC_CHANNELS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_HAPTIC_CHANNELS
void GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "NUM_HAPTIC_CHANNELS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/HapticInfo[] hapticInfos
::Array<GlobalNamespace::OVRInput::HapticInfo*>* GlobalNamespace::OVRInput::_get_hapticInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_hapticInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<GlobalNamespace::OVRInput::HapticInfo*>*>("", "OVRInput", "hapticInfos"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/HapticInfo[] hapticInfos
void GlobalNamespace::OVRInput::_set_hapticInfos(::Array<GlobalNamespace::OVRInput::HapticInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_hapticInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "hapticInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
float GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
void GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
float GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
void GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_TOUCH_NAME
::Il2CppString* GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRInput", "OPENVR_TOUCH_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_TOUCH_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_TOUCH_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
::Il2CppString* GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
::Il2CppString* GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
::Array<GlobalNamespace::OVRInput::OpenVRControllerDetails>* GlobalNamespace::OVRInput::_get_openVRControllerDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_get_openVRControllerDetails");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<GlobalNamespace::OVRInput::OpenVRControllerDetails>*>("", "OVRInput", "openVRControllerDetails"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
void GlobalNamespace::OVRInput::_set_openVRControllerDetails(::Array<GlobalNamespace::OVRInput::OpenVRControllerDetails>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::_set_openVRControllerDetails");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "openVRControllerDetails", value));
}
// Autogenerated method: OVRInput.get_pluginSupportsActiveController
bool GlobalNamespace::OVRInput::get_pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::get_pluginSupportsActiveController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "get_pluginSupportsActiveController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput..cctor
void GlobalNamespace::OVRInput::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Update
void GlobalNamespace::OVRInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.FixedUpdate
void GlobalNamespace::OVRInput::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.GetControllerOrientationTracked
bool GlobalNamespace::OVRInput::GetControllerOrientationTracked(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetControllerOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationTracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerOrientationValid
bool GlobalNamespace::OVRInput::GetControllerOrientationValid(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetControllerOrientationValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionTracked
bool GlobalNamespace::OVRInput::GetControllerPositionTracked(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetControllerPositionTracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionTracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionValid
bool GlobalNamespace::OVRInput::GetControllerPositionValid(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetControllerPositionValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerPosition
UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerPosition(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetLocalControllerPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerVelocity
UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerVelocity(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetLocalControllerVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAcceleration
UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAcceleration(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetLocalControllerAcceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAcceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerRotation
UnityEngine::Quaternion GlobalNamespace::OVRInput::GetLocalControllerRotation(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetLocalControllerRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularVelocity
UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularAcceleration
UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularAcceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetDominantHand
GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::GetDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetDominantHand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::Handedness, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::Button virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::RawButton rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButton
bool GlobalNamespace::OVRInput::GetResolvedButton(GlobalNamespace::OVRInput::Button virtualMask, GlobalNamespace::OVRInput::RawButton rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(GlobalNamespace::OVRInput::Button virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(GlobalNamespace::OVRInput::RawButton rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonDown
bool GlobalNamespace::OVRInput::GetResolvedButtonDown(GlobalNamespace::OVRInput::Button virtualMask, GlobalNamespace::OVRInput::RawButton rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedButtonDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(GlobalNamespace::OVRInput::Button virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(GlobalNamespace::OVRInput::RawButton rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonUp
bool GlobalNamespace::OVRInput::GetResolvedButtonUp(GlobalNamespace::OVRInput::Button virtualMask, GlobalNamespace::OVRInput::RawButton rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedButtonUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::Touch virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::RawTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouch
bool GlobalNamespace::OVRInput::GetResolvedTouch(GlobalNamespace::OVRInput::Touch virtualMask, GlobalNamespace::OVRInput::RawTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedTouch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(GlobalNamespace::OVRInput::Touch virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(GlobalNamespace::OVRInput::RawTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchDown
bool GlobalNamespace::OVRInput::GetResolvedTouchDown(GlobalNamespace::OVRInput::Touch virtualMask, GlobalNamespace::OVRInput::RawTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedTouchDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(GlobalNamespace::OVRInput::Touch virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(GlobalNamespace::OVRInput::RawTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchUp
bool GlobalNamespace::OVRInput::GetResolvedTouchUp(GlobalNamespace::OVRInput::Touch virtualMask, GlobalNamespace::OVRInput::RawTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedTouchUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::NearTouch virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::RawNearTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouch
bool GlobalNamespace::OVRInput::GetResolvedNearTouch(GlobalNamespace::OVRInput::NearTouch virtualMask, GlobalNamespace::OVRInput::RawNearTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedNearTouch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(GlobalNamespace::OVRInput::NearTouch virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(GlobalNamespace::OVRInput::RawNearTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchDown
bool GlobalNamespace::OVRInput::GetResolvedNearTouchDown(GlobalNamespace::OVRInput::NearTouch virtualMask, GlobalNamespace::OVRInput::RawNearTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedNearTouchDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(GlobalNamespace::OVRInput::NearTouch virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(GlobalNamespace::OVRInput::RawNearTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchUp
bool GlobalNamespace::OVRInput::GetResolvedNearTouchUp(GlobalNamespace::OVRInput::NearTouch virtualMask, GlobalNamespace::OVRInput::RawNearTouch rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedNearTouchUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::Axis1D virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::RawAxis1D rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis1D
float GlobalNamespace::OVRInput::GetResolvedAxis1D(GlobalNamespace::OVRInput::Axis1D virtualMask, GlobalNamespace::OVRInput::RawAxis1D rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedAxis1D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis1D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::Axis2D virtualMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(GlobalNamespace::OVRInput::RawAxis2D rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis2D
UnityEngine::Vector2 GlobalNamespace::OVRInput::GetResolvedAxis2D(GlobalNamespace::OVRInput::Axis2D virtualMask, GlobalNamespace::OVRInput::RawAxis2D rawMask, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetResolvedAxis2D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis2D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask, rawMask, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetConnectedControllers
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetConnectedControllers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.IsControllerConnected
bool GlobalNamespace::OVRInput::IsControllerConnected(GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::IsControllerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "IsControllerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controller)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controller);
}
// Autogenerated method: OVRInput.GetActiveController
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetActiveController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetActiveController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.StartVibration
void GlobalNamespace::OVRInput::StartVibration(float amplitude, float duration, UnityEngine::XR::XRNode controllerNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::StartVibration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "StartVibration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(amplitude, duration, controllerNode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, amplitude, duration, controllerNode);
}
// Autogenerated method: OVRInput.SetOpenVRLocalPose
void GlobalNamespace::OVRInput::SetOpenVRLocalPose(UnityEngine::Vector3 leftPos, UnityEngine::Vector3 rightPos, UnityEngine::Quaternion leftRot, UnityEngine::Quaternion rightRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::SetOpenVRLocalPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "SetOpenVRLocalPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leftPos, rightPos, leftRot, rightRot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leftPos, rightPos, leftRot, rightRot);
}
// Autogenerated method: OVRInput.GetOpenVRStringProperty
::Il2CppString* GlobalNamespace::OVRInput::GetOpenVRStringProperty(OVR::OpenVR::ETrackedDeviceProperty prop, uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetOpenVRStringProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetOpenVRStringProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prop, deviceId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prop, deviceId);
}
// Autogenerated method: OVRInput.UpdateXRControllerNodeIds
void GlobalNamespace::OVRInput::UpdateXRControllerNodeIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::UpdateXRControllerNodeIds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerNodeIds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.UpdateXRControllerHaptics
void GlobalNamespace::OVRInput::UpdateXRControllerHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::UpdateXRControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerHaptics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.InitHapticInfo
void GlobalNamespace::OVRInput::InitHapticInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::InitHapticInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "InitHapticInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.PlayHapticImpulse
void GlobalNamespace::OVRInput::PlayHapticImpulse(float amplitude, UnityEngine::XR::XRNode deviceNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::PlayHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "PlayHapticImpulse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(amplitude, deviceNode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, amplitude, deviceNode);
}
// Autogenerated method: OVRInput.IsValidOpenVRDevice
bool GlobalNamespace::OVRInput::IsValidOpenVRDevice(uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::IsValidOpenVRDevice");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "IsValidOpenVRDevice", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(deviceId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated method: OVRInput.SetControllerVibration
void GlobalNamespace::OVRInput::SetControllerVibration(float frequency, float amplitude, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "SetControllerVibration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frequency, amplitude, controllerMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frequency, amplitude, controllerMask);
}
// Autogenerated method: OVRInput.GetControllerBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining(GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRInput.CalculateAbsMax
UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateAbsMax(UnityEngine::Vector2 a, UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateAbsMax
float GlobalNamespace::OVRInput::CalculateAbsMax(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateDeadzone
UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateDeadzone(UnityEngine::Vector2 a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, deadzone)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.CalculateDeadzone
float GlobalNamespace::OVRInput::CalculateDeadzone(float a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, deadzone)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.ShouldResolveController
bool GlobalNamespace::OVRInput::ShouldResolveController(GlobalNamespace::OVRInput::Controller controllerType, GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::ShouldResolveController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput", "ShouldResolveController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType, controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerType, controllerMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Button None
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button None
void GlobalNamespace::OVRInput::Button::_set_None(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button One
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button One
void GlobalNamespace::OVRInput::Button::_set_One(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Two
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Two
void GlobalNamespace::OVRInput::Button::_set_Two(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Three
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Three
void GlobalNamespace::OVRInput::Button::_set_Three(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Four
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Four
void GlobalNamespace::OVRInput::Button::_set_Four(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Start
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Start
void GlobalNamespace::OVRInput::Button::_set_Start(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Back
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Back
void GlobalNamespace::OVRInput::Button::_set_Back(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryShoulder
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryShoulder
void GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryIndexTrigger
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryHandTrigger
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstick
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickUp
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickDown
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickLeft
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickRight
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryTouchpad
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryShoulder
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryShoulder
void GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryIndexTrigger
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryHandTrigger
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstick
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickUp
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickDown
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickLeft
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickRight
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryTouchpad
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadUp
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadUp
void GlobalNamespace::OVRInput::Button::_set_DpadUp(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadDown
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadDown
void GlobalNamespace::OVRInput::Button::_set_DpadDown(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadLeft
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadLeft
void GlobalNamespace::OVRInput::Button::_set_DpadLeft(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadRight
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadRight
void GlobalNamespace::OVRInput::Button::_set_DpadRight(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Up
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Up
void GlobalNamespace::OVRInput::Button::_set_Up(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Down
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Down
void GlobalNamespace::OVRInput::Button::_set_Down(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Left
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Left
void GlobalNamespace::OVRInput::Button::_set_Left(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Right
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Right
void GlobalNamespace::OVRInput::Button::_set_Right(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Any
GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Any
void GlobalNamespace::OVRInput::Button::_set_Any(GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Button::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton None
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton None
void GlobalNamespace::OVRInput::RawButton::_set_None(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton A
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton A
void GlobalNamespace::OVRInput::RawButton::_set_A(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton B
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton B
void GlobalNamespace::OVRInput::RawButton::_set_B(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton X
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton X
void GlobalNamespace::OVRInput::RawButton::_set_X(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Y
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Y
void GlobalNamespace::OVRInput::RawButton::_set_Y(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Start
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Start
void GlobalNamespace::OVRInput::RawButton::_set_Start(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Back
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Back
void GlobalNamespace::OVRInput::RawButton::_set_Back(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LShoulder
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LShoulder
void GlobalNamespace::OVRInput::RawButton::_set_LShoulder(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LIndexTrigger
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LHandTrigger
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstick
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstick(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickUp
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickDown
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickLeft
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickRight
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LTouchpad
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_LTouchpad(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RShoulder
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RShoulder
void GlobalNamespace::OVRInput::RawButton::_set_RShoulder(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RIndexTrigger
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RHandTrigger
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstick
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstick(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickUp
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickDown
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickLeft
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickRight
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RTouchpad
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_RTouchpad(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadUp
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadUp
void GlobalNamespace::OVRInput::RawButton::_set_DpadUp(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadDown
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadDown
void GlobalNamespace::OVRInput::RawButton::_set_DpadDown(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadLeft
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadLeft
void GlobalNamespace::OVRInput::RawButton::_set_DpadLeft(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadRight
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadRight
void GlobalNamespace::OVRInput::RawButton::_set_DpadRight(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Any
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Any
void GlobalNamespace::OVRInput::RawButton::_set_Any(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawButton::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch None
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch None
void GlobalNamespace::OVRInput::Touch::_set_None(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch One
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch One
void GlobalNamespace::OVRInput::Touch::_set_One(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Two
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Two
void GlobalNamespace::OVRInput::Touch::_set_Two(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Three
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Three
void GlobalNamespace::OVRInput::Touch::_set_Three(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Four
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Four
void GlobalNamespace::OVRInput::Touch::_set_Four(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryIndexTrigger
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbstick
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbRest
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryTouchpad
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryIndexTrigger
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbstick
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbRest
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryTouchpad
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Any
GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Any
void GlobalNamespace::OVRInput::Touch::_set_Any(GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Touch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch None
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch None
void GlobalNamespace::OVRInput::RawTouch::_set_None(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch A
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch A
void GlobalNamespace::OVRInput::RawTouch::_set_A(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch B
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch B
void GlobalNamespace::OVRInput::RawTouch::_set_B(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch X
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch X
void GlobalNamespace::OVRInput::RawTouch::_set_X(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Y
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Y
void GlobalNamespace::OVRInput::RawTouch::_set_Y(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LIndexTrigger
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbstick
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbRest
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LTouchpad
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RIndexTrigger
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbstick
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbRest
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RTouchpad
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Any
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Any
void GlobalNamespace::OVRInput::RawTouch::_set_Any(GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch None
GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch None
void GlobalNamespace::OVRInput::NearTouch::_set_None(GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryIndexTrigger
GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger(GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryThumbButtons
GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons(GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryIndexTrigger
GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger(GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryThumbButtons
GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons(GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch Any
GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch Any
void GlobalNamespace::OVRInput::NearTouch::_set_Any(GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::NearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch None
GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch None
void GlobalNamespace::OVRInput::RawNearTouch::_set_None(GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LIndexTrigger
GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger(GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LThumbButtons
GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons(GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RIndexTrigger
GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger(GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RThumbButtons
GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons(GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch Any
GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch Any
void GlobalNamespace::OVRInput::RawNearTouch::_set_Any(GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawNearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D None
GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D None
void GlobalNamespace::OVRInput::Axis1D::_set_None(GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryIndexTrigger
GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger(GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryHandTrigger
GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger(GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryIndexTrigger
GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger(GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryHandTrigger
GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger(GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D Any
GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D Any
void GlobalNamespace::OVRInput::Axis1D::_set_Any(GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D None
GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D None
void GlobalNamespace::OVRInput::RawAxis1D::_set_None(GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LIndexTrigger
GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LIndexTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTrigger(GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LHandTrigger
GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LHandTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_LHandTrigger(GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RIndexTrigger
GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RIndexTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTrigger(GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RHandTrigger
GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RHandTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_RHandTrigger(GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D Any
GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D Any
void GlobalNamespace::OVRInput::RawAxis1D::_set_Any(GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D None
GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D None
void GlobalNamespace::OVRInput::Axis2D::_set_None(GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D PrimaryThumbstick
GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D PrimaryThumbstick
void GlobalNamespace::OVRInput::Axis2D::_set_PrimaryThumbstick(GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D PrimaryTouchpad
GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D PrimaryTouchpad
void GlobalNamespace::OVRInput::Axis2D::_set_PrimaryTouchpad(GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D SecondaryThumbstick
GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D SecondaryThumbstick
void GlobalNamespace::OVRInput::Axis2D::_set_SecondaryThumbstick(GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D SecondaryTouchpad
GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D SecondaryTouchpad
void GlobalNamespace::OVRInput::Axis2D::_set_SecondaryTouchpad(GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D Any
GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D Any
void GlobalNamespace::OVRInput::Axis2D::_set_Any(GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Axis2D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D None
GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D None
void GlobalNamespace::OVRInput::RawAxis2D::_set_None(GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D LThumbstick
GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D LThumbstick
void GlobalNamespace::OVRInput::RawAxis2D::_set_LThumbstick(GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D LTouchpad
GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D LTouchpad
void GlobalNamespace::OVRInput::RawAxis2D::_set_LTouchpad(GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D RThumbstick
GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D RThumbstick
void GlobalNamespace::OVRInput::RawAxis2D::_set_RThumbstick(GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D RTouchpad
GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D RTouchpad
void GlobalNamespace::OVRInput::RawAxis2D::_set_RTouchpad(GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D Any
GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D Any
void GlobalNamespace::OVRInput::RawAxis2D::_set_Any(GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::RawAxis2D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton None
GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton None
void GlobalNamespace::OVRInput::OpenVRButton::_set_None(GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Two
GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRButton::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Two
void GlobalNamespace::OVRInput::OpenVRButton::_set_Two(GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRButton::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Thumbstick
GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRButton::_get_Thumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Thumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Thumbstick
void GlobalNamespace::OVRInput::OpenVRButton::_set_Thumbstick(GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRButton::_set_Thumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Thumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Grip
GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRButton::_get_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Grip"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Grip
void GlobalNamespace::OVRInput::OpenVRButton::_set_Grip(GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRButton::_set_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Grip", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Controller
#include "GlobalNamespace/OVRInput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller None
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller None
void GlobalNamespace::OVRInput::Controller::_set_None(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller LTouch
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_LTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_LTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "LTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller LTouch
void GlobalNamespace::OVRInput::Controller::_set_LTouch(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_LTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "LTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller RTouch
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_RTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_RTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "RTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller RTouch
void GlobalNamespace::OVRInput::Controller::_set_RTouch(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_RTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "RTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Touch
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Touch
void GlobalNamespace::OVRInput::Controller::_set_Touch(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Remote
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Remote
void GlobalNamespace::OVRInput::Controller::_set_Remote(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Remote", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Gamepad
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Gamepad() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_Gamepad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Gamepad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Gamepad
void GlobalNamespace::OVRInput::Controller::_set_Gamepad(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_Gamepad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Gamepad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Hands
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_Hands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Hands"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Hands
void GlobalNamespace::OVRInput::Controller::_set_Hands(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_Hands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Hands", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller LHand
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_LHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_LHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "LHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller LHand
void GlobalNamespace::OVRInput::Controller::_set_LHand(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_LHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "LHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller RHand
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_RHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_RHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "RHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller RHand
void GlobalNamespace::OVRInput::Controller::_set_RHand(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_RHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "RHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Active
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Active"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Active
void GlobalNamespace::OVRInput::Controller::_set_Active(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller All
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "All"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller All
void GlobalNamespace::OVRInput::Controller::_set_All(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Controller::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness Unsupported
GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Handedness::_get_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness Unsupported
void GlobalNamespace::OVRInput::Handedness::_set_Unsupported(GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Handedness::_set_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness LeftHanded
GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_LeftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Handedness::_get_LeftHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "LeftHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness LeftHanded
void GlobalNamespace::OVRInput::Handedness::_set_LeftHanded(GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Handedness::_set_LeftHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "LeftHanded", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness RightHanded
GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_RightHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Handedness::_get_RightHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "RightHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness RightHanded
void GlobalNamespace::OVRInput::Handedness::_set_RightHanded(GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::Handedness::_set_RightHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "RightHanded", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OpenVRController
#include "GlobalNamespace/OVRInput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController Unknown
GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRController::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController Unknown
void GlobalNamespace::OVRInput::OpenVRController::_set_Unknown(GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRController::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController OculusTouch
GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_OculusTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRController::_get_OculusTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "OculusTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController OculusTouch
void GlobalNamespace::OVRInput::OpenVRController::_set_OculusTouch(GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRController::_set_OculusTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "OculusTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController ViveController
GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_ViveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRController::_get_ViveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "ViveController"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController ViveController
void GlobalNamespace::OVRInput::OpenVRController::_set_ViveController(GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRController::_set_ViveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "ViveController", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController WindowsMRController
GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_WindowsMRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRController::_get_WindowsMRController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "WindowsMRController"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController WindowsMRController
void GlobalNamespace::OVRInput::OpenVRController::_set_WindowsMRController(GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OpenVRController::_set_WindowsMRController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "WindowsMRController", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/HapticInfo
#include "GlobalNamespace/OVRInput_HapticInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualButtonMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualButtonMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualTouchMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualNearTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualNearTouchMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualAxis1DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis1DMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualAxis2DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis2DMap.hpp"
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerBase.Update
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::OVRControllerBase::Update_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::Update_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::Controller, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.GetOpenVRControllerState
GlobalNamespace::OVRPlugin::ControllerState4 GlobalNamespace::OVRInput::OVRControllerBase::GetOpenVRControllerState(GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::GetOpenVRControllerState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOpenVRControllerState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::ControllerState4, false>(this, ___internal__method, controllerType);
}
// Autogenerated method: OVRInput/OVRControllerBase.SetControllerVibration
void GlobalNamespace::OVRInput::OVRControllerBase::SetControllerVibration_NEW(float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::SetControllerVibration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetControllerVibration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frequency, amplitude)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, frequency, amplitude);
}
// Autogenerated method: OVRInput/OVRControllerBase.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerBase::GetBatteryPercentRemaining_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::GetBatteryPercentRemaining_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureButtonMap_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ConfigureButtonMap_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureTouchMap_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ConfigureTouchMap_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureNearTouchMap_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ConfigureNearTouchMap_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis1DMap_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis1DMap_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis2DMap_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis2DMap_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(GlobalNamespace::OVRInput::Button virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawButton, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(GlobalNamespace::OVRInput::Touch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(GlobalNamespace::OVRInput::NearTouch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawNearTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(GlobalNamespace::OVRInput::Axis1D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawAxis1D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(GlobalNamespace::OVRInput::Axis2D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawAxis2D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualButtonMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualButtonMap.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerBase/VirtualButtonMap.ToRawMask
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::ToRawMask(GlobalNamespace::OVRInput::Button virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawButton, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualTouchMap.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerBase/VirtualTouchMap.ToRawMask
GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::ToRawMask(GlobalNamespace::OVRInput::Touch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualNearTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualNearTouchMap.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerBase/VirtualNearTouchMap.ToRawMask
GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::ToRawMask(GlobalNamespace::OVRInput::NearTouch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawNearTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualAxis1DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis1DMap.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerBase/VirtualAxis1DMap.ToRawMask
GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::ToRawMask(GlobalNamespace::OVRInput::Axis1D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawAxis1D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualAxis2DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis2DMap.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerBase/VirtualAxis2DMap.ToRawMask
GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::ToRawMask(GlobalNamespace::OVRInput::Axis2D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(virtualMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::RawAxis2D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerTouch
#include "GlobalNamespace/OVRInput_OVRControllerTouch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerTouch::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerTouch::GetBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerLTouch
#include "GlobalNamespace/OVRInput_OVRControllerLTouch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerLTouch::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLTouch::GetBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerRTouch
#include "GlobalNamespace/OVRInput_OVRControllerRTouch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerRTouch::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRTouch::GetBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerHands
#include "GlobalNamespace/OVRInput_OVRControllerHands.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerHands::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerHands::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerHands::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerHands::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerHands::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerHands::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerHands::GetBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerLHand
#include "GlobalNamespace/OVRInput_OVRControllerLHand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerLHand::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerLHand::GetBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerRHand
#include "GlobalNamespace/OVRInput_OVRControllerRHand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerRHand::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRHand::GetBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerRemote
#include "GlobalNamespace/OVRInput_OVRControllerRemote.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerGamepadPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadPC.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRInput/OVRControllerGamepadMac
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac.hpp"
// Including type: OVRInput/OVRControllerGamepadMac/AxisGPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac_AxisGPC.hpp"
// Including type: OVRInput/OVRControllerGamepadMac/ButtonGPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac_ButtonGPC.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String DllName
::Il2CppString* GlobalNamespace::OVRInput::OVRControllerGamepadMac::_get_DllName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::_get_DllName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRInput/OVRControllerGamepadMac", "DllName"));
}
// Autogenerated static field setter
// Set static field: static private System.String DllName
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::_set_DllName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::_set_DllName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac", "DllName", value));
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.OVR_GamepadController_Initialize
bool GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput/OVRControllerGamepadMac", "OVR_GamepadController_Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.OVR_GamepadController_Destroy
bool GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Destroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput/OVRControllerGamepadMac", "OVR_GamepadController_Destroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.OVR_GamepadController_Update
bool GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput/OVRControllerGamepadMac", "OVR_GamepadController_Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.OVR_GamepadController_GetAxis
float GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_GetAxis(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_GetAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput/OVRControllerGamepadMac", "OVR_GamepadController_GetAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(axis)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, axis);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.OVR_GamepadController_GetButton
bool GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_GetButton(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_GetButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput/OVRControllerGamepadMac", "OVR_GamepadController_GetButton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(button)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, button);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.OVR_GamepadController_SetVibration
bool GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_SetVibration(int node, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::OVR_GamepadController_SetVibration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRInput/OVRControllerGamepadMac", "OVR_GamepadController_SetVibration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, strength, frequency)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, node, strength, frequency);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.Finalize
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.Update
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::OVRControllerGamepadMac::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRInput::Controller, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadMac.SetControllerVibration
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::SetControllerVibration(float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetControllerVibration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frequency, amplitude)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, frequency, amplitude);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerGamepadMac/AxisGPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac_AxisGPC.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC None
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC None
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_None(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC LeftXAxis
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_LeftXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_LeftXAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "LeftXAxis"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC LeftXAxis
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_LeftXAxis(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_LeftXAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "LeftXAxis", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC LeftYAxis
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_LeftYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_LeftYAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "LeftYAxis"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC LeftYAxis
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_LeftYAxis(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_LeftYAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "LeftYAxis", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC RightXAxis
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_RightXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_RightXAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "RightXAxis"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC RightXAxis
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_RightXAxis(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_RightXAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "RightXAxis", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC RightYAxis
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_RightYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_RightYAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "RightYAxis"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC RightYAxis
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_RightYAxis(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_RightYAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "RightYAxis", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC LeftTrigger
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_LeftTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_LeftTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "LeftTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC LeftTrigger
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_LeftTrigger(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_LeftTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "LeftTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC RightTrigger
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_RightTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_RightTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "RightTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC RightTrigger
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_RightTrigger(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_RightTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "RightTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC DPad_X_Axis
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_DPad_X_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_DPad_X_Axis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "DPad_X_Axis"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC DPad_X_Axis
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_DPad_X_Axis(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_DPad_X_Axis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "DPad_X_Axis", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC DPad_Y_Axis
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_DPad_Y_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_DPad_Y_Axis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "DPad_Y_Axis"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC DPad_Y_Axis
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_DPad_Y_Axis(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_DPad_Y_Axis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "DPad_Y_Axis", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC Max
GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC>("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/AxisGPC Max
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_Max(GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/AxisGPC", "Max", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerGamepadMac/ButtonGPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac_ButtonGPC.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC None
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC None
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_None(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC A
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC A
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_A(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC B
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC B
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_B(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC X
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC X
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_X(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Y
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Y
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Y(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Up
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Up
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Up(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Down
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Down
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Down(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Left
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Left
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Left(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Right
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Right
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Right(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Start
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Start
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Start(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Back
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Back
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Back(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC LStick
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_LStick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_LStick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "LStick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC LStick
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_LStick(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_LStick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "LStick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC RStick
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_RStick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_RStick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "RStick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC RStick
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_RStick(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_RStick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "RStick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC LeftShoulder
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_LeftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_LeftShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "LeftShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC LeftShoulder
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_LeftShoulder(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_LeftShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "LeftShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC RightShoulder
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_RightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_RightShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "RightShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC RightShoulder
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_RightShoulder(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_RightShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "RightShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Max
GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC>("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OVRControllerGamepadMac/ButtonGPC Max
void GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Max(GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OVRControllerGamepadMac/ButtonGPC", "Max", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerGamepadAndroid
#include "GlobalNamespace/OVRInput_OVRControllerGamepadAndroid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureButtonMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureNearTouchMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureAxis1DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureAxis2DMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLayerAttribute
#include "GlobalNamespace/OVRLayerAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace/OVRManager_EyeTextureFormat.hpp"
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FixedFoveatedRenderingLevel.hpp"
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace/OVRManager_TiledMultiResLevel.hpp"
// Including type: OVRManager/SystemHeadsetType
#include "GlobalNamespace/OVRManager_SystemHeadsetType.hpp"
// Including type: OVRMixedRealityCaptureSettings
#include "GlobalNamespace/OVRMixedRealityCaptureSettings.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRProfile
#include "GlobalNamespace/OVRProfile.hpp"
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRTracker
#include "GlobalNamespace/OVRTracker.hpp"
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: OVRManager/<>c
#include "GlobalNamespace/OVRManager_--c.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCE1FDC
// Autogenerated static field getter
// Get static field: static private OVRManager <instance>k__BackingField
GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::_get_$instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_$instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager*>("", "OVRManager", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRManager <instance>k__BackingField
void GlobalNamespace::OVRManager::_set_$instance$k__BackingField(GlobalNamespace::OVRManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_$instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<instance>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE1FEC
// Autogenerated static field getter
// Get static field: static private OVRDisplay <display>k__BackingField
GlobalNamespace::OVRDisplay* GlobalNamespace::OVRManager::_get_$display$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_$display$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRDisplay*>("", "OVRManager", "<display>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRDisplay <display>k__BackingField
void GlobalNamespace::OVRManager::_set_$display$k__BackingField(GlobalNamespace::OVRDisplay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_$display$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<display>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE1FFC
// Autogenerated static field getter
// Get static field: static private OVRTracker <tracker>k__BackingField
GlobalNamespace::OVRTracker* GlobalNamespace::OVRManager::_get_$tracker$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_$tracker$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRTracker*>("", "OVRManager", "<tracker>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRTracker <tracker>k__BackingField
void GlobalNamespace::OVRManager::_set_$tracker$k__BackingField(GlobalNamespace::OVRTracker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_$tracker$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<tracker>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE200C
// Autogenerated static field getter
// Get static field: static private OVRBoundary <boundary>k__BackingField
GlobalNamespace::OVRBoundary* GlobalNamespace::OVRManager::_get_$boundary$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_$boundary$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRBoundary*>("", "OVRManager", "<boundary>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRBoundary <boundary>k__BackingField
void GlobalNamespace::OVRManager::_set_$boundary$k__BackingField(GlobalNamespace::OVRBoundary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_$boundary$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<boundary>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRProfile _profile
GlobalNamespace::OVRProfile* GlobalNamespace::OVRManager::_get__profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__profile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile*>("", "OVRManager", "_profile"));
}
// Autogenerated static field setter
// Set static field: static private OVRProfile _profile
void GlobalNamespace::OVRManager::_set__profile(GlobalNamespace::OVRProfile* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__profile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_profile", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE201C
// Autogenerated static field getter
// Get static field: static private System.Action HMDAcquired
System::Action* GlobalNamespace::OVRManager::_get_HMDAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_HMDAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDAcquired
void GlobalNamespace::OVRManager::_set_HMDAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_HMDAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE202C
// Autogenerated static field getter
// Get static field: static private System.Action HMDLost
System::Action* GlobalNamespace::OVRManager::_get_HMDLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_HMDLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDLost
void GlobalNamespace::OVRManager::_set_HMDLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_HMDLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDLost", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE203C
// Autogenerated static field getter
// Get static field: static private System.Action HMDMounted
System::Action* GlobalNamespace::OVRManager::_get_HMDMounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_HMDMounted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDMounted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDMounted
void GlobalNamespace::OVRManager::_set_HMDMounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_HMDMounted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDMounted", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE204C
// Autogenerated static field getter
// Get static field: static private System.Action HMDUnmounted
System::Action* GlobalNamespace::OVRManager::_get_HMDUnmounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_HMDUnmounted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDUnmounted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDUnmounted
void GlobalNamespace::OVRManager::_set_HMDUnmounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_HMDUnmounted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDUnmounted", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE205C
// Autogenerated static field getter
// Get static field: static private System.Action VrFocusAcquired
System::Action* GlobalNamespace::OVRManager::_get_VrFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_VrFocusAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "VrFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action VrFocusAcquired
void GlobalNamespace::OVRManager::_set_VrFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_VrFocusAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "VrFocusAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE206C
// Autogenerated static field getter
// Get static field: static private System.Action VrFocusLost
System::Action* GlobalNamespace::OVRManager::_get_VrFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_VrFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "VrFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action VrFocusLost
void GlobalNamespace::OVRManager::_set_VrFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_VrFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "VrFocusLost", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE207C
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusAcquired
System::Action* GlobalNamespace::OVRManager::_get_InputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_InputFocusAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "InputFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusAcquired
void GlobalNamespace::OVRManager::_set_InputFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_InputFocusAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "InputFocusAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE208C
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusLost
System::Action* GlobalNamespace::OVRManager::_get_InputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_InputFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "InputFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusLost
void GlobalNamespace::OVRManager::_set_InputFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_InputFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "InputFocusLost", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE209C
// Autogenerated static field getter
// Get static field: static private System.Action AudioOutChanged
System::Action* GlobalNamespace::OVRManager::_get_AudioOutChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_AudioOutChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "AudioOutChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action AudioOutChanged
void GlobalNamespace::OVRManager::_set_AudioOutChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_AudioOutChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "AudioOutChanged", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE20AC
// Autogenerated static field getter
// Get static field: static private System.Action AudioInChanged
System::Action* GlobalNamespace::OVRManager::_get_AudioInChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_AudioInChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "AudioInChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action AudioInChanged
void GlobalNamespace::OVRManager::_set_AudioInChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_AudioInChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "AudioInChanged", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE20BC
// Autogenerated static field getter
// Get static field: static private System.Action TrackingAcquired
System::Action* GlobalNamespace::OVRManager::_get_TrackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_TrackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action TrackingAcquired
void GlobalNamespace::OVRManager::_set_TrackingAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_TrackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "TrackingAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE20CC
// Autogenerated static field getter
// Get static field: static private System.Action TrackingLost
System::Action* GlobalNamespace::OVRManager::_get_TrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_TrackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action TrackingLost
void GlobalNamespace::OVRManager::_set_TrackingLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_TrackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "TrackingLost", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCE20DC
// Autogenerated static field getter
// Get static field: static private System.Action HSWDismissed
System::Action* GlobalNamespace::OVRManager::_get_HSWDismissed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_HSWDismissed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HSWDismissed"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HSWDismissed
void GlobalNamespace::OVRManager::_set_HSWDismissed(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_HSWDismissed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HSWDismissed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isHmdPresentCached
bool GlobalNamespace::OVRManager::_get__isHmdPresentCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__isHmdPresentCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isHmdPresentCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isHmdPresentCached
void GlobalNamespace::OVRManager::_set__isHmdPresentCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__isHmdPresentCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isHmdPresentCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isHmdPresent
bool GlobalNamespace::OVRManager::_get__isHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__isHmdPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isHmdPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isHmdPresent
void GlobalNamespace::OVRManager::_set__isHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__isHmdPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isHmdPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _wasHmdPresent
bool GlobalNamespace::OVRManager::_get__wasHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__wasHmdPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_wasHmdPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _wasHmdPresent
void GlobalNamespace::OVRManager::_set__wasHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__wasHmdPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_wasHmdPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasVrFocusCached
bool GlobalNamespace::OVRManager::_get__hasVrFocusCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__hasVrFocusCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hasVrFocusCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasVrFocusCached
void GlobalNamespace::OVRManager::_set__hasVrFocusCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__hasVrFocusCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hasVrFocusCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasVrFocus
bool GlobalNamespace::OVRManager::_get__hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__hasVrFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hasVrFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasVrFocus
void GlobalNamespace::OVRManager::_set__hasVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__hasVrFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hasVrFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hadVrFocus
bool GlobalNamespace::OVRManager::_get__hadVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__hadVrFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hadVrFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hadVrFocus
void GlobalNamespace::OVRManager::_set__hadVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__hadVrFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hadVrFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hadInputFocus
bool GlobalNamespace::OVRManager::_get__hadInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__hadInputFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hadInputFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hadInputFocus
void GlobalNamespace::OVRManager::_set__hadInputFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__hadInputFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hadInputFocus", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OCULUS_UNITY_NAME_STR
::Il2CppString* GlobalNamespace::OVRManager::_get_OCULUS_UNITY_NAME_STR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_OCULUS_UNITY_NAME_STR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "OCULUS_UNITY_NAME_STR"));
}
// Autogenerated static field setter
// Set static field: static public System.String OCULUS_UNITY_NAME_STR
void GlobalNamespace::OVRManager::_set_OCULUS_UNITY_NAME_STR(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_OCULUS_UNITY_NAME_STR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OCULUS_UNITY_NAME_STR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OPENVR_UNITY_NAME_STR
::Il2CppString* GlobalNamespace::OVRManager::_get_OPENVR_UNITY_NAME_STR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_OPENVR_UNITY_NAME_STR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "OPENVR_UNITY_NAME_STR"));
}
// Autogenerated static field setter
// Set static field: static public System.String OPENVR_UNITY_NAME_STR
void GlobalNamespace::OVRManager::_set_OPENVR_UNITY_NAME_STR(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_OPENVR_UNITY_NAME_STR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OPENVR_UNITY_NAME_STR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice loadedXRDevice
GlobalNamespace::OVRManager::XRDevice GlobalNamespace::OVRManager::_get_loadedXRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_loadedXRDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::XRDevice>("", "OVRManager", "loadedXRDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice loadedXRDevice
void GlobalNamespace::OVRManager::_set_loadedXRDevice(GlobalNamespace::OVRManager::XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_loadedXRDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "loadedXRDevice", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerLeft
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchRotationOffsetEulerLeft"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerLeft
void GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerLeft(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchRotationOffsetEulerLeft", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerRight
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchRotationOffsetEulerRight"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerRight
void GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerRight(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchRotationOffsetEulerRight", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetLeft
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchPositionOffsetLeft"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetLeft
void GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetLeft(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchPositionOffsetLeft", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetRight
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchPositionOffsetRight"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetRight
void GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetRight(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchPositionOffsetRight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isUserPresentCached
bool GlobalNamespace::OVRManager::_get__isUserPresentCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__isUserPresentCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isUserPresentCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isUserPresentCached
void GlobalNamespace::OVRManager::_set__isUserPresentCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__isUserPresentCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isUserPresentCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isUserPresent
bool GlobalNamespace::OVRManager::_get__isUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__isUserPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isUserPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isUserPresent
void GlobalNamespace::OVRManager::_set__isUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__isUserPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isUserPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _wasUserPresent
bool GlobalNamespace::OVRManager::_get__wasUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get__wasUserPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_wasUserPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _wasUserPresent
void GlobalNamespace::OVRManager::_set__wasUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set__wasUserPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_wasUserPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean prevAudioOutIdIsCached
bool GlobalNamespace::OVRManager::_get_prevAudioOutIdIsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_prevAudioOutIdIsCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "prevAudioOutIdIsCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean prevAudioOutIdIsCached
void GlobalNamespace::OVRManager::_set_prevAudioOutIdIsCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_prevAudioOutIdIsCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioOutIdIsCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean prevAudioInIdIsCached
bool GlobalNamespace::OVRManager::_get_prevAudioInIdIsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_prevAudioInIdIsCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "prevAudioInIdIsCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean prevAudioInIdIsCached
void GlobalNamespace::OVRManager::_set_prevAudioInIdIsCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_prevAudioInIdIsCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioInIdIsCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prevAudioOutId
::Il2CppString* GlobalNamespace::OVRManager::_get_prevAudioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_prevAudioOutId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "prevAudioOutId"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevAudioOutId
void GlobalNamespace::OVRManager::_set_prevAudioOutId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_prevAudioOutId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioOutId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prevAudioInId
::Il2CppString* GlobalNamespace::OVRManager::_get_prevAudioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_prevAudioInId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "prevAudioInId"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevAudioInId
void GlobalNamespace::OVRManager::_set_prevAudioInId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_prevAudioInId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioInId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean wasPositionTracked
bool GlobalNamespace::OVRManager::_get_wasPositionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_wasPositionTracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "wasPositionTracked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean wasPositionTracked
void GlobalNamespace::OVRManager::_set_wasPositionTracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_wasPositionTracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "wasPositionTracked", value));
}
// Autogenerated static field getter
// Get static field: static public System.String UnityAlphaOrBetaVersionWarningMessage
::Il2CppString* GlobalNamespace::OVRManager::_get_UnityAlphaOrBetaVersionWarningMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_UnityAlphaOrBetaVersionWarningMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "UnityAlphaOrBetaVersionWarningMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.String UnityAlphaOrBetaVersionWarningMessage
void GlobalNamespace::OVRManager::_set_UnityAlphaOrBetaVersionWarningMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_UnityAlphaOrBetaVersionWarningMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "UnityAlphaOrBetaVersionWarningMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean OVRManagerinitialized
bool GlobalNamespace::OVRManager::_get_OVRManagerinitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_OVRManagerinitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "OVRManagerinitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean OVRManagerinitialized
void GlobalNamespace::OVRManager::_set_OVRManagerinitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_OVRManagerinitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OVRManagerinitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean staticMixedRealityCaptureInitialized
bool GlobalNamespace::OVRManager::_get_staticMixedRealityCaptureInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_staticMixedRealityCaptureInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "staticMixedRealityCaptureInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean staticMixedRealityCaptureInitialized
void GlobalNamespace::OVRManager::_set_staticMixedRealityCaptureInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_staticMixedRealityCaptureInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticMixedRealityCaptureInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean staticPrevEnableMixedRealityCapture
bool GlobalNamespace::OVRManager::_get_staticPrevEnableMixedRealityCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_staticPrevEnableMixedRealityCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "staticPrevEnableMixedRealityCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean staticPrevEnableMixedRealityCapture
void GlobalNamespace::OVRManager::_set_staticPrevEnableMixedRealityCapture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_staticPrevEnableMixedRealityCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticPrevEnableMixedRealityCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMixedRealityCaptureSettings staticMrcSettings
GlobalNamespace::OVRMixedRealityCaptureSettings* GlobalNamespace::OVRManager::_get_staticMrcSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_get_staticMrcSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMixedRealityCaptureSettings*>("", "OVRManager", "staticMrcSettings"));
}
// Autogenerated static field setter
// Set static field: static public OVRMixedRealityCaptureSettings staticMrcSettings
void GlobalNamespace::OVRManager::_set_staticMrcSettings(GlobalNamespace::OVRMixedRealityCaptureSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::_set_staticMrcSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticMrcSettings", value));
}
// Autogenerated method: OVRManager.get_instance
GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_instance
void GlobalNamespace::OVRManager::set_instance(GlobalNamespace::OVRManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_display
GlobalNamespace::OVRDisplay* GlobalNamespace::OVRManager::get_display() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_display");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_display", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRDisplay*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_display
void GlobalNamespace::OVRManager::set_display(GlobalNamespace::OVRDisplay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_display");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_display", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_tracker
GlobalNamespace::OVRTracker* GlobalNamespace::OVRManager::get_tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_tracker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_tracker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRTracker*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_tracker
void GlobalNamespace::OVRManager::set_tracker(GlobalNamespace::OVRTracker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_tracker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_tracker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_boundary
GlobalNamespace::OVRBoundary* GlobalNamespace::OVRManager::get_boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_boundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_boundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRBoundary*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_boundary
void GlobalNamespace::OVRManager::set_boundary(GlobalNamespace::OVRBoundary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_boundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_boundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_profile
GlobalNamespace::OVRProfile* GlobalNamespace::OVRManager::get_profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_profile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_profile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRProfile*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.add_HMDAcquired
void GlobalNamespace::OVRManager::add_HMDAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_HMDAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDAcquired
void GlobalNamespace::OVRManager::remove_HMDAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_HMDAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDLost
void GlobalNamespace::OVRManager::add_HMDLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_HMDLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDLost
void GlobalNamespace::OVRManager::remove_HMDLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_HMDLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDMounted
void GlobalNamespace::OVRManager::add_HMDMounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_HMDMounted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDMounted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDMounted
void GlobalNamespace::OVRManager::remove_HMDMounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_HMDMounted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDMounted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDUnmounted
void GlobalNamespace::OVRManager::add_HMDUnmounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_HMDUnmounted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDUnmounted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDUnmounted
void GlobalNamespace::OVRManager::remove_HMDUnmounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_HMDUnmounted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDUnmounted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_VrFocusAcquired
void GlobalNamespace::OVRManager::add_VrFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_VrFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_VrFocusAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_VrFocusAcquired
void GlobalNamespace::OVRManager::remove_VrFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_VrFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_VrFocusAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_VrFocusLost
void GlobalNamespace::OVRManager::add_VrFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_VrFocusLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_VrFocusLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_VrFocusLost
void GlobalNamespace::OVRManager::remove_VrFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_VrFocusLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_VrFocusLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_InputFocusAcquired
void GlobalNamespace::OVRManager::add_InputFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_InputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_InputFocusAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_InputFocusAcquired
void GlobalNamespace::OVRManager::remove_InputFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_InputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_InputFocusAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_InputFocusLost
void GlobalNamespace::OVRManager::add_InputFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_InputFocusLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_InputFocusLost
void GlobalNamespace::OVRManager::remove_InputFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_InputFocusLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_AudioOutChanged
void GlobalNamespace::OVRManager::add_AudioOutChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_AudioOutChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_AudioOutChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_AudioOutChanged
void GlobalNamespace::OVRManager::remove_AudioOutChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_AudioOutChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_AudioOutChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_AudioInChanged
void GlobalNamespace::OVRManager::add_AudioInChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_AudioInChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_AudioInChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_AudioInChanged
void GlobalNamespace::OVRManager::remove_AudioInChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_AudioInChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_AudioInChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_TrackingAcquired
void GlobalNamespace::OVRManager::add_TrackingAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_TrackingAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_TrackingAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_TrackingAcquired
void GlobalNamespace::OVRManager::remove_TrackingAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_TrackingAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_TrackingAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_TrackingLost
void GlobalNamespace::OVRManager::add_TrackingLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_TrackingLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_TrackingLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_TrackingLost
void GlobalNamespace::OVRManager::remove_TrackingLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_TrackingLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_TrackingLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HSWDismissed
void GlobalNamespace::OVRManager::add_HSWDismissed(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::add_HSWDismissed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HSWDismissed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HSWDismissed
void GlobalNamespace::OVRManager::remove_HSWDismissed(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::remove_HSWDismissed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HSWDismissed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isHmdPresent
bool GlobalNamespace::OVRManager::get_isHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_isHmdPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_isHmdPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_isHmdPresent
void GlobalNamespace::OVRManager::set_isHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_isHmdPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_isHmdPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_audioOutId
::Il2CppString* GlobalNamespace::OVRManager::get_audioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_audioOutId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_audioOutId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_audioInId
::Il2CppString* GlobalNamespace::OVRManager::get_audioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_audioInId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_audioInId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_hasVrFocus
bool GlobalNamespace::OVRManager::get_hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_hasVrFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_hasVrFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_hasVrFocus
void GlobalNamespace::OVRManager::set_hasVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_hasVrFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_hasVrFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_hasInputFocus
bool GlobalNamespace::OVRManager::get_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_hasInputFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_hasInputFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_chromatic
bool GlobalNamespace::OVRManager::get_chromatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_chromatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_chromatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_chromatic
void GlobalNamespace::OVRManager::set_chromatic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_chromatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_chromatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_monoscopic
bool GlobalNamespace::OVRManager::get_monoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_monoscopic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_monoscopic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_monoscopic
void GlobalNamespace::OVRManager::set_monoscopic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_monoscopic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_monoscopic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.IsAdaptiveResSupportedByEngine
bool GlobalNamespace::OVRManager::IsAdaptiveResSupportedByEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::IsAdaptiveResSupportedByEngine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "IsAdaptiveResSupportedByEngine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_headPoseRelativeOffsetRotation
UnityEngine::Vector3 GlobalNamespace::OVRManager::get_headPoseRelativeOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_headPoseRelativeOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headPoseRelativeOffsetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_headPoseRelativeOffsetRotation
void GlobalNamespace::OVRManager::set_headPoseRelativeOffsetRotation(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_headPoseRelativeOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_headPoseRelativeOffsetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_headPoseRelativeOffsetTranslation
UnityEngine::Vector3 GlobalNamespace::OVRManager::get_headPoseRelativeOffsetTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_headPoseRelativeOffsetTranslation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headPoseRelativeOffsetTranslation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_headPoseRelativeOffsetTranslation
void GlobalNamespace::OVRManager::set_headPoseRelativeOffsetTranslation(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_headPoseRelativeOffsetTranslation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_headPoseRelativeOffsetTranslation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_instantiateMixedRealityBackgroundCameraGameObject
System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* GlobalNamespace::OVRManager::get_instantiateMixedRealityBackgroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_instantiateMixedRealityBackgroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_instantiateMixedRealityBackgroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_instantiateMixedRealityBackgroundCameraGameObject
void GlobalNamespace::OVRManager::set_instantiateMixedRealityBackgroundCameraGameObject(System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_instantiateMixedRealityBackgroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_instantiateMixedRealityBackgroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_instantiateMixedRealityForegroundCameraGameObject
System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* GlobalNamespace::OVRManager::get_instantiateMixedRealityForegroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_instantiateMixedRealityForegroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_instantiateMixedRealityForegroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_instantiateMixedRealityForegroundCameraGameObject
void GlobalNamespace::OVRManager::set_instantiateMixedRealityForegroundCameraGameObject(System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_instantiateMixedRealityForegroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_instantiateMixedRealityForegroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_vsyncCount
int GlobalNamespace::OVRManager::get_vsyncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_vsyncCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_vsyncCount
void GlobalNamespace::OVRManager::set_vsyncCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_vsyncCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_batteryLevel
float GlobalNamespace::OVRManager::get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_batteryLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_batteryTemperature
float GlobalNamespace::OVRManager::get_batteryTemperature() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_batteryTemperature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryTemperature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_batteryStatus
int GlobalNamespace::OVRManager::get_batteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_batteryStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_volumeLevel
float GlobalNamespace::OVRManager::get_volumeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_volumeLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_volumeLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_cpuLevel
int GlobalNamespace::OVRManager::get_cpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_cpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_cpuLevel
void GlobalNamespace::OVRManager::set_cpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_cpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_gpuLevel
int GlobalNamespace::OVRManager::get_gpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_gpuLevel
void GlobalNamespace::OVRManager::set_gpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_gpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isPowerSavingActive
bool GlobalNamespace::OVRManager::get_isPowerSavingActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_isPowerSavingActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_isPowerSavingActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_eyeTextureFormat
GlobalNamespace::OVRManager::EyeTextureFormat GlobalNamespace::OVRManager::get_eyeTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_eyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_eyeTextureFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::EyeTextureFormat, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_eyeTextureFormat
void GlobalNamespace::OVRManager::set_eyeTextureFormat(GlobalNamespace::OVRManager::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_eyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_eyeTextureFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_fixedFoveatedRenderingSupported
bool GlobalNamespace::OVRManager::get_fixedFoveatedRenderingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_fixedFoveatedRenderingSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_fixedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_fixedFoveatedRenderingLevel
GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::get_fixedFoveatedRenderingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_fixedFoveatedRenderingLevel
void GlobalNamespace::OVRManager::set_fixedFoveatedRenderingLevel(GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_useDynamicFixedFoveatedRendering
bool GlobalNamespace::OVRManager::get_useDynamicFixedFoveatedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_useDynamicFixedFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_useDynamicFixedFoveatedRendering
void GlobalNamespace::OVRManager::set_useDynamicFixedFoveatedRendering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_useDynamicFixedFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_tiledMultiResSupported
bool GlobalNamespace::OVRManager::get_tiledMultiResSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_tiledMultiResSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_tiledMultiResSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_tiledMultiResLevel
GlobalNamespace::OVRManager::TiledMultiResLevel GlobalNamespace::OVRManager::get_tiledMultiResLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::TiledMultiResLevel, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_tiledMultiResLevel
void GlobalNamespace::OVRManager::set_tiledMultiResLevel(GlobalNamespace::OVRManager::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_gpuUtilSupported
bool GlobalNamespace::OVRManager::get_gpuUtilSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_gpuUtilSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuUtilSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_gpuUtilLevel
float GlobalNamespace::OVRManager::get_gpuUtilLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_gpuUtilLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuUtilLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_systemHeadsetType
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::get_systemHeadsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_systemHeadsetType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_systemHeadsetType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::SystemHeadsetType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.SetColorScaleAndOffset
void GlobalNamespace::OVRManager::SetColorScaleAndOffset(UnityEngine::Vector4 colorScale, UnityEngine::Vector4 colorOffset, bool applyToAllLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(colorScale, colorOffset, applyToAllLayers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorScale, colorOffset, applyToAllLayers);
}
// Autogenerated method: OVRManager.SetOpenVRLocalPose
void GlobalNamespace::OVRManager::SetOpenVRLocalPose(UnityEngine::Vector3 leftPos, UnityEngine::Vector3 rightPos, UnityEngine::Quaternion leftRot, UnityEngine::Quaternion rightRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SetOpenVRLocalPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "SetOpenVRLocalPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leftPos, rightPos, leftRot, rightRot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leftPos, rightPos, leftRot, rightRot);
}
// Autogenerated method: OVRManager.GetOpenVRControllerOffset
GlobalNamespace::OVRPose GlobalNamespace::OVRManager::GetOpenVRControllerOffset(UnityEngine::XR::XRNode hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::GetOpenVRControllerOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "GetOpenVRControllerOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hand)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hand);
}
// Autogenerated method: OVRManager.get_trackingOriginType
GlobalNamespace::OVRManager::TrackingOrigin GlobalNamespace::OVRManager::get_trackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_trackingOriginType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackingOriginType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::TrackingOrigin, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_trackingOriginType
void GlobalNamespace::OVRManager::set_trackingOriginType(GlobalNamespace::OVRManager::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_trackingOriginType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_trackingOriginType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isSupportedPlatform
bool GlobalNamespace::OVRManager::get_isSupportedPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_isSupportedPlatform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isSupportedPlatform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_isSupportedPlatform
void GlobalNamespace::OVRManager::set_isSupportedPlatform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_isSupportedPlatform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isSupportedPlatform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isUserPresent
bool GlobalNamespace::OVRManager::get_isUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_isUserPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isUserPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_isUserPresent
void GlobalNamespace::OVRManager::set_isUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::set_isUserPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isUserPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_utilitiesVersion
System::Version* GlobalNamespace::OVRManager::get_utilitiesVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_utilitiesVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_utilitiesVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_pluginVersion
System::Version* GlobalNamespace::OVRManager::get_pluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_pluginVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_pluginVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_sdkVersion
System::Version* GlobalNamespace::OVRManager::get_sdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::get_sdkVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_sdkVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.MixedRealityEnabledFromCmd
bool GlobalNamespace::OVRManager::MixedRealityEnabledFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::MixedRealityEnabledFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "MixedRealityEnabledFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.UseDirectCompositionFromCmd
bool GlobalNamespace::OVRManager::UseDirectCompositionFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::UseDirectCompositionFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "UseDirectCompositionFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.UseExternalCompositionFromCmd
bool GlobalNamespace::OVRManager::UseExternalCompositionFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::UseExternalCompositionFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "UseExternalCompositionFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.CreateMixedRealityCaptureConfigurationFileFromCmd
bool GlobalNamespace::OVRManager::CreateMixedRealityCaptureConfigurationFileFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CreateMixedRealityCaptureConfigurationFileFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "CreateMixedRealityCaptureConfigurationFileFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.LoadMixedRealityCaptureConfigurationFileFromCmd
bool GlobalNamespace::OVRManager::LoadMixedRealityCaptureConfigurationFileFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::LoadMixedRealityCaptureConfigurationFileFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "LoadMixedRealityCaptureConfigurationFileFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.IsUnityAlphaOrBetaVersion
bool GlobalNamespace::OVRManager::IsUnityAlphaOrBetaVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::IsUnityAlphaOrBetaVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "IsUnityAlphaOrBetaVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.InitOVRManager
void GlobalNamespace::OVRManager::InitOVRManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::InitOVRManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitOVRManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.Awake
void GlobalNamespace::OVRManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.SetCurrentXRDevice
void GlobalNamespace::OVRManager::SetCurrentXRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SetCurrentXRDevice");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCurrentXRDevice", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.Initialize
void GlobalNamespace::OVRManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.Update
void GlobalNamespace::OVRManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.FindMainCamera
UnityEngine::Camera* GlobalNamespace::OVRManager::FindMainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FindMainCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindMainCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OnDisable
void GlobalNamespace::OVRManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.LateUpdate
void GlobalNamespace::OVRManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.FixedUpdate
void GlobalNamespace::OVRManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OnDestroy
void GlobalNamespace::OVRManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OnApplicationPause
void GlobalNamespace::OVRManager::OnApplicationPause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: OVRManager.OnApplicationFocus
void GlobalNamespace::OVRManager::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(focus)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: OVRManager.OnApplicationQuit
void GlobalNamespace::OVRManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.ReturnToLauncher
void GlobalNamespace::OVRManager::ReturnToLauncher() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::ReturnToLauncher");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReturnToLauncher", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.PlatformUIConfirmQuit
void GlobalNamespace::OVRManager::PlatformUIConfirmQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::PlatformUIConfirmQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "PlatformUIConfirmQuit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.StaticInitializeMixedRealityCapture
void GlobalNamespace::OVRManager::StaticInitializeMixedRealityCapture(GlobalNamespace::OVRManager* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::StaticInitializeMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "StaticInitializeMixedRealityCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: OVRManager.StaticUpdateMixedRealityCapture
void GlobalNamespace::OVRManager::StaticUpdateMixedRealityCapture(GlobalNamespace::OVRManager* instance, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityBackgroundCameraGameObject, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityForegroundCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::StaticUpdateMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "StaticUpdateMixedRealityCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, instance, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject);
}
// Autogenerated method: OVRManager.StaticShutdownMixedRealityCapture
void GlobalNamespace::OVRManager::StaticShutdownMixedRealityCapture(GlobalNamespace::OVRManager* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::StaticShutdownMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "StaticShutdownMixedRealityCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: OVRManager..cctor
void GlobalNamespace::OVRManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin EyeLevel
GlobalNamespace::OVRManager::TrackingOrigin GlobalNamespace::OVRManager::TrackingOrigin::_get_EyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TrackingOrigin::_get_EyeLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::TrackingOrigin>("", "OVRManager/TrackingOrigin", "EyeLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin EyeLevel
void GlobalNamespace::OVRManager::TrackingOrigin::_set_EyeLevel(GlobalNamespace::OVRManager::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TrackingOrigin::_set_EyeLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "EyeLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin FloorLevel
GlobalNamespace::OVRManager::TrackingOrigin GlobalNamespace::OVRManager::TrackingOrigin::_get_FloorLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TrackingOrigin::_get_FloorLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::TrackingOrigin>("", "OVRManager/TrackingOrigin", "FloorLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin FloorLevel
void GlobalNamespace::OVRManager::TrackingOrigin::_set_FloorLevel(GlobalNamespace::OVRManager::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TrackingOrigin::_set_FloorLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "FloorLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin Stage
GlobalNamespace::OVRManager::TrackingOrigin GlobalNamespace::OVRManager::TrackingOrigin::_get_Stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TrackingOrigin::_get_Stage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::TrackingOrigin>("", "OVRManager/TrackingOrigin", "Stage"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin Stage
void GlobalNamespace::OVRManager::TrackingOrigin::_set_Stage(GlobalNamespace::OVRManager::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TrackingOrigin::_set_Stage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "Stage", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace/OVRManager_EyeTextureFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat Default
GlobalNamespace::OVRManager::EyeTextureFormat GlobalNamespace::OVRManager::EyeTextureFormat::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::EyeTextureFormat::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat Default
void GlobalNamespace::OVRManager::EyeTextureFormat::_set_Default(GlobalNamespace::OVRManager::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::EyeTextureFormat::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
GlobalNamespace::OVRManager::EyeTextureFormat GlobalNamespace::OVRManager::EyeTextureFormat::_get_R16G16B16A16_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::EyeTextureFormat::_get_R16G16B16A16_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
void GlobalNamespace::OVRManager::EyeTextureFormat::_set_R16G16B16A16_FP(GlobalNamespace::OVRManager::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::EyeTextureFormat::_set_R16G16B16A16_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
GlobalNamespace::OVRManager::EyeTextureFormat GlobalNamespace::OVRManager::EyeTextureFormat::_get_R11G11B10_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::EyeTextureFormat::_get_R11G11B10_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R11G11B10_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
void GlobalNamespace::OVRManager::EyeTextureFormat::_set_R11G11B10_FP(GlobalNamespace::OVRManager::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::EyeTextureFormat::_set_R11G11B10_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R11G11B10_FP", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FixedFoveatedRenderingLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Off
GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Off
void GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_Off(GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Low
GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Low
void GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_Low(GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
void GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_Medium(GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel High
GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel High
void GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_High(GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_HighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_get_HighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
void GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_HighTop(GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel::_set_HighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace/OVRManager_TiledMultiResLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel Off
GlobalNamespace::OVRManager::TiledMultiResLevel GlobalNamespace::OVRManager::TiledMultiResLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel Off
void GlobalNamespace::OVRManager::TiledMultiResLevel::_set_Off(GlobalNamespace::OVRManager::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSLow
GlobalNamespace::OVRManager::TiledMultiResLevel GlobalNamespace::OVRManager::TiledMultiResLevel::_get_LMSLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_get_LMSLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSLow"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSLow
void GlobalNamespace::OVRManager::TiledMultiResLevel::_set_LMSLow(GlobalNamespace::OVRManager::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_set_LMSLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSMedium
GlobalNamespace::OVRManager::TiledMultiResLevel GlobalNamespace::OVRManager::TiledMultiResLevel::_get_LMSMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_get_LMSMedium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSMedium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSMedium
void GlobalNamespace::OVRManager::TiledMultiResLevel::_set_LMSMedium(GlobalNamespace::OVRManager::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_set_LMSMedium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSMedium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHigh
GlobalNamespace::OVRManager::TiledMultiResLevel GlobalNamespace::OVRManager::TiledMultiResLevel::_get_LMSHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_get_LMSHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHigh
void GlobalNamespace::OVRManager::TiledMultiResLevel::_set_LMSHigh(GlobalNamespace::OVRManager::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_set_LMSHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHigh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHighTop
GlobalNamespace::OVRManager::TiledMultiResLevel GlobalNamespace::OVRManager::TiledMultiResLevel::_get_LMSHighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_get_LMSHighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHighTop
void GlobalNamespace::OVRManager::TiledMultiResLevel::_set_LMSHighTop(GlobalNamespace::OVRManager::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::TiledMultiResLevel::_set_LMSHighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHighTop", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/SystemHeadsetType
#include "GlobalNamespace/OVRManager_SystemHeadsetType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType None
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType None
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_None(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Oculus_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Oculus_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Oculus_Quest(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Oculus_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Oculus_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Oculus_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Oculus_Quest_2(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Oculus_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_10
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_10"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_10
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_10(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_10", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_11
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_11"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_11
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_11(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_11", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_12
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_12"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_12
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_12(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_12", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_13
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_13"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_13
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_13(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_13", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_14
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Placeholder_14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_14"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_14
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_14(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Placeholder_14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_14", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK1
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_DK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_DK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK1
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_DK1(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_DK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK2
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_DK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_DK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK2
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_DK2(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_DK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CV1
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CV1
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_CV1(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CB
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_CB() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_CB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CB
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_CB(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_CB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_S
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_S
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_S(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_Oculus_Link_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_Oculus_Link_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_Oculus_Link_Quest(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_Oculus_Link_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4102
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4102() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4102");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4102"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4102
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4102(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4102");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4102", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4103
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4103() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4103");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4103"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4103
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4103(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4103");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4103", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4104
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4104() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4104");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4104"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4104
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4104(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4104");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4104", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4105() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4105");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4105(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4105");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4106() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4106");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4106(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4106");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
GlobalNamespace::OVRManager::SystemHeadsetType GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4107() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_get_PC_Placeholder_4107");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
void GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4107(GlobalNamespace::OVRManager::SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::SystemHeadsetType::_set_PC_Placeholder_4107");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/XRDevice
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Unknown
GlobalNamespace::OVRManager::XRDevice GlobalNamespace::OVRManager::XRDevice::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::XRDevice::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::XRDevice>("", "OVRManager/XRDevice", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Unknown
void GlobalNamespace::OVRManager::XRDevice::_set_Unknown(GlobalNamespace::OVRManager::XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::XRDevice::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Oculus
GlobalNamespace::OVRManager::XRDevice GlobalNamespace::OVRManager::XRDevice::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::XRDevice::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::XRDevice>("", "OVRManager/XRDevice", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Oculus
void GlobalNamespace::OVRManager::XRDevice::_set_Oculus(GlobalNamespace::OVRManager::XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::XRDevice::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice OpenVR
GlobalNamespace::OVRManager::XRDevice GlobalNamespace::OVRManager::XRDevice::_get_OpenVR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::XRDevice::_get_OpenVR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::XRDevice>("", "OVRManager/XRDevice", "OpenVR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice OpenVR
void GlobalNamespace::OVRManager::XRDevice::_set_OpenVR(GlobalNamespace::OVRManager::XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::XRDevice::_set_OpenVR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "OpenVR", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod External
GlobalNamespace::OVRManager::CompositionMethod GlobalNamespace::OVRManager::CompositionMethod::_get_External() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CompositionMethod::_get_External");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::CompositionMethod>("", "OVRManager/CompositionMethod", "External"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod External
void GlobalNamespace::OVRManager::CompositionMethod::_set_External(GlobalNamespace::OVRManager::CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CompositionMethod::_set_External");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "External", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod Direct
GlobalNamespace::OVRManager::CompositionMethod GlobalNamespace::OVRManager::CompositionMethod::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CompositionMethod::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::CompositionMethod>("", "OVRManager/CompositionMethod", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod Direct
void GlobalNamespace::OVRManager::CompositionMethod::_set_Direct(GlobalNamespace::OVRManager::CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CompositionMethod::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "Direct", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera0
GlobalNamespace::OVRManager::CameraDevice GlobalNamespace::OVRManager::CameraDevice::_get_WebCamera0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CameraDevice::_get_WebCamera0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::CameraDevice>("", "OVRManager/CameraDevice", "WebCamera0"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera0
void GlobalNamespace::OVRManager::CameraDevice::_set_WebCamera0(GlobalNamespace::OVRManager::CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CameraDevice::_set_WebCamera0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera1
GlobalNamespace::OVRManager::CameraDevice GlobalNamespace::OVRManager::CameraDevice::_get_WebCamera1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CameraDevice::_get_WebCamera1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::CameraDevice>("", "OVRManager/CameraDevice", "WebCamera1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera1
void GlobalNamespace::OVRManager::CameraDevice::_set_WebCamera1(GlobalNamespace::OVRManager::CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CameraDevice::_set_WebCamera1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice ZEDCamera
GlobalNamespace::OVRManager::CameraDevice GlobalNamespace::OVRManager::CameraDevice::_get_ZEDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CameraDevice::_get_ZEDCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::CameraDevice>("", "OVRManager/CameraDevice", "ZEDCamera"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice ZEDCamera
void GlobalNamespace::OVRManager::CameraDevice::_set_ZEDCamera(GlobalNamespace::OVRManager::CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::CameraDevice::_set_ZEDCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "ZEDCamera", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/DepthQuality
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Low
GlobalNamespace::OVRManager::DepthQuality GlobalNamespace::OVRManager::DepthQuality::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::DepthQuality::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::DepthQuality>("", "OVRManager/DepthQuality", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Low
void GlobalNamespace::OVRManager::DepthQuality::_set_Low(GlobalNamespace::OVRManager::DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::DepthQuality::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Medium
GlobalNamespace::OVRManager::DepthQuality GlobalNamespace::OVRManager::DepthQuality::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::DepthQuality::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::DepthQuality>("", "OVRManager/DepthQuality", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Medium
void GlobalNamespace::OVRManager::DepthQuality::_set_Medium(GlobalNamespace::OVRManager::DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::DepthQuality::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality High
GlobalNamespace::OVRManager::DepthQuality GlobalNamespace::OVRManager::DepthQuality::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::DepthQuality::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::DepthQuality>("", "OVRManager/DepthQuality", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality High
void GlobalNamespace::OVRManager::DepthQuality::_set_High(GlobalNamespace::OVRManager::DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::DepthQuality::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "High", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType Off
GlobalNamespace::OVRManager::VirtualGreenScreenType GlobalNamespace::OVRManager::VirtualGreenScreenType::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::VirtualGreenScreenType::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType Off
void GlobalNamespace::OVRManager::VirtualGreenScreenType::_set_Off(GlobalNamespace::OVRManager::VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::VirtualGreenScreenType::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
GlobalNamespace::OVRManager::VirtualGreenScreenType GlobalNamespace::OVRManager::VirtualGreenScreenType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::VirtualGreenScreenType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
void GlobalNamespace::OVRManager::VirtualGreenScreenType::_set_OuterBoundary(GlobalNamespace::OVRManager::VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::VirtualGreenScreenType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType PlayArea
GlobalNamespace::OVRManager::VirtualGreenScreenType GlobalNamespace::OVRManager::VirtualGreenScreenType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::VirtualGreenScreenType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType PlayArea
void GlobalNamespace::OVRManager::VirtualGreenScreenType::_set_PlayArea(GlobalNamespace::OVRManager::VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::VirtualGreenScreenType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "PlayArea", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcActivationMode
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Automatic
GlobalNamespace::OVRManager::MrcActivationMode GlobalNamespace::OVRManager::MrcActivationMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::MrcActivationMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::MrcActivationMode>("", "OVRManager/MrcActivationMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Automatic
void GlobalNamespace::OVRManager::MrcActivationMode::_set_Automatic(GlobalNamespace::OVRManager::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::MrcActivationMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Disabled
GlobalNamespace::OVRManager::MrcActivationMode GlobalNamespace::OVRManager::MrcActivationMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::MrcActivationMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::MrcActivationMode>("", "OVRManager/MrcActivationMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Disabled
void GlobalNamespace::OVRManager::MrcActivationMode::_set_Disabled(GlobalNamespace::OVRManager::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::MrcActivationMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Disabled", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/<>c
#include "GlobalNamespace/OVRManager_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRManager/<>c <>9
GlobalNamespace::OVRManager::$$c* GlobalNamespace::OVRManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::$$c*>("", "OVRManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRManager/<>c <>9
void GlobalNamespace::OVRManager::$$c::_set_$$9(GlobalNamespace::OVRManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Camera> <>9__245_0
System::Comparison_1<UnityEngine::Camera*>* GlobalNamespace::OVRManager::$$c::_get_$$9__245_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::$$c::_get_$$9__245_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Camera*>*>("", "OVRManager/<>c", "<>9__245_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Camera> <>9__245_0
void GlobalNamespace::OVRManager::$$c::_set_$$9__245_0(System::Comparison_1<UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::$$c::_set_$$9__245_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__245_0", value)));
}
// Autogenerated method: OVRManager/<>c..cctor
void GlobalNamespace::OVRManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager/<>c.<FindMainCamera>b__245_0
int GlobalNamespace::OVRManager::$$c::$FindMainCamera$b__245_0(UnityEngine::Camera* c0, UnityEngine::Camera* c1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager::$$c::<FindMainCamera>b__245_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindMainCamera>b__245_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c0, c1))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, c0, c1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMixedReality
#include "GlobalNamespace/OVRMixedReality.hpp"
// Including type: OVRComposition
#include "GlobalNamespace/OVRComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean useFakeExternalCamera
bool GlobalNamespace::OVRMixedReality::_get_useFakeExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_get_useFakeExternalCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRMixedReality", "useFakeExternalCamera"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean useFakeExternalCamera
void GlobalNamespace::OVRMixedReality::_set_useFakeExternalCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_set_useFakeExternalCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "useFakeExternalCamera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 fakeCameraFloorLevelPosition
UnityEngine::Vector3 GlobalNamespace::OVRMixedReality::_get_fakeCameraFloorLevelPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_get_fakeCameraFloorLevelPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRMixedReality", "fakeCameraFloorLevelPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 fakeCameraFloorLevelPosition
void GlobalNamespace::OVRMixedReality::_set_fakeCameraFloorLevelPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_set_fakeCameraFloorLevelPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraFloorLevelPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 fakeCameraEyeLevelPosition
UnityEngine::Vector3 GlobalNamespace::OVRMixedReality::_get_fakeCameraEyeLevelPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_get_fakeCameraEyeLevelPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRMixedReality", "fakeCameraEyeLevelPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 fakeCameraEyeLevelPosition
void GlobalNamespace::OVRMixedReality::_set_fakeCameraEyeLevelPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_set_fakeCameraEyeLevelPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraEyeLevelPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Quaternion fakeCameraRotation
UnityEngine::Quaternion GlobalNamespace::OVRMixedReality::_get_fakeCameraRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_get_fakeCameraRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Quaternion>("", "OVRMixedReality", "fakeCameraRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Quaternion fakeCameraRotation
void GlobalNamespace::OVRMixedReality::_set_fakeCameraRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_set_fakeCameraRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraRotation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single fakeCameraFov
float GlobalNamespace::OVRMixedReality::_get_fakeCameraFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_get_fakeCameraFov");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRMixedReality", "fakeCameraFov"));
}
// Autogenerated static field setter
// Set static field: static public System.Single fakeCameraFov
void GlobalNamespace::OVRMixedReality::_set_fakeCameraFov(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_set_fakeCameraFov");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraFov", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single fakeCameraAspect
float GlobalNamespace::OVRMixedReality::_get_fakeCameraAspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_get_fakeCameraAspect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRMixedReality", "fakeCameraAspect"));
}
// Autogenerated static field setter
// Set static field: static public System.Single fakeCameraAspect
void GlobalNamespace::OVRMixedReality::_set_fakeCameraAspect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_set_fakeCameraAspect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraAspect", value));
}
// Autogenerated static field getter
// Get static field: static public OVRComposition currentComposition
GlobalNamespace::OVRComposition* GlobalNamespace::OVRMixedReality::_get_currentComposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_get_currentComposition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRComposition*>("", "OVRMixedReality", "currentComposition"));
}
// Autogenerated static field setter
// Set static field: static public OVRComposition currentComposition
void GlobalNamespace::OVRMixedReality::_set_currentComposition(GlobalNamespace::OVRComposition* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::_set_currentComposition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "currentComposition", value));
}
// Autogenerated method: OVRMixedReality.Update
void GlobalNamespace::OVRMixedReality::Update(UnityEngine::GameObject* parentObject, UnityEngine::Camera* mainCamera, GlobalNamespace::OVRManager::CompositionMethod compositionMethod, bool useDynamicLighting, GlobalNamespace::OVRManager::CameraDevice cameraDevice, GlobalNamespace::OVRManager::DepthQuality depthQuality, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityBackgroundCameraGameObject, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityForegroundCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRMixedReality", "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentObject, mainCamera, compositionMethod, useDynamicLighting, cameraDevice, depthQuality, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentObject, mainCamera, compositionMethod, useDynamicLighting, cameraDevice, depthQuality, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject);
}
// Autogenerated method: OVRMixedReality.Cleanup
void GlobalNamespace::OVRMixedReality::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::Cleanup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRMixedReality", "Cleanup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRMixedReality.RecenterPose
void GlobalNamespace::OVRMixedReality::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::RecenterPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRMixedReality", "RecenterPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRMixedReality..cctor
void GlobalNamespace::OVRMixedReality::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedReality::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRMixedReality", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVROnCompleteListener
#include "GlobalNamespace/OVROnCompleteListener.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVROnCompleteListener.onSuccess
void GlobalNamespace::OVROnCompleteListener::onSuccess_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROnCompleteListener::onSuccess_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "onSuccess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROnCompleteListener.onFailure
void GlobalNamespace::OVROnCompleteListener::onFailure_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROnCompleteListener::onFailure_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "onFailure", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: OVROverlay/ExternalSurfaceObjectCreated
#include "GlobalNamespace/OVROverlay_ExternalSurfaceObjectCreated.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 maxInstances
int GlobalNamespace::OVROverlay::_get_maxInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::_get_maxInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVROverlay", "maxInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 maxInstances
void GlobalNamespace::OVROverlay::_set_maxInstances(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::_set_maxInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay", "maxInstances", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay[] instances
::Array<GlobalNamespace::OVROverlay*>* GlobalNamespace::OVROverlay::_get_instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::_get_instances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<GlobalNamespace::OVROverlay*>*>("", "OVROverlay", "instances"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay[] instances
void GlobalNamespace::OVROverlay::_set_instances(::Array<GlobalNamespace::OVROverlay*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::_set_instances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay", "instances", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material tex2DMaterial
UnityEngine::Material* GlobalNamespace::OVROverlay::_get_tex2DMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::_get_tex2DMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "OVROverlay", "tex2DMaterial"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material tex2DMaterial
void GlobalNamespace::OVROverlay::_set_tex2DMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::_set_tex2DMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay", "tex2DMaterial", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material cubeMaterial
UnityEngine::Material* GlobalNamespace::OVROverlay::_get_cubeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::_get_cubeMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "OVROverlay", "cubeMaterial"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material cubeMaterial
void GlobalNamespace::OVROverlay::_set_cubeMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::_set_cubeMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay", "cubeMaterial", value));
}
// Autogenerated method: OVROverlay.get_previewInEditor
bool GlobalNamespace::OVROverlay::get_previewInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::get_previewInEditor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewInEditor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.set_previewInEditor
void GlobalNamespace::OVROverlay::set_previewInEditor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::set_previewInEditor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_previewInEditor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVROverlay.OverrideOverlayTextureInfo
void GlobalNamespace::OVROverlay::OverrideOverlayTextureInfo(UnityEngine::Texture* srcTexture, System::IntPtr nativePtr, UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::OverrideOverlayTextureInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OverrideOverlayTextureInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(srcTexture, nativePtr, node)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, srcTexture, nativePtr, node);
}
// Autogenerated method: OVROverlay.get_layout
GlobalNamespace::OVRPlugin::LayerLayout GlobalNamespace::OVROverlay::get_layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::get_layout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_layout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::LayerLayout, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.get_texturesPerStage
int GlobalNamespace::OVROverlay::get_texturesPerStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::get_texturesPerStage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_texturesPerStage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.CreateLayer
bool GlobalNamespace::OVROverlay::CreateLayer(int mipLevels, int sampleCount, GlobalNamespace::OVRPlugin::EyeTextureFormat etFormat, int flags, GlobalNamespace::OVRPlugin::Sizei size, GlobalNamespace::OVRPlugin::OverlayShape shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::CreateLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mipLevels, sampleCount, etFormat, flags, size, shape)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, mipLevels, sampleCount, etFormat, flags, size, shape);
}
// Autogenerated method: OVROverlay.CreateLayerTextures
bool GlobalNamespace::OVROverlay::CreateLayerTextures(bool useMipmaps, GlobalNamespace::OVRPlugin::Sizei size, bool isHdr) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::CreateLayerTextures");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateLayerTextures", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(useMipmaps, size, isHdr)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, useMipmaps, size, isHdr);
}
// Autogenerated method: OVROverlay.DestroyLayerTextures
void GlobalNamespace::OVROverlay::DestroyLayerTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::DestroyLayerTextures");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DestroyLayerTextures", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.DestroyLayer
void GlobalNamespace::OVROverlay::DestroyLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::DestroyLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DestroyLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.SetSrcDestRects
void GlobalNamespace::OVROverlay::SetSrcDestRects(UnityEngine::Rect srcLeft, UnityEngine::Rect srcRight, UnityEngine::Rect destLeft, UnityEngine::Rect destRight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::SetSrcDestRects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSrcDestRects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(srcLeft, srcRight, destLeft, destRight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, srcLeft, srcRight, destLeft, destRight);
}
// Autogenerated method: OVROverlay.UpdateTextureRectMatrix
void GlobalNamespace::OVROverlay::UpdateTextureRectMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::UpdateTextureRectMatrix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateTextureRectMatrix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.SetPerLayerColorScaleAndOffset
void GlobalNamespace::OVROverlay::SetPerLayerColorScaleAndOffset(UnityEngine::Vector4 scale, UnityEngine::Vector4 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::SetPerLayerColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPerLayerColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scale, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scale, offset);
}
// Autogenerated method: OVROverlay.LatchLayerTextures
bool GlobalNamespace::OVROverlay::LatchLayerTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::LatchLayerTextures");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LatchLayerTextures", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.GetCurrentLayerDesc
GlobalNamespace::OVRPlugin::LayerDesc GlobalNamespace::OVROverlay::GetCurrentLayerDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::GetCurrentLayerDesc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCurrentLayerDesc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::LayerDesc, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.GetBlitRect
UnityEngine::Rect GlobalNamespace::OVROverlay::GetBlitRect(int eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::GetBlitRect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBlitRect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eyeId)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method, eyeId);
}
// Autogenerated method: OVROverlay.BlitSubImage
void GlobalNamespace::OVROverlay::BlitSubImage(UnityEngine::Texture* src, UnityEngine::RenderTexture* dst, UnityEngine::Material* mat, UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::BlitSubImage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BlitSubImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, dst, mat, rect)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dst, mat, rect);
}
// Autogenerated method: OVROverlay.PopulateLayer
bool GlobalNamespace::OVROverlay::PopulateLayer(int mipLevels, bool isHdr, GlobalNamespace::OVRPlugin::Sizei size, int sampleCount, int stage) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::PopulateLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PopulateLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mipLevels, isHdr, size, sampleCount, stage)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, mipLevels, isHdr, size, sampleCount, stage);
}
// Autogenerated method: OVROverlay.SubmitLayer
bool GlobalNamespace::OVROverlay::SubmitLayer(bool overlay, bool headLocked, bool noDepthBufferTesting, GlobalNamespace::OVRPose pose, UnityEngine::Vector3 scale, int frameIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::SubmitLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SubmitLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(overlay, headLocked, noDepthBufferTesting, pose, scale, frameIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, overlay, headLocked, noDepthBufferTesting, pose, scale, frameIndex);
}
// Autogenerated method: OVROverlay.SetupEditorPreview
void GlobalNamespace::OVROverlay::SetupEditorPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::SetupEditorPreview");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupEditorPreview", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.Awake
void GlobalNamespace::OVROverlay::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.get_OpenVROverlayKey
::Il2CppString* GlobalNamespace::OVROverlay::get_OpenVROverlayKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::get_OpenVROverlayKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVROverlay", "get_OpenVROverlayKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVROverlay.OnEnable
void GlobalNamespace::OVROverlay::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.InitOVROverlay
void GlobalNamespace::OVROverlay::InitOVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::InitOVROverlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitOVROverlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.OnDisable
void GlobalNamespace::OVROverlay::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.OnDestroy
void GlobalNamespace::OVROverlay::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.ComputeSubmit
bool GlobalNamespace::OVROverlay::ComputeSubmit(GlobalNamespace::OVRPose& pose, UnityEngine::Vector3& scale, bool& overlay, bool& headLocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::ComputeSubmit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeSubmit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pose, scale, overlay, headLocked)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pose, scale, overlay, headLocked);
}
// Autogenerated method: OVROverlay.OpenVROverlayUpdate
void GlobalNamespace::OVROverlay::OpenVROverlayUpdate(UnityEngine::Vector3 scale, GlobalNamespace::OVRPose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::OpenVROverlayUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenVROverlayUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scale, pose)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scale, pose);
}
// Autogenerated method: OVROverlay.LateUpdate
void GlobalNamespace::OVROverlay::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay..cctor
void GlobalNamespace::OVROverlay::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVROverlay::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVROverlay", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
