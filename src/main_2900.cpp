// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarTweenController/<DisappearAnimation>d__58
#include "GlobalNamespace/AvatarTweenController_-DisappearAnimation-d__58.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AvatarTweenController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarTweenController*& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarTweenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.IDisposable.Dispose
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.MoveNext
bool GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.IEnumerator.Reset
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: AvatarVisualController/HighlighterDelegate
#include "GlobalNamespace/AvatarVisualController_HighlighterDelegate.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter.hpp"
// Including type: AvatarPropertyBlockColorSetter
#include "GlobalNamespace/AvatarPropertyBlockColorSetter.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _headTopMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__headTopMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__headTopMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _glassesMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__glassesMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__glassesMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glassesMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _facialHairMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__facialHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__facialHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facialHairMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _leftHandsHairMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__leftHandsHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__leftHandsHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandsHairMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _rightHandsHairMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__rightHandsHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__rightHandsHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandsHairMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _eyesSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::AvatarVisualController::dyn__eyesSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__eyesSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyesSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _mouthSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::AvatarVisualController::dyn__mouthSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__mouthSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouthSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _bodyMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__bodyMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__bodyMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _headTopPropertyBlockColorSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__headTopPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__headTopPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _glassesPropertyBlockColorSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__glassesPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__glassesPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glassesPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _facialHairPropertyBlockColorSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__facialHairPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__facialHairPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facialHairPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _skinPropertyBlockColorSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__skinPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__skinPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _clothesPropertyBlockSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__clothesPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__clothesPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesPropertyBlockSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _leftHandPropertyBlockSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__leftHandPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__leftHandPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandPropertyBlockSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _rightHandPropertyBlockSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__rightHandPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__rightHandPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandPropertyBlockSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartsModel _avatarPartsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartsModel*& GlobalNamespace::AvatarVisualController::dyn__avatarPartsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__avatarPartsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<EditAvatarViewController/AvatarEditPart,AvatarVisualController/HighlighterDelegate> _avatarPartHighlightSetters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EditAvatarViewController::AvatarEditPart, ::GlobalNamespace::AvatarVisualController::HighlighterDelegate*>*& GlobalNamespace::AvatarVisualController::dyn__avatarPartHighlightSetters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__avatarPartHighlightSetters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartHighlightSetters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EditAvatarViewController::AvatarEditPart, ::GlobalNamespace::AvatarVisualController::HighlighterDelegate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarVisualController::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarData _avatarData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarData*& GlobalNamespace::AvatarVisualController::dyn__avatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__avatarData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController/HighlighterDelegate _currentHighlighter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarVisualController::HighlighterDelegate*& GlobalNamespace::AvatarVisualController::dyn__currentHighlighter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__currentHighlighter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentHighlighter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarVisualController::HighlighterDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarVisualController.get_lightColor
::UnityEngine::Color GlobalNamespace::AvatarVisualController::get_lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::get_lightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarVisualController.Awake
void GlobalNamespace::AvatarVisualController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarVisualController.UpdateAvatarVisual
void GlobalNamespace::AvatarVisualController::UpdateAvatarVisual(::GlobalNamespace::AvatarData* avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::UpdateAvatarVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarData);
}
// Autogenerated method: AvatarVisualController.SetLightColor
void GlobalNamespace::AvatarVisualController::SetLightColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::SetLightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: AvatarVisualController.UpdateAvatarColors
void GlobalNamespace::AvatarVisualController::UpdateAvatarColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::UpdateAvatarColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarVisualController.HighlightEditedPart
void GlobalNamespace::AvatarVisualController::HighlightEditedPart(::GlobalNamespace::EditAvatarViewController::AvatarEditPart editPart, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::HighlightEditedPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightEditedPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editPart), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editPart, uvSegment);
}
// Autogenerated method: AvatarVisualController.DisableEditedPartHighlight
void GlobalNamespace::AvatarVisualController::DisableEditedPartHighlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::DisableEditedPartHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableEditedPartHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarVisualController.SetHandsHighlight
void GlobalNamespace::AvatarVisualController::SetHandsHighlight(bool highlighted, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::SetHandsHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandsHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, highlighted, uvSegment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarVisualController/HighlighterDelegate
#include "GlobalNamespace/AvatarVisualController_HighlighterDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarVisualController/HighlighterDelegate.Invoke
void GlobalNamespace::AvatarVisualController::HighlighterDelegate::Invoke(bool highlighted, int uvSegmentNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::HighlighterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegmentNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, highlighted, uvSegmentNumber);
}
// Autogenerated method: AvatarVisualController/HighlighterDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::AvatarVisualController::HighlighterDelegate::BeginInvoke(bool highlighted, int uvSegmentNumber, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::HighlighterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegmentNumber), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, highlighted, uvSegmentNumber, callback, object);
}
// Autogenerated method: AvatarVisualController/HighlighterDelegate.EndInvoke
void GlobalNamespace::AvatarVisualController::HighlighterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::HighlighterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerName
#include "GlobalNamespace/ConnectedPlayerName.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ConnectedPlayerName::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerName::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::ConnectedPlayerName::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerName::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerName.Start
void GlobalNamespace::ConnectedPlayerName::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerName::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HeadBodyOffsetSO
#include "GlobalNamespace/HeadBodyOffsetSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headNeckOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HeadBodyOffsetSO::dyn__headNeckOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadBodyOffsetSO::dyn__headNeckOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headNeckOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _verticalOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeadBodyOffsetSO::dyn__verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadBodyOffsetSO::dyn__verticalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeadBodyOffsetSO.get_headNeckOffset
::UnityEngine::Vector3 GlobalNamespace::HeadBodyOffsetSO::get_headNeckOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadBodyOffsetSO::get_headNeckOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headNeckOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: HeadBodyOffsetSO.get_verticalOffset
float GlobalNamespace::HeadBodyOffsetSO::get_verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadBodyOffsetSO::get_verticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyAvatarInstaller
#include "GlobalNamespace/LobbyAvatarInstaller.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::LobbyAvatarInstaller::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyAvatarInstaller::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyAvatarInstaller.InstallBindings
void GlobalNamespace::LobbyAvatarInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyAvatarInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/<>c
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_--c.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110E890
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
::UnityEngine::MaterialPropertyBlock* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyBlock*>("", "MulticolorAvatarPartPropertyBlockSetter", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_set__materialPropertyBlock(::UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter", "_materialPropertyBlock", value));
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter/ColorData[] _colorDataList
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colorDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colorDataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorDataList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _editInPlayMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__editInPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__editInPlayMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editInPlayMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _colors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _rimLightColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__rimLightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__rimLightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _boostColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__boostColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__boostColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boostColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _uvSegment
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__uvSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__uvSegment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uvSegment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.OnValidate
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.SetColors
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetColors(::ArrayW<::UnityEngine::Color> colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colors);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.SetHighlight
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetHighlight(bool highlighted, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, highlighted, uvSegment);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.UpdateRenderer
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::UpdateRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::UpdateRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _defaultColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__defaultColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _darkerColorMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__darkerColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__darkerColorMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkerColorMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _whiteBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__whiteBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__whiteBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whiteBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_defaultColor
::UnityEngine::Color GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_defaultColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_darkerColorMultiplier
float GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_darkerColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_darkerColorMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_darkerColorMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_whiteBoost
float GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_whiteBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_whiteBoost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_whiteBoost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter/<>c
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MulticolorAvatarPartPropertyBlockSetter/<>c <>9
::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c*>("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MulticolorAvatarPartPropertyBlockSetter/<>c <>9
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9(::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MulticolorAvatarPartPropertyBlockSetter/ColorData,UnityEngine.Color> <>9__10_0
::System::Func_2<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, ::UnityEngine::Color>* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, ::UnityEngine::Color>*>("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MulticolorAvatarPartPropertyBlockSetter/ColorData,UnityEngine.Color> <>9__10_0
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9__10_0(::System::Func_2<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, ::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9__10_0", value)));
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/<>c..cctor
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MulticolorAvatarPartPropertyBlockSetter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/<>c.<OnValidate>b__10_0
::UnityEngine::Color GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::$OnValidate$b__10_0(::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::<OnValidate>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnValidate>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerAvatarAudioController
#include "GlobalNamespace/MultiplayerAvatarAudioController.hpp"
// Including type: MultiplayerAvatarAudioController/<Start>d__4
#include "GlobalNamespace/MultiplayerAvatarAudioController_-Start-d__4.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::MultiplayerAvatarAudioController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerAvatarAudioController::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarAudioController.set_connectedPlayer
void GlobalNamespace::MultiplayerAvatarAudioController::set_connectedPlayer(::GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::set_connectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerAvatarAudioController.Start
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerAvatarAudioController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerAvatarAudioController/<Start>d__4
#include "GlobalNamespace/MultiplayerAvatarAudioController_-Start-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerAvatarAudioController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerAvatarAudioController*& GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerAvatarAudioController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.MoveNext
bool GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerAvatarPoseController
#include "GlobalNamespace/MultiplayerAvatarPoseController.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController _avatarPoseController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INodePoseSyncStateManager _nodePoseSyncStateManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INodePoseSyncStateManager*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__nodePoseSyncStateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::dyn__nodePoseSyncStateManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodePoseSyncStateManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INodePoseSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarPoseController.set_connectedPlayer
void GlobalNamespace::MultiplayerAvatarPoseController::set_connectedPlayer(::GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::set_connectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerAvatarPoseController.Start
void GlobalNamespace::MultiplayerAvatarPoseController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarPoseController.Update
void GlobalNamespace::MultiplayerAvatarPoseController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerAvatarVisualProvider
#include "GlobalNamespace/MultiplayerAvatarVisualProvider.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarVisualController*& GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarVisualProvider.Start
void GlobalNamespace::MultiplayerAvatarVisualProvider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarVisualProvider::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
// Including type: MultiplayerLobbyAvatarController/Factory
#include "GlobalNamespace/MultiplayerLobbyAvatarController_Factory.hpp"
// Including type: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-SpawnAnimationCoroutine-d__8.hpp"
// Including type: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-ShowDespawnAnimationAndDestroy-d__10.hpp"
// Including type: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-DespawnAnimationCoroutine-d__12.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: VFXController
#include "GlobalNamespace/VFXController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _spawnEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableDirector*& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VFXController _despawnVFXController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VFXController*& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnVFXController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnVFXController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_despawnVFXController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VFXController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spawnAvatarDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _despawnAvatarDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_despawnAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destroyAvatarDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__destroyAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__destroyAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destroyAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _visualObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__visualObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__visualObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visualObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ShowSpawnAnimation
void GlobalNamespace::MultiplayerLobbyAvatarController::ShowSpawnAnimation(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::ShowSpawnAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowSpawnAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: MultiplayerLobbyAvatarController.SpawnAnimationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::SpawnAnimationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::SpawnAnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnAnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ActivateVisualObjects
void GlobalNamespace::MultiplayerLobbyAvatarController::ActivateVisualObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::ActivateVisualObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateVisualObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ShowDespawnAnimationAndDestroy
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::ShowDespawnAnimationAndDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::ShowDespawnAnimationAndDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDespawnAnimationAndDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.DestroySelf
void GlobalNamespace::MultiplayerLobbyAvatarController::DestroySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::DestroySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.DespawnAnimationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::DespawnAnimationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::DespawnAnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnAnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarController/Factory
#include "GlobalNamespace/MultiplayerLobbyAvatarController_Factory.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-SpawnAnimationCoroutine-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-ShowDespawnAnimationAndDestroy-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-DespawnAnimationCoroutine-d__12.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarManager
#include "GlobalNamespace/MultiplayerLobbyAvatarManager.hpp"
// Including type: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13
#include "GlobalNamespace/MultiplayerLobbyAvatarManager_-RemovePlayerAndDestroy-d__13.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MultiplayerLobbyAvatarController/Factory
#include "GlobalNamespace/MultiplayerLobbyAvatarController_Factory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyAvatarController/Factory _avatarControllerFactory
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarController::Factory*& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__avatarControllerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__avatarControllerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarControllerFactory"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController::Factory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _innerCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__innerCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__innerCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOuterCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__minOuterCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__minOuterCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOuterCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,MultiplayerLobbyAvatarController> _playerIdToAvatarMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::MultiplayerLobbyAvatarController*>*& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__playerIdToAvatarMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__playerIdToAvatarMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerIdToAvatarMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::MultiplayerLobbyAvatarController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<MultiplayerLobbyAvatarController> _inProgressDespawnAnimations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::GlobalNamespace::MultiplayerLobbyAvatarController*>*& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__inProgressDespawnAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__inProgressDespawnAnimations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inProgressDespawnAnimations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::MultiplayerLobbyAvatarController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.Init
void GlobalNamespace::MultiplayerLobbyAvatarManager::Init(float innerCircleRadius, float minOuterCircleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerCircleRadius), ::il2cpp_utils::ExtractType(minOuterCircleRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, innerCircleRadius, minOuterCircleRadius);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.ActivateMultiplayerLobbyAvatarManager
void GlobalNamespace::MultiplayerLobbyAvatarManager::ActivateMultiplayerLobbyAvatarManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::ActivateMultiplayerLobbyAvatarManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateMultiplayerLobbyAvatarManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.DeactivateMultiplayerLobbyAvatarManager
void GlobalNamespace::MultiplayerLobbyAvatarManager::DeactivateMultiplayerLobbyAvatarManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::DeactivateMultiplayerLobbyAvatarManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateMultiplayerLobbyAvatarManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.HandleLobbyStateDataModelPlayerConnected
void GlobalNamespace::MultiplayerLobbyAvatarManager::HandleLobbyStateDataModelPlayerConnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::HandleLobbyStateDataModelPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyStateDataModelPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.HandleLobbyStateDataModelPlayerDisconnected
void GlobalNamespace::MultiplayerLobbyAvatarManager::HandleLobbyStateDataModelPlayerDisconnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::HandleLobbyStateDataModelPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyStateDataModelPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.AddPlayer
void GlobalNamespace::MultiplayerLobbyAvatarManager::AddPlayer(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::AddPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.RemovePlayer
void GlobalNamespace::MultiplayerLobbyAvatarManager::RemovePlayer(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::RemovePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.RemovePlayerAndDestroy
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarManager::RemovePlayerAndDestroy(::StringW userId, ::GlobalNamespace::MultiplayerLobbyAvatarController* multiplayerAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::RemovePlayerAndDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePlayerAndDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(multiplayerAvatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, userId, multiplayerAvatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13
#include "GlobalNamespace/MultiplayerLobbyAvatarManager_-RemovePlayerAndDestroy-d__13.hpp"
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarManager*& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController multiplayerAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_multiplayerAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_multiplayerAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarPlace
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace.hpp"
// Including type: MultiplayerLobbyAvatarPlace/Pool
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyAvatarPlace.SetPositionAndRotation
void GlobalNamespace::MultiplayerLobbyAvatarPlace::SetPositionAndRotation(::UnityEngine::Vector3 worldPos, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlace::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPos), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPos, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarPlace/Pool
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarPlaceManager
#include "GlobalNamespace/MultiplayerLobbyAvatarPlaceManager.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MultiplayerLobbyAvatarPlace/Pool
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyAvatarPlace/Pool _avatarPlacesPool
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarPlace::Pool*& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__avatarPlacesPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__avatarPlacesPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPlacesPool"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarPlace::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<MultiplayerLobbyAvatarPlace> _allPlaces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerLobbyAvatarPlace*>*& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__allPlaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__allPlaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allPlaces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerLobbyAvatarPlace*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _innerCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__innerCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__innerCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOuterCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__minOuterCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__minOuterCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOuterCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.Activate
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::Activate(float innerCircleRadius, float minOuterCircleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerCircleRadius), ::il2cpp_utils::ExtractType(minOuterCircleRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, innerCircleRadius, minOuterCircleRadius);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.Deactivate
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.OnDestroy
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.SpawnAllPlaces
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::SpawnAllPlaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::SpawnAllPlaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnAllPlaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.DespawnAllPlaces
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::DespawnAllPlaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::DespawnAllPlaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnAllPlaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShadowFollowController
#include "GlobalNamespace/ShadowFollowController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _shadowTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ShadowFollowController::dyn__shadowTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShadowFollowController::dyn__shadowTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ShadowFollowController::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShadowFollowController::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _shadowSpriteRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::ShadowFollowController::dyn__shadowSpriteRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShadowFollowController::dyn__shadowSpriteRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowSpriteRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _shadowHeightRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::ShadowFollowController::dyn__shadowHeightRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShadowFollowController::dyn__shadowHeightRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowHeightRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _shadowSizeRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::ShadowFollowController::dyn__shadowSizeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShadowFollowController::dyn__shadowSizeRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowSizeRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _shadowAlphaRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::ShadowFollowController::dyn__shadowAlphaRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShadowFollowController::dyn__shadowAlphaRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowAlphaRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShadowFollowController.SetTargetTransform
void GlobalNamespace::ShadowFollowController::SetTargetTransform(::UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShadowFollowController::SetTargetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTargetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: ShadowFollowController.Update
void GlobalNamespace::ShadowFollowController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShadowFollowController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AchievementIdsModelSO
#include "GlobalNamespace/AchievementIdsModelSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<AchievementSO> _achievementsIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::AchievementSO*>*& GlobalNamespace::AchievementIdsModelSO::dyn__achievementsIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementIdsModelSO::dyn__achievementsIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementsIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::AchievementSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementIdsModelSO.get_achievementsIds
::System::Collections::Generic::List_1<::GlobalNamespace::AchievementSO*>* GlobalNamespace::AchievementIdsModelSO::get_achievementsIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementIdsModelSO::get_achievementsIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_achievementsIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::AchievementSO*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _achievementId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AchievementSO::dyn__achievementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementSO::dyn__achievementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementSO.get_achievementId
::StringW GlobalNamespace::AchievementSO::get_achievementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementSO::get_achievementId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_achievementId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AchievementsEvaluationHandler
#include "GlobalNamespace/AchievementsEvaluationHandler.hpp"
// Including type: AchievementsModelSO
#include "GlobalNamespace/AchievementsModelSO.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AchievementsModelSO _achievementsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementsModelSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__achievementsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__achievementsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevel100Achievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevel100Achievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevel100Achievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevel100Achievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _totalScore100MillionAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__totalScore100MillionAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__totalScore100MillionAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalScore100MillionAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _24HoursPlayedAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__24HoursPlayedAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__24HoursPlayedAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_24HoursPlayedAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _kilometersTravelled100Achievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__kilometersTravelled100Achievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__kilometersTravelled100Achievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kilometersTravelled100Achievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _15ExpertLevelsRankSAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__15ExpertLevelsRankSAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__15ExpertLevelsRankSAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_15ExpertLevelsRankSAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _15ExpertLevelsFullComboAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__15ExpertLevelsFullComboAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__15ExpertLevelsFullComboAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_15ExpertLevelsFullComboAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _15HardLevelsRankSAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__15HardLevelsRankSAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__15HardLevelsRankSAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_15HardLevelsRankSAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _15HardLevelsFullComboAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__15HardLevelsFullComboAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__15HardLevelsFullComboAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_15HardLevelsFullComboAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _expertLevelClearedWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__expertLevelClearedWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__expertLevelClearedWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expertLevelClearedWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _fullComboExpertWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__fullComboExpertWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__fullComboExpertWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullComboExpertWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _goodCuts10000Achievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__goodCuts10000Achievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__goodCuts10000Achievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodCuts10000Achievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _resultMinRankANormalWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankANormalWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankANormalWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMinRankANormalWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _resultMinRankSHardWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankSHardWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankSHardWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMinRankSHardWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _resultMinRankSSExpertWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankSSExpertWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankSSExpertWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMinRankSSExpertWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _combo50NormalWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__combo50NormalWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__combo50NormalWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo50NormalWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _combo100HardWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__combo100HardWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__combo100HardWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo100HardWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _combo500ExpertWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__combo500ExpertWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__combo500ExpertWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo500ExpertWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithoutModifiersAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithSongSpeedFasterModifierAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithSongSpeedFasterModifierAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithSongSpeedFasterModifierAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithSongSpeedFasterModifierAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithInstaFailModifierAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithInstaFailModifierAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithInstaFailModifierAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithInstaFailModifierAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithDisappearingArrowsModifierAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithDisappearingArrowsModifierAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithDisappearingArrowsModifierAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithDisappearingArrowsModifierAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithBatteryEnergyModifierAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithBatteryEnergyModifierAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithBatteryEnergyModifierAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithBatteryEnergyModifierAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _cleared30MissionsAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__cleared30MissionsAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__cleared30MissionsAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cleared30MissionsAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _finalMissionClearedAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__finalMissionClearedAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__finalMissionClearedAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalMissionClearedAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _allMissionClearedAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__allMissionClearedAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__allMissionClearedAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allMissionClearedAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::AchievementsEvaluationHandler::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodesManager _missionNodesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodesManager*& GlobalNamespace::AchievementsEvaluationHandler::dyn__missionNodesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::dyn__missionNodesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementsEvaluationHandler.Start
void GlobalNamespace::AchievementsEvaluationHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AchievementsEvaluationHandler.OnDestroy
void GlobalNamespace::AchievementsEvaluationHandler::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AchievementsEvaluationHandler.HandleSoloFreePlayOverallStatsDataDidUpdate
void GlobalNamespace::AchievementsEvaluationHandler::HandleSoloFreePlayOverallStatsDataDidUpdate(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::HandleSoloFreePlayOverallStatsDataDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSoloFreePlayOverallStatsDataDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated method: AchievementsEvaluationHandler.HandlePartyFreePlayOverallStatsDataDidUpdate
void GlobalNamespace::AchievementsEvaluationHandler::HandlePartyFreePlayOverallStatsDataDidUpdate(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::HandlePartyFreePlayOverallStatsDataDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyFreePlayOverallStatsDataDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated method: AchievementsEvaluationHandler.HandleCampaignOverallStatsDataDidUpdate
void GlobalNamespace::AchievementsEvaluationHandler::HandleCampaignOverallStatsDataDidUpdate(::GlobalNamespace::MissionCompletionResults* missionCompletionResults, ::GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::HandleCampaignOverallStatsDataDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCampaignOverallStatsDataDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionCompletionResults), ::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionCompletionResults, missionNode);
}
// Autogenerated method: AchievementsEvaluationHandler.ProcessMissionFinishData
void GlobalNamespace::AchievementsEvaluationHandler::ProcessMissionFinishData(::GlobalNamespace::MissionNode* missionNode, ::GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::ProcessMissionFinishData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMissionFinishData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNode, missionCompletionResults);
}
// Autogenerated method: AchievementsEvaluationHandler.ProcessSoloFreePlayLevelFinishData
void GlobalNamespace::AchievementsEvaluationHandler::ProcessSoloFreePlayLevelFinishData(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::ProcessSoloFreePlayLevelFinishData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSoloFreePlayLevelFinishData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap, levelCompletionResults);
}
// Autogenerated method: AchievementsEvaluationHandler.ProcessLevelFinishData
void GlobalNamespace::AchievementsEvaluationHandler::ProcessLevelFinishData(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsEvaluationHandler::ProcessLevelFinishData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLevelFinishData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AchievementsModelSO
#include "GlobalNamespace/AchievementsModelSO.hpp"
// Including type: AchievementsModelSO/<>c__DisplayClass4_0
#include "GlobalNamespace/AchievementsModelSO_--c__DisplayClass4_0.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsResult
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsResult.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlatformAchievementsModelSO _platformAchievementsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformAchievementsModelSO*& GlobalNamespace::AchievementsModelSO::dyn__platformAchievementsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::dyn__platformAchievementsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformAchievementsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformAchievementsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _unlockedAchievementIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::AchievementsModelSO::dyn__unlockedAchievementIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::dyn__unlockedAchievementIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unlockedAchievementIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AchievementsModelSO::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementsModelSO.Initialize
void GlobalNamespace::AchievementsModelSO::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AchievementsModelSO.UnlockAchievement
void GlobalNamespace::AchievementsModelSO::UnlockAchievement(::GlobalNamespace::AchievementSO* achievement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::UnlockAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievement);
}
// Autogenerated method: AchievementsModelSO.<Initialize>b__3_0
void GlobalNamespace::AchievementsModelSO::$Initialize$b__3_0(::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult result, ::ArrayW<::StringW> achievementIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::<Initialize>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Initialize>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(achievementIds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, achievementIds);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AchievementsModelSO/<>c__DisplayClass4_0
#include "GlobalNamespace/AchievementsModelSO_--c__DisplayClass4_0.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementResult
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AchievementsModelSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementsModelSO*& GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String achievementId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::dyn_achievementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::dyn_achievementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "achievementId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementsModelSO/<>c__DisplayClass4_0.<UnlockAchievement>b__0
void GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::$UnlockAchievement$b__0(::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::<UnlockAchievement>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnlockAchievement>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FinishTutorialAchievementHandler
#include "GlobalNamespace/FinishTutorialAchievementHandler.hpp"
// Including type: AchievementsModelSO
#include "GlobalNamespace/AchievementsModelSO.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AchievementsModelSO _achievementsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementsModelSO*& GlobalNamespace::FinishTutorialAchievementHandler::dyn__achievementsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FinishTutorialAchievementHandler::dyn__achievementsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _tutorialFinishedSignal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Signal*& GlobalNamespace::FinishTutorialAchievementHandler::dyn__tutorialFinishedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FinishTutorialAchievementHandler::dyn__tutorialFinishedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialFinishedSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _finishTutorialAchievement
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementSO*& GlobalNamespace::FinishTutorialAchievementHandler::dyn__finishTutorialAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FinishTutorialAchievementHandler::dyn__finishTutorialAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finishTutorialAchievement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FinishTutorialAchievementHandler.Start
void GlobalNamespace::FinishTutorialAchievementHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FinishTutorialAchievementHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FinishTutorialAchievementHandler.OnDestroy
void GlobalNamespace::FinishTutorialAchievementHandler::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FinishTutorialAchievementHandler::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FinishTutorialAchievementHandler.HandleTutorialFinished
void GlobalNamespace::FinishTutorialAchievementHandler::HandleTutorialFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FinishTutorialAchievementHandler::HandleTutorialFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTutorialFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAchievementsHandler
#include "GlobalNamespace/PlatformAchievementsHandler.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementCompletionHandler.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformAchievementsHandler.UnlockAchievement
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformAchievementsHandler::UnlockAchievement(::StringW achievementId, ::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsHandler::UnlockAchievement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, achievementId, completionHandler);
}
// Autogenerated method: PlatformAchievementsHandler.GetUnlockedAchievements
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformAchievementsHandler::GetUnlockedAchievements(::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsHandler::GetUnlockedAchievements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnlockedAchievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAchievementsModelSO
#include "GlobalNamespace/PlatformAchievementsModelSO.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementResult
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementResult.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsResult
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsResult.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementCompletionHandler.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsCompletionHandler.hpp"
// Including type: PS4AchievementIdsModelSO
#include "GlobalNamespace/PS4AchievementIdsModelSO.hpp"
// Including type: AchievementIdsModelSO
#include "GlobalNamespace/AchievementIdsModelSO.hpp"
// Including type: PlatformAchievementsHandler
#include "GlobalNamespace/PlatformAchievementsHandler.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PS4AchievementIdsModelSO _ps4AchievementIdsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PS4AchievementIdsModelSO*& GlobalNamespace::PlatformAchievementsModelSO::dyn__ps4AchievementIdsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::dyn__ps4AchievementIdsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ps4AchievementIdsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PS4AchievementIdsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementIdsModelSO _achievementIdsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AchievementIdsModelSO*& GlobalNamespace::PlatformAchievementsModelSO::dyn__achievementIdsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::dyn__achievementIdsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementIdsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AchievementIdsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlatformAchievementsHandler _platformAchievementsHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformAchievementsHandler*& GlobalNamespace::PlatformAchievementsModelSO::dyn__platformAchievementsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::dyn__platformAchievementsHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformAchievementsHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformAchievementsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformAchievementsModelSO.get_platformAchievementsHandler
::GlobalNamespace::PlatformAchievementsHandler* GlobalNamespace::PlatformAchievementsModelSO::get_platformAchievementsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::get_platformAchievementsHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_platformAchievementsHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlatformAchievementsHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformAchievementsModelSO.Initialize
void GlobalNamespace::PlatformAchievementsModelSO::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformAchievementsModelSO.CreatePlatformAchievementsHandler
void GlobalNamespace::PlatformAchievementsModelSO::CreatePlatformAchievementsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::CreatePlatformAchievementsHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlatformAchievementsHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformAchievementsModelSO.UnlockAchievement
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievement(::StringW achievementId, ::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, achievementId, completionHandler);
}
// Autogenerated method: PlatformAchievementsModelSO.GetUnlockedAchievements
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievements(::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnlockedAchievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAchievementsModelSO/UnlockAchievementResult
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformAchievementsModelSO/UnlockAchievementResult OK
::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult>("", "PlatformAchievementsModelSO/UnlockAchievementResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public PlatformAchievementsModelSO/UnlockAchievementResult OK
void GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_set_OK(::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformAchievementsModelSO/UnlockAchievementResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformAchievementsModelSO/UnlockAchievementResult Failed
::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult>("", "PlatformAchievementsModelSO/UnlockAchievementResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlatformAchievementsModelSO/UnlockAchievementResult Failed
void GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_set_Failed(::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformAchievementsModelSO/UnlockAchievementResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsResult
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformAchievementsModelSO/GetUnlockedAchievementsResult OK
::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult>("", "PlatformAchievementsModelSO/GetUnlockedAchievementsResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public PlatformAchievementsModelSO/GetUnlockedAchievementsResult OK
void GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_set_OK(::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformAchievementsModelSO/GetUnlockedAchievementsResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformAchievementsModelSO/GetUnlockedAchievementsResult Failed
::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult>("", "PlatformAchievementsModelSO/GetUnlockedAchievementsResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlatformAchievementsModelSO/GetUnlockedAchievementsResult Failed
void GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_set_Failed(::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformAchievementsModelSO/GetUnlockedAchievementsResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementCompletionHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementResult
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler.Invoke
void GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::Invoke(::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::BeginInvoke(::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult result, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, result, callback, object);
}
// Autogenerated method: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler.EndInvoke
void GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsCompletionHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsResult
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler.Invoke
void GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::Invoke(::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult result, ::ArrayW<::StringW> unlockedAchievementsIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(unlockedAchievementsIds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, unlockedAchievementsIds);
}
// Autogenerated method: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::BeginInvoke(::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult result, ::ArrayW<::StringW> unlockedAchievementsIds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(unlockedAchievementsIds), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, result, unlockedAchievementsIds, callback, object);
}
// Autogenerated method: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler.EndInvoke
void GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: AdditionalContentModel/UpdateEntitlementsResult
#include "GlobalNamespace/AdditionalContentModel_UpdateEntitlementsResult.hpp"
// Including type: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10
#include "GlobalNamespace/AdditionalContentModel_-GetLevelEntitlementStatusAsync-d__10.hpp"
// Including type: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11
#include "GlobalNamespace/AdditionalContentModel_-GetPackEntitlementStatusAsync-d__11.hpp"
// Including type: AlwaysOwnedContentContainerSO
#include "GlobalNamespace/AlwaysOwnedContentContainerSO.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AlwaysOwnedContentContainerSO _alwaysOwnedContentContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AlwaysOwnedContentContainerSO*& GlobalNamespace::AdditionalContentModel::dyn__alwaysOwnedContentContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::dyn__alwaysOwnedContentContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedContentContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AlwaysOwnedContentContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didInvalidateDataEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AdditionalContentModel::dyn_didInvalidateDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::dyn_didInvalidateDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInvalidateDataEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AdditionalContentModel.add_didInvalidateDataEvent
void GlobalNamespace::AdditionalContentModel::add_didInvalidateDataEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::add_didInvalidateDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInvalidateDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AdditionalContentModel.remove_didInvalidateDataEvent
void GlobalNamespace::AdditionalContentModel::remove_didInvalidateDataEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::remove_didInvalidateDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInvalidateDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AdditionalContentModel.OnApplicationFocus
void GlobalNamespace::AdditionalContentModel::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: AdditionalContentModel.InvalidateData
void GlobalNamespace::AdditionalContentModel::InvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::InvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AdditionalContentModel.GetLevelEntitlementStatusAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::AdditionalContentModel::GetLevelEntitlementStatusAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::GetLevelEntitlementStatusAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: AdditionalContentModel.GetPackEntitlementStatusAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::AdditionalContentModel::GetPackEntitlementStatusAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::GetPackEntitlementStatusAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: AdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::AdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AdditionalContentModel.GetLevelEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::AdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: AdditionalContentModel.GetPackEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::AdditionalContentModel::GetPackEntitlementStatusInternalAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: AdditionalContentModel.IsPackBetterBuyThanLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: AdditionalContentModel.OpenLevelProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::AdditionalContentModel::OpenLevelProductStoreAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: AdditionalContentModel.OpenLevelPackProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::AdditionalContentModel::OpenLevelPackProductStoreAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/EntitlementStatus
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/EntitlementStatus Failed
::GlobalNamespace::AdditionalContentModel::EntitlementStatus GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>("", "AdditionalContentModel/EntitlementStatus", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/EntitlementStatus Failed
void GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_Failed(::GlobalNamespace::AdditionalContentModel::EntitlementStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/EntitlementStatus", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/EntitlementStatus Owned
::GlobalNamespace::AdditionalContentModel::EntitlementStatus GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_Owned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_Owned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>("", "AdditionalContentModel/EntitlementStatus", "Owned"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/EntitlementStatus Owned
void GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_Owned(::GlobalNamespace::AdditionalContentModel::EntitlementStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_Owned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/EntitlementStatus", "Owned", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/EntitlementStatus NotOwned
::GlobalNamespace::AdditionalContentModel::EntitlementStatus GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_NotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_NotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>("", "AdditionalContentModel/EntitlementStatus", "NotOwned"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/EntitlementStatus NotOwned
void GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_NotOwned(::GlobalNamespace::AdditionalContentModel::EntitlementStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_NotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/EntitlementStatus", "NotOwned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::EntitlementStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::EntitlementStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/OpenProductStoreResult
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/OpenProductStoreResult OK
::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>("", "AdditionalContentModel/OpenProductStoreResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/OpenProductStoreResult OK
void GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_OK(::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/OpenProductStoreResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/OpenProductStoreResult Failed
::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>("", "AdditionalContentModel/OpenProductStoreResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/OpenProductStoreResult Failed
void GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_Failed(::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/OpenProductStoreResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/UpdateEntitlementsResult
#include "GlobalNamespace/AdditionalContentModel_UpdateEntitlementsResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/UpdateEntitlementsResult OK
::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>("", "AdditionalContentModel/UpdateEntitlementsResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/UpdateEntitlementsResult OK
void GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_OK(::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/UpdateEntitlementsResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/UpdateEntitlementsResult Failed
::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>("", "AdditionalContentModel/UpdateEntitlementsResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/UpdateEntitlementsResult Failed
void GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_Failed(::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/UpdateEntitlementsResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/IsPackBetterBuyThanLevelResult
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult PackIsBetter
::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_PackIsBetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_PackIsBetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "PackIsBetter"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult PackIsBetter
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_PackIsBetter(::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_PackIsBetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "PackIsBetter", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult LevelIsBetter
::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_LevelIsBetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_LevelIsBetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "LevelIsBetter"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult LevelIsBetter
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_LevelIsBetter(::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_LevelIsBetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "LevelIsBetter", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult Failed
::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult Failed
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_Failed(::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10
#include "GlobalNamespace/AdditionalContentModel_-GetLevelEntitlementStatusAsync-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10.MoveNext
void GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10.SetStateMachine
void GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11
#include "GlobalNamespace/AdditionalContentModel_-GetPackEntitlementStatusAsync-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11.MoveNext
void GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11.SetStateMachine
void GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlwaysOwnedContentContainerSO
#include "GlobalNamespace/AlwaysOwnedContentContainerSO.hpp"
// Including type: AlwaysOwnedContentSO
#include "GlobalNamespace/AlwaysOwnedContentSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AlwaysOwnedContentSO _alwaysOwnedContent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AlwaysOwnedContentSO*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedContent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AlwaysOwnedContentSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _alwaysOwnedBeatmapLevelIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedBeatmapLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedBeatmapLevelIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedBeatmapLevelIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _alwaysOwnedPacksIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedPacksIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedPacksIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedPacksIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.get_alwaysOwnedBeatmapLevelIds
::System::Collections::Generic::HashSet_1<::StringW>* GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedBeatmapLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedBeatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedBeatmapLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.get_alwaysOwnedPacksIds
::System::Collections::Generic::HashSet_1<::StringW>* GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedPacksIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedPacksIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedPacksIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.InitAlwaysOwnedItems
void GlobalNamespace::AlwaysOwnedContentContainerSO::InitAlwaysOwnedItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::InitAlwaysOwnedItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAlwaysOwnedItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.OnEnable
void GlobalNamespace::AlwaysOwnedContentContainerSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlwaysOwnedContentSO
#include "GlobalNamespace/AlwaysOwnedContentSO.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackSO[] _alwaysOwnedPacks
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*>& GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedPacks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO[] _alwaysOwnedBeatmapLevels
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelSO*>& GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedBeatmapLevels"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AlwaysOwnedContentSO.get_alwaysOwnedPacks
::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*> GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentSO.get_alwaysOwnedBeatmapLevels
::ArrayW<::GlobalNamespace::BeatmapLevelSO*> GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedBeatmapLevels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedBeatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapLevelSO*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel
#include "GlobalNamespace/OculusPlatformAdditionalContentModel.hpp"
// Including type: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
// Including type: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
// Including type: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-DataIsValidAsync-d__7.hpp"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__9.hpp"
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass10_0.hpp"
// Including type: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-LaunchCheckoutFlow-d__10.hpp"
// Including type: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__11.hpp"
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass12_0.hpp"
// Including type: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__12.hpp"
// Including type: OculusLevelProductsModelSO
#include "GlobalNamespace/OculusLevelProductsModelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusLevelProductsModelSO _oculusLevelProductsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusLevelProductsModelSO*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__oculusLevelProductsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__oculusLevelProductsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusLevelProductsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusLevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _entitlementsSKU
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__entitlementsSKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__entitlementsSKU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entitlementsSKU"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _semaphoreSlim
[[deprecated("Use field access instead!")]] ::System::Threading::SemaphoreSlim*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__semaphoreSlim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__semaphoreSlim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_semaphoreSlim"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDataValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__isDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__isDataValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDataValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.DataIsValidAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusPlatformAdditionalContentModel::DataIsValidAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::DataIsValidAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataIsValidAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.LaunchCheckoutFlow
::System::Threading::Tasks::Task_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>* GlobalNamespace::OculusPlatformAdditionalContentModel::LaunchCheckoutFlow(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*, false>(this, ___internal__method, sku);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.CheckForNewEntitlementsAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::CheckForNewEntitlementsAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::CheckForNewEntitlementsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForNewEntitlementsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.HasLevelEntitlement
bool GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelEntitlement(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.HasLevelPackEntitlement
bool GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelPackEntitlement(::StringW levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelPackEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelPackEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::OculusPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::OculusPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::StringW levelId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::OculusPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::StringW packId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, packId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.OpenLevelProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::StringW levelId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::StringW levelPackId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_packId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-DataIsValidAsync-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__9.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass10_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> launchCheckoutFlowTaskSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::dyn_launchCheckoutFlowTaskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::dyn_launchCheckoutFlowTaskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "launchCheckoutFlowTaskSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0.<LaunchCheckoutFlow>b__0
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::$LaunchCheckoutFlow$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::<LaunchCheckoutFlow>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchCheckoutFlow>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-LaunchCheckoutFlow-d__10.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sku
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_sku");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass12_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Message`1/Oculus.Platform.Callback
#include "Oculus/Platform/Message_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<AdditionalContentModel/UpdateEntitlementsResult> getViewerPurchasesTaskSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_getViewerPurchasesTaskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_getViewerPurchasesTaskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getViewerPurchasesTaskSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.PurchaseList> <>9__1
[[deprecated("Use field access instead!")]] typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::PurchaseList*>::Callback*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$9__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$9__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__1"))->offset;
  return *reinterpret_cast<typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::PurchaseList*>::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0.<CheckForNewEntitlementsAsync>b__0
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::$CheckForNewEntitlementsAsync$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AssetDetailsList*>* getListMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::<CheckForNewEntitlementsAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForNewEntitlementsAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getListMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, getListMsg);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0.<CheckForNewEntitlementsAsync>b__1
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::$CheckForNewEntitlementsAsync$b__1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PurchaseList*>* getPurchasesMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::<CheckForNewEntitlementsAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForNewEntitlementsAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getPurchasesMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, getPurchasesMsg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__12.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/UpdateEntitlementsResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel
#include "GlobalNamespace/SteamPlatformAdditionalContentModel.hpp"
// Including type: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__6.hpp"
// Including type: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__7.hpp"
// Including type: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-DataIsValidAsync-d__8.hpp"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__9.hpp"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
// Including type: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__14.hpp"
// Including type: SteamLevelProductsModelSO
#include "GlobalNamespace/SteamLevelProductsModelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SteamLevelProductsModelSO _steamLevelProductsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamLevelProductsModelSO*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__steamLevelProductsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__steamLevelProductsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_steamLevelProductsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamLevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt32> _entitlementsAppIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint>*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__entitlementsAppIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__entitlementsAppIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entitlementsAppIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _dataIsValidTaskCompletionSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__dataIsValidTaskCompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__dataIsValidTaskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataIsValidTaskCompletionSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _semaphoreSlim
[[deprecated("Use field access instead!")]] ::System::Threading::SemaphoreSlim*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__semaphoreSlim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__semaphoreSlim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_semaphoreSlim"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDataValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__isDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__isDataValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDataValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.DataIsValidAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::SteamPlatformAdditionalContentModel::DataIsValidAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::DataIsValidAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataIsValidAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenProductStore
void GlobalNamespace::SteamPlatformAdditionalContentModel::OpenProductStore(uint appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::OpenProductStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenProductStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, appId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenBundleUrl
void GlobalNamespace::SteamPlatformAdditionalContentModel::OpenBundleUrl(uint bundleId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::OpenBundleUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenBundleUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bundleId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bundleId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.CheckForNewEntitlementsAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::CheckForNewEntitlementsAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::CheckForNewEntitlementsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForNewEntitlementsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.HasLevelEntitlement
bool GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelEntitlement(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.HasLevelPackEntitlement
bool GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelPackEntitlement(::StringW levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelPackEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelPackEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::SteamPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::SteamPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::StringW levelId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::SteamPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::StringW packId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, packId, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenLevelProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_packId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-DataIsValidAsync-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/OpenProductStoreResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/OpenProductStoreResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__14.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/UpdateEntitlementsResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel
#include "GlobalNamespace/TestPlatformAdditionalContentModel.hpp"
// Including type: TestPlatformAdditionalContentModel/Entitlement
#include "GlobalNamespace/TestPlatformAdditionalContentModel_Entitlement.hpp"
// Including type: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
// Including type: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
// Including type: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__7.hpp"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TestPlatformAdditionalContentModel/Entitlement[] _levelsEntitlements
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelsEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelsEntitlements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelsEntitlements"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TestPlatformAdditionalContentModel/Entitlement[] _levelPacksEntitlements
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelPacksEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelPacksEntitlements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPacksEntitlements"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _packBetterBuyThanLevel
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__packBetterBuyThanLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::dyn__packBetterBuyThanLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packBetterBuyThanLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel.BuyLevel
void GlobalNamespace::TestPlatformAdditionalContentModel::BuyLevel(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::BuyLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: TestPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::TestPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::TestPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::TestPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::TestPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.OpenLevelProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/Entitlement
#include "GlobalNamespace/TestPlatformAdditionalContentModel_Entitlement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel/EntitlementStatus status
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel::EntitlementStatus& GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel::EntitlementStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean requirePrivacyPolicy
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppStaticSettingsSO::dyn_requirePrivacyPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppStaticSettingsSO::dyn_requirePrivacyPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requirePrivacyPolicy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enable360DegreeLevels
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppStaticSettingsSO::dyn_enable360DegreeLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppStaticSettingsSO::dyn_enable360DegreeLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enable360DegreeLevels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableCustomLevels
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppStaticSettingsSO::dyn_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppStaticSettingsSO::dyn_enableCustomLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableCustomLevels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableMultiplayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppStaticSettingsSO::dyn_disableMultiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppStaticSettingsSO::dyn_disableMultiplayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableMultiplayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataAddTestSlidersTransform
#include "GlobalNamespace/BeatmapDataAddTestSlidersTransform.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxTimeDiff
float GlobalNamespace::BeatmapDataAddTestSlidersTransform::_get_kMaxTimeDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAddTestSlidersTransform::_get_kMaxTimeDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapDataAddTestSlidersTransform", "kMaxTimeDiff"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxTimeDiff
void GlobalNamespace::BeatmapDataAddTestSlidersTransform::_set_kMaxTimeDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAddTestSlidersTransform::_set_kMaxTimeDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataAddTestSlidersTransform", "kMaxTimeDiff", value));
}
// Autogenerated method: BeatmapDataAddTestSlidersTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataAddTestSlidersTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAddTestSlidersTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataAddTestSlidersTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated method: BeatmapDataAddTestSlidersTransform.FindNextSameColorTypeNote
::GlobalNamespace::NoteData* GlobalNamespace::BeatmapDataAddTestSlidersTransform::FindNextSameColorTypeNote(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BeatmapDataItem*>* beatmapDataItems, int startIndex, ::GlobalNamespace::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAddTestSlidersTransform::FindNextSameColorTypeNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataAddTestSlidersTransform", "FindNextSameColorTypeNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItems), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(colorType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapDataItems, startIndex, colorType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataMirrorTransform
#include "GlobalNamespace/BeatmapDataMirrorTransform.hpp"
// Including type: BeatmapDataMirrorTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataMirrorTransform_--c__DisplayClass0_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataMirrorTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataMirrorTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataMirrorTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataMirrorTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataMirrorTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataMirrorTransform_--c__DisplayClass0_0.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 numberOfLines
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataMirrorTransform::$$c__DisplayClass0_0::dyn_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataMirrorTransform::$$c__DisplayClass0_0::dyn_numberOfLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberOfLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataMirrorTransform/<>c__DisplayClass0_0.<CreateTransformedData>g__ProcessData|0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataMirrorTransform::$$c__DisplayClass0_0::$CreateTransformedData$g__ProcessData_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataMirrorTransform::$$c__DisplayClass0_0::<CreateTransformedData>g__ProcessData|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataNoArrowsTransform
#include "GlobalNamespace/BeatmapDataNoArrowsTransform.hpp"
// Including type: BeatmapDataNoArrowsTransform/<>c
#include "GlobalNamespace/BeatmapDataNoArrowsTransform_--c.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataNoArrowsTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataNoArrowsTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataNoArrowsTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataNoArrowsTransform/<>c
#include "GlobalNamespace/BeatmapDataNoArrowsTransform_--c.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapDataNoArrowsTransform/<>c <>9
::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c* GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c*>("", "BeatmapDataNoArrowsTransform/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapDataNoArrowsTransform/<>c <>9
void GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_set_$$9(::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapDataNoArrowsTransform/<>c", "<>9", value)));
}
// Autogenerated method: BeatmapDataNoArrowsTransform/<>c..cctor
void GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataNoArrowsTransform/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapDataNoArrowsTransform/<>c.<CreateTransformedData>g__ProcessData|0_0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::$CreateTransformedData$g__ProcessData_0_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::<CreateTransformedData>g__ProcessData|0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesAndBombsTransform
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform.hpp"
// Including type: BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform_--c__DisplayClass0_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData, ::GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType, bool noBombs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesAndBombsTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(enabledObstaclesType), ::il2cpp_utils::ExtractType(noBombs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, enabledObstaclesType, noBombs);
}
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform.ShouldUseBeatmapDataItem
bool GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::ShouldUseBeatmapDataItem(::GlobalNamespace::BeatmapDataItem* beatmapDataItem, ::GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType, bool noBombs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::ShouldUseBeatmapDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesAndBombsTransform", "ShouldUseBeatmapDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem), ::il2cpp_utils::ExtractType(enabledObstaclesType), ::il2cpp_utils::ExtractType(noBombs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapDataItem, enabledObstaclesType, noBombs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform_--c__DisplayClass0_0.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GameplayModifiers/EnabledObstacleType enabledObstaclesType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers::EnabledObstacleType& GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::dyn_enabledObstaclesType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::dyn_enabledObstaclesType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledObstaclesType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers::EnabledObstacleType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noBombs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::dyn_noBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::dyn_noBombs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noBombs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0.<CreateTransformedData>g__ProcessData|0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::$CreateTransformedData$g__ProcessData_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::<CreateTransformedData>g__ProcessData|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesMergingTransform
#include "GlobalNamespace/BeatmapDataObstaclesMergingTransform.hpp"
// Including type: BeatmapDataObstaclesMergingTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataObstaclesMergingTransform_--c__DisplayClass0_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataObstaclesMergingTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataObstaclesMergingTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesMergingTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesMergingTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated method: BeatmapDataObstaclesMergingTransform.CanBeMerged
bool GlobalNamespace::BeatmapDataObstaclesMergingTransform::CanBeMerged(::GlobalNamespace::ObstacleData* firstObstacle, ::GlobalNamespace::ObstacleData* secondObstacle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesMergingTransform::CanBeMerged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesMergingTransform", "CanBeMerged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstObstacle), ::il2cpp_utils::ExtractType(secondObstacle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, firstObstacle, secondObstacle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesMergingTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataObstaclesMergingTransform_--c__DisplayClass0_0.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ObstacleData[] prevObstacleDataInLines
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ObstacleData*>& GlobalNamespace::BeatmapDataObstaclesMergingTransform::$$c__DisplayClass0_0::dyn_prevObstacleDataInLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesMergingTransform::$$c__DisplayClass0_0::dyn_prevObstacleDataInLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevObstacleDataInLines"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ObstacleData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataObstaclesMergingTransform/<>c__DisplayClass0_0.<CreateTransformedData>g__ProcessData|0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataObstaclesMergingTransform::$$c__DisplayClass0_0::$CreateTransformedData$g__ProcessData_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesMergingTransform::$$c__DisplayClass0_0::<CreateTransformedData>g__ProcessData|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataStrobeFilterTransform
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform.hpp"
// Including type: BeatmapDataStrobeFilterTransform/StrobeStreakData
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform_StrobeStreakData.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxSecondsToConsiderStrobe
float GlobalNamespace::BeatmapDataStrobeFilterTransform::_get_kMaxSecondsToConsiderStrobe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::_get_kMaxSecondsToConsiderStrobe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapDataStrobeFilterTransform", "kMaxSecondsToConsiderStrobe"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxSecondsToConsiderStrobe
void GlobalNamespace::BeatmapDataStrobeFilterTransform::_set_kMaxSecondsToConsiderStrobe(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::_set_kMaxSecondsToConsiderStrobe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataStrobeFilterTransform", "kMaxSecondsToConsiderStrobe", value));
}
// Autogenerated method: BeatmapDataStrobeFilterTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataStrobeFilterTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData, ::GlobalNamespace::EnvironmentIntensityReductionOptions* environmentIntensityReductionOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataStrobeFilterTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(environmentIntensityReductionOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, environmentIntensityReductionOptions);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform.GetOnEventDataValue
int GlobalNamespace::BeatmapDataStrobeFilterTransform::GetOnEventDataValue(::GlobalNamespace::EnvironmentColorType lightColorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::GetOnEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataStrobeFilterTransform", "GetOnEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightColorType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightColorType);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform.GetFlashAndFadeToBlackEventDataValue
int GlobalNamespace::BeatmapDataStrobeFilterTransform::GetFlashAndFadeToBlackEventDataValue(::GlobalNamespace::EnvironmentColorType lightColorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::GetFlashAndFadeToBlackEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataStrobeFilterTransform", "GetFlashAndFadeToBlackEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightColorType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightColorType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataStrobeFilterTransform/StrobeStreakData
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform_StrobeStreakData.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strobeStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_strobeStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_strobeStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strobeStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentColorType startColorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorType& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_startColorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_startColorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startColorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastSwitchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastSwitchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastSwitchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSwitchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentColorType lastColorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorType& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastColorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastColorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastColorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lastIsOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastIsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastIsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BasicBeatmapEventData originalBasicBeatmapEventData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicBeatmapEventData*& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_originalBasicBeatmapEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_originalBasicBeatmapEventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalBasicBeatmapEventData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _foundFirstColoredEventData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn__foundFirstColoredEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn__foundFirstColoredEventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foundFirstColoredEventData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform/StrobeStreakData.StartPotentialStrobe
void GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::StartPotentialStrobe(::GlobalNamespace::BasicBeatmapEventData* startBasicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::StartPotentialStrobe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPotentialStrobe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startBasicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startBasicBeatmapEventData);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform/StrobeStreakData.AddStrobeData
void GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::AddStrobeData(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::AddStrobeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStrobeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataTransformHelper
#include "GlobalNamespace/BeatmapDataTransformHelper.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: EnvironmentEffectsFilterPreset
#include "GlobalNamespace/EnvironmentEffectsFilterPreset.hpp"
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataTransformHelper.CreateTransformedBeatmapData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataTransformHelper::CreateTransformedBeatmapData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData, ::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, bool leftHanded, ::GlobalNamespace::EnvironmentEffectsFilterPreset environmentEffectsFilterPreset, ::GlobalNamespace::EnvironmentIntensityReductionOptions* environmentIntensityReductionOptions, ::GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataTransformHelper::CreateTransformedBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "CreateTransformedBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(leftHanded), ::il2cpp_utils::ExtractType(environmentEffectsFilterPreset), ::il2cpp_utils::ExtractType(environmentIntensityReductionOptions), ::il2cpp_utils::ExtractType(mainSettingsModel)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, beatmapLevel, gameplayModifiers, leftHanded, environmentEffectsFilterPreset, environmentIntensityReductionOptions, mainSettingsModel);
}
// Autogenerated method: BeatmapDataTransformHelper.AddTestBurstSlider
void GlobalNamespace::BeatmapDataTransformHelper::AddTestBurstSlider(float time, float duration, int headLineIndex, ::GlobalNamespace::NoteLineLayer headNoteLineLayer, ::GlobalNamespace::NoteCutDirection headCutDirection, int tailLineIndex, ::GlobalNamespace::NoteLineLayer tailNoteLineLayer, ::GlobalNamespace::NoteCutDirection tailCutDirection, int sliceCount, float squishAmount, ::GlobalNamespace::BeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataTransformHelper::AddTestBurstSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "AddTestBurstSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(headLineIndex), ::il2cpp_utils::ExtractType(headNoteLineLayer), ::il2cpp_utils::ExtractType(headCutDirection), ::il2cpp_utils::ExtractType(tailLineIndex), ::il2cpp_utils::ExtractType(tailNoteLineLayer), ::il2cpp_utils::ExtractType(tailCutDirection), ::il2cpp_utils::ExtractType(sliceCount), ::il2cpp_utils::ExtractType(squishAmount), ::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, duration, headLineIndex, headNoteLineLayer, headCutDirection, tailLineIndex, tailNoteLineLayer, tailCutDirection, sliceCount, squishAmount, beatmapData);
}
// Autogenerated method: BeatmapDataTransformHelper.AddTestSlider
void GlobalNamespace::BeatmapDataTransformHelper::AddTestSlider(float time, float duration, int headLineIndex, ::GlobalNamespace::NoteLineLayer headNoteLineLayer, ::GlobalNamespace::NoteCutDirection headCutDirection, float headControlPointLength, int tailLineIndex, ::GlobalNamespace::NoteLineLayer tailNoteLineLayer, ::GlobalNamespace::NoteCutDirection tailCutDirection, float tailControlPointLength, bool hasHeadNote, bool hasTailNote, ::GlobalNamespace::BeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataTransformHelper::AddTestSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "AddTestSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(headLineIndex), ::il2cpp_utils::ExtractType(headNoteLineLayer), ::il2cpp_utils::ExtractType(headCutDirection), ::il2cpp_utils::ExtractType(headControlPointLength), ::il2cpp_utils::ExtractType(tailLineIndex), ::il2cpp_utils::ExtractType(tailNoteLineLayer), ::il2cpp_utils::ExtractType(tailCutDirection), ::il2cpp_utils::ExtractType(tailControlPointLength), ::il2cpp_utils::ExtractType(hasHeadNote), ::il2cpp_utils::ExtractType(hasTailNote), ::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, duration, headLineIndex, headNoteLineLayer, headCutDirection, headControlPointLength, tailLineIndex, tailNoteLineLayer, tailCutDirection, tailControlPointLength, hasHeadNote, hasTailNote, beatmapData);
}
// Autogenerated method: BeatmapDataTransformHelper.IsObstaclesMergingNeeded
bool GlobalNamespace::BeatmapDataTransformHelper::IsObstaclesMergingNeeded(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, bool screenDisplacementEffectsEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataTransformHelper::IsObstaclesMergingNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "IsObstaclesMergingNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(screenDisplacementEffectsEnabled)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevel, screenDisplacementEffectsEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataZenModeTransform
#include "GlobalNamespace/BeatmapDataZenModeTransform.hpp"
// Including type: BeatmapDataZenModeTransform/<>c
#include "GlobalNamespace/BeatmapDataZenModeTransform_--c.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataZenModeTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataZenModeTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataZenModeTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataZenModeTransform/<>c
#include "GlobalNamespace/BeatmapDataZenModeTransform_--c.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapDataZenModeTransform/<>c <>9
::GlobalNamespace::BeatmapDataZenModeTransform::$$c* GlobalNamespace::BeatmapDataZenModeTransform::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDataZenModeTransform::$$c*>("", "BeatmapDataZenModeTransform/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapDataZenModeTransform/<>c <>9
void GlobalNamespace::BeatmapDataZenModeTransform::$$c::_set_$$9(::GlobalNamespace::BeatmapDataZenModeTransform::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapDataZenModeTransform/<>c", "<>9", value)));
}
// Autogenerated method: BeatmapDataZenModeTransform/<>c..cctor
void GlobalNamespace::BeatmapDataZenModeTransform::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataZenModeTransform/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapDataZenModeTransform/<>c.<CreateTransformedData>g__ProcessData|0_0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataZenModeTransform::$$c::$CreateTransformedData$g__ProcessData_0_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::$$c::<CreateTransformedData>g__ProcessData|0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRating
#include "GlobalNamespace/BeatmapObjectExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <time>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapObjectExecutionRating::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRating::dyn_$time$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectExecutionRating.get_time
float GlobalNamespace::BeatmapObjectExecutionRating::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRating::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombExecutionRating
#include "GlobalNamespace/BombExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BombExecutionRating/Rating <rating>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BombExecutionRating::Rating& GlobalNamespace::BombExecutionRating::dyn_$rating$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::dyn_$rating$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rating>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BombExecutionRating::Rating*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BombExecutionRating.get_rating
::GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::get_rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::get_rating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BombExecutionRating::Rating, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombExecutionRating/Rating
#include "GlobalNamespace/BombExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BombExecutionRating/Rating OK
::GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::Rating::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BombExecutionRating::Rating>("", "BombExecutionRating/Rating", "OK"));
}
// Autogenerated static field setter
// Set static field: static public BombExecutionRating/Rating OK
void GlobalNamespace::BombExecutionRating::Rating::_set_OK(::GlobalNamespace::BombExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BombExecutionRating/Rating", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public BombExecutionRating/Rating NotGood
::GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::Rating::_get_NotGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::_get_NotGood");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BombExecutionRating::Rating>("", "BombExecutionRating/Rating", "NotGood"));
}
// Autogenerated static field setter
// Set static field: static public BombExecutionRating/Rating NotGood
void GlobalNamespace::BombExecutionRating::Rating::_set_NotGood(::GlobalNamespace::BombExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::_set_NotGood");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BombExecutionRating/Rating", "NotGood", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BombExecutionRating::Rating::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BookmarksFoldersModel
#include "GlobalNamespace/BookmarksFoldersModel.hpp"
// Including type: BookmarksFoldersModel/<>c
#include "GlobalNamespace/BookmarksFoldersModel_--c.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] myFolders
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::BookmarksFoldersModel::dyn_myFolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::dyn_myFolders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myFolders"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FileBrowserItem[] _bookmarksFolders
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FileBrowserItem*>& GlobalNamespace::BookmarksFoldersModel::dyn__bookmarksFolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::dyn__bookmarksFolders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bookmarksFolders"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FileBrowserItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BookmarksFoldersModel.get_bookmarksFolders
::ArrayW<::GlobalNamespace::FileBrowserItem*> GlobalNamespace::BookmarksFoldersModel::get_bookmarksFolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::get_bookmarksFolders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bookmarksFolders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::FileBrowserItem*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BookmarksFoldersModel/<>c
#include "GlobalNamespace/BookmarksFoldersModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BookmarksFoldersModel/<>c <>9
::GlobalNamespace::BookmarksFoldersModel::$$c* GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BookmarksFoldersModel::$$c*>("", "BookmarksFoldersModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BookmarksFoldersModel/<>c <>9
void GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9(::GlobalNamespace::BookmarksFoldersModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BookmarksFoldersModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Environment/System.SpecialFolder,System.String> <>9__3_0
::System::Func_2<::System::Environment::SpecialFolder, ::StringW>* GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Environment::SpecialFolder, ::StringW>*>("", "BookmarksFoldersModel/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Environment/System.SpecialFolder,System.String> <>9__3_0
void GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9__3_0(::System::Func_2<::System::Environment::SpecialFolder, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BookmarksFoldersModel/<>c", "<>9__3_0", value)));
}
// Autogenerated method: BookmarksFoldersModel/<>c..cctor
void GlobalNamespace::BookmarksFoldersModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BookmarksFoldersModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BookmarksFoldersModel/<>c.<get_bookmarksFolders>b__3_0
::StringW GlobalNamespace::BookmarksFoldersModel::$$c::$get_bookmarksFolders$b__3_0(::System::Environment::SpecialFolder specialFolder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::<get_bookmarksFolders>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_bookmarksFolders>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specialFolder)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, specialFolder);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomLevelLoader
#include "GlobalNamespace/CustomLevelLoader.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::CustomLevelLoader::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _defaultEnvironmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::CustomLevelLoader::dyn__defaultEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__defaultEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultEnvironmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _defaultAllDirectionsEnvironmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::CustomLevelLoader::dyn__defaultAllDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__defaultAllDirectionsEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultAllDirectionsEnvironmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentsListSO _environmentSceneInfoCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentsListSO*& GlobalNamespace::CustomLevelLoader::dyn__environmentSceneInfoCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__environmentSceneInfoCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSceneInfoCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentsListSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _defaultPackCover
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CustomLevelLoader::dyn__defaultPackCover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__defaultPackCover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultPackCover"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _smallDefaultPackCover
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CustomLevelLoader::dyn__smallDefaultPackCover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__smallDefaultPackCover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallDefaultPackCover"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeeplinkManagerToDestinationRequestManagerAdapter
#include "GlobalNamespace/DeeplinkManagerToDestinationRequestManagerAdapter.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: IDeeplinkManager
#include "GlobalNamespace/IDeeplinkManager.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelsModel _beatmapLevelsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MenuDestination> didSendMenuDestinationRequestEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MenuDestination*>*& GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn_didSendMenuDestinationRequestEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn_didSendMenuDestinationRequestEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSendMenuDestinationRequestEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MenuDestination*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuDestination _currentMenuDestinationRequest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__currentMenuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__currentMenuDestinationRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentMenuDestinationRequest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.get_currentMenuDestinationRequest
::GlobalNamespace::MenuDestination* GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::get_currentMenuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::get_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(this, ___internal__method);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.set_currentMenuDestinationRequest
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::set_currentMenuDestinationRequest(::GlobalNamespace::MenuDestination* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::set_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.add_didSendMenuDestinationRequestEvent
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::add_didSendMenuDestinationRequestEvent(::System::Action_1<::GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::add_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.remove_didSendMenuDestinationRequestEvent
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::remove_didSendMenuDestinationRequestEvent(::System::Action_1<::GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::remove_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.Init
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Init(::GlobalNamespace::IDeeplinkManager* deeplinkManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplinkManager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deeplinkManager);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.Clear
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.HandleDeeplinkManagerDidReceiveDeeplink
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::HandleDeeplinkManagerDidReceiveDeeplink(::GlobalNamespace::Deeplink* deeplink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::HandleDeeplinkManagerDidReceiveDeeplink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDeeplinkManagerDidReceiveDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplink)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deeplink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDeeplinkManager
#include "GlobalNamespace/IDeeplinkManager.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDeeplinkManager.get_currentDeeplink
::GlobalNamespace::Deeplink* GlobalNamespace::IDeeplinkManager::get_currentDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDeeplinkManager::get_currentDeeplink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Deeplink*, false>(this, ___internal__method);
}
// Autogenerated method: IDeeplinkManager.add_didReceiveDeeplinkEvent
void GlobalNamespace::IDeeplinkManager::add_didReceiveDeeplinkEvent(::System::Action_1<::GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDeeplinkManager::add_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDeeplinkManager.remove_didReceiveDeeplinkEvent
void GlobalNamespace::IDeeplinkManager::remove_didReceiveDeeplinkEvent(::System::Action_1<::GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDeeplinkManager::remove_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Destination
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Destination"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LevelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_LevelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_LevelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LevelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String PackID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_PackID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_PackID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PackID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Difficulty
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_Difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_Difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Characteristic
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_Characteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_Characteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Characteristic"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MultiplayerLobbyCode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_MultiplayerLobbyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_MultiplayerLobbyCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerLobbyCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MultiplayerSecret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_MultiplayerSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_MultiplayerSecret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerSecret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 MultiplayerRoomId
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::Deeplink::dyn_MultiplayerRoomId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_MultiplayerRoomId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerRoomId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDestinationRequestManager
#include "GlobalNamespace/IDestinationRequestManager.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDestinationRequestManager.get_currentMenuDestinationRequest
::GlobalNamespace::MenuDestination* GlobalNamespace::IDestinationRequestManager::get_currentMenuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::get_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(this, ___internal__method);
}
// Autogenerated method: IDestinationRequestManager.set_currentMenuDestinationRequest
void GlobalNamespace::IDestinationRequestManager::set_currentMenuDestinationRequest(::GlobalNamespace::MenuDestination* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::set_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.add_didSendMenuDestinationRequestEvent
void GlobalNamespace::IDestinationRequestManager::add_didSendMenuDestinationRequestEvent(::System::Action_1<::GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::add_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.remove_didSendMenuDestinationRequestEvent
void GlobalNamespace::IDestinationRequestManager::remove_didSendMenuDestinationRequestEvent(::System::Action_1<::GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::remove_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.Clear
void GlobalNamespace::IDestinationRequestManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController
#include "GlobalNamespace/MainMenuDestinationRequestController.hpp"
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
// Including type: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8
#include "GlobalNamespace/MainMenuDestinationRequestController_-ProcessDestinationRequest-d__8.hpp"
// Including type: IDestinationRequestManager
#include "GlobalNamespace/IDestinationRequestManager.hpp"
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IDestinationRequestManager _destinationRequestManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDestinationRequestManager*& GlobalNamespace::MainMenuDestinationRequestController::dyn__destinationRequestManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::dyn__destinationRequestManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destinationRequestManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDestinationRequestManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuScenesTransitionSetupDataSO _menuScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuScenesTransitionSetupDataSO*& GlobalNamespace::MainMenuDestinationRequestController::dyn__menuScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::dyn__menuScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::MainMenuDestinationRequestController::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::MainMenuDestinationRequestController::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainMenuDestinationRequestController.Initialize
void GlobalNamespace::MainMenuDestinationRequestController::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController.Dispose
void GlobalNamespace::MainMenuDestinationRequestController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController.HandleGameScenesManagerInstallEarlyBindings
void GlobalNamespace::MainMenuDestinationRequestController::HandleGameScenesManagerInstallEarlyBindings(::GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, ::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::HandleGameScenesManagerInstallEarlyBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerInstallEarlyBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenesTransitionSetupData), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scenesTransitionSetupData, container);
}
// Autogenerated method: MainMenuDestinationRequestController.HandleDestinationRequestManagerDidSendMenuDestinationRequest
void GlobalNamespace::MainMenuDestinationRequestController::HandleDestinationRequestManagerDidSendMenuDestinationRequest(::GlobalNamespace::MenuDestination* menuDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::HandleDestinationRequestManagerDidSendMenuDestinationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDestinationRequestManagerDidSendMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menuDestination);
}
// Autogenerated method: MainMenuDestinationRequestController.ProcessDestinationRequest
void GlobalNamespace::MainMenuDestinationRequestController::ProcessDestinationRequest(::GlobalNamespace::MenuDestination* menuDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::ProcessDestinationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menuDestination);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MenuDestination menuDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::dyn_menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::dyn_menuDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainMenuDestinationRequestController/<>c__DisplayClass8_0.<ProcessDestinationRequest>b__0
void GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::$ProcessDestinationRequest$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::<ProcessDestinationRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessDestinationRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8
#include "GlobalNamespace/MainMenuDestinationRequestController_-ProcessDestinationRequest-d__8.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MenuDestination menuDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_menuDestination");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MainMenuDestinationRequestController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainMenuDestinationRequestController*& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainMenuDestinationRequestController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainMenuDestinationRequestController/<>c__DisplayClass8_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0*& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8.MoveNext
void GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8.SetStateMachine
void GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectSubMenuDestination
#include "GlobalNamespace/SelectSubMenuDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly SelectSubMenuDestination/Destination menuDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectSubMenuDestination::Destination& GlobalNamespace::SelectSubMenuDestination::dyn_menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::dyn_menuDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SelectSubMenuDestination::Destination*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
