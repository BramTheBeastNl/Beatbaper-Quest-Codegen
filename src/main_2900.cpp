// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IFlyingObjectEffectDidFinishEvent
#include "GlobalNamespace/IFlyingObjectEffectDidFinishEvent.hpp"
// Including type: FlyingObjectEffect
#include "GlobalNamespace/FlyingObjectEffect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IFlyingObjectEffectDidFinishEvent.HandleFlyingObjectEffectDidFinish
void GlobalNamespace::IFlyingObjectEffectDidFinishEvent::HandleFlyingObjectEffectDidFinish_NEW(GlobalNamespace::FlyingObjectEffect* flyingObjectEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IFlyingObjectEffectDidFinishEvent::HandleFlyingObjectEffectDidFinish_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleFlyingObjectEffectDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flyingObjectEffect)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flyingObjectEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingObjectEffect
#include "GlobalNamespace/FlyingObjectEffect.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: IFlyingObjectEffectDidFinishEvent
#include "GlobalNamespace/IFlyingObjectEffectDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlyingObjectEffect.get_didFinishEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>* GlobalNamespace::FlyingObjectEffect::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: FlyingObjectEffect.InitAndPresent
void GlobalNamespace::FlyingObjectEffect::InitAndPresent(float duration, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion rotation, bool shake) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration, targetPos, rotation, shake)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration, targetPos, rotation, shake);
}
// Autogenerated method: FlyingObjectEffect.Update
void GlobalNamespace::FlyingObjectEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingObjectEffect.ManualUpdate
void GlobalNamespace::FlyingObjectEffect::ManualUpdate_NEW(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::ManualUpdate_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlyingScoreEffect
#include "GlobalNamespace/FlyingScoreEffect.hpp"
// Including type: FlyingScoreEffect/Pool
#include "GlobalNamespace/FlyingScoreEffect_Pool.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlyingScoreEffect.InitAndPresent
void GlobalNamespace::FlyingScoreEffect::InitAndPresent(GlobalNamespace::NoteCutInfo& noteCutInfo, int multiplier, float duration, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion rotation, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteCutInfo, multiplier, duration, targetPos, rotation, color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteCutInfo, multiplier, duration, targetPos, rotation, color);
}
// Autogenerated method: FlyingScoreEffect.HandleSaberSwingRatingCounterDidChange
void GlobalNamespace::FlyingScoreEffect::HandleSaberSwingRatingCounterDidChange_NEW(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter, float rating) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::HandleSaberSwingRatingCounterDidChange_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saberSwingRatingCounter, rating)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberSwingRatingCounter, rating);
}
// Autogenerated method: FlyingScoreEffect.GetScoreText
::Il2CppString* GlobalNamespace::FlyingScoreEffect::GetScoreText(int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::GetScoreText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetScoreText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(score)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, score);
}
// Autogenerated method: FlyingScoreEffect.HandleSaberSwingRatingCounterDidFinish
void GlobalNamespace::FlyingScoreEffect::HandleSaberSwingRatingCounterDidFinish_NEW(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::HandleSaberSwingRatingCounterDidFinish_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saberSwingRatingCounter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberSwingRatingCounter);
}
// Autogenerated method: FlyingScoreEffect.UnregisterCallbacksIfNeeded
void GlobalNamespace::FlyingScoreEffect::UnregisterCallbacksIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::UnregisterCallbacksIfNeeded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnregisterCallbacksIfNeeded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingScoreEffect.ManualUpdate
void GlobalNamespace::FlyingScoreEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingScoreEffect/Pool
#include "GlobalNamespace/FlyingScoreEffect_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlyingScoreEffect/Pool.OnDespawned
void GlobalNamespace::FlyingScoreEffect::Pool::OnDespawned(GlobalNamespace::FlyingScoreEffect* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::Pool::OnDespawned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDespawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(item)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingSpriteEffect
#include "GlobalNamespace/FlyingSpriteEffect.hpp"
// Including type: FlyingSpriteEffect/Pool
#include "GlobalNamespace/FlyingSpriteEffect_Pool.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlyingSpriteEffect.InitAndPresent
void GlobalNamespace::FlyingSpriteEffect::InitAndPresent(float duration, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion rotation, UnityEngine::Sprite* sprite, UnityEngine::Material* material, UnityEngine::Color color, bool shake) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration, targetPos, rotation, sprite, material, color, shake)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration, targetPos, rotation, sprite, material, color, shake);
}
// Autogenerated method: FlyingSpriteEffect.ManualUpdate
void GlobalNamespace::FlyingSpriteEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteEffect::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingSpriteEffect/Pool
#include "GlobalNamespace/FlyingSpriteEffect_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlyingTextEffect
#include "GlobalNamespace/FlyingTextEffect.hpp"
// Including type: FlyingTextEffect/Pool
#include "GlobalNamespace/FlyingTextEffect_Pool.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlyingTextEffect.InitAndPresent
void GlobalNamespace::FlyingTextEffect::InitAndPresent(::Il2CppString* text, float duration, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion rotation, UnityEngine::Color color, float fontSize, bool shake) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, duration, targetPos, rotation, color, fontSize, shake)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, duration, targetPos, rotation, color, fontSize, shake);
}
// Autogenerated method: FlyingTextEffect.ManualUpdate
void GlobalNamespace::FlyingTextEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextEffect::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingTextEffect/Pool
#include "GlobalNamespace/FlyingTextEffect_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GhostDuplicationEffect
#include "GlobalNamespace/GhostDuplicationEffect.hpp"
// Including type: GhostDuplicationEffect/GhostEffectParams
#include "GlobalNamespace/GhostDuplicationEffect_GhostEffectParams.hpp"
// Including type: GhostDuplicationEffect/<>c__DisplayClass7_0
#include "GlobalNamespace/GhostDuplicationEffect_--c__DisplayClass7_0.hpp"
// Including type: GhostDuplicationEffect/<HideRedundantWithDelay>d__8
#include "GlobalNamespace/GhostDuplicationEffect_-HideRedundantWithDelay-d__8.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GhostDuplicationEffect.OnDestroy
void GlobalNamespace::GhostDuplicationEffect::OnDestroy_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::OnDestroy_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.Awake
void GlobalNamespace::GhostDuplicationEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.Init
void GlobalNamespace::GhostDuplicationEffect::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.Animate
void GlobalNamespace::GhostDuplicationEffect::Animate(GlobalNamespace::GhostDuplicationEffect::GhostEffectParams ghostEffectParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::Animate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Animate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ghostEffectParams)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ghostEffectParams);
}
// Autogenerated method: GhostDuplicationEffect.HideRedundantWithDelay
System::Collections::IEnumerator* GlobalNamespace::GhostDuplicationEffect::HideRedundantWithDelay(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::HideRedundantWithDelay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HideRedundantWithDelay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delay)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: GhostDuplicationEffect.SetDistances
void GlobalNamespace::GhostDuplicationEffect::SetDistances(float distance, UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::SetDistances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetDistances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(distance, direction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, distance, direction);
}
// Autogenerated method: GhostDuplicationEffect.set_hide
void GlobalNamespace::GhostDuplicationEffect::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::set_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GhostDuplicationEffect.set_size
void GlobalNamespace::GhostDuplicationEffect::set_size(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::set_size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GhostDuplicationEffect.get_size
float GlobalNamespace::GhostDuplicationEffect::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::get_size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.set_alpha
void GlobalNamespace::GhostDuplicationEffect::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::set_alpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GhostDuplicationEffect.get_alpha
float GlobalNamespace::GhostDuplicationEffect::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::get_alpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostDuplicationEffect/<>c__DisplayClass7_0
#include "GlobalNamespace/GhostDuplicationEffect_--c__DisplayClass7_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GhostDuplicationEffect/<>c__DisplayClass7_0.<Animate>b__0
void GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::$Animate$b__0(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::<Animate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Animate>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: GhostDuplicationEffect/<>c__DisplayClass7_0.<Animate>b__1
void GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::$Animate$b__1(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::<Animate>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Animate>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: GhostDuplicationEffect/<>c__DisplayClass7_0.<Animate>b__2
void GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::$Animate$b__2(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::<Animate>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Animate>b__2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: GhostDuplicationEffect/<>c__DisplayClass7_0.<Animate>b__3
void GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::$Animate$b__3(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::<Animate>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Animate>b__3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GhostDuplicationEffect/<HideRedundantWithDelay>d__8
#include "GlobalNamespace/GhostDuplicationEffect_-HideRedundantWithDelay-d__8.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.System.IDisposable.Dispose
void GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.MoveNext
bool GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelFailedTextEffect
#include "GlobalNamespace/LevelFailedTextEffect.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelFailedTextEffect.ShowEffect
void GlobalNamespace::LevelFailedTextEffect::ShowEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFailedTextEffect::ShowEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShowEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentLightSimpleController
#include "GlobalNamespace/EnvironmentLightSimpleController.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentLightSimpleController.LateUpdate
void GlobalNamespace::EnvironmentLightSimpleController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentLightSimpleController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: MenuLightsManager/<Start>d__4
#include "GlobalNamespace/MenuLightsManager_-Start-d__4.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuLightsManager.Start
System::Collections::IEnumerator* GlobalNamespace::MenuLightsManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager.Update
void GlobalNamespace::MenuLightsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager.IsColorVeryCloseToColor
bool GlobalNamespace::MenuLightsManager::IsColorVeryCloseToColor(UnityEngine::Color color0, UnityEngine::Color color1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::IsColorVeryCloseToColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsColorVeryCloseToColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color0, color1)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, color0, color1);
}
// Autogenerated method: MenuLightsManager.SetColor
void GlobalNamespace::MenuLightsManager::SetColor(int lightId, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::SetColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lightId, color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightId, color);
}
// Autogenerated method: MenuLightsManager.CurrentColorForID
UnityEngine::Color GlobalNamespace::MenuLightsManager::CurrentColorForID(int lightId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::CurrentColorForID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CurrentColorForID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lightId)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, lightId);
}
// Autogenerated method: MenuLightsManager.SetColorsFromPreset
bool GlobalNamespace::MenuLightsManager::SetColorsFromPreset(GlobalNamespace::MenuLightsPresetSO* preset, float interpolationFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::SetColorsFromPreset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetColorsFromPreset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(preset, interpolationFactor)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, preset, interpolationFactor);
}
// Autogenerated method: MenuLightsManager.RefreshLightsDictForPreset
void GlobalNamespace::MenuLightsManager::RefreshLightsDictForPreset(GlobalNamespace::MenuLightsPresetSO* preset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::RefreshLightsDictForPreset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshLightsDictForPreset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(preset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, preset);
}
// Autogenerated method: MenuLightsManager.SetColorPreset
void GlobalNamespace::MenuLightsManager::SetColorPreset(GlobalNamespace::MenuLightsPresetSO* preset, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::SetColorPreset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetColorPreset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(preset, animated)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, preset, animated);
}
// Autogenerated method: MenuLightsManager.RefreshColors
void GlobalNamespace::MenuLightsManager::RefreshColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::RefreshColors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshColors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuLightsManager/<Start>d__4
#include "GlobalNamespace/MenuLightsManager_-Start-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuLightsManager/<Start>d__4.System.IDisposable.Dispose
void GlobalNamespace::MenuLightsManager::$Start$d__4::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::$Start$d__4::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.MoveNext
bool GlobalNamespace::MenuLightsManager::$Start$d__4::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::$Start$d__4::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MenuLightsManager::$Start$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::$Start$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::MenuLightsManager::$Start$d__4::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::$Start$d__4::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MenuLightsManager::$Start$d__4::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsManager::$Start$d__4::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutHapticEffect
#include "GlobalNamespace/NoteCutHapticEffect.hpp"
// Including type: Libraries.HM.HMLib.VR.HapticPresetSO
#include "Libraries/HM/HMLib/VR/HapticPresetSO.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteCutHapticEffect.HitNote
void GlobalNamespace::NoteCutHapticEffect::HitNote(GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutHapticEffect::HitNote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HitNote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saberType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutParticlesEffect
#include "GlobalNamespace/NoteCutParticlesEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteCutParticlesEffect.Awake
void GlobalNamespace::NoteCutParticlesEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutParticlesEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutParticlesEffect.SpawnParticles
void GlobalNamespace::NoteCutParticlesEffect::SpawnParticles(UnityEngine::Vector3 cutPoint, UnityEngine::Vector3 cutNormal, UnityEngine::Vector3 saberDir, float saberSpeed, UnityEngine::Vector3 noteMovementVec, UnityEngine::Color32 color, int sparkleParticlesCount, int explosionParticlesCount, float lifetimeMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutParticlesEffect::SpawnParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cutPoint, cutNormal, saberDir, saberSpeed, noteMovementVec, color, sparkleParticlesCount, explosionParticlesCount, lifetimeMultiplier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cutPoint, cutNormal, saberDir, saberSpeed, noteMovementVec, color, sparkleParticlesCount, explosionParticlesCount, lifetimeMultiplier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteTrailParticleSystem
#include "GlobalNamespace/NoteTrailParticleSystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteTrailParticleSystem.Awake
void GlobalNamespace::NoteTrailParticleSystem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailParticleSystem::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailParticleSystem.Emit
void GlobalNamespace::NoteTrailParticleSystem::Emit(UnityEngine::Vector3 startPos, UnityEngine::Vector3 endPos, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailParticleSystem::Emit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startPos, endPos, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startPos, endPos, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OneTimeLightColorEffect
#include "GlobalNamespace/OneTimeLightColorEffect.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OneTimeLightColorEffect.Update
void GlobalNamespace::OneTimeLightColorEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OneTimeLightColorEffect::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SaberBurnMarkArea
#include "GlobalNamespace/SaberBurnMarkArea.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SaberBurnMarkArea.Start
void GlobalNamespace::SaberBurnMarkArea::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkArea::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkArea.OnDestroy
void GlobalNamespace::SaberBurnMarkArea::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkArea::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkArea.OnEnable
void GlobalNamespace::SaberBurnMarkArea::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkArea::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkArea.OnDisable
void GlobalNamespace::SaberBurnMarkArea::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkArea::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkArea.GetBurnMarkPos
bool GlobalNamespace::SaberBurnMarkArea::GetBurnMarkPos(UnityEngine::Vector3 bladeBottomPos, UnityEngine::Vector3 bladeTopPos, UnityEngine::Vector3& burnMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkArea::GetBurnMarkPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBurnMarkPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bladeBottomPos, bladeTopPos, burnMarkPos)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bladeBottomPos, bladeTopPos, burnMarkPos);
}
// Autogenerated method: SaberBurnMarkArea.WorldToCameraBurnMarkPos
UnityEngine::Vector3 GlobalNamespace::SaberBurnMarkArea::WorldToCameraBurnMarkPos(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkArea::WorldToCameraBurnMarkPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WorldToCameraBurnMarkPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, pos);
}
// Autogenerated method: SaberBurnMarkArea.LateUpdate
void GlobalNamespace::SaberBurnMarkArea::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkArea::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SaberBurnMarkSparkles
#include "GlobalNamespace/SaberBurnMarkSparkles.hpp"
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SaberBurnMarkSparkles.Start
void GlobalNamespace::SaberBurnMarkSparkles::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkSparkles::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkSparkles.OnDestroy
void GlobalNamespace::SaberBurnMarkSparkles::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkSparkles::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkSparkles.OnEnable
void GlobalNamespace::SaberBurnMarkSparkles::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkSparkles::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkSparkles.OnDisable
void GlobalNamespace::SaberBurnMarkSparkles::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkSparkles::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkSparkles.GetBurnMarkPos
bool GlobalNamespace::SaberBurnMarkSparkles::GetBurnMarkPos(UnityEngine::Vector3 bladeBottomPos, UnityEngine::Vector3 bladeTopPos, UnityEngine::Vector3& burnMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkSparkles::GetBurnMarkPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBurnMarkPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bladeBottomPos, bladeTopPos, burnMarkPos)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bladeBottomPos, bladeTopPos, burnMarkPos);
}
// Autogenerated method: SaberBurnMarkSparkles.LateUpdate
void GlobalNamespace::SaberBurnMarkSparkles::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberBurnMarkSparkles::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberTrail
#include "GlobalNamespace/SaberTrail.hpp"
// Including type: SaberTrailRenderer
#include "GlobalNamespace/SaberTrailRenderer.hpp"
// Including type: IBladeMovementData
#include "GlobalNamespace/IBladeMovementData.hpp"
// Including type: TrailElementCollection
#include "GlobalNamespace/TrailElementCollection.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kIgnoredFramesCount
int GlobalNamespace::SaberTrail::_get_kIgnoredFramesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::_get_kIgnoredFramesCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SaberTrail", "kIgnoredFramesCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kIgnoredFramesCount
void GlobalNamespace::SaberTrail::_set_kIgnoredFramesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::_set_kIgnoredFramesCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrail", "kIgnoredFramesCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kSnapshotCapacityMargin
int GlobalNamespace::SaberTrail::_get_kSnapshotCapacityMargin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::_get_kSnapshotCapacityMargin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SaberTrail", "kSnapshotCapacityMargin"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kSnapshotCapacityMargin
void GlobalNamespace::SaberTrail::_set_kSnapshotCapacityMargin(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::_set_kSnapshotCapacityMargin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrail", "kSnapshotCapacityMargin", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kScaleCheckFramesInterval
int GlobalNamespace::SaberTrail::_get_kScaleCheckFramesInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::_get_kScaleCheckFramesInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SaberTrail", "kScaleCheckFramesInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kScaleCheckFramesInterval
void GlobalNamespace::SaberTrail::_set_kScaleCheckFramesInterval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::_set_kScaleCheckFramesInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrail", "kScaleCheckFramesInterval", value));
}
// Autogenerated method: SaberTrail.Awake
void GlobalNamespace::SaberTrail::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.Setup
void GlobalNamespace::SaberTrail::Setup(UnityEngine::Color color, GlobalNamespace::IBladeMovementData* movementData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::Setup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color, movementData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color, movementData);
}
// Autogenerated method: SaberTrail.Init
void GlobalNamespace::SaberTrail::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.ResetTrailData
void GlobalNamespace::SaberTrail::ResetTrailData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::ResetTrailData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetTrailData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.LateUpdate
void GlobalNamespace::SaberTrail::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.OnEnable
void GlobalNamespace::SaberTrail::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.OnDisable
void GlobalNamespace::SaberTrail::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.OnDestroy
void GlobalNamespace::SaberTrail::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.GetTrailWidth
float GlobalNamespace::SaberTrail::GetTrailWidth(GlobalNamespace::BladeMovementDataElement lastAddedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::GetTrailWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTrailWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lastAddedData)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lastAddedData);
}
// Autogenerated method: SaberTrail.OnDrawGizmosSelected
void GlobalNamespace::SaberTrail::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrail::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SaberTrailRenderer
#include "GlobalNamespace/SaberTrailRenderer.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TrailElementCollection
#include "GlobalNamespace/TrailElementCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD24360
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Bounds _bounds
UnityEngine::Bounds GlobalNamespace::SaberTrailRenderer::_get__bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::_get__bounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bounds>("", "SaberTrailRenderer", "_bounds"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Bounds _bounds
void GlobalNamespace::SaberTrailRenderer::_set__bounds(UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::_set__bounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrailRenderer", "_bounds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMinMotionBlurSpeed
float GlobalNamespace::SaberTrailRenderer::_get_kMinMotionBlurSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::_get_kMinMotionBlurSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberTrailRenderer", "kMinMotionBlurSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinMotionBlurSpeed
void GlobalNamespace::SaberTrailRenderer::_set_kMinMotionBlurSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::_set_kMinMotionBlurSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrailRenderer", "kMinMotionBlurSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMotionBlurStrength
float GlobalNamespace::SaberTrailRenderer::_get_kMotionBlurStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::_get_kMotionBlurStrength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberTrailRenderer", "kMotionBlurStrength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMotionBlurStrength
void GlobalNamespace::SaberTrailRenderer::_set_kMotionBlurStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::_set_kMotionBlurStrength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrailRenderer", "kMotionBlurStrength", value));
}
// Autogenerated method: SaberTrailRenderer.Init
void GlobalNamespace::SaberTrailRenderer::Init_NEW(float trailWidth, float trailDuration, int granularity, float whiteSectionMaxDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::Init_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trailWidth, trailDuration, granularity, whiteSectionMaxDuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, trailWidth, trailDuration, granularity, whiteSectionMaxDuration);
}
// Autogenerated method: SaberTrailRenderer.OnDestroy
void GlobalNamespace::SaberTrailRenderer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer.OnValidate
void GlobalNamespace::SaberTrailRenderer::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer.OnEnable
void GlobalNamespace::SaberTrailRenderer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer.OnDisable
void GlobalNamespace::SaberTrailRenderer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer.SetTrailWidth
void GlobalNamespace::SaberTrailRenderer::SetTrailWidth(float width) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::SetTrailWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTrailWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(width)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, width);
}
// Autogenerated method: SaberTrailRenderer.UpdateMesh
void GlobalNamespace::SaberTrailRenderer::UpdateMesh(GlobalNamespace::TrailElementCollection* trailElementCollection, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::UpdateMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trailElementCollection, color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, trailElementCollection, color);
}
// Autogenerated method: SaberTrailRenderer.UpdateVertices
void GlobalNamespace::SaberTrailRenderer::UpdateVertices_NEW(GlobalNamespace::TrailElementCollection* trailElementCollection, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::UpdateVertices_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVertices", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trailElementCollection, color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, trailElementCollection, color);
}
// Autogenerated method: SaberTrailRenderer.UpdateIndices
void GlobalNamespace::SaberTrailRenderer::UpdateIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::UpdateIndices");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateIndices", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer..cctor
void GlobalNamespace::SaberTrailRenderer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTrailRenderer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberTrailRenderer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SplineUtils
#include "GlobalNamespace/SplineUtils.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SplineUtils.Interpolate
UnityEngine::Vector3 GlobalNamespace::SplineUtils::Interpolate(UnityEngine::Vector3 t0, UnityEngine::Vector3 p0, UnityEngine::Vector3 p1, UnityEngine::Vector3 t1, float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SplineUtils::Interpolate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SplineUtils", "Interpolate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t0, p0, p1, t1, f)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t0, p0, p1, t1, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailElement
#include "GlobalNamespace/TrailElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrailElement.get_position
UnityEngine::Vector3 GlobalNamespace::TrailElement::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: TrailElement.set_position
void GlobalNamespace::TrailElement::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::set_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TrailElement.get_normal
UnityEngine::Vector3 GlobalNamespace::TrailElement::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::get_normal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_normal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: TrailElement.set_normal
void GlobalNamespace::TrailElement::set_normal(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::set_normal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_normal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TrailElement.get_distance
float GlobalNamespace::TrailElement::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::get_distance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_distance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrailElement.set_distance
void GlobalNamespace::TrailElement::set_distance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::set_distance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_distance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TrailElement.get_time
float GlobalNamespace::TrailElement::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::get_time");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrailElement.set_time
void GlobalNamespace::TrailElement::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::set_time");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TrailElement.SetData
void GlobalNamespace::TrailElement::SetData(UnityEngine::Vector3 start, UnityEngine::Vector3 end, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::SetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, end, time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, time);
}
// Autogenerated method: TrailElement.SetDistance
void GlobalNamespace::TrailElement::SetDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElement::SetDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TrailElementCollection
#include "GlobalNamespace/TrailElementCollection.hpp"
// Including type: TrailElement
#include "GlobalNamespace/TrailElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrailElementCollection.get_capacity
int GlobalNamespace::TrailElementCollection::get_capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::get_capacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_capacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TrailElementCollection.get_head
GlobalNamespace::TrailElement* GlobalNamespace::TrailElementCollection::get_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::get_head");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_head", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::TrailElement*, false>(this, ___internal__method);
}
// Autogenerated method: TrailElementCollection.get_Item
GlobalNamespace::TrailElement* GlobalNamespace::TrailElementCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::TrailElement*, false>(this, ___internal__method, index);
}
// Autogenerated method: TrailElementCollection.InitSnapshots
void GlobalNamespace::TrailElementCollection::InitSnapshots(UnityEngine::Vector3 defaultStartPosition, UnityEngine::Vector3 defaultEndPosition, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::InitSnapshots");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitSnapshots", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(defaultStartPosition, defaultEndPosition, time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, defaultStartPosition, defaultEndPosition, time);
}
// Autogenerated method: TrailElementCollection.MoveTailToHead
void GlobalNamespace::TrailElementCollection::MoveTailToHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::MoveTailToHead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveTailToHead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrailElementCollection.UpdateDistances
void GlobalNamespace::TrailElementCollection::UpdateDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::UpdateDistances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateDistances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrailElementCollection.InterpolateByLen
UnityEngine::Vector3 GlobalNamespace::TrailElementCollection::InterpolateByLen(float tl) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::InterpolateByLen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InterpolateByLen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tl)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, tl);
}
// Autogenerated method: TrailElementCollection.InterpolateNormalByLen
UnityEngine::Vector3 GlobalNamespace::TrailElementCollection::InterpolateNormalByLen(float tl) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::InterpolateNormalByLen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InterpolateNormalByLen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tl)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, tl);
}
// Autogenerated method: TrailElementCollection.InterpolateTimeByLen
float GlobalNamespace::TrailElementCollection::InterpolateTimeByLen(float tl) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::InterpolateTimeByLen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InterpolateTimeByLen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tl)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, tl);
}
// Autogenerated method: TrailElementCollection.LenToSegment
int GlobalNamespace::TrailElementCollection::LenToSegment(float t, float& localF) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::LenToSegment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LenToSegment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, localF)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, t, localF);
}
// Autogenerated method: TrailElementCollection.GetElementWithinBoundary
GlobalNamespace::TrailElement* GlobalNamespace::TrailElementCollection::GetElementWithinBoundary(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailElementCollection::GetElementWithinBoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetElementWithinBoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::TrailElement*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShockwaveEffect
#include "GlobalNamespace/ShockwaveEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShockwaveEffect.Start
void GlobalNamespace::ShockwaveEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShockwaveEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShockwaveEffect.SpawnShockwave
void GlobalNamespace::ShockwaveEffect::SpawnShockwave(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShockwaveEffect::SpawnShockwave");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnShockwave", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnLaserAnimation
#include "GlobalNamespace/SpawnLaserAnimation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SpawnLaserAnimation.InitIfNeeded
void GlobalNamespace::SpawnLaserAnimation::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnLaserAnimation::InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitIfNeeded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnLaserAnimation.LateUpdate
void GlobalNamespace::SpawnLaserAnimation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnLaserAnimation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HeadObstacleLowPassAudioEffect
#include "GlobalNamespace/HeadObstacleLowPassAudioEffect.hpp"
// Including type: PlayerHeadAndObstacleInteraction
#include "GlobalNamespace/PlayerHeadAndObstacleInteraction.hpp"
// Including type: MainAudioEffects
#include "GlobalNamespace/MainAudioEffects.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HeadObstacleLowPassAudioEffect.Update
void GlobalNamespace::HeadObstacleLowPassAudioEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HeadObstacleLowPassAudioEffect::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairRotationEventEffect
#include "GlobalNamespace/LightPairRotationEventEffect.hpp"
// Including type: LightPairRotationEventEffect/RotationData
#include "GlobalNamespace/LightPairRotationEventEffect_RotationData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::LightPairRotationEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightPairRotationEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::LightPairRotationEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightPairRotationEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated method: LightPairRotationEventEffect.Start
void GlobalNamespace::LightPairRotationEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairRotationEventEffect.Update
void GlobalNamespace::LightPairRotationEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairRotationEventEffect.OnDestroy
void GlobalNamespace::LightPairRotationEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairRotationEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::LightPairRotationEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: LightPairRotationEventEffect.UpdateRotationData
void GlobalNamespace::LightPairRotationEventEffect::UpdateRotationData(int beatmapEventDataValue, GlobalNamespace::LightPairRotationEventEffect::RotationData* rotationData, float startRotationOffset, float direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::UpdateRotationData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateRotationData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventDataValue, rotationData, startRotationOffset, direction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventDataValue, rotationData, startRotationOffset, direction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairRotationEventEffect/RotationData
#include "GlobalNamespace/LightPairRotationEventEffect_RotationData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationEventEffect
#include "GlobalNamespace/LightRotationEventEffect.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::LightRotationEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightRotationEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::LightRotationEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated method: LightRotationEventEffect.Start
void GlobalNamespace::LightRotationEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.Update
void GlobalNamespace::LightRotationEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.OnDestroy
void GlobalNamespace::LightRotationEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::LightRotationEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightSwitchEventEffect
#include "GlobalNamespace/LightSwitchEventEffect.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFadeSpeed
float GlobalNamespace::LightSwitchEventEffect::_get_kFadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get_kFadeSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightSwitchEventEffect", "kFadeSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFadeSpeed
void GlobalNamespace::LightSwitchEventEffect::_set_kFadeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set_kFadeSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightSwitchEventEffect", "kFadeSpeed", value));
}
// Autogenerated method: LightSwitchEventEffect.get_lightsId
int GlobalNamespace::LightSwitchEventEffect::get_lightsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::get_lightsId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lightsId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.Start
void GlobalNamespace::LightSwitchEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.OnDestroy
void GlobalNamespace::LightSwitchEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.Update
void GlobalNamespace::LightSwitchEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::LightSwitchEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: LightSwitchEventEffect.ProcessLightSwitchEvent
void GlobalNamespace::LightSwitchEventEffect::ProcessLightSwitchEvent(int beatmapEventDataValue, bool updateColorsOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::ProcessLightSwitchEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessLightSwitchEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventDataValue, updateColorsOnly)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventDataValue, updateColorsOnly);
}
// Autogenerated method: LightSwitchEventEffect.GetNormalColor
UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::GetNormalColor(int beatmapEventValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::GetNormalColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNormalColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventValue)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, beatmapEventValue);
}
// Autogenerated method: LightSwitchEventEffect.GetHighlightColor
UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::GetHighlightColor(int beatmapEventValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::GetHighlightColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHighlightColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventValue)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, beatmapEventValue);
}
// Autogenerated method: LightSwitchEventEffect.SetColor
void GlobalNamespace::LightSwitchEventEffect::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::SetColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionClearedEnvironmentEffect
#include "GlobalNamespace/MissionClearedEnvironmentEffect.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionClearedEnvironmentEffect.Awake
void GlobalNamespace::MissionClearedEnvironmentEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionClearedEnvironmentEffect.OnDestroy
void GlobalNamespace::MissionClearedEnvironmentEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionClearedEnvironmentEffect.HandleMissionObjectiveCheckersManagerObjectiveWasCleared
void GlobalNamespace::MissionClearedEnvironmentEffect::HandleMissionObjectiveCheckersManagerObjectiveWasCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::HandleMissionObjectiveCheckersManagerObjectiveWasCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckersManagerObjectiveWasCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteTrailEffect
#include "GlobalNamespace/NoteTrailEffect.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: NoteTrailParticleSystem
#include "GlobalNamespace/NoteTrailParticleSystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteTrailEffect.Awake
void GlobalNamespace::NoteTrailEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.OnDestroy
void GlobalNamespace::NoteTrailEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.Update
void GlobalNamespace::NoteTrailEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.HandleNoteMovementDidInit
void GlobalNamespace::NoteTrailEffect::HandleNoteMovementDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::HandleNoteMovementDidInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteMovementDidInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.HandleNoteDidStartJump
void GlobalNamespace::NoteTrailEffect::HandleNoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::HandleNoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidStartJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleSaberSparkleEffect
#include "GlobalNamespace/ObstacleSaberSparkleEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObstacleSaberSparkleEffect.set_color
void GlobalNamespace::ObstacleSaberSparkleEffect::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::set_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleSaberSparkleEffect.Awake
void GlobalNamespace::ObstacleSaberSparkleEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffect.SetPositionAndRotation
void GlobalNamespace::ObstacleSaberSparkleEffect::SetPositionAndRotation(UnityEngine::Vector3 pos, UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos, rot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos, rot);
}
// Autogenerated method: ObstacleSaberSparkleEffect.StartEmission
void GlobalNamespace::ObstacleSaberSparkleEffect::StartEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::StartEmission");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartEmission", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffect.StopEmission
void GlobalNamespace::ObstacleSaberSparkleEffect::StopEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::StopEmission");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopEmission", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ParticleSystemEventEffect
#include "GlobalNamespace/ParticleSystemEventEffect.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ParticleSystemEventEffect.Start
void GlobalNamespace::ParticleSystemEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.OnDestroy
void GlobalNamespace::ParticleSystemEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.Update
void GlobalNamespace::ParticleSystemEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::ParticleSystemEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: ParticleSystemEventEffect.RefreshParticles
void GlobalNamespace::ParticleSystemEventEffect::RefreshParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::RefreshParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberClashEffect
#include "GlobalNamespace/SaberClashEffect.hpp"
// Including type: Libraries.HM.HMLib.VR.HapticPresetSO
#include "Libraries/HM/HMLib/VR/HapticPresetSO.hpp"
// Including type: SaberClashChecker
#include "GlobalNamespace/SaberClashChecker.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SaberClashEffect.Start
void GlobalNamespace::SaberClashEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberClashEffect.OnDisable
void GlobalNamespace::SaberClashEffect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberClashEffect.LateUpdate
void GlobalNamespace::SaberClashEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TunnelSmokeEventEffect
#include "GlobalNamespace/TunnelSmokeEventEffect.hpp"
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::TunnelSmokeEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "TunnelSmokeEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::TunnelSmokeEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TunnelSmokeEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxParticles
int GlobalNamespace::TunnelSmokeEventEffect::_get_kMaxParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get_kMaxParticles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "TunnelSmokeEventEffect", "kMaxParticles"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxParticles
void GlobalNamespace::TunnelSmokeEventEffect::_set_kMaxParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set_kMaxParticles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TunnelSmokeEventEffect", "kMaxParticles", value));
}
// Autogenerated method: TunnelSmokeEventEffect.Start
void GlobalNamespace::TunnelSmokeEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TunnelSmokeEventEffect.OnDestroy
void GlobalNamespace::TunnelSmokeEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TunnelSmokeEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::TunnelSmokeEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSpawnRotation
#include "GlobalNamespace/EnvironmentSpawnRotation.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: SpawnRotationProcessor
#include "GlobalNamespace/SpawnRotationProcessor.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD24888
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _spawnRotationID
int GlobalNamespace::EnvironmentSpawnRotation::_get__spawnRotationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__spawnRotationID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentSpawnRotation", "_spawnRotationID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _spawnRotationID
void GlobalNamespace::EnvironmentSpawnRotation::_set__spawnRotationID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__spawnRotationID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSpawnRotation", "_spawnRotationID", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _numberOfActiveEnvironmentSpawnRotationObjects
int GlobalNamespace::EnvironmentSpawnRotation::_get__numberOfActiveEnvironmentSpawnRotationObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__numberOfActiveEnvironmentSpawnRotationObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentSpawnRotation", "_numberOfActiveEnvironmentSpawnRotationObjects"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _numberOfActiveEnvironmentSpawnRotationObjects
void GlobalNamespace::EnvironmentSpawnRotation::_set__numberOfActiveEnvironmentSpawnRotationObjects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__numberOfActiveEnvironmentSpawnRotationObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSpawnRotation", "_numberOfActiveEnvironmentSpawnRotationObjects", value));
}
// Autogenerated method: EnvironmentSpawnRotation.get_targetRotation
float GlobalNamespace::EnvironmentSpawnRotation::get_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::get_targetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_targetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.Awake
void GlobalNamespace::EnvironmentSpawnRotation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnEnable
void GlobalNamespace::EnvironmentSpawnRotation::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnDisable
void GlobalNamespace::EnvironmentSpawnRotation::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.Start
void GlobalNamespace::EnvironmentSpawnRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnDestroy
void GlobalNamespace::EnvironmentSpawnRotation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.BeatmapEventAtNoteSpawnCallback
void GlobalNamespace::EnvironmentSpawnRotation::BeatmapEventAtNoteSpawnCallback(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::BeatmapEventAtNoteSpawnCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeatmapEventAtNoteSpawnCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: EnvironmentSpawnRotation.FixedUpdate
void GlobalNamespace::EnvironmentSpawnRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.LateUpdate
void GlobalNamespace::EnvironmentSpawnRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation..cctor
void GlobalNamespace::EnvironmentSpawnRotation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "EnvironmentSpawnRotation", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlickeringNeonSign
#include "GlobalNamespace/FlickeringNeonSign.hpp"
// Including type: FlickeringNeonSign/<FlickeringCoroutine>d__18
#include "GlobalNamespace/FlickeringNeonSign_-FlickeringCoroutine-d__18.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlickeringNeonSign.Awake
void GlobalNamespace::FlickeringNeonSign::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.Start
void GlobalNamespace::FlickeringNeonSign::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.OnEnable
void GlobalNamespace::FlickeringNeonSign::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.FlickeringCoroutine
System::Collections::IEnumerator* GlobalNamespace::FlickeringNeonSign::FlickeringCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::FlickeringCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FlickeringCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.SetOn
void GlobalNamespace::FlickeringNeonSign::SetOn(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::SetOn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(on)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlickeringNeonSign/<FlickeringCoroutine>d__18
#include "GlobalNamespace/FlickeringNeonSign_-FlickeringCoroutine-d__18.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__18.System.IDisposable.Dispose
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__18.MoveNext
bool GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__18.System.Collections.IEnumerator.Reset
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__18::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingCar
#include "GlobalNamespace/FlyingCar.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlyingCar.Start
void GlobalNamespace::FlyingCar::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingCar.Update
void GlobalNamespace::FlyingCar::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingCar.UpdatePos
void GlobalNamespace::FlyingCar::UpdatePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::UpdatePos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdatePos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingGameHUDRotation
#include "GlobalNamespace/FlyingGameHUDRotation.hpp"
// Including type: BeatLineManager
#include "GlobalNamespace/BeatLineManager.hpp"
// Including type: EnvironmentSpawnRotation
#include "GlobalNamespace/EnvironmentSpawnRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlyingGameHUDRotation.Start
void GlobalNamespace::FlyingGameHUDRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingGameHUDRotation.FixedUpdate
void GlobalNamespace::FlyingGameHUDRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingGameHUDRotation.LateUpdate
void GlobalNamespace::FlyingGameHUDRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MovementBeatmapEventEffect
#include "GlobalNamespace/MovementBeatmapEventEffect.hpp"
// Including type: MovementBeatmapEventEffect/MovementData
#include "GlobalNamespace/MovementBeatmapEventEffect_MovementData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MovementBeatmapEventEffect.Start
void GlobalNamespace::MovementBeatmapEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.OnDestroy
void GlobalNamespace::MovementBeatmapEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.FixedUpdate
void GlobalNamespace::MovementBeatmapEventEffect::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.LateUpdate
void GlobalNamespace::MovementBeatmapEventEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::MovementBeatmapEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: MovementBeatmapEventEffect.SetLocalPositionOffsetsForAllObjects
void GlobalNamespace::MovementBeatmapEventEffect::SetLocalPositionOffsetsForAllObjects(UnityEngine::Vector3 localPositionOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::SetLocalPositionOffsetsForAllObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPositionOffsetsForAllObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localPositionOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localPositionOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MovementBeatmapEventEffect/MovementData
#include "GlobalNamespace/MovementBeatmapEventEffect_MovementData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MovementBeatmapEventEffect/MovementData.get_localPositionOffset
UnityEngine::Vector3 GlobalNamespace::MovementBeatmapEventEffect::MovementData::get_localPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::MovementData::get_localPositionOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localPositionOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RectangleFakeGlow
#include "GlobalNamespace/RectangleFakeGlow.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD24AE0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::RectangleFakeGlow::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "RectangleFakeGlow", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::RectangleFakeGlow::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RectangleFakeGlow", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD24AF0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sizeParamsID
int GlobalNamespace::RectangleFakeGlow::_get__sizeParamsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_get__sizeParamsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "RectangleFakeGlow", "_sizeParamsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sizeParamsID
void GlobalNamespace::RectangleFakeGlow::_set__sizeParamsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_set__sizeParamsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RectangleFakeGlow", "_sizeParamsID", value));
}
// Autogenerated method: RectangleFakeGlow.set_color
void GlobalNamespace::RectangleFakeGlow::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::set_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RectangleFakeGlow.get_color
UnityEngine::Color GlobalNamespace::RectangleFakeGlow::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::get_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.Awake
void GlobalNamespace::RectangleFakeGlow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.OnEnable
void GlobalNamespace::RectangleFakeGlow::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.OnDisable
void GlobalNamespace::RectangleFakeGlow::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.Refresh
void GlobalNamespace::RectangleFakeGlow::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::Refresh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow..cctor
void GlobalNamespace::RectangleFakeGlow::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "RectangleFakeGlow", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RectangleFakeGlowLightWithId
#include "GlobalNamespace/RectangleFakeGlowLightWithId.hpp"
// Including type: RectangleFakeGlow
#include "GlobalNamespace/RectangleFakeGlow.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RectangleFakeGlowLightWithId.get_color
UnityEngine::Color GlobalNamespace::RectangleFakeGlowLightWithId::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::get_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlowLightWithId.ColorWasSet
void GlobalNamespace::RectangleFakeGlowLightWithId::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::ColorWasSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RotateBySpawnRotation
#include "GlobalNamespace/RotateBySpawnRotation.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: SpawnRotationProcessor
#include "GlobalNamespace/SpawnRotationProcessor.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RotateBySpawnRotation.Awake
void GlobalNamespace::RotateBySpawnRotation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.Start
void GlobalNamespace::RotateBySpawnRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.OnDestroy
void GlobalNamespace::RotateBySpawnRotation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.BeatmapEventAtNoteSpawnCallback
void GlobalNamespace::RotateBySpawnRotation::BeatmapEventAtNoteSpawnCallback(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::BeatmapEventAtNoteSpawnCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeatmapEventAtNoteSpawnCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: RotateBySpawnRotation.FixedUpdate
void GlobalNamespace::RotateBySpawnRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.LateUpdate
void GlobalNamespace::RotateBySpawnRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnChevronObjectPoolsInstaller
#include "GlobalNamespace/SpawnChevronObjectPoolsInstaller.hpp"
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SpawnChevronObjectPoolsInstaller.InstallBindings
void GlobalNamespace::SpawnChevronObjectPoolsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnChevronObjectPoolsInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SpawnRotationChevron.SetLightAmount
void GlobalNamespace::SpawnRotationChevron::SetLightAmount(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::SetLightAmount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLightAmount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(amount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: SpawnRotationChevron.UpdateLights
void GlobalNamespace::SpawnRotationChevron::UpdateLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::UpdateLights");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLights", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevron.ColorWasSet
void GlobalNamespace::SpawnRotationChevron::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::ColorWasSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevronManager
#include "GlobalNamespace/SpawnRotationChevronManager.hpp"
// Including type: SpawnRotationChevronManager/DirectionData
#include "GlobalNamespace/SpawnRotationChevronManager_DirectionData.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: SpawnRotationProcessor
#include "GlobalNamespace/SpawnRotationProcessor.hpp"
// Including type: BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackData.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SpawnRotationChevronManager.Start
void GlobalNamespace::SpawnRotationChevronManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.Update
void GlobalNamespace::SpawnRotationChevronManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.OnDestroy
void GlobalNamespace::SpawnRotationChevronManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.HandleBeatmapObjectCallback
void GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectCallback(GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapObjectData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated method: SpawnRotationChevronManager.HandleBeatmapEventCallback
void GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapEventCallback(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapEventCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: SpawnRotationChevronManager.HandleBeatmapObjectSpawnControllerDidInit
void GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectSpawnControllerDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectSpawnControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectSpawnControllerDidInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevronManager/DirectionData
#include "GlobalNamespace/SpawnRotationChevronManager_DirectionData.hpp"
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BasicSpectrogramData
#include "GlobalNamespace/BasicSpectrogramData.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kNumberOfSamples
int GlobalNamespace::BasicSpectrogramData::_get_kNumberOfSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_get_kNumberOfSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BasicSpectrogramData", "kNumberOfSamples"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kNumberOfSamples
void GlobalNamespace::BasicSpectrogramData::_set_kNumberOfSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_set_kNumberOfSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicSpectrogramData", "kNumberOfSamples", value));
}
// Autogenerated method: BasicSpectrogramData.get_Samples
::Array<float>* GlobalNamespace::BasicSpectrogramData::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::get_Samples");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.get_ProcessedSamples
System::Collections::Generic::List_1<float>* GlobalNamespace::BasicSpectrogramData::get_ProcessedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::get_ProcessedSamples");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ProcessedSamples", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.Awake
void GlobalNamespace::BasicSpectrogramData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.LateUpdate
void GlobalNamespace::BasicSpectrogramData::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.ProcessSamples
void GlobalNamespace::BasicSpectrogramData::ProcessSamples(::Array<float>* sourceSamples, System::Collections::Generic::List_1<float>* processedSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::ProcessSamples");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessSamples", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceSamples, processedSamples)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceSamples, processedSamples);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Spectrogram
#include "GlobalNamespace/Spectrogram.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: BasicSpectrogramData
#include "GlobalNamespace/BasicSpectrogramData.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD24C60
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _spectrogramDataID
int GlobalNamespace::Spectrogram::_get__spectrogramDataID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_get__spectrogramDataID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Spectrogram", "_spectrogramDataID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _spectrogramDataID
void GlobalNamespace::Spectrogram::_set__spectrogramDataID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_set__spectrogramDataID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Spectrogram", "_spectrogramDataID", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock* GlobalNamespace::Spectrogram::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialPropertyBlock*>("", "Spectrogram", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::Spectrogram::_set__materialPropertyBlock(UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Spectrogram", "_materialPropertyBlock", value));
}
// Autogenerated method: Spectrogram.Awake
void GlobalNamespace::Spectrogram::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Spectrogram.Update
void GlobalNamespace::Spectrogram::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Spectrogram..cctor
void GlobalNamespace::Spectrogram::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Spectrogram", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StaticEnvironmentLights
#include "GlobalNamespace/StaticEnvironmentLights.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StaticEnvironmentLights.Awake
void GlobalNamespace::StaticEnvironmentLights::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StaticEnvironmentLights::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRing
#include "GlobalNamespace/TrackLaneRing.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrackLaneRing.get_destRotZ
float GlobalNamespace::TrackLaneRing::get_destRotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::get_destRotZ");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_destRotZ", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRing.Init
void GlobalNamespace::TrackLaneRing::Init(UnityEngine::Vector3 position, UnityEngine::Vector3 positionOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position, positionOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, positionOffset);
}
// Autogenerated method: TrackLaneRing.FixedUpdateRing
void GlobalNamespace::TrackLaneRing::FixedUpdateRing(float fixedDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::FixedUpdateRing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdateRing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fixedDeltaTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fixedDeltaTime);
}
// Autogenerated method: TrackLaneRing.LateUpdateRing
void GlobalNamespace::TrackLaneRing::LateUpdateRing(float interpolationFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::LateUpdateRing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdateRing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(interpolationFactor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, interpolationFactor);
}
// Autogenerated method: TrackLaneRing.SetDestRotation
void GlobalNamespace::TrackLaneRing::SetDestRotation(float destRotZ, float rotateSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::SetDestRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetDestRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(destRotZ, rotateSpeed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, destRotZ, rotateSpeed);
}
// Autogenerated method: TrackLaneRing.GetRotation
float GlobalNamespace::TrackLaneRing::GetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::GetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRing.GetDestinationRotation
float GlobalNamespace::TrackLaneRing::GetDestinationRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::GetDestinationRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDestinationRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRing.SetPosition
void GlobalNamespace::TrackLaneRing::SetPosition(float destPosZ, float moveSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::SetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(destPosZ, moveSpeed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, destPosZ, moveSpeed);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: TrackLaneRing
#include "GlobalNamespace/TrackLaneRing.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrackLaneRingsManager.get_ringPositionStep
float GlobalNamespace::TrackLaneRingsManager::get_ringPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::get_ringPositionStep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ringPositionStep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.get_Rings
::Array<GlobalNamespace::TrackLaneRing*>* GlobalNamespace::TrackLaneRingsManager::get_Rings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::get_Rings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Rings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::TrackLaneRing*>*, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.Awake
void GlobalNamespace::TrackLaneRingsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.FixedUpdate
void GlobalNamespace::TrackLaneRingsManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.LateUpdate
void GlobalNamespace::TrackLaneRingsManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.OnDrawGizmosSelected
void GlobalNamespace::TrackLaneRingsManager::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsPositionStepEffectSpawner
#include "GlobalNamespace/TrackLaneRingsPositionStepEffectSpawner.hpp"
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.Start
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.OnDestroy
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect.hpp"
// Including type: TrackLaneRingsRotationEffect/RingRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect_RingRotationEffect.hpp"
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrackLaneRingsRotationEffect.Awake
void GlobalNamespace::TrackLaneRingsRotationEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.Start
void GlobalNamespace::TrackLaneRingsRotationEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.FixedUpdate
void GlobalNamespace::TrackLaneRingsRotationEffect::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.AddRingRotationEffect
void GlobalNamespace::TrackLaneRingsRotationEffect::AddRingRotationEffect(float angle, float step, int propagationSpeed, float flexySpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::AddRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddRingRotationEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angle, step, propagationSpeed, flexySpeed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, angle, step, propagationSpeed, flexySpeed);
}
// Autogenerated method: TrackLaneRingsRotationEffect.GetFirstRingRotationAngle
float GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingRotationAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFirstRingRotationAngle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.GetFirstRingDestinationRotationAngle
float GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingDestinationRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingDestinationRotationAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFirstRingDestinationRotationAngle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.SpawnRingRotationEffect
GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect* GlobalNamespace::TrackLaneRingsRotationEffect::SpawnRingRotationEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::SpawnRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnRingRotationEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.RecycleRingRotationEffect
void GlobalNamespace::TrackLaneRingsRotationEffect::RecycleRingRotationEffect(GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect* ringRotationEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RecycleRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecycleRingRotationEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ringRotationEffect)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ringRotationEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffect/RingRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect_RingRotationEffect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffectSpawner
#include "GlobalNamespace/TrackLaneRingsRotationEffectSpawner.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: TrackLaneRingsRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.Start
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.OnDestroy
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffectSpawner/RotationStepType
#include "GlobalNamespace/TrackLaneRingsRotationEffectSpawner.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType Range0ToMax
GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_Range0ToMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_Range0ToMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType>("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "Range0ToMax"));
}
// Autogenerated static field setter
// Set static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType Range0ToMax
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_Range0ToMax(GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_Range0ToMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "Range0ToMax", value));
}
// Autogenerated static field getter
// Get static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType Range
GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_Range");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType>("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "Range"));
}
// Autogenerated static field setter
// Set static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType Range
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_Range(GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_Range");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "Range", value));
}
// Autogenerated static field getter
// Get static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType MaxOr0
GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_MaxOr0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_MaxOr0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType>("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "MaxOr0"));
}
// Autogenerated static field setter
// Set static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType MaxOr0
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_MaxOr0(GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_MaxOr0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "MaxOr0", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BuildInfoOverlay
#include "GlobalNamespace/BuildInfoOverlay.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildInfoOverlay.Start
void GlobalNamespace::BuildInfoOverlay::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BuildInfoOverlay::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ComboUIController
#include "GlobalNamespace/ComboUIController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ComboUIController.Start
void GlobalNamespace::ComboUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ComboUIController.OnEnable
void GlobalNamespace::ComboUIController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ComboUIController.OnDisable
void GlobalNamespace::ComboUIController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ComboUIController.RegisterForEvents
void GlobalNamespace::ComboUIController::RegisterForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::RegisterForEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterForEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ComboUIController.UnregisterFromEvents
void GlobalNamespace::ComboUIController::UnregisterFromEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::UnregisterFromEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnregisterFromEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ComboUIController.HandleComboDidChange
void GlobalNamespace::ComboUIController::HandleComboDidChange(int combo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::HandleComboDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleComboDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(combo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, combo);
}
// Autogenerated method: ComboUIController.HandleComboBreakingEventHappened
void GlobalNamespace::ComboUIController::HandleComboBreakingEventHappened() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::HandleComboBreakingEventHappened");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleComboBreakingEventHappened", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CoreGameHUDController
#include "GlobalNamespace/CoreGameHUDController.hpp"
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CoreGameHUDController.set_alpha
void GlobalNamespace::CoreGameHUDController::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::set_alpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CoreGameHUDController.Start
void GlobalNamespace::CoreGameHUDController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FeverModeUIPanel
#include "GlobalNamespace/FeverModeUIPanel.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FeverModeUIPanel.Start
void GlobalNamespace::FeverModeUIPanel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.OnDestroy
void GlobalNamespace::FeverModeUIPanel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.Update
void GlobalNamespace::FeverModeUIPanel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.SetProgress
void GlobalNamespace::FeverModeUIPanel::SetProgress(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::SetProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(progress)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: FeverModeUIPanel.HandleFeverModeDidStart
void GlobalNamespace::FeverModeUIPanel::HandleFeverModeDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::HandleFeverModeDidStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleFeverModeDidStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.HandleFeverModeDidFinish
void GlobalNamespace::FeverModeUIPanel::HandleFeverModeDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::HandleFeverModeDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleFeverModeDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.HandleFeverModeChargeProgressDidChange
void GlobalNamespace::FeverModeUIPanel::HandleFeverModeChargeProgressDidChange(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::HandleFeverModeChargeProgressDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleFeverModeChargeProgressDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(progress)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameEnergyUIPanel
#include "GlobalNamespace/GameEnergyUIPanel.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: IGameEnergyCounter
#include "GlobalNamespace/IGameEnergyCounter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameEnergyUIPanel.Start
void GlobalNamespace::GameEnergyUIPanel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyUIPanel.Init
void GlobalNamespace::GameEnergyUIPanel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyUIPanel.OnDestroy
void GlobalNamespace::GameEnergyUIPanel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyUIPanel.CreateUIForBatteryEnergyType
void GlobalNamespace::GameEnergyUIPanel::CreateUIForBatteryEnergyType(int batteryLives) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::CreateUIForBatteryEnergyType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateUIForBatteryEnergyType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(batteryLives)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, batteryLives);
}
// Autogenerated method: GameEnergyUIPanel.RefreshEnergyUI
void GlobalNamespace::GameEnergyUIPanel::RefreshEnergyUI(float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::RefreshEnergyUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshEnergyUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(energy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, energy);
}
// Autogenerated method: GameEnergyUIPanel.HandleGameEnergyCounterDidInit
void GlobalNamespace::GameEnergyUIPanel::HandleGameEnergyCounterDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::HandleGameEnergyCounterDidInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameEnergyCounterDidInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyUIPanel.HandleGameEnergyDidChange
void GlobalNamespace::GameEnergyUIPanel::HandleGameEnergyDidChange(float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::HandleGameEnergyDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameEnergyDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(energy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, energy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ImmediateRankUIPanel
#include "GlobalNamespace/ImmediateRankUIPanel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: RelativeScoreAndImmediateRankCounter
#include "GlobalNamespace/RelativeScoreAndImmediateRankCounter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ImmediateRankUIPanel.Start
void GlobalNamespace::ImmediateRankUIPanel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ImmediateRankUIPanel.HandleRelativeScoreAndImmediateRankCounterRelativeScoreOrImmediateRankDidChange
void GlobalNamespace::ImmediateRankUIPanel::HandleRelativeScoreAndImmediateRankCounterRelativeScoreOrImmediateRankDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::HandleRelativeScoreAndImmediateRankCounterRelativeScoreOrImmediateRankDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleRelativeScoreAndImmediateRankCounterRelativeScoreOrImmediateRankDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ImmediateRankUIPanel.RefreshUI
void GlobalNamespace::ImmediateRankUIPanel::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjectiveGameUIView
#include "GlobalNamespace/MissionObjectiveGameUIView.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: MissionObjectiveChecker
#include "GlobalNamespace/MissionObjectiveChecker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionObjectiveGameUIView.SetMissionObjectiveChecker
void GlobalNamespace::MissionObjectiveGameUIView::SetMissionObjectiveChecker(GlobalNamespace::MissionObjectiveChecker* missionObjectiveChecker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::SetMissionObjectiveChecker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMissionObjectiveChecker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionObjectiveChecker)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionObjectiveChecker);
}
// Autogenerated method: MissionObjectiveGameUIView.HandleMissionObjectiveStatusDidChange
void GlobalNamespace::MissionObjectiveGameUIView::HandleMissionObjectiveStatusDidChange(GlobalNamespace::MissionObjectiveChecker* missionObjectiveChecker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::HandleMissionObjectiveStatusDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveStatusDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionObjectiveChecker)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionObjectiveChecker);
}
// Autogenerated method: MissionObjectiveGameUIView.HandleMissionObjectiveCheckedValueDidChange
void GlobalNamespace::MissionObjectiveGameUIView::HandleMissionObjectiveCheckedValueDidChange(GlobalNamespace::MissionObjectiveChecker* missionObjectiveChecker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::HandleMissionObjectiveCheckedValueDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckedValueDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionObjectiveChecker)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionObjectiveChecker);
}
// Autogenerated method: MissionObjectiveGameUIView.RefreshIcon
void GlobalNamespace::MissionObjectiveGameUIView::RefreshIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::RefreshIcon");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshIcon", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveGameUIView.RefreshValue
void GlobalNamespace::MissionObjectiveGameUIView::RefreshValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::RefreshValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjectivesGameUIController
#include "GlobalNamespace/MissionObjectivesGameUIController.hpp"
// Including type: MissionObjectiveGameUIView
#include "GlobalNamespace/MissionObjectiveGameUIView.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionObjectivesGameUIController.Start
void GlobalNamespace::MissionObjectivesGameUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectivesGameUIController.OnDestroy
void GlobalNamespace::MissionObjectivesGameUIController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectivesGameUIController.HandleMissionObjectiveCheckersManagerObjectivesListDidChange
void GlobalNamespace::MissionObjectivesGameUIController::HandleMissionObjectiveCheckersManagerObjectivesListDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::HandleMissionObjectiveCheckersManagerObjectivesListDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckersManagerObjectivesListDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectivesGameUIController.CreateUIElements
void GlobalNamespace::MissionObjectivesGameUIController::CreateUIElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::CreateUIElements");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateUIElements", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLeaderboardPanelController
#include "GlobalNamespace/MultiplayerLeaderboardPanelController.hpp"
// Including type: MultiplayerLeaderboardPanelItem
#include "GlobalNamespace/MultiplayerLeaderboardPanelItem.hpp"
// Including type: MultiplayerScoreProvider
#include "GlobalNamespace/MultiplayerScoreProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLeaderboardPanelController.Start
void GlobalNamespace::MultiplayerLeaderboardPanelController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLeaderboardPanelController.Update
void GlobalNamespace::MultiplayerLeaderboardPanelController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLeaderboardPanelItem
#include "GlobalNamespace/MultiplayerLeaderboardPanelItem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLeaderboardPanelItem.SetData
void GlobalNamespace::MultiplayerLeaderboardPanelItem::SetData(int position, ::Il2CppString* playerName, int score, bool failed, int numberOfPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::SetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position, playerName, score, failed, numberOfPlayers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, playerName, score, failed, numberOfPlayers);
}
// Autogenerated method: MultiplayerLeaderboardPanelItem.set_hide
void GlobalNamespace::MultiplayerLeaderboardPanelItem::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::set_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerPositionHUDController
#include "GlobalNamespace/MultiplayerPositionHUDController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MultiplayerScoreProvider
#include "GlobalNamespace/MultiplayerScoreProvider.hpp"
// Including type: MultiplayerPlayersManager
#include "GlobalNamespace/MultiplayerPlayersManager.hpp"
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerPositionHUDController.set_alpha
void GlobalNamespace::MultiplayerPositionHUDController::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::set_alpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerPositionHUDController.Start
void GlobalNamespace::MultiplayerPositionHUDController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerPositionHUDController.Update
void GlobalNamespace::MultiplayerPositionHUDController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RelativeScoreAndImmediateRankCounter
#include "GlobalNamespace/RelativeScoreAndImmediateRankCounter.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RelativeScoreAndImmediateRankCounter.add_relativeScoreOrImmediateRankDidChangeEvent
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::add_relativeScoreOrImmediateRankDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::add_relativeScoreOrImmediateRankDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_relativeScoreOrImmediateRankDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.remove_relativeScoreOrImmediateRankDidChangeEvent
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::remove_relativeScoreOrImmediateRankDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::remove_relativeScoreOrImmediateRankDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_relativeScoreOrImmediateRankDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.get_relativeScore
float GlobalNamespace::RelativeScoreAndImmediateRankCounter::get_relativeScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::get_relativeScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_relativeScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.set_relativeScore
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::set_relativeScore(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::set_relativeScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_relativeScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.get_immediateRank
GlobalNamespace::RankModel::Rank GlobalNamespace::RelativeScoreAndImmediateRankCounter::get_immediateRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::get_immediateRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_immediateRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::RankModel::Rank, false>(this, ___internal__method);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.set_immediateRank
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::set_immediateRank(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::set_immediateRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_immediateRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.Start
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.OnDestroy
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.HandleScoreControllerImmediateMaxPossibleScoreDidChange
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::HandleScoreControllerImmediateMaxPossibleScoreDidChange(int immediateMaxPossibleScore, int immediateMaxPossibleModifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::HandleScoreControllerImmediateMaxPossibleScoreDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleScoreControllerImmediateMaxPossibleScoreDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(immediateMaxPossibleScore, immediateMaxPossibleModifiedScore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, immediateMaxPossibleScore, immediateMaxPossibleModifiedScore);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.UpdateRelativeScoreAndImmediateRank
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::UpdateRelativeScoreAndImmediateRank(int score, int modifiedScore, int maxPossibleScore, int maxPossibleModifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::UpdateRelativeScoreAndImmediateRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateRelativeScoreAndImmediateRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(score, modifiedScore, maxPossibleScore, maxPossibleModifiedScore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, score, modifiedScore, maxPossibleScore, maxPossibleModifiedScore);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScoreMultiplierUIController
#include "GlobalNamespace/ScoreMultiplierUIController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ScoreMultiplierUIController.Start
void GlobalNamespace::ScoreMultiplierUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.OnEnable
void GlobalNamespace::ScoreMultiplierUIController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.OnDisable
void GlobalNamespace::ScoreMultiplierUIController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.RegisterForEvents
void GlobalNamespace::ScoreMultiplierUIController::RegisterForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::RegisterForEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterForEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.UnregisterFromEvents
void GlobalNamespace::ScoreMultiplierUIController::UnregisterFromEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::UnregisterFromEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnregisterFromEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.Update
void GlobalNamespace::ScoreMultiplierUIController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.HandleMultiplierDidChange
void GlobalNamespace::ScoreMultiplierUIController::HandleMultiplierDidChange(int multiplier, float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::HandleMultiplierDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplierDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplier, progress)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplier, progress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreUIController
#include "GlobalNamespace/ScoreUIController.hpp"
// Including type: ScoreUIController/InitData
#include "GlobalNamespace/ScoreUIController_InitData.hpp"
// Including type: ScoreUIController/ScoreDisplayType
#include "GlobalNamespace/ScoreUIController_ScoreDisplayType.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxNumberOfDigits
int GlobalNamespace::ScoreUIController::_get_kMaxNumberOfDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_get_kMaxNumberOfDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreUIController", "kMaxNumberOfDigits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxNumberOfDigits
void GlobalNamespace::ScoreUIController::_set_kMaxNumberOfDigits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_set_kMaxNumberOfDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreUIController", "kMaxNumberOfDigits", value));
}
// Autogenerated method: ScoreUIController.Start
void GlobalNamespace::ScoreUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreUIController.OnEnable
void GlobalNamespace::ScoreUIController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreUIController.OnDisable
void GlobalNamespace::ScoreUIController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreUIController.RegisterForEvents
void GlobalNamespace::ScoreUIController::RegisterForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::RegisterForEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterForEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreUIController.UnregisterFromEvents
void GlobalNamespace::ScoreUIController::UnregisterFromEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::UnregisterFromEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnregisterFromEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreUIController.HandleScoreDidChangeRealtime
void GlobalNamespace::ScoreUIController::HandleScoreDidChangeRealtime(int rawScore, int modifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::HandleScoreDidChangeRealtime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleScoreDidChangeRealtime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawScore, modifiedScore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rawScore, modifiedScore);
}
// Autogenerated method: ScoreUIController.UpdateScore
void GlobalNamespace::ScoreUIController::UpdateScore(int rawScore, int modifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::UpdateScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawScore, modifiedScore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rawScore, modifiedScore);
}
// Autogenerated method: ScoreUIController.Append000Number
void GlobalNamespace::ScoreUIController::Append000Number(System::Text::StringBuilder* stringBuilder, int number) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::Append000Number");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ScoreUIController", "Append000Number", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringBuilder, number)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringBuilder, number);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreUIController/InitData
#include "GlobalNamespace/ScoreUIController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreUIController/ScoreDisplayType
#include "GlobalNamespace/ScoreUIController_ScoreDisplayType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ScoreUIController/ScoreDisplayType RawScore
GlobalNamespace::ScoreUIController::ScoreDisplayType GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_RawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_RawScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ScoreUIController::ScoreDisplayType>("", "ScoreUIController/ScoreDisplayType", "RawScore"));
}
// Autogenerated static field setter
// Set static field: static public ScoreUIController/ScoreDisplayType RawScore
void GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_RawScore(GlobalNamespace::ScoreUIController::ScoreDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_RawScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreUIController/ScoreDisplayType", "RawScore", value));
}
// Autogenerated static field getter
// Get static field: static public ScoreUIController/ScoreDisplayType ModifiedScore
GlobalNamespace::ScoreUIController::ScoreDisplayType GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_ModifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_ModifiedScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ScoreUIController::ScoreDisplayType>("", "ScoreUIController/ScoreDisplayType", "ModifiedScore"));
}
// Autogenerated static field setter
// Set static field: static public ScoreUIController/ScoreDisplayType ModifiedScore
void GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_ModifiedScore(GlobalNamespace::ScoreUIController::ScoreDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_ModifiedScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreUIController/ScoreDisplayType", "ModifiedScore", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetApplicationVersionText
#include "GlobalNamespace/SetApplicationVersionText.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SetApplicationVersionText.Start
void GlobalNamespace::SetApplicationVersionText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetApplicationVersionText::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongProgressUIController
#include "GlobalNamespace/SongProgressUIController.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SongProgressUIController.Start
void GlobalNamespace::SongProgressUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongProgressUIController.Update
void GlobalNamespace::SongProgressUIController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestGameplayManager
#include "GlobalNamespace/EventsTestGameplayManager.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EventsTestGameplayManager.Awake
void GlobalNamespace::EventsTestGameplayManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EventsTestGameplayManager.Update
void GlobalNamespace::EventsTestGameplayManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILevelEndActions.add_levelFailedEvent
void GlobalNamespace::ILevelEndActions::add_levelFailedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelEndActions::add_levelFailedEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelEndActions.remove_levelFailedEvent
void GlobalNamespace::ILevelEndActions::remove_levelFailedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelEndActions::remove_levelFailedEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelEndActions.add_levelFinishedEvent
void GlobalNamespace::ILevelEndActions::add_levelFinishedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelEndActions::add_levelFinishedEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelEndActions.remove_levelFinishedEvent
void GlobalNamespace::ILevelEndActions::remove_levelFinishedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelEndActions::remove_levelFinishedEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelGameplayManager
#include "GlobalNamespace/MissionLevelGameplayManager.hpp"
// Including type: MissionLevelGameplayManager/InitData
#include "GlobalNamespace/MissionLevelGameplayManager_InitData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MissionLevelGameplayManager/<Start>d__16
#include "GlobalNamespace/MissionLevelGameplayManager_-Start-d__16.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: GameEnergyCounter
#include "GlobalNamespace/GameEnergyCounter.hpp"
// Including type: PauseController
#include "GlobalNamespace/PauseController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelGameplayManager.add_levelFailedEvent
void GlobalNamespace::MissionLevelGameplayManager::add_levelFailedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::add_levelFailedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelGameplayManager.remove_levelFailedEvent
void GlobalNamespace::MissionLevelGameplayManager::remove_levelFailedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::remove_levelFailedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelGameplayManager.add_levelFinishedEvent
void GlobalNamespace::MissionLevelGameplayManager::add_levelFinishedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::add_levelFinishedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelGameplayManager.remove_levelFinishedEvent
void GlobalNamespace::MissionLevelGameplayManager::remove_levelFinishedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::remove_levelFinishedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelGameplayManager.Awake
void GlobalNamespace::MissionLevelGameplayManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.Start
System::Collections::IEnumerator* GlobalNamespace::MissionLevelGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.OnDestroy
void GlobalNamespace::MissionLevelGameplayManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandleGameEnergyDidReach0
void GlobalNamespace::MissionLevelGameplayManager::HandleGameEnergyDidReach0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandleGameEnergyDidReach0");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameEnergyDidReach0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandleMissionObjectiveCheckersManagerObjectiveDidFail
void GlobalNamespace::MissionLevelGameplayManager::HandleMissionObjectiveCheckersManagerObjectiveDidFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandleMissionObjectiveCheckersManagerObjectiveDidFail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckersManagerObjectiveDidFail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandleSongDidFinish
void GlobalNamespace::MissionLevelGameplayManager::HandleSongDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandleSongDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSongDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandlePauseControllerCanPause
void GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerCanPause(System::Action_1<bool>* canPause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerCanPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePauseControllerCanPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(canPause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, canPause);
}
// Autogenerated method: MissionLevelGameplayManager.HandlePauseControllerDidPause
void GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerDidPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandlePauseControllerDidResume
void GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerDidResume");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidResume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelGameplayManager/InitData
#include "GlobalNamespace/MissionLevelGameplayManager_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelGameplayManager/GameState
#include "GlobalNamespace/MissionLevelGameplayManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Intro
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Intro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Intro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Intro"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Intro
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Intro(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Intro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Intro", value));
}
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Playing
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Playing
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Playing(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Paused
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Paused
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Paused(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Finished
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Finished
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Finished(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Finished", value));
}
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Failed
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Failed
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Failed(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Failed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelGameplayManager/<Start>d__16
#include "GlobalNamespace/MissionLevelGameplayManager_-Start-d__16.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.System.IDisposable.Dispose
void GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.MoveNext
bool GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockLevelEndActions
#include "GlobalNamespace/MockLevelEndActions.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockLevelEndActions.add_levelFailedEvent
void GlobalNamespace::MockLevelEndActions::add_levelFailedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::add_levelFailedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockLevelEndActions.remove_levelFailedEvent
void GlobalNamespace::MockLevelEndActions::remove_levelFailedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::remove_levelFailedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockLevelEndActions.add_levelFinishedEvent
void GlobalNamespace::MockLevelEndActions::add_levelFinishedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::add_levelFinishedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockLevelEndActions.remove_levelFinishedEvent
void GlobalNamespace::MockLevelEndActions::remove_levelFinishedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::remove_levelFinishedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelGameplayManager
#include "GlobalNamespace/StandardLevelGameplayManager.hpp"
// Including type: StandardLevelGameplayManager/InitData
#include "GlobalNamespace/StandardLevelGameplayManager_InitData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: StandardLevelGameplayManager/<Start>d__15
#include "GlobalNamespace/StandardLevelGameplayManager_-Start-d__15.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: GameEnergyCounter
#include "GlobalNamespace/GameEnergyCounter.hpp"
// Including type: PauseController
#include "GlobalNamespace/PauseController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelGameplayManager.add_levelFailedEvent
void GlobalNamespace::StandardLevelGameplayManager::add_levelFailedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::add_levelFailedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelGameplayManager.remove_levelFailedEvent
void GlobalNamespace::StandardLevelGameplayManager::remove_levelFailedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::remove_levelFailedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelGameplayManager.add_levelFinishedEvent
void GlobalNamespace::StandardLevelGameplayManager::add_levelFinishedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::add_levelFinishedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelGameplayManager.remove_levelFinishedEvent
void GlobalNamespace::StandardLevelGameplayManager::remove_levelFinishedEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::remove_levelFinishedEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelGameplayManager.Awake
void GlobalNamespace::StandardLevelGameplayManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.Start
System::Collections::IEnumerator* GlobalNamespace::StandardLevelGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.OnDestroy
void GlobalNamespace::StandardLevelGameplayManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.Update
void GlobalNamespace::StandardLevelGameplayManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.HandleGameEnergyDidReach0
void GlobalNamespace::StandardLevelGameplayManager::HandleGameEnergyDidReach0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandleGameEnergyDidReach0");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameEnergyDidReach0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.HandleSongDidFinish
void GlobalNamespace::StandardLevelGameplayManager::HandleSongDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandleSongDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSongDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerCanPause
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerCanPause(System::Action_1<bool>* canPause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerCanPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePauseControllerCanPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(canPause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, canPause);
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerDidPause
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerDidResume
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidResume");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidResume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelGameplayManager/InitData
#include "GlobalNamespace/StandardLevelGameplayManager_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelGameplayManager/GameState
#include "GlobalNamespace/StandardLevelGameplayManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Intro
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Intro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Intro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Intro"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Intro
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Intro(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Intro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Intro", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Playing
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Playing
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Playing(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Paused
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Paused
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Paused(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Finished
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Finished
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Finished(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Finished", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Failed
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Failed
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Failed(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Failed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelGameplayManager/<Start>d__15
#include "GlobalNamespace/StandardLevelGameplayManager_-Start-d__15.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.System.IDisposable.Dispose
void GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.MoveNext
bool GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.System.Collections.IEnumerator.Reset
void GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailerGameplayManager
#include "GlobalNamespace/TrailerGameplayManager.hpp"
// Including type: TrailerGameplayManager/<Start>d__4
#include "GlobalNamespace/TrailerGameplayManager_-Start-d__4.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrailerGameplayManager.Start
System::Collections::IEnumerator* GlobalNamespace::TrailerGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TrailerGameplayManager/<Start>d__4
#include "GlobalNamespace/TrailerGameplayManager_-Start-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TrailerGameplayManager/<Start>d__4.System.IDisposable.Dispose
void GlobalNamespace::TrailerGameplayManager::$Start$d__4::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.MoveNext
bool GlobalNamespace::TrailerGameplayManager::$Start$d__4::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TrailerGameplayManager::$Start$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::TrailerGameplayManager::$Start$d__4::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TrailerGameplayManager::$Start$d__4::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: WaypointsTestGameplayManager
#include "GlobalNamespace/WaypointsTestGameplayManager.hpp"
// Including type: BTSCharacterSpawnController
#include "GlobalNamespace/BTSCharacterSpawnController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: WaypointsTestGameplayManager.Start
void GlobalNamespace::WaypointsTestGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestGameplayManager.LateUpdate
void GlobalNamespace::WaypointsTestGameplayManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestGameplayManager.OnDestroy
void GlobalNamespace::WaypointsTestGameplayManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestGameplayManager.GetBar
::Il2CppString* GlobalNamespace::WaypointsTestGameplayManager::GetBar(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::GetBar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songTime)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, songTime);
}
// Autogenerated method: WaypointsTestGameplayManager.OnDrawGizmos
void GlobalNamespace::WaypointsTestGameplayManager::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GamePause
#include "GlobalNamespace/GamePause.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: GameEnergyCounter
#include "GlobalNamespace/GameEnergyCounter.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: BeatmapObjectExecutionRatingsRecorder
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder.hpp"
// Including type: SongController
#include "GlobalNamespace/SongController.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: AudioListenerController
#include "GlobalNamespace/AudioListenerController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GamePause.add_didPauseEvent
void GlobalNamespace::GamePause::add_didPauseEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::add_didPauseEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didPauseEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GamePause.remove_didPauseEvent
void GlobalNamespace::GamePause::remove_didPauseEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::remove_didPauseEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didPauseEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GamePause.add_willResumeEvent
void GlobalNamespace::GamePause::add_willResumeEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::add_willResumeEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_willResumeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GamePause.remove_willResumeEvent
void GlobalNamespace::GamePause::remove_willResumeEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::remove_willResumeEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_willResumeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GamePause.add_didResumeEvent
void GlobalNamespace::GamePause::add_didResumeEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::add_didResumeEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didResumeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GamePause.remove_didResumeEvent
void GlobalNamespace::GamePause::remove_didResumeEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::remove_didResumeEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didResumeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GamePause.Pause
void GlobalNamespace::GamePause::Pause_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::Pause_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GamePause.WillResume
void GlobalNamespace::GamePause::WillResume_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::WillResume_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillResume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GamePause.Resume
void GlobalNamespace::GamePause::Resume_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::Resume_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IGamePause
#include "GlobalNamespace/IGamePause.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGamePause.add_didPauseEvent
void GlobalNamespace::IGamePause::add_didPauseEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::add_didPauseEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didPauseEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGamePause.remove_didPauseEvent
void GlobalNamespace::IGamePause::remove_didPauseEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::remove_didPauseEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didPauseEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGamePause.add_willResumeEvent
void GlobalNamespace::IGamePause::add_willResumeEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::add_willResumeEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_willResumeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGamePause.remove_willResumeEvent
void GlobalNamespace::IGamePause::remove_willResumeEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::remove_willResumeEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_willResumeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGamePause.add_didResumeEvent
void GlobalNamespace::IGamePause::add_didResumeEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::add_didResumeEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didResumeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGamePause.remove_didResumeEvent
void GlobalNamespace::IGamePause::remove_didResumeEvent_NEW(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::remove_didResumeEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didResumeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGamePause.Pause
void GlobalNamespace::IGamePause::Pause_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::Pause_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IGamePause.WillResume
void GlobalNamespace::IGamePause::WillResume_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::WillResume_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillResume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IGamePause.Resume
void GlobalNamespace::IGamePause::Resume_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::Resume_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
