// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27
#include "UnityEngine/Timeline/TimelineAsset_-get_outputs-d__27.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.TimelineAsset <>4__this
UnityEngine::Timeline::TimelineAsset*& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::TimelineAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<UnityEngine.Timeline.TrackAsset> <>7__wrap1
System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::TrackAsset*>*& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::TrackAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<UnityEngine.Playables.PlayableBinding> <>7__wrap2
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.System.IDisposable.Dispose
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.MoveNext
bool UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.<>m__Finally1
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.<>m__Finally2
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.<get_outputs>d__27.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions
#include "UnityEngine/Timeline/TrackAsset_Versions.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.TrackAssetUpgrade
#include "UnityEngine/Timeline/TrackAsset_TrackAssetUpgrade.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65
#include "UnityEngine/Timeline/TrackAsset_-get_outputs-d__65.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TrackAsset_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.IPlayableAsset
#include "UnityEngine/Playables/IPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TrackAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TrackAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TrackAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "k_LatestVersion", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.TransientBuildData s_BuildData
UnityEngine::Timeline::TrackAsset::TransientBuildData UnityEngine::Timeline::TrackAsset::_get_s_BuildData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_BuildData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::TransientBuildData>("UnityEngine.Timeline", "TrackAsset", "s_BuildData"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.TransientBuildData s_BuildData
void UnityEngine::Timeline::TrackAsset::_set_s_BuildData(UnityEngine::Timeline::TrackAsset::TransientBuildData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_BuildData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_BuildData", value));
}
// Autogenerated static field getter
// Get static field: static System.String kDefaultCurvesName
::StringW UnityEngine::Timeline::TrackAsset::_get_kDefaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_kDefaultCurvesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Timeline", "TrackAsset", "kDefaultCurvesName"));
}
// Autogenerated static field setter
// Set static field: static System.String kDefaultCurvesName
void UnityEngine::Timeline::TrackAsset::_set_kDefaultCurvesName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_kDefaultCurvesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "kDefaultCurvesName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`3<UnityEngine.Timeline.TimelineClip,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnClipPlayableCreate
System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* UnityEngine::Timeline::TrackAsset::_get_OnClipPlayableCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_OnClipPlayableCreate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>*>("UnityEngine.Timeline", "TrackAsset", "OnClipPlayableCreate")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<UnityEngine.Timeline.TimelineClip,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::_set_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_OnClipPlayableCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "OnClipPlayableCreate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`3<UnityEngine.Timeline.TrackAsset,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnTrackAnimationPlayableCreate
System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* UnityEngine::Timeline::TrackAsset::_get_OnTrackAnimationPlayableCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_OnTrackAnimationPlayableCreate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>*>("UnityEngine.Timeline", "TrackAsset", "OnTrackAnimationPlayableCreate")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<UnityEngine.Timeline.TrackAsset,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::_set_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_OnTrackAnimationPlayableCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "OnTrackAnimationPlayableCreate", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Timeline.TrackAsset[] s_EmptyCache
::ArrayW<UnityEngine::Timeline::TrackAsset*> UnityEngine::Timeline::TrackAsset::_get_s_EmptyCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_EmptyCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<UnityEngine::Timeline::TrackAsset*>>("UnityEngine.Timeline", "TrackAsset", "s_EmptyCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Timeline.TrackAsset[] s_EmptyCache
void UnityEngine::Timeline::TrackAsset::_set_s_EmptyCache(::ArrayW<UnityEngine::Timeline::TrackAsset*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_EmptyCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_EmptyCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Timeline.TrackBindingTypeAttribute> s_TrackBindingTypeAttributeCache
System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>* UnityEngine::Timeline::TrackAsset::_get_s_TrackBindingTypeAttributeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_TrackBindingTypeAttributeCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>*>("UnityEngine.Timeline", "TrackAsset", "s_TrackBindingTypeAttributeCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Timeline.TrackBindingTypeAttribute> s_TrackBindingTypeAttributeCache
void UnityEngine::Timeline::TrackAsset::_set_s_TrackBindingTypeAttributeCache(System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_TrackBindingTypeAttributeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_TrackBindingTypeAttributeCache", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Version
int& UnityEngine::Timeline::TrackAsset::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimationClip m_AnimClip
UnityEngine::AnimationClip*& UnityEngine::Timeline::TrackAsset::dyn_m_AnimClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_AnimClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Locked
bool& UnityEngine::Timeline::TrackAsset::dyn_m_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Muted
bool& UnityEngine::Timeline::TrackAsset::dyn_m_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_CustomPlayableFullTypename
::StringW& UnityEngine::Timeline::TrackAsset::dyn_m_CustomPlayableFullTypename() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_CustomPlayableFullTypename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomPlayableFullTypename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip m_Curves
UnityEngine::AnimationClip*& UnityEngine::Timeline::TrackAsset::dyn_m_Curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Curves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Curves"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableAsset m_Parent
UnityEngine::Playables::PlayableAsset*& UnityEngine::Timeline::TrackAsset::dyn_m_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Parent"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ScriptableObject> m_Children
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*& UnityEngine::Timeline::TrackAsset::dyn_m_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Children"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ItemsHash
int& UnityEngine::Timeline::TrackAsset::dyn_m_ItemsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_ItemsHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItemsHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip[] m_ClipsCache
::ArrayW<UnityEngine::Timeline::TimelineClip*>& UnityEngine::Timeline::TrackAsset::dyn_m_ClipsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_ClipsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipsCache"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Timeline::TimelineClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.DiscreteTime m_Start
UnityEngine::Timeline::DiscreteTime& UnityEngine::Timeline::TrackAsset::dyn_m_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Start"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::DiscreteTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.DiscreteTime m_End
UnityEngine::Timeline::DiscreteTime& UnityEngine::Timeline::TrackAsset::dyn_m_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_End");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_End"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::DiscreteTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CacheSorted
bool& UnityEngine::Timeline::TrackAsset::dyn_m_CacheSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_CacheSorted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheSorted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> m_SupportsNotifications
System::Nullable_1<bool>& UnityEngine::Timeline::TrackAsset::dyn_m_SupportsNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_SupportsNotifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SupportsNotifications"))->offset;
  return *reinterpret_cast<System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerable`1<UnityEngine.Timeline.TrackAsset> m_ChildTrackCache
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*& UnityEngine::Timeline::TrackAsset::dyn_m_ChildTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_ChildTrackCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChildTrackCache"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Generic.List`1<UnityEngine.Timeline.TimelineClip> m_Clips
System::Collections::Generic::List_1<UnityEngine::Timeline::TimelineClip*>*& UnityEngine::Timeline::TrackAsset::dyn_m_Clips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Clips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clips"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::TimelineClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.MarkerList m_Markers
UnityEngine::Timeline::MarkerList& UnityEngine::Timeline::TrackAsset::dyn_m_Markers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::dyn_m_Markers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Markers"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::MarkerList*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_start
double UnityEngine::Timeline::TrackAsset::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_end
double UnityEngine::Timeline::TrackAsset::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_muted
bool UnityEngine::Timeline::TrackAsset::get_muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_muted
void UnityEngine::Timeline::TrackAsset::set_muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_mutedInHierarchy
bool UnityEngine::Timeline::TrackAsset::get_mutedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_mutedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mutedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_timelineAsset
UnityEngine::Timeline::TimelineAsset* UnityEngine::Timeline::TrackAsset::get_timelineAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_timelineAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timelineAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_parent
UnityEngine::Playables::PlayableAsset* UnityEngine::Timeline::TrackAsset::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::PlayableAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_parent
void UnityEngine::Timeline::TrackAsset::set_parent(UnityEngine::Playables::PlayableAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_clips
::ArrayW<UnityEngine::Timeline::TimelineClip*> UnityEngine::Timeline::TrackAsset::get_clips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_clips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<UnityEngine::Timeline::TimelineClip*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_isEmpty
bool UnityEngine::Timeline::TrackAsset::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_isEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_hasClips
bool UnityEngine::Timeline::TrackAsset::get_hasClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_hasClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_hasCurves
bool UnityEngine::Timeline::TrackAsset::get_hasCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_hasCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_isSubTrack
bool UnityEngine::Timeline::TrackAsset::get_isSubTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_isSubTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSubTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_customPlayableTypename
::StringW UnityEngine::Timeline::TrackAsset::get_customPlayableTypename() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_customPlayableTypename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customPlayableTypename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_customPlayableTypename
void UnityEngine::Timeline::TrackAsset::set_customPlayableTypename(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_customPlayableTypename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customPlayableTypename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_curves
UnityEngine::AnimationClip* UnityEngine::Timeline::TrackAsset::get_curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_curves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_curves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_curves
void UnityEngine::Timeline::TrackAsset::set_curves(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_curves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_curves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::StringW UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_asset
UnityEngine::Object* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_asset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_assetOwner
UnityEngine::Object* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_assetOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_assetOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_assetOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_targetTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_targetTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_targetTrack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_targetTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_subTracksObjects
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TrackAsset::get_subTracksObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_subTracksObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subTracksObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_locked
bool UnityEngine::Timeline::TrackAsset::get_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_locked
void UnityEngine::Timeline::TrackAsset::set_locked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_lockedInHierarchy
bool UnityEngine::Timeline::TrackAsset::get_lockedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_lockedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lockedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_supportsNotifications
bool UnityEngine::Timeline::TrackAsset::get_supportsNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_supportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.add_OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::add_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::add_OnClipPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "add_OnClipPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.remove_OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::remove_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::remove_OnClipPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "remove_OnClipPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.add_OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::add_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::add_OnTrackAnimationPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "add_OnTrackAnimationPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.remove_OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::remove_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::remove_OnTrackAnimationPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "remove_OnTrackAnimationPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnBeforeTrackSerialize
void UnityEngine::Timeline::TrackAsset::OnBeforeTrackSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnBeforeTrackSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeTrackSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnAfterTrackDeserialize
void UnityEngine::Timeline::TrackAsset::OnAfterTrackDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnAfterTrackDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterTrackDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnUpgradeFromVersion
void UnityEngine::Timeline::TrackAsset::OnUpgradeFromVersion(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnUpgradeFromVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpgradeFromVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldVersion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TrackAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TrackAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpgradeToLatestVersion
void UnityEngine::Timeline::TrackAsset::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetClips
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::GetClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TimelineClip*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetChildTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TrackAsset::GetChildTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetChildTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.__internalAwake
void UnityEngine::Timeline::TrackAsset::__internalAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::__internalAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__internalAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateCurves
void UnityEngine::Timeline::TrackAsset::CreateCurves(::StringW curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curvesClipName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateTrackMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateTrackMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateTrackMixer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateDefaultClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateDefaultClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateDefaultClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteClip
bool UnityEngine::Timeline::TrackAsset::DeleteClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::TrackAsset::CreateMarker(System::Type* type, double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, type, time);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteMarker
bool UnityEngine::Timeline::TrackAsset::DeleteMarker(UnityEngine::Timeline::IMarker* marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, marker);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkers
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::TrackAsset::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkerCount
int UnityEngine::Timeline::TrackAsset::GetMarkerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::TrackAsset::GetMarker(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClip(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateAndAddNewClipOfType
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateAndAddNewClipOfType(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateAndAddNewClipOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndAddNewClipOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipOfType
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipOfType(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipFromPlayableAsset
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipFromPlayableAsset(UnityEngine::Playables::IPlayableAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipFromPlayableAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipFromPlayableAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipFromAsset
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipFromAsset(UnityEngine::ScriptableObject* playableAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipFromAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipFromAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playableAsset)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, playableAsset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkersRaw
System::Collections::Generic::IEnumerable_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TrackAsset::GetMarkersRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkersRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkersRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearMarkers
void UnityEngine::Timeline::TrackAsset::ClearMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddMarker
void UnityEngine::Timeline::TrackAsset::AddMarker(UnityEngine::ScriptableObject* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteMarkerRaw
bool UnityEngine::Timeline::TrackAsset::DeleteMarkerRaw(UnityEngine::ScriptableObject* marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteMarkerRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteMarkerRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, marker);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetTimeRangeHash
int UnityEngine::Timeline::TrackAsset::GetTimeRangeHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetTimeRangeHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeRangeHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddClip
void UnityEngine::Timeline::TrackAsset::AddClip(UnityEngine::Timeline::TimelineClip* newClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newClip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateNotificationsPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateNotificationsPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable mixerPlayable, UnityEngine::GameObject* go, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(mixerPlayable), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, mixerPlayable, go, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CompileClips
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CompileClips(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, System::Collections::Generic::IList_1<UnityEngine::Timeline::TimelineClip*>* timelineClips, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(timelineClips), ::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, timelineClips, tree);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherCompilableTracks
void UnityEngine::Timeline::TrackAsset::GatherCompilableTracks(System::Collections::Generic::IList_1<UnityEngine::Timeline::TrackAsset*>* tracks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherCompilableTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherCompilableTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tracks);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherNotifications
void UnityEngine::Timeline::TrackAsset::GatherNotifications(System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>* markers) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markers);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateMixerPlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateMixerPlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateMixerPlayableGraph");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMixerPlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ConfigureTrackAnimation
void UnityEngine::Timeline::TrackAsset::ConfigureTrackAnimation(UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::GameObject* go, UnityEngine::Playables::Playable blend) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ConfigureTrackAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureTrackAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(blend)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree, go, blend);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.SortClips
void UnityEngine::Timeline::TrackAsset::SortClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::SortClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearClipsInternal
void UnityEngine::Timeline::TrackAsset::ClearClipsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearClipsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearClipsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearSubTracksInternal
void UnityEngine::Timeline::TrackAsset::ClearSubTracksInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearSubTracksInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSubTracksInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnClipMove
void UnityEngine::Timeline::TrackAsset::OnClipMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnClipMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClipMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateNewClipContainerInternal
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateNewClipContainerInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateNewClipContainerInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewClipContainerInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddChild
void UnityEngine::Timeline::TrackAsset::AddChild(UnityEngine::Timeline::TrackAsset* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.MoveLastTrackBefore
void UnityEngine::Timeline::TrackAsset::MoveLastTrackBefore(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::MoveLastTrackBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLastTrackBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.RemoveSubTrack
bool UnityEngine::Timeline::TrackAsset::RemoveSubTrack(UnityEngine::Timeline::TrackAsset* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::RemoveSubTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSubTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, child);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.RemoveClip
void UnityEngine::Timeline::TrackAsset::RemoveClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::RemoveClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetEvaluationTime
void UnityEngine::Timeline::TrackAsset::GetEvaluationTime(ByRef<double> outStart, ByRef<double> outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetEvaluationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvaluationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(outStart), byref(outDuration));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetSequenceTime
void UnityEngine::Timeline::TrackAsset::GetSequenceTime(ByRef<double> outStart, ByRef<double> outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetSequenceTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSequenceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(outStart), byref(outDuration));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherProperties
void UnityEngine::Timeline::TrackAsset::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetGameObjectBinding
UnityEngine::GameObject* UnityEngine::Timeline::TrackAsset::GetGameObjectBinding(UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetGameObjectBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameObjectBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::GameObject*, false>(this, ___internal__method, director);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ValidateClipType
bool UnityEngine::Timeline::TrackAsset::ValidateClipType(System::Type* clipType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ValidateClipType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateClipType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnCreateClip
void UnityEngine::Timeline::TrackAsset::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpdateDuration
void UnityEngine::Timeline::TrackAsset::UpdateDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpdateDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CalculateItemsHash
int UnityEngine::Timeline::TrackAsset::CalculateItemsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CalculateItemsHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateItemsHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* gameObject, UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, gameObject, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.Invalidate
void UnityEngine::Timeline::TrackAsset::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Invalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetNotificationDuration
double UnityEngine::Timeline::TrackAsset::GetNotificationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetNotificationDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNotificationDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileClips
bool UnityEngine::Timeline::TrackAsset::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCreateTrackMixer
bool UnityEngine::Timeline::TrackAsset::CanCreateTrackMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCreateTrackMixer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCreateTrackMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.IsCompilable
bool UnityEngine::Timeline::TrackAsset::IsCompilable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::IsCompilable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCompilable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpdateChildTrackCache
void UnityEngine::Timeline::TrackAsset::UpdateChildTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpdateChildTrackCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateChildTrackCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.Hash
int UnityEngine::Timeline::TrackAsset::Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Hash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetClipsHash
int UnityEngine::Timeline::TrackAsset::GetClipsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetClipsHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipsHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetAnimationClipHash
int UnityEngine::Timeline::TrackAsset::GetAnimationClipHash(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetAnimationClipHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "GetAnimationClipHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.HasNotifications
bool UnityEngine::Timeline::TrackAsset::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileNotifications
bool UnityEngine::Timeline::TrackAsset::CanCompileNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCompileNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCreateMixerRecursive
bool UnityEngine::Timeline::TrackAsset::CanCreateMixerRecursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCreateMixerRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCreateMixerRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_duration
double UnityEngine::Timeline::TrackAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TrackAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset..cctor
void UnityEngine::Timeline::TrackAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions
#include "UnityEngine/Timeline/TrackAsset_Versions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions Initial
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions Initial
void UnityEngine::Timeline::TrackAsset::Versions::_set_Initial(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions RotationAsEuler
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_RotationAsEuler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_RotationAsEuler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "RotationAsEuler"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions RotationAsEuler
void UnityEngine::Timeline::TrackAsset::Versions::_set_RotationAsEuler(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_RotationAsEuler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "RotationAsEuler", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions RootMotionUpgrade
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_RootMotionUpgrade() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_RootMotionUpgrade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "RootMotionUpgrade"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions RootMotionUpgrade
void UnityEngine::Timeline::TrackAsset::Versions::_set_RootMotionUpgrade(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_RootMotionUpgrade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "RootMotionUpgrade", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions AnimatedTrackProperties
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_AnimatedTrackProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_AnimatedTrackProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "AnimatedTrackProperties"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.Versions AnimatedTrackProperties
void UnityEngine::Timeline::TrackAsset::Versions::_set_AnimatedTrackProperties(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_AnimatedTrackProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "AnimatedTrackProperties", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Timeline::TrackAsset::Versions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.TransientBuildData
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Timeline.TrackAsset> trackList
System::Collections::Generic::List_1<UnityEngine::Timeline::TrackAsset*>*& UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_trackList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_trackList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::TrackAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Timeline.TimelineClip> clipList
System::Collections::Generic::List_1<UnityEngine::Timeline::TimelineClip*>*& UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_clipList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_clipList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::TimelineClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Timeline.IMarker> markerList
System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>*& UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_markerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_markerList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "markerList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.TransientBuildData.Create
UnityEngine::Timeline::TrackAsset::TransientBuildData UnityEngine::Timeline::TrackAsset::TransientBuildData::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset/TransientBuildData", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TrackAsset::TransientBuildData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.TransientBuildData.Clear
void UnityEngine::Timeline::TrackAsset::TransientBuildData::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65
#include "UnityEngine/Timeline/TrackAsset_-get_outputs-d__65.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.TrackAsset <>4__this
UnityEngine::Timeline::TrackAsset*& UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::TrackAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65.System.IDisposable.Dispose
void UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65.MoveNext
bool UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<get_outputs>d__65.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TrackAsset_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<>c <>9
UnityEngine::Timeline::TrackAsset::$$c* UnityEngine::Timeline::TrackAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::$$c*>("UnityEngine.Timeline", "TrackAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<>c <>9
void UnityEngine::Timeline::TrackAsset::$$c::_set_$$9(UnityEngine::Timeline::TrackAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__121_0
System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::$$c::_get_$$9__121_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_get_$$9__121_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "TrackAsset/<>c", "<>9__121_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__121_0
void UnityEngine::Timeline::TrackAsset::$$c::_set_$$9__121_0(System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_set_$$9__121_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/<>c", "<>9__121_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<>c..cctor
void UnityEngine::Timeline::TrackAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/UnityEngine.Timeline.<>c.<SortClips>b__121_0
int UnityEngine::Timeline::TrackAsset::$$c::$SortClips$b__121_0(UnityEngine::Timeline::TimelineClip* clip1, UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::<SortClips>b__121_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClips>b__121_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineHelpURLAttribute
#include "UnityEngine/Timeline/TimelineHelpURLAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackColorAttribute
#include "UnityEngine/Timeline/TrackColorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_Color
UnityEngine::Color& UnityEngine::Timeline::TrackColorAttribute::dyn_m_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackColorAttribute::dyn_m_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TrackColorAttribute.get_color
UnityEngine::Color UnityEngine::Timeline::TrackColorAttribute::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackColorAttribute::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioClipProperties
#include "UnityEngine/Timeline/AudioClipProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single volume
float& UnityEngine::Timeline::AudioClipProperties::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioClipProperties::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioMixerProperties
#include "UnityEngine/Timeline/AudioMixerProperties.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single volume
float& UnityEngine::Timeline::AudioMixerProperties::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioMixerProperties::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stereoPan
float& UnityEngine::Timeline::AudioMixerProperties::dyn_stereoPan() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioMixerProperties::dyn_stereoPan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoPan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spatialBlend
float& UnityEngine::Timeline::AudioMixerProperties::dyn_spatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioMixerProperties::dyn_spatialBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spatialBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioMixerProperties.PrepareFrame
void UnityEngine::Timeline::AudioMixerProperties::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioMixerProperties::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioPlayableAsset
#include "UnityEngine/Timeline/AudioPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Timeline.AudioClipProperties
#include "UnityEngine/Timeline/AudioClipProperties.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_Clip
UnityEngine::AudioClip*& UnityEngine::Timeline::AudioPlayableAsset::dyn_m_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::dyn_m_Clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Loop
bool& UnityEngine::Timeline::AudioPlayableAsset::dyn_m_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::dyn_m_Loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_bufferingTime
float& UnityEngine::Timeline::AudioPlayableAsset::dyn_m_bufferingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::dyn_m_bufferingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bufferingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.AudioClipProperties m_ClipProperties
UnityEngine::Timeline::AudioClipProperties*& UnityEngine::Timeline::AudioPlayableAsset::dyn_m_ClipProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::dyn_m_ClipProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipProperties"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::AudioClipProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_bufferingTime
float UnityEngine::Timeline::AudioPlayableAsset::get_bufferingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_bufferingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bufferingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_bufferingTime
void UnityEngine::Timeline::AudioPlayableAsset::set_bufferingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_bufferingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bufferingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_clip
UnityEngine::AudioClip* UnityEngine::Timeline::AudioPlayableAsset::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_clip
void UnityEngine::Timeline::AudioPlayableAsset::set_clip(UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_loop
bool UnityEngine::Timeline::AudioPlayableAsset::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_loop
void UnityEngine::Timeline::AudioPlayableAsset::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::AudioPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_duration
double UnityEngine::Timeline::AudioPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AudioPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.AudioPlayableAsset <>4__this
UnityEngine::Timeline::AudioPlayableAsset*& UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::AudioPlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.MoveNext
bool UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioTrack
#include "UnityEngine/Timeline/AudioTrack.hpp"
// Including type: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4
#include "UnityEngine/Timeline/AudioTrack_-get_outputs-d__4.hpp"
// Including type: UnityEngine.Timeline.AudioMixerProperties
#include "UnityEngine/Timeline/AudioMixerProperties.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.AudioMixerProperties m_TrackProperties
UnityEngine::Timeline::AudioMixerProperties*& UnityEngine::Timeline::AudioTrack::dyn_m_TrackProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::dyn_m_TrackProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackProperties"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::AudioMixerProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AudioTrack::CreateClip(UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::CreateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.OnValidate
void UnityEngine::Timeline::AudioTrack::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.CompileClips
UnityEngine::Playables::Playable UnityEngine::Timeline::AudioTrack::CompileClips(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, System::Collections::Generic::IList_1<UnityEngine::Timeline::TimelineClip*>* timelineClips, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::CompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(timelineClips), ::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, timelineClips, tree);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4
#include "UnityEngine/Timeline/AudioTrack_-get_outputs-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.AudioTrack <>4__this
UnityEngine::Timeline::AudioTrack*& UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::AudioTrack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.MoveNext
bool UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps None
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps None
void UnityEngine::Timeline::ClipCaps::_set_None(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Looping
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Looping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Looping"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Looping
void UnityEngine::Timeline::ClipCaps::_set_Looping(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Looping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Looping", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Extrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Extrapolation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Extrapolation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
void UnityEngine::Timeline::ClipCaps::_set_Extrapolation(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Extrapolation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Extrapolation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps ClipIn
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_ClipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_ClipIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "ClipIn"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps ClipIn
void UnityEngine::Timeline::ClipCaps::_set_ClipIn(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_ClipIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "ClipIn", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
void UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Blending
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Blending() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Blending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Blending"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Blending
void UnityEngine::Timeline::ClipCaps::_set_Blending(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Blending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Blending", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps AutoScale
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_AutoScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_AutoScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "AutoScale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps AutoScale
void UnityEngine::Timeline::ClipCaps::_set_AutoScale(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_AutoScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "AutoScale", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps All
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps All
void UnityEngine::Timeline::ClipCaps::_set_All(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Timeline::ClipCaps::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClipCapsExtensions
#include "UnityEngine/Timeline/TimelineClipCapsExtensions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsLooping
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsLooping(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsExtrapolation
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsClipIn
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsClipIn(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsClipIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsClipIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsSpeedMultiplier
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsSpeedMultiplier(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsSpeedMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsSpeedMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsBlending
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsBlending(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsBlending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsBlending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAll
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAll(UnityEngine::Timeline::ClipCaps caps, UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::HasAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAny
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny(UnityEngine::Timeline::ClipCaps caps, UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ControlPlayableAsset
#include "UnityEngine/Timeline/ControlPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39
#include "UnityEngine/Timeline/ControlPlayableAsset_-GetControlableScripts-d__39.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRandInt
int UnityEngine::Timeline::ControlPlayableAsset::_get_k_MaxRandInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_MaxRandInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "ControlPlayableAsset", "k_MaxRandInt"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRandInt
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_MaxRandInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_MaxRandInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_MaxRandInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Playables.PlayableDirector> k_EmptyDirectorsList
System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>* UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyDirectorsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyDirectorsList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyDirectorsList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Playables.PlayableDirector> k_EmptyDirectorsList
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyDirectorsList(System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyDirectorsList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyDirectorsList", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.ParticleSystem> k_EmptyParticlesList
System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyParticlesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyParticlesList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyParticlesList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.ParticleSystem> k_EmptyParticlesList
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyParticlesList(System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyParticlesList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyParticlesList", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<UnityEngine.ParticleSystem> s_SubEmitterCollector
System::Collections::Generic::HashSet_1<UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_SubEmitterCollector() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_s_SubEmitterCollector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<UnityEngine::ParticleSystem*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_SubEmitterCollector"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<UnityEngine.ParticleSystem> s_SubEmitterCollector
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_SubEmitterCollector(System::Collections::Generic::HashSet_1<UnityEngine::ParticleSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_s_SubEmitterCollector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_SubEmitterCollector", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Playables.PlayableDirector> s_ProcessedDirectors
System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_ProcessedDirectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_s_ProcessedDirectors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_ProcessedDirectors"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Playables.PlayableDirector> s_ProcessedDirectors
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_ProcessedDirectors(System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_s_ProcessedDirectors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_ProcessedDirectors", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> s_CreatedPrefabs
System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_CreatedPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_s_CreatedPrefabs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_CreatedPrefabs"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> s_CreatedPrefabs
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_CreatedPrefabs(System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_s_CreatedPrefabs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_CreatedPrefabs", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<UnityEngine.GameObject> sourceGameObject
UnityEngine::ExposedReference_1<UnityEngine::GameObject*>& UnityEngine::Timeline::ControlPlayableAsset::dyn_sourceGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_sourceGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceGameObject"))->offset;
  return *reinterpret_cast<UnityEngine::ExposedReference_1<UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject prefabGameObject
UnityEngine::GameObject*& UnityEngine::Timeline::ControlPlayableAsset::dyn_prefabGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_prefabGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabGameObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateParticle
bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_updateParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_updateParticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateParticle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 particleRandomSeed
uint& UnityEngine::Timeline::ControlPlayableAsset::dyn_particleRandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_particleRandomSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleRandomSeed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateDirector
bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_updateDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_updateDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateDirector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateITimeControl
bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_updateITimeControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_updateITimeControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateITimeControl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean searchHierarchy
bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_searchHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_searchHierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchHierarchy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean active
bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState postPlayback
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState& UnityEngine::Timeline::ControlPlayableAsset::dyn_postPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_postPlayback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postPlayback"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableAsset m_ControlDirectorAsset
UnityEngine::Playables::PlayableAsset*& UnityEngine::Timeline::ControlPlayableAsset::dyn_m_ControlDirectorAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_m_ControlDirectorAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlDirectorAsset"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_Duration
double& UnityEngine::Timeline::ControlPlayableAsset::dyn_m_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_m_Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Duration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SupportLoop
bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_m_SupportLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_m_SupportLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SupportLoop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <controllingDirectors>k__BackingField
bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_$controllingDirectors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_$controllingDirectors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<controllingDirectors>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <controllingParticles>k__BackingField
bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_$controllingParticles$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::dyn_$controllingParticles$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<controllingParticles>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_controllingDirectors
bool UnityEngine::Timeline::ControlPlayableAsset::get_controllingDirectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_controllingDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllingDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.set_controllingDirectors
void UnityEngine::Timeline::ControlPlayableAsset::set_controllingDirectors(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::set_controllingDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllingDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_controllingParticles
bool UnityEngine::Timeline::ControlPlayableAsset::get_controllingParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_controllingParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllingParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.set_controllingParticles
void UnityEngine::Timeline::ControlPlayableAsset::set_controllingParticles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::set_controllingParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllingParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ControlPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.OnEnable
void UnityEngine::Timeline::ControlPlayableAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.ConnectPlayablesToMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ControlPlayableAsset::ConnectPlayablesToMixer(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* playables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::ConnectPlayablesToMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "ConnectPlayablesToMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playables)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, playables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CreateActivationPlayable
void UnityEngine::Timeline::ControlPlayableAsset::CreateActivationPlayable(UnityEngine::GameObject* root, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::CreateActivationPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateActivationPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectParticleSystem
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectParticleSystem(System::Collections::Generic::IEnumerable_1<UnityEngine::ParticleSystem*>* particleSystems, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectParticleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchHierarchyAndConnectParticleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particleSystems), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particleSystems, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectDirector
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectDirector(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableDirector*>* directors, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables, bool disableSelfReferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectDirector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchHierarchyAndConnectDirector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directors), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables), ::il2cpp_utils::ExtractType(disableSelfReferences)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directors, graph, outplayables, disableSelfReferences);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectControlableScripts
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectControlableScripts(System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* controlableScripts, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectControlableScripts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "SearchHierarchyAndConnectControlableScripts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controlableScripts), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controlableScripts, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.ConnectMixerAndPlayable
void UnityEngine::Timeline::ControlPlayableAsset::ConnectMixerAndPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable mixer, UnityEngine::Playables::Playable playable, int portIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::ConnectMixerAndPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "ConnectMixerAndPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(mixer), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(portIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, mixer, playable, portIndex);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetControlableScripts
System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* UnityEngine::Timeline::ControlPlayableAsset::GetControlableScripts(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetControlableScripts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "GetControlableScripts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.UpdateDurationAndLoopFlag
void UnityEngine::Timeline::ControlPlayableAsset::UpdateDurationAndLoopFlag(System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableDirector*>* directors, System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>* particleSystems) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::UpdateDurationAndLoopFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDurationAndLoopFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directors), ::il2cpp_utils::ExtractType(particleSystems)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directors, particleSystems);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetControllableParticleSystems
System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::GetControllableParticleSystems(UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetControllableParticleSystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllableParticleSystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>*, false>(this, ___internal__method, go);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetControllableParticleSystems
void UnityEngine::Timeline::ControlPlayableAsset::GetControllableParticleSystems(UnityEngine::Transform* t, System::Collections::Generic::ICollection_1<UnityEngine::ParticleSystem*>* roots, System::Collections::Generic::HashSet_1<UnityEngine::ParticleSystem*>* subEmitters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetControllableParticleSystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "GetControllableParticleSystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(roots), ::il2cpp_utils::ExtractType(subEmitters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, roots, subEmitters);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CacheSubEmitters
void UnityEngine::Timeline::ControlPlayableAsset::CacheSubEmitters(UnityEngine::ParticleSystem* ps, System::Collections::Generic::HashSet_1<UnityEngine::ParticleSystem*>* subEmitters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::CacheSubEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "CacheSubEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ps), ::il2cpp_utils::ExtractType(subEmitters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ps, subEmitters);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GatherProperties
void UnityEngine::Timeline::ControlPlayableAsset::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewParticles
void UnityEngine::Timeline::ControlPlayableAsset::PreviewParticles(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::ParticleSystem*>* particles) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(particles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driver, particles);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewActivation
void UnityEngine::Timeline::ControlPlayableAsset::PreviewActivation(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* objects) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(objects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driver, objects);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewTimeControl
void UnityEngine::Timeline::ControlPlayableAsset::PreviewTimeControl(UnityEngine::Timeline::IPropertyCollector* driver, UnityEngine::Playables::PlayableDirector* director, System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* scripts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewTimeControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewTimeControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(scripts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driver, director, scripts);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewDirectors
void UnityEngine::Timeline::ControlPlayableAsset::PreviewDirectors(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableDirector*>* directors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(directors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driver, directors);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_duration
double UnityEngine::Timeline::ControlPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset..cctor
void UnityEngine::Timeline::ControlPlayableAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::ControlPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39
#include "UnityEngine/Timeline/ControlPlayableAsset_-GetControlableScripts-d__39.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour <>2__current
UnityEngine::MonoBehaviour*& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject root
UnityEngine::GameObject*& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject <>3__root
UnityEngine::GameObject*& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$3__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$3__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__root"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour[] <>7__wrap1
::ArrayW<UnityEngine::MonoBehaviour*>& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::MonoBehaviour*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap2
int& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current
UnityEngine::MonoBehaviour* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_Generic_IEnumerator$UnityEngine_MonoBehaviour$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::MonoBehaviour*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.IDisposable.Dispose
void UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.MoveNext
bool UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::MonoBehaviour*>* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_Generic_IEnumerable$UnityEngine_MonoBehaviour$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<UnityEngine::MonoBehaviour*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ControlTrack
#include "UnityEngine/Timeline/ControlTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DiscreteTime
#include "UnityEngine/Timeline/DiscreteTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double k_Tick
double UnityEngine::Timeline::DiscreteTime::_get_k_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_get_k_Tick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "DiscreteTime", "k_Tick"));
}
// Autogenerated static field setter
// Set static field: static private System.Double k_Tick
void UnityEngine::Timeline::DiscreteTime::_set_k_Tick(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_set_k_Tick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "k_Tick", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::_get_kMaxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_get_kMaxTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "kMaxTime"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
void UnityEngine::Timeline::DiscreteTime::_set_kMaxTime(UnityEngine::Timeline::DiscreteTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_set_kMaxTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "kMaxTime", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 m_DiscreteTime
int64_t& UnityEngine::Timeline::DiscreteTime::dyn_m_DiscreteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::dyn_m_DiscreteTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DiscreteTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.get_tickValue
double UnityEngine::Timeline::DiscreteTime::get_tickValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::get_tickValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "get_tickValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::DiscreteTime(UnityEngine::Timeline::DiscreteTime time)
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::DiscreteTime(int64_t time)
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int frame, double fps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(fps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame, fps);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..cctor
void UnityEngine::Timeline::DiscreteTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickBefore
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::OneTickBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickAfter
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::OneTickAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetTick
int64_t UnityEngine::Timeline::DiscreteTime::GetTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FromTicks
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::FromTicks(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::FromTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FromTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ticks);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.CompareTo
int UnityEngine::Timeline::DiscreteTime::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(UnityEngine::Timeline::DiscreteTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.DoubleToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "DoubleToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FloatToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FloatToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.IntToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "IntToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToDouble
double UnityEngine::Timeline::DiscreteTime::ToDouble(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToFloat
float UnityEngine::Timeline::DiscreteTime::ToFloat(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::operator int64_t()
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(float& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int64_t& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Min
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Min(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Max
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Max(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
double UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
float UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetNearestTick
int64_t UnityEngine::Timeline::DiscreteTime::GetNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "GetNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToString
::StringW UnityEngine::Timeline::DiscreteTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetHashCode
int UnityEngine::Timeline::DiscreteTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Equality
bool UnityEngine::Timeline::operator ==(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Inequality
bool UnityEngine::Timeline::operator !=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThan
bool UnityEngine::Timeline::operator >(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThan
bool UnityEngine::Timeline::operator <(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThanOrEqual
bool UnityEngine::Timeline::operator <=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThanOrEqual
bool UnityEngine::Timeline::operator >=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Addition
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator+(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Subtraction
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator-(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.InfiniteRuntimeClip
#include "UnityEngine/Timeline/InfiniteRuntimeClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 kIntervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 kIntervalEnd
void UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_Playable
UnityEngine::Playables::Playable& UnityEngine::Timeline::InfiniteRuntimeClip::dyn_m_Playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::dyn_m_Playable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Playable"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip..cctor
void UnityEngine::Timeline::InfiniteRuntimeClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "InfiniteRuntimeClip", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalStart
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.set_enable
void UnityEngine::Timeline::InfiniteRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.EvaluateAt
void UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.DisableAt
void UnityEngine::Timeline::InfiniteRuntimeClip::DisableAt(double localTime, double rootDuration, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::DisableAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(rootDuration), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, rootDuration, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IInterval
#include "UnityEngine/Timeline/IInterval.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalStart
int64_t UnityEngine::Timeline::IInterval::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IInterval::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalEnd
int64_t UnityEngine::Timeline::IInterval::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IInterval::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClip
#include "UnityEngine/Timeline/RuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip m_Clip
UnityEngine::Timeline::TimelineClip*& UnityEngine::Timeline::RuntimeClip::dyn_m_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::dyn_m_Clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clip"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::TimelineClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_Playable
UnityEngine::Playables::Playable& UnityEngine::Timeline::RuntimeClip::dyn_m_Playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::dyn_m_Playable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Playable"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_ParentMixer
UnityEngine::Playables::Playable& UnityEngine::Timeline::RuntimeClip::dyn_m_ParentMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::dyn_m_ParentMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentMixer"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_clip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::RuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_mixer
UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_playable
UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Create
void UnityEngine::Timeline::RuntimeClip::Create(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Playables::Playable clipPlayable, UnityEngine::Playables::Playable parentMixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetTime
void UnityEngine::Timeline::RuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetDuration
void UnityEngine::Timeline::RuntimeClip::SetDuration(double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::SetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_start
double UnityEngine::Timeline::RuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_duration
double UnityEngine::Timeline::RuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.set_enable
void UnityEngine::Timeline::RuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.EvaluateAt
void UnityEngine::Timeline::RuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.DisableAt
void UnityEngine::Timeline::RuntimeClip::DisableAt(double localTime, double rootDuration, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::DisableAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(rootDuration), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, rootDuration, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClipBase
#include "UnityEngine/Timeline/RuntimeClipBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_start
double UnityEngine::Timeline::RuntimeClipBase::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_duration
double UnityEngine::Timeline::RuntimeClipBase::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <intervalBit>k__BackingField
int& UnityEngine::Timeline::RuntimeElement::dyn_$intervalBit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::dyn_$intervalBit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<intervalBit>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalBit
int UnityEngine::Timeline::RuntimeElement::get_intervalBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_intervalBit
void UnityEngine::Timeline::RuntimeElement::set_intervalBit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::set_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_enable
void UnityEngine::Timeline::RuntimeElement::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.EvaluateAt
void UnityEngine::Timeline::RuntimeElement::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.DisableAt
void UnityEngine::Timeline::RuntimeElement::DisableAt(double localTime, double rootDuration, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::DisableAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(rootDuration), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, rootDuration, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ScheduleRuntimeClip
#include "UnityEngine/Timeline/ScheduleRuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip m_Clip
UnityEngine::Timeline::TimelineClip*& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clip"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::TimelineClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_Playable
UnityEngine::Playables::Playable& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Playable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Playable"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_ParentMixer
UnityEngine::Playables::Playable& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_ParentMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_ParentMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentMixer"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_StartDelay
double& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_StartDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_StartDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartDelay"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_FinishTail
double& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_FinishTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_FinishTail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FinishTail"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Started
bool& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_clip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::ScheduleRuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_mixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_playable
UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.SetTime
void UnityEngine::Timeline::ScheduleRuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.Create
void UnityEngine::Timeline::ScheduleRuntimeClip::Create(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Playables::Playable clipPlayable, UnityEngine::Playables::Playable parentMixer, double startDelay, double finishTail) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer), ::il2cpp_utils::ExtractType(startDelay), ::il2cpp_utils::ExtractType(finishTail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer, startDelay, finishTail);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_start
double UnityEngine::Timeline::ScheduleRuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_duration
double UnityEngine::Timeline::ScheduleRuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.set_enable
void UnityEngine::Timeline::ScheduleRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.EvaluateAt
void UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.DisableAt
void UnityEngine::Timeline::ScheduleRuntimeClip::DisableAt(double localTime, double rootDuration, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::DisableAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(rootDuration), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, rootDuration, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IMarker.get_time
double UnityEngine::Timeline::IMarker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.set_time
void UnityEngine::Timeline::IMarker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.get_parent
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::IMarker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::get_parent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::IMarker::Initialize(UnityEngine::Timeline::TrackAsset* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.INotificationOptionProvider
#include "UnityEngine/Timeline/INotificationOptionProvider.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.INotificationOptionProvider.get_flags
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::INotificationOptionProvider::get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::INotificationOptionProvider::get_flags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Marker
#include "UnityEngine/Timeline/Marker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double m_Time
double& UnityEngine::Timeline::Marker::dyn_m_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::dyn_m_Time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TrackAsset <parent>k__BackingField
UnityEngine::Timeline::TrackAsset*& UnityEngine::Timeline::Marker::dyn_$parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::dyn_$parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parent>k__BackingField"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::TrackAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.Marker.get_parent
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::Marker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::get_parent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_parent
void UnityEngine::Timeline::Marker::set_parent(UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.get_time
double UnityEngine::Timeline::Marker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_time
void UnityEngine::Timeline::Marker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::Marker::UnityEngine_Timeline_IMarker_Initialize(UnityEngine::Timeline::TrackAsset* parentTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::UnityEngine.Timeline.IMarker.Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.IMarker.Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentTrack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentTrack);
}
// Autogenerated method: UnityEngine.Timeline.Marker.OnInitialize
void UnityEngine::Timeline::Marker::OnInitialize(UnityEngine::Timeline::TrackAsset* aPent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::OnInitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aPent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aPent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerList
#include "UnityEngine/Timeline/MarkerList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ScriptableObject> m_Objects
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*& UnityEngine::Timeline::MarkerList::dyn_m_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::dyn_m_Objects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Objects"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.IMarker> m_Cache
System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>*& UnityEngine::Timeline::MarkerList::dyn_m_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::dyn_m_Cache");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cache"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CacheDirty
bool& UnityEngine::Timeline::MarkerList::dyn_m_CacheDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::dyn_m_CacheDirty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasNotifications
bool& UnityEngine::Timeline::MarkerList::dyn_m_HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::dyn_m_HasNotifications");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasNotifications"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_markers
System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::get_markers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_markers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_markers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Count
int UnityEngine::Timeline::MarkerList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Item
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::get_Item(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList..ctor
UnityEngine::Timeline::MarkerList::MarkerList(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Add
void UnityEngine::Timeline::MarkerList::Add(UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(UnityEngine::Timeline::IMarker* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(UnityEngine::ScriptableObject* item, UnityEngine::Timeline::TimelineAsset* timelineAsset, UnityEngine::Playables::PlayableAsset* thingToDirty) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(timelineAsset), ::il2cpp_utils::ExtractType(thingToDirty)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item, timelineAsset, thingToDirty);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Clear
void UnityEngine::Timeline::MarkerList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Contains
bool UnityEngine::Timeline::MarkerList::Contains(UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetMarkers
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetRawMarkerList
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::MarkerList::GetRawMarkerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::GetRawMarkerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRawMarkerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.CreateMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::CreateMarker(System::Type* type, double time, UnityEngine::Timeline::TrackAsset* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, type, time, owner);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.HasNotifications
bool UnityEngine::Timeline::MarkerList::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.BuildCache
void UnityEngine::Timeline::MarkerList::BuildCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::BuildCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BuildCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::MarkerTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalTrack
#include "UnityEngine/Timeline/SignalTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.CustomSignalEventDrawer
#include "UnityEngine/Timeline/CustomSignalEventDrawer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
System::Action_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Timeline::SignalAsset*>*>("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
void UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback", value));
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.add_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::add_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::add_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "add_OnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.remove_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "remove_OnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.OnEnable
void UnityEngine::Timeline::SignalAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalEmitter
#include "UnityEngine/Timeline/SignalEmitter.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Retroactive
bool& UnityEngine::Timeline::SignalEmitter::dyn_m_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::dyn_m_Retroactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Retroactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EmitOnce
bool& UnityEngine::Timeline::SignalEmitter::dyn_m_EmitOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::dyn_m_EmitOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EmitOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.SignalAsset m_Asset
UnityEngine::Timeline::SignalAsset*& UnityEngine::Timeline::SignalEmitter::dyn_m_Asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::dyn_m_Asset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Asset"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::SignalAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_retroactive
bool UnityEngine::Timeline::SignalEmitter::get_retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_retroactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_retroactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_retroactive
void UnityEngine::Timeline::SignalEmitter::set_retroactive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_retroactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_retroactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_emitOnce
bool UnityEngine::Timeline::SignalEmitter::get_emitOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_emitOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_emitOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_emitOnce
void UnityEngine::Timeline::SignalEmitter::set_emitOnce(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_emitOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_emitOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_asset
UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalEmitter::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_asset
void UnityEngine::Timeline::SignalEmitter::set_asset(UnityEngine::Timeline::SignalAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Playables.INotification.get_id
UnityEngine::PropertyName UnityEngine::Timeline::SignalEmitter::UnityEngine_Playables_INotification_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::UnityEngine.Playables.INotification.get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Playables.INotification.get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::PropertyName, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Timeline.INotificationOptionProvider.get_flags
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::SignalEmitter::UnityEngine_Timeline_INotificationOptionProvider_get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::UnityEngine.Timeline.INotificationOptionProvider.get_flags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.INotificationOptionProvider.get_flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.SignalReceiver
#include "UnityEngine/Timeline/SignalReceiver.hpp"
// Including type: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue m_Events
UnityEngine::Timeline::SignalReceiver::EventKeyValue*& UnityEngine::Timeline::SignalReceiver::dyn_m_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::dyn_m_Events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Events"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::SignalReceiver::EventKeyValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnNotify
void UnityEngine::Timeline::SignalReceiver::OnNotify(UnityEngine::Playables::Playable origin, UnityEngine::Playables::INotification* notification, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::OnNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(notification), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, notification, context);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddReaction
void UnityEngine::Timeline::SignalReceiver::AddReaction(UnityEngine::Timeline::SignalAsset* asset, UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::AddReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(reaction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddEmptyReaction
int UnityEngine::Timeline::SignalReceiver::AddEmptyReaction(UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::AddEmptyReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEmptyReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reaction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Remove
void UnityEngine::Timeline::SignalReceiver::Remove(UnityEngine::Timeline::SignalAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetRegisteredSignals
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredSignals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReaction
UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReaction(UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Count
int UnityEngine::Timeline::SignalReceiver::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeSignalAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex(int idx, UnityEngine::Timeline::SignalAsset* newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeSignalAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, newKey);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.RemoveAtIndex
void UnityEngine::Timeline::SignalReceiver::RemoveAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::RemoveAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeReactionAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex(int idx, UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeReactionAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(reaction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReactionAtIndex
UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReactionAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetSignalAssetAtIndex
UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignalAssetAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnEnable
void UnityEngine::Timeline::SignalReceiver::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.SignalAsset> m_Signals
System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>*& UnityEngine::Timeline::SignalReceiver::EventKeyValue::dyn_m_Signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::dyn_m_Signals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Signals"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Events.UnityEvent> m_Events
System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>*& UnityEngine::Timeline::SignalReceiver::EventKeyValue::dyn_m_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::dyn_m_Events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Events"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.get_signals
System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_signals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.get_events
System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.TryGetValue
bool UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue(UnityEngine::Timeline::SignalAsset* key, ByRef<UnityEngine::Events::UnityEvent*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityEvent*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.Append
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append(UnityEngine::Timeline::SignalAsset* key, UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAssetExtensions
#include "UnityEngine/Timeline/TrackAssetExtensions.hpp"
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.GetGroup
UnityEngine::Timeline::GroupTrack* UnityEngine::Timeline::TrackAssetExtensions::GetGroup(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAssetExtensions::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::GroupTrack*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.SetGroup
void UnityEngine::Timeline::TrackAssetExtensions::SetGroup(UnityEngine::Timeline::TrackAsset* asset, UnityEngine::Timeline::GroupTrack* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAssetExtensions::SetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "SetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset, group);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.GroupTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::GroupTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::GroupTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.GroupTrack.CanCompileClips
bool UnityEngine::Timeline::GroupTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::GroupTrack::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ILayerable
#include "UnityEngine/Timeline/ILayerable.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ILayerable.CreateLayerMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ILayerable::CreateLayerMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ILayerable::CreateLayerMixer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLayerMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ActivationControlPlayable
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
UnityEngine::GameObject*& UnityEngine::Timeline::ActivationControlPlayable::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState postPlayback
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState& UnityEngine::Timeline::ActivationControlPlayable::dyn_postPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::dyn_postPlayback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postPlayback"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState m_InitialState
UnityEngine::Timeline::ActivationControlPlayable::InitialState& UnityEngine::Timeline::ActivationControlPlayable::dyn_m_InitialState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::dyn_m_InitialState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialState"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::ActivationControlPlayable::InitialState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationControlPlayable*> UnityEngine::Timeline::ActivationControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* gameObject, UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState postPlaybackState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ActivationControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(postPlaybackState)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, gameObject, postPlaybackState);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.ProcessFrame
void UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, userData);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnGraphStart
void UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Active
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Active
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Inactive
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Revert
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Revert
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Unset
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Unset
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Active
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Active
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Inactive
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Timeline::ActivationControlPlayable::InitialState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.BasicPlayableBehaviour
#include "UnityEngine/Timeline/BasicPlayableBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_duration
double UnityEngine::Timeline::BasicPlayableBehaviour::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStart
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStop
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableCreate
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableDestroy
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPlay
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPause
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.PrepareFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.ProcessFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DirectorControlPlayable
#include "UnityEngine/Timeline/DirectorControlPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.PlayableDirector director
UnityEngine::Playables::PlayableDirector*& UnityEngine::Timeline::DirectorControlPlayable::dyn_director() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::dyn_director");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "director"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SyncTime
bool& UnityEngine::Timeline::DirectorControlPlayable::dyn_m_SyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::dyn_m_SyncTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SyncTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_AssetDuration
double& UnityEngine::Timeline::DirectorControlPlayable::dyn_m_AssetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::dyn_m_AssetDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AssetDuration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::DirectorControlPlayable*> UnityEngine::Timeline::DirectorControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DirectorControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::DirectorControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, director);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncSpeed
void UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed(double speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncPlayState
void UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState(UnityEngine::Playables::PlayableGraph graph, double playableTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncPlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playableTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, playableTime);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectDiscontinuity
bool UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectDiscontinuity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectOutOfSync
bool UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectOutOfSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.UpdateTime
void UnityEngine::Timeline::DirectorControlPlayable::UpdateTime(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.PrepareFrame
void UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.ProcessFrame
void UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimeControl.SetTime
void UnityEngine::Timeline::ITimeControl::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::SetTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStart
void UnityEngine::Timeline::ITimeControl::OnControlTimeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::OnControlTimeStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnControlTimeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStop
void UnityEngine::Timeline::ITimeControl::OnControlTimeStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::OnControlTimeStop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnControlTimeStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
void UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_Retroactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "Retroactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
void UnityEngine::Timeline::NotificationFlags::_set_Retroactive(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_Retroactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "Retroactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
void UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 value__
int16_t& UnityEngine::Timeline::NotificationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ParticleControlPlayable
#include "UnityEngine/Timeline/ParticleControlPlayable.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kUnsetTime
float UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kUnsetTime
void UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastPlayableTime
float& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastPlayableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastPlayableTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPlayableTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastParticleTime
float& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastParticleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastParticleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastParticleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_RandomSeed
uint& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_RandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::dyn_m_RandomSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RandomSeed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem <particleSystem>k__BackingField
UnityEngine::ParticleSystem*& UnityEngine::Timeline::ParticleControlPlayable::dyn_$particleSystem$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::dyn_$particleSystem$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<particleSystem>k__BackingField"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.get_particleSystem
UnityEngine::ParticleSystem* UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::ParticleSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.set_particleSystem
void UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ParticleControlPlayable*> UnityEngine::Timeline::ParticleControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::ParticleSystem* component, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(randomSeed)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ParticleControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, component, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Initialize
void UnityEngine::Timeline::ParticleControlPlayable::Initialize(UnityEngine::ParticleSystem* ps, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ps), ::il2cpp_utils::ExtractType(randomSeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ps, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.SetRandomSeed
void UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed(UnityEngine::ParticleSystem* particleSystem, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "SetRandomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particleSystem), ::il2cpp_utils::ExtractType(randomSeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, particleSystem, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Simulate
void UnityEngine::Timeline::ParticleControlPlayable::Simulate(float time, bool restart) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(restart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, restart);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.PrepareFrame
void UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, data);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PrefabControlPlayable
#include "UnityEngine/Timeline/PrefabControlPlayable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Instance
UnityEngine::GameObject*& UnityEngine::Timeline::PrefabControlPlayable::dyn_m_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::dyn_m_Instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Instance"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.get_prefabInstance
UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::PrefabControlPlayable*> UnityEngine::Timeline::PrefabControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* prefabGameObject, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::PrefabControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Initialize
UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::Initialize(UnityEngine::GameObject* prefabGameObject, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.SetHideFlagsRecursive
void UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "SetHideFlagsRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeControlPlayable
#include "UnityEngine/Timeline/TimeControlPlayable.hpp"
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.ITimeControl m_timeControl
UnityEngine::Timeline::ITimeControl*& UnityEngine::Timeline::TimeControlPlayable::dyn_m_timeControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::dyn_m_timeControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeControl"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::ITimeControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_started
bool& UnityEngine::Timeline::TimeControlPlayable::dyn_m_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::dyn_m_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeControlPlayable*> UnityEngine::Timeline::TimeControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timeControl)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Initialize
void UnityEngine::Timeline::TimeControlPlayable::Initialize(UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeControl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.PrepareFrame
void UnityEngine::Timeline::TimeControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry> m_Notifications
System::Collections::Generic::List_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_Notifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_Notifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Notifications"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_PreviousTime
double& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_PreviousTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_PreviousTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_NeedSortNotifications
bool& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_NeedSortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_NeedSortNotifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NeedSortNotifications"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_TimeSource
UnityEngine::Playables::Playable& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_TimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_TimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeSource"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.set_timeSource
void UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource(UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::TimeNotificationBehaviour::Create(UnityEngine::Playables::PlayableGraph graph, double duration, UnityEngine::Playables::DirectorWrapMode loopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(loopMode)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, duration, loopMode);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.AddNotification
void UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification(double time, UnityEngine::Playables::INotification* payload, UnityEngine::Timeline::NotificationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(payload), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, payload, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SortNotifications
void UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.CanRestoreNotification
bool UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry e, UnityEngine::Playables::FrameData info, double currentTime, double previousTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "CanRestoreNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(previousTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, info, currentTime, previousTime);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.TriggerNotificationsInRange
void UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange(double start, double end, UnityEngine::Playables::FrameData info, UnityEngine::Playables::Playable playable, bool checkState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerNotificationsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(checkState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, info, playable, checkState);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SyncDurationWithExternalSource
void UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncDurationWithExternalSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Trigger_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal(UnityEngine::Playables::Playable playable, UnityEngine::Playables::PlayableOutput output, ByRef<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Trigger_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playable, output, byref(e));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Restore_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal(ByRef<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Restore_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(e));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnGraphStart
void UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnBehaviourPause
void UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.PrepareFrame
void UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double time
double& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.INotification payload
UnityEngine::Playables::INotification*& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_payload() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_payload");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "payload"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::INotification**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean notificationFired
bool& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_notificationFired() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_notificationFired");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notificationFired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.NotificationFlags flags
UnityEngine::Timeline::NotificationFlags& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::NotificationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry.get_triggerInEditor
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry.get_prewarm
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_prewarm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry.get_triggerOnce
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c <>9
UnityEngine::Timeline::TimeNotificationBehaviour::$$c* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeNotificationBehaviour::$$c*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c <>9
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9(UnityEngine::Timeline::TimeNotificationBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry> <>9__12_0
System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry> <>9__12_0
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0(System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c..cctor
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c.<SortNotifications>b__12_0
int UnityEngine::Timeline::TimeNotificationBehaviour::$$c::$SortNotifications$b__12_0(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry x, UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::<SortNotifications>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortNotifications>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PlayableTrack
#include "UnityEngine/Timeline/PlayableTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PlayableTrack.OnCreateClip
void UnityEngine::Timeline::PlayableTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PlayableTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackMediaType
#include "UnityEngine/Timeline/TrackMediaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.MediaType m_MediaType
UnityEngine::Timeline::TimelineAsset::MediaType& UnityEngine::Timeline::TrackMediaType::dyn_m_MediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackMediaType::dyn_m_MediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MediaType"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::TimelineAsset::MediaType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackClipTypeAttribute
#include "UnityEngine/Timeline/TrackClipTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type inspectedType
System::Type*& UnityEngine::Timeline::TrackClipTypeAttribute::dyn_inspectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackClipTypeAttribute::dyn_inspectedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inspectedType"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean allowAutoCreate
bool& UnityEngine::Timeline::TrackClipTypeAttribute::dyn_allowAutoCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackClipTypeAttribute::dyn_allowAutoCreate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowAutoCreate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotKeyableAttribute
#include "UnityEngine/Timeline/NotKeyableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingFlags
#include "UnityEngine/Timeline/TrackBindingFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags None
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags None
void UnityEngine::Timeline::TrackBindingFlags::_set_None(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
void UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags All
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags All
void UnityEngine::Timeline::TrackBindingFlags::_set_All(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Timeline::TrackBindingFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type type
System::Type*& UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Timeline.TrackBindingFlags flags
UnityEngine::Timeline::TrackBindingFlags& UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::TrackBindingFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SupportsChildTracksAttribute
#include "UnityEngine/Timeline/SupportsChildTracksAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type childType
System::Type*& UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_childType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_childType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childType"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 levels
int& UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_levels() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_levels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IgnoreOnPlayableTrackAttribute
#include "UnityEngine/Timeline/IgnoreOnPlayableTrackAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode <useEditMode>k__BackingField
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode& UnityEngine::Timeline::TimeFieldAttribute::dyn_$useEditMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::dyn_$useEditMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<useEditMode>k__BackingField"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeFieldAttribute.get_useEditMode
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useEditMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode None
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode None
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None(UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode ApplyEditMode
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode ApplyEditMode
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode(UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HideInMenuAttribute
#include "UnityEngine/Timeline/HideInMenuAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.CustomStyleAttribute
#include "UnityEngine/Timeline/CustomStyleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ussStyle
::StringW& UnityEngine::Timeline::CustomStyleAttribute::dyn_ussStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::CustomStyleAttribute::dyn_ussStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ussStyle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MenuCategoryAttribute
#include "UnityEngine/Timeline/MenuCategoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String category
::StringW& UnityEngine::Timeline::MenuCategoryAttribute::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MenuCategoryAttribute::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineClipAsset
#include "UnityEngine/Timeline/ITimelineClipAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineClipAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineEvaluateCallback.Evaluate
void UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelinePlayable
#include "UnityEngine/Timeline/TimelinePlayable.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean muteAudioScrubbing
bool UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean muteAudioScrubbing
void UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.IntervalTree`1<UnityEngine.Timeline.RuntimeElement> m_IntervalTree
UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_IntervalTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::dyn_m_IntervalTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntervalTree"))->offset;
  return *reinterpret_cast<UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.RuntimeElement> m_ActiveClips
System::Collections::Generic::List_1<UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveClips"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.RuntimeElement> m_CurrentListOfActiveClips
System::Collections::Generic::List_1<UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_CurrentListOfActiveClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::dyn_m_CurrentListOfActiveClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentListOfActiveClips"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ActiveBit
int& UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveBit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveBit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.ITimelineEvaluateCallback> m_EvaluateCallbacks
System::Collections::Generic::List_1<UnityEngine::Timeline::ITimelineEvaluateCallback*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_EvaluateCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::dyn_m_EvaluateCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EvaluateCallbacks"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Timeline::ITimelineEvaluateCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Timeline.TrackAsset,UnityEngine.Playables.Playable> m_PlayableCache
System::Collections::Generic::Dictionary_2<UnityEngine::Timeline::TrackAsset*, UnityEngine::Playables::Playable>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_PlayableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::dyn_m_PlayableCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayableCache"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<UnityEngine::Timeline::TrackAsset*, UnityEngine::Playables::Playable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable..cctor
void UnityEngine::Timeline::TimelinePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimelinePlayable*> UnityEngine::Timeline::TimelinePlayable::Create(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimelinePlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Compile
void UnityEngine::Timeline::TimelinePlayable::Compile(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CompileTrackList
void UnityEngine::Timeline::TimelinePlayable::CompileTrackList(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CompileTrackList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileTrackList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackOutput
void UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, UnityEngine::Playables::Playable playable, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, track, go, playable, port);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateWeightsForAnimationPlayableOutput
void UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateWeightsForAnimationPlayableOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateAnimationPreviewUpdateCallback
void UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAnimationPreviewUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, timelinePlayable, track, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Evaluate
void UnityEngine::Timeline::TimelinePlayable::Evaluate(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, frameData);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CacheTrack
void UnityEngine::Timeline::TimelinePlayable::CacheTrack(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Playables::Playable playable, int port, UnityEngine::Playables::Playable parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CacheTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, playable, port, parent);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.ForAOTCompilationOnly
void UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "ForAOTCompilationOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.PrepareFrame
void UnityEngine::Timeline::TimelinePlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation
#include "UnityEngine/Timeline/Extrapolation.hpp"
// Including type: UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinExtrapolationTime
double UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinExtrapolationTime
void UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime", value));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation..cctor
void UnityEngine::Timeline::Extrapolation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.CalculateExtrapolationTimes
void UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "CalculateExtrapolationTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.SortClipsByStartTime
::ArrayW<UnityEngine::Timeline::TimelineClip*> UnityEngine::Timeline::Extrapolation::SortClipsByStartTime(::ArrayW<UnityEngine::Timeline::TimelineClip*> clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::SortClipsByStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "SortClipsByStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<UnityEngine::Timeline::TimelineClip*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clips);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c <>9
UnityEngine::Timeline::Extrapolation::$$c* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::Extrapolation::$$c*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c <>9
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9(UnityEngine::Timeline::Extrapolation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0(System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c..cctor
void UnityEngine::Timeline::Extrapolation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c.<SortClipsByStartTime>b__2_0
int UnityEngine::Timeline::Extrapolation::$$c::$SortClipsByStartTime$b__2_0(UnityEngine::Timeline::TimelineClip* clip1, UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::<SortClipsByStartTime>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClipsByStartTime>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HashUtility
#include "UnityEngine/Timeline/HashUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6, int h7) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6), ::il2cpp_utils::ExtractType(h7)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6, h7);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(::ArrayW<int> hashes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PushActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushActiveGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PopActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopActiveGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(UnityEngine::GameObject* obj, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(UnityEngine::GameObject* obj, System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(UnityEngine::GameObject* obj, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromComponent
void UnityEngine::Timeline::IPropertyCollector::AddFromComponent(UnityEngine::GameObject* obj, UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, component);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddObjectProperties
void UnityEngine::Timeline::IPropertyCollector::AddObjectProperties(UnityEngine::Object* obj, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddObjectProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObjectProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyPreview
#include "UnityEngine/Timeline/IPropertyPreview.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyPreview.GatherProperties
void UnityEngine::Timeline::IPropertyPreview::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyPreview::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationUtilities
#include "UnityEngine/Timeline/NotificationUtilities.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.CreateNotificationsPlayable
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* markers, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(markers), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, markers, go);
}
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.TrackTypeSupportsNotifications
bool UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "TrackTypeSupportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ValidateFrameRate
void UnityEngine::Timeline::TimeUtility::ValidateFrameRate(double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ValidateFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ValidateFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrames
int UnityEngine::Timeline::TimeUtility::ToFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ToFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToExactFrames
double UnityEngine::Timeline::TimeUtility::ToExactFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ToExactFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToExactFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(int frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(double frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetEpsilon
double UnityEngine::Timeline::TimeUtility::GetEpsilon(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::GetEpsilon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetEpsilon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate, double epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate, epsilon);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RoundToFrame
double UnityEngine::Timeline::TimeUtility::RoundToFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::RoundToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RoundToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsFrames
::StringW UnityEngine::Timeline::TimeUtility::TimeAsFrames(double timeValue, double frameRate, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::TimeAsFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsTimeCode
::StringW UnityEngine::Timeline::TimeUtility::TimeAsTimeCode(double timeValue, double frameRate, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::TimeAsTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeCode
double UnityEngine::Timeline::TimeUtility::ParseTimeCode(::StringW timeCode, double frameRate, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ParseTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ParseTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeCode), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeCode, frameRate, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::GetAnimationClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RemoveChar
::StringW UnityEngine::Timeline::TimeUtility::RemoveChar(::StringW str, System::Func_2<::Il2CppChar, bool>* charToRemoveFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::RemoveChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RemoveChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(charToRemoveFunc)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, charToRemoveFunc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c <>9
UnityEngine::Timeline::TimeUtility::$$c* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeUtility::$$c*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c <>9
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9(UnityEngine::Timeline::TimeUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0(System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1(System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c..cctor
void UnityEngine::Timeline::TimeUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c.<ParseTimeCode>b__14_0
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c.<ParseTimeCode>b__14_1
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClipExtensions
#include "UnityEngine/Timeline/TimelineClipExtensions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String k_UndoSetParentTrackText
::StringW UnityEngine::Timeline::TimelineClipExtensions::_get_k_UndoSetParentTrackText() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipExtensions::_get_k_UndoSetParentTrackText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Timeline", "TimelineClipExtensions", "k_UndoSetParentTrackText"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String k_UndoSetParentTrackText
void UnityEngine::Timeline::TimelineClipExtensions::_set_k_UndoSetParentTrackText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipExtensions::_set_k_UndoSetParentTrackText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClipExtensions", "k_UndoSetParentTrackText", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipExtensions..cctor
void UnityEngine::Timeline::TimelineClipExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipExtensions.MoveToTrack
void UnityEngine::Timeline::TimelineClipExtensions::MoveToTrack(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Timeline::TrackAsset* destinationTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipExtensions::MoveToTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipExtensions", "MoveToTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(destinationTrack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, destinationTrack);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipExtensions.TryMoveToTrack
bool UnityEngine::Timeline::TimelineClipExtensions::TryMoveToTrack(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Timeline::TrackAsset* destinationTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipExtensions::TryMoveToTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipExtensions", "TryMoveToTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(destinationTrack)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, destinationTrack);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipExtensions.MoveToTrack_Impl
void UnityEngine::Timeline::TimelineClipExtensions::MoveToTrack_Impl(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Timeline::TrackAsset* destinationTrack, UnityEngine::Object* asset, UnityEngine::Timeline::TrackAsset* parentTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipExtensions::MoveToTrack_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipExtensions", "MoveToTrack_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(destinationTrack), ::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(parentTrack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, destinationTrack, asset, parentTrack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities
#include "UnityEngine/Timeline/TimelineCreateUtilities.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.GenerateUniqueActorName
::StringW UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName(System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* tracks, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "GenerateUniqueActorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tracks, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.SaveAssetIntoObject
void UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject(UnityEngine::Object* childAsset, UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "SaveAssetIntoObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAsset), ::il2cpp_utils::ExtractType(masterAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.RemoveAssetFromObject
void UnityEngine::Timeline::TimelineCreateUtilities::RemoveAssetFromObject(UnityEngine::Object* childAsset, UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::RemoveAssetFromObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "RemoveAssetFromObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAsset), ::il2cpp_utils::ExtractType(masterAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.CreateAnimationClipForTrack
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack(::StringW name, UnityEngine::Timeline::TrackAsset* track, bool isLegacy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "CreateAnimationClipForTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(isLegacy)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::AnimationClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, track, isLegacy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.ValidateParentTrack
bool UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack(UnityEngine::Timeline::TrackAsset* parent, System::Type* childType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "ValidateParentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(childType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, childType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
::StringW& UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_0.<GenerateUniqueActorName>b__0
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::$GenerateUniqueActorName$b__0(UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::<GenerateUniqueActorName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String result
::StringW& UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_1.<GenerateUniqueActorName>b__1
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::$GenerateUniqueActorName$b__1(UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::<GenerateUniqueActorName>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineUndo
#include "UnityEngine/Timeline/TimelineUndo.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushDestroyUndo
void UnityEngine::Timeline::TimelineUndo::PushDestroyUndo(UnityEngine::Timeline::TimelineAsset* timeline, UnityEngine::Object* thingToDirty, UnityEngine::Object* objectToDestroy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushDestroyUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushDestroyUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeline), ::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(objectToDestroy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeline, thingToDirty, objectToDestroy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(::ArrayW<UnityEngine::Object*> thingsToDirty, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingsToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingsToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(UnityEngine::Object* thingToDirty, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.RegisterCreatedObjectUndo
void UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo(UnityEngine::Object* thingCreated, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "RegisterCreatedObjectUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingCreated), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingCreated, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.UndoName
::StringW UnityEngine::Timeline::TimelineUndo::UndoName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::UndoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "UndoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.WeightUtility
#include "UnityEngine/Timeline/WeightUtility.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.WeightUtility.NormalizeMixer
float UnityEngine::Timeline::WeightUtility::NormalizeMixer(UnityEngine::Playables::Playable mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::WeightUtility::NormalizeMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "WeightUtility", "NormalizeMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathComplete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
void UnityEngine::AI::NavMeshPathStatus::_set_PathComplete(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathComplete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathPartial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathPartial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
void UnityEngine::AI::NavMeshPathStatus::_set_PathPartial(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathPartial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathPartial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
void UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::AI::NavMeshPathStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
System::IntPtr& UnityEngine::AI::NavMeshPath::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3[] m_Corners
::ArrayW<UnityEngine::Vector3>& UnityEngine::AI::NavMeshPath::dyn_m_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::dyn_m_Corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Corners"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_corners
::ArrayW<UnityEngine::Vector3> UnityEngine::AI::NavMeshPath::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::get_corners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_status
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPath::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::AI::NavMeshPathStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.InitializeNavMeshPath
System::IntPtr UnityEngine::AI::NavMeshPath::InitializeNavMeshPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::InitializeNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshPath", "InitializeNavMeshPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.DestroyNavMeshPath
void UnityEngine::AI::NavMeshPath::DestroyNavMeshPath(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::DestroyNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshPath", "DestroyNavMeshPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCornersInternal
::ArrayW<UnityEngine::Vector3> UnityEngine::AI::NavMeshPath::CalculateCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::CalculateCornersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCornersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCornersInternal
void UnityEngine::AI::NavMeshPath::ClearCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::ClearCornersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCornersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCorners
void UnityEngine::AI::NavMeshPath::ClearCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::ClearCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCorners
void UnityEngine::AI::NavMeshPath::CalculateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::CalculateCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.Finalize
void UnityEngine::AI::NavMeshPath::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
UnityEngine::Vector3& UnityEngine::AI::NavMeshHit::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Normal
UnityEngine::Vector3& UnityEngine::AI::NavMeshHit::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
float& UnityEngine::AI::NavMeshHit::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Mask
int& UnityEngine::AI::NavMeshHit::dyn_m_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::dyn_m_Mask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Hit
int& UnityEngine::AI::NavMeshHit::dyn_m_Hit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::dyn_m_Hit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Hit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AI.NavMeshHit.get_position
UnityEngine::Vector3 UnityEngine::AI::NavMeshHit::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMesh
#include "UnityEngine/AI/NavMesh.hpp"
// Including type: UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate onPreUpdate
UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* UnityEngine::AI::NavMesh::_get_onPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::_get_onPreUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMesh::OnNavMeshPreUpdate*>("UnityEngine.AI", "NavMesh", "onPreUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate onPreUpdate
void UnityEngine::AI::NavMesh::_set_onPreUpdate(UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::_set_onPreUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMesh", "onPreUpdate", value));
}
// Autogenerated method: UnityEngine.AI.NavMesh.Internal_CallOnNavMeshPreUpdate
void UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "Internal_CallOnNavMeshPreUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePath
bool UnityEngine::AI::NavMesh::CalculatePath(UnityEngine::Vector3 sourcePosition, UnityEngine::Vector3 targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal
bool UnityEngine::AI::NavMesh::CalculatePathInternal(UnityEngine::Vector3 sourcePosition, UnityEngine::Vector3 targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition
bool UnityEngine::AI::NavMesh::SamplePosition(UnityEngine::Vector3 sourcePosition, ByRef<UnityEngine::AI::NavMeshHit> hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::SamplePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcePosition, byref(hit), maxDistance, areaMask);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal_Injected
bool UnityEngine::AI::NavMesh::CalculatePathInternal_Injected(ByRef<UnityEngine::Vector3> sourcePosition, ByRef<UnityEngine::Vector3> targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePathInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sourcePosition), byref(targetPosition), areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition_Injected
bool UnityEngine::AI::NavMesh::SamplePosition_Injected(ByRef<UnityEngine::Vector3> sourcePosition, ByRef<UnityEngine::AI::NavMeshHit> hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::SamplePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sourcePosition), byref(hit), maxDistance, areaMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate.Invoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate.BeginInvoke
System::IAsyncResult* UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate.EndInvoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNIHelper
#include "UnityEngine/AndroidJNIHelper.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNIHelper.get_debug
bool UnityEngine::AndroidJNIHelper::get_debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::get_debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "get_debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.set_debug
void UnityEngine::AndroidJNIHelper::set_debug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::set_debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "set_debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr javaClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaClass);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr javaClass, ::StringW signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaClass, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaClass, methodName);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::StringW methodName, ::StringW signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaClass, methodName, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::StringW methodName, ::StringW signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaClass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::StringW fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaClass, fieldName);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::StringW fieldName, ::StringW signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaClass, fieldName, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::StringW fieldName, ::StringW signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaClass, fieldName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJavaRunnable
System::IntPtr UnityEngine::AndroidJNIHelper::CreateJavaRunnable(UnityEngine::AndroidJavaRunnable* jrunnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJavaRunnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJavaRunnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jrunnable)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jrunnable);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJavaProxy
System::IntPtr UnityEngine::AndroidJNIHelper::CreateJavaProxy(UnityEngine::AndroidJavaProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJavaProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJavaProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxy);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.ConvertToJNIArray
System::IntPtr UnityEngine::AndroidJNIHelper::ConvertToJNIArray(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::ConvertToJNIArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "ConvertToJNIArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJNIArgArray
::ArrayW<UnityEngine::jvalue> UnityEngine::AndroidJNIHelper::CreateJNIArgArray(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJNIArgArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<UnityEngine::jvalue>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.DeleteJNIArgArray
void UnityEngine::AndroidJNIHelper::DeleteJNIArgArray(::ArrayW<::Il2CppObject*> args, ::ArrayW<UnityEngine::jvalue> jniArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::DeleteJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "DeleteJNIArgArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(jniArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args, jniArgs);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr jclass, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jclass, args);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr jclass, ::StringW methodName, ::ArrayW<::Il2CppObject*> args, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jclass, methodName, args, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetSignature
::StringW UnityEngine::AndroidJNIHelper::GetSignature(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetSignature
::StringW UnityEngine::AndroidJNIHelper::GetSignature(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AndroidJNI
#include "UnityEngine/AndroidJNI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNI.AttachCurrentThread
int UnityEngine::AndroidJNI::AttachCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::AttachCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "AttachCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.DetachCurrentThread
int UnityEngine::AndroidJNI::DetachCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DetachCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DetachCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetVersion
int UnityEngine::AndroidJNI::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.FindClass
System::IntPtr UnityEngine::AndroidJNI::FindClass(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FindClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FindClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromReflectedMethod
System::IntPtr UnityEngine::AndroidJNI::FromReflectedMethod(System::IntPtr refMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromReflectedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, refMethod);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromReflectedField
System::IntPtr UnityEngine::AndroidJNI::FromReflectedField(System::IntPtr refField) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromReflectedField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromReflectedField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refField)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, refField);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToReflectedMethod
System::IntPtr UnityEngine::AndroidJNI::ToReflectedMethod(System::IntPtr clazz, System::IntPtr methodID, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToReflectedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToReflectedField
System::IntPtr UnityEngine::AndroidJNI::ToReflectedField(System::IntPtr clazz, System::IntPtr fieldID, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToReflectedField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToReflectedField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSuperclass
System::IntPtr UnityEngine::AndroidJNI::GetSuperclass(System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSuperclass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSuperclass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsAssignableFrom
bool UnityEngine::AndroidJNI::IsAssignableFrom(System::IntPtr clazz1, System::IntPtr clazz2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz1), ::il2cpp_utils::ExtractType(clazz2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz1, clazz2);
}
// Autogenerated method: UnityEngine.AndroidJNI.Throw
int UnityEngine::AndroidJNI::Throw(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.ThrowNew
int UnityEngine::AndroidJNI::ThrowNew(System::IntPtr clazz, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ThrowNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ThrowNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, message);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionOccurred
System::IntPtr UnityEngine::AndroidJNI::ExceptionOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionOccurred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionOccurred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionDescribe
void UnityEngine::AndroidJNI::ExceptionDescribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionDescribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionDescribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionClear
void UnityEngine::AndroidJNI::ExceptionClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.FatalError
void UnityEngine::AndroidJNI::FatalError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FatalError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FatalError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.AndroidJNI.PushLocalFrame
int UnityEngine::AndroidJNI::PushLocalFrame(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::PushLocalFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "PushLocalFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.AndroidJNI.PopLocalFrame
System::IntPtr UnityEngine::AndroidJNI::PopLocalFrame(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::PopLocalFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "PopLocalFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewGlobalRef
System::IntPtr UnityEngine::AndroidJNI::NewGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteGlobalRef
void UnityEngine::AndroidJNI::DeleteGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewWeakGlobalRef
System::IntPtr UnityEngine::AndroidJNI::NewWeakGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewWeakGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteWeakGlobalRef
void UnityEngine::AndroidJNI::DeleteWeakGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteWeakGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewLocalRef
System::IntPtr UnityEngine::AndroidJNI::NewLocalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteLocalRef
void UnityEngine::AndroidJNI::DeleteLocalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsSameObject
bool UnityEngine::AndroidJNI::IsSameObject(System::IntPtr obj1, System::IntPtr obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsSameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsSameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj1), ::il2cpp_utils::ExtractType(obj2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj1, obj2);
}
// Autogenerated method: UnityEngine.AndroidJNI.EnsureLocalCapacity
int UnityEngine::AndroidJNI::EnsureLocalCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::EnsureLocalCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "EnsureLocalCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.AndroidJNI.AllocObject
System::IntPtr UnityEngine::AndroidJNI::AllocObject(System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::AllocObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "AllocObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewObject
System::IntPtr UnityEngine::AndroidJNI::NewObject(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectClass
System::IntPtr UnityEngine::AndroidJNI::GetObjectClass(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsInstanceOf
bool UnityEngine::AndroidJNI::IsInstanceOf(System::IntPtr obj, System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsInstanceOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsInstanceOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetMethodID
System::IntPtr UnityEngine::AndroidJNI::GetMethodID(System::IntPtr clazz, ::StringW name, ::StringW sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFieldID
System::IntPtr UnityEngine::AndroidJNI::GetFieldID(System::IntPtr clazz, ::StringW name, ::StringW sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticMethodID
System::IntPtr UnityEngine::AndroidJNI::GetStaticMethodID(System::IntPtr clazz, ::StringW name, ::StringW sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticFieldID
System::IntPtr UnityEngine::AndroidJNI::GetStaticFieldID(System::IntPtr clazz, ::StringW name, ::StringW sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewString
System::IntPtr UnityEngine::AndroidJNI::NewString(::StringW chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewStringFromStr
System::IntPtr UnityEngine::AndroidJNI::NewStringFromStr(::StringW chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewStringFromStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewStringFromStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewString
System::IntPtr UnityEngine::AndroidJNI::NewString(::ArrayW<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewStringUTF
System::IntPtr UnityEngine::AndroidJNI::NewStringUTF(::StringW bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewStringUTF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewStringUTF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringChars
::StringW UnityEngine::AndroidJNI::GetStringChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringLength
int UnityEngine::AndroidJNI::GetStringLength(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringUTFLength
int UnityEngine::AndroidJNI::GetStringUTFLength(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringUTFLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringUTFLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringUTFChars
::StringW UnityEngine::AndroidJNI::GetStringUTFChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringUTFChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringUTFChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStringMethod
::StringW UnityEngine::AndroidJNI::CallStringMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallObjectMethod
System::IntPtr UnityEngine::AndroidJNI::CallObjectMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallIntMethod
int UnityEngine::AndroidJNI::CallIntMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallBooleanMethod
bool UnityEngine::AndroidJNI::CallBooleanMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallShortMethod
int16_t UnityEngine::AndroidJNI::CallShortMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallByteMethod
uint8_t UnityEngine::AndroidJNI::CallByteMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallSByteMethod
int8_t UnityEngine::AndroidJNI::CallSByteMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallCharMethod
::Il2CppChar UnityEngine::AndroidJNI::CallCharMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallFloatMethod
float UnityEngine::AndroidJNI::CallFloatMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallDoubleMethod
double UnityEngine::AndroidJNI::CallDoubleMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallLongMethod
int64_t UnityEngine::AndroidJNI::CallLongMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallVoidMethod
void UnityEngine::AndroidJNI::CallVoidMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringField
::StringW UnityEngine::AndroidJNI::GetStringField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectField
System::IntPtr UnityEngine::AndroidJNI::GetObjectField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetBooleanField
bool UnityEngine::AndroidJNI::GetBooleanField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetByteField
uint8_t UnityEngine::AndroidJNI::GetByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSByteField
int8_t UnityEngine::AndroidJNI::GetSByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetCharField
::Il2CppChar UnityEngine::AndroidJNI::GetCharField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetShortField
int16_t UnityEngine::AndroidJNI::GetShortField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetIntField
int UnityEngine::AndroidJNI::GetIntField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetLongField
int64_t UnityEngine::AndroidJNI::GetLongField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFloatField
float UnityEngine::AndroidJNI::GetFloatField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetDoubleField
double UnityEngine::AndroidJNI::GetDoubleField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStringField
void UnityEngine::AndroidJNI::SetStringField(System::IntPtr obj, System::IntPtr fieldID, ::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetObjectField
void UnityEngine::AndroidJNI::SetObjectField(System::IntPtr obj, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanField
void UnityEngine::AndroidJNI::SetBooleanField(System::IntPtr obj, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetByteField
void UnityEngine::AndroidJNI::SetByteField(System::IntPtr obj, System::IntPtr fieldID, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetSByteField
void UnityEngine::AndroidJNI::SetSByteField(System::IntPtr obj, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetCharField
void UnityEngine::AndroidJNI::SetCharField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetShortField
void UnityEngine::AndroidJNI::SetShortField(System::IntPtr obj, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetIntField
void UnityEngine::AndroidJNI::SetIntField(System::IntPtr obj, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetLongField
void UnityEngine::AndroidJNI::SetLongField(System::IntPtr obj, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetFloatField
void UnityEngine::AndroidJNI::SetFloatField(System::IntPtr obj, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetDoubleField
void UnityEngine::AndroidJNI::SetDoubleField(System::IntPtr obj, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticStringMethod
::StringW UnityEngine::AndroidJNI::CallStaticStringMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticObjectMethod
System::IntPtr UnityEngine::AndroidJNI::CallStaticObjectMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticIntMethod
int UnityEngine::AndroidJNI::CallStaticIntMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticBooleanMethod
bool UnityEngine::AndroidJNI::CallStaticBooleanMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticShortMethod
int16_t UnityEngine::AndroidJNI::CallStaticShortMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticByteMethod
uint8_t UnityEngine::AndroidJNI::CallStaticByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticSByteMethod
int8_t UnityEngine::AndroidJNI::CallStaticSByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticCharMethod
::Il2CppChar UnityEngine::AndroidJNI::CallStaticCharMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticFloatMethod
float UnityEngine::AndroidJNI::CallStaticFloatMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticDoubleMethod
double UnityEngine::AndroidJNI::CallStaticDoubleMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticLongMethod
int64_t UnityEngine::AndroidJNI::CallStaticLongMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticVoidMethod
void UnityEngine::AndroidJNI::CallStaticVoidMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticStringField
::StringW UnityEngine::AndroidJNI::GetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticObjectField
System::IntPtr UnityEngine::AndroidJNI::GetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticBooleanField
bool UnityEngine::AndroidJNI::GetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticByteField
uint8_t UnityEngine::AndroidJNI::GetStaticByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticSByteField
int8_t UnityEngine::AndroidJNI::GetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticCharField
::Il2CppChar UnityEngine::AndroidJNI::GetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticShortField
int16_t UnityEngine::AndroidJNI::GetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticIntField
int UnityEngine::AndroidJNI::GetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticLongField
int64_t UnityEngine::AndroidJNI::GetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticFloatField
float UnityEngine::AndroidJNI::GetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticDoubleField
double UnityEngine::AndroidJNI::GetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticStringField
void UnityEngine::AndroidJNI::SetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID, ::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticObjectField
void UnityEngine::AndroidJNI::SetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticBooleanField
void UnityEngine::AndroidJNI::SetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticByteField
void UnityEngine::AndroidJNI::SetStaticByteField(System::IntPtr clazz, System::IntPtr fieldID, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticSByteField
void UnityEngine::AndroidJNI::SetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticCharField
void UnityEngine::AndroidJNI::SetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticShortField
void UnityEngine::AndroidJNI::SetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticIntField
void UnityEngine::AndroidJNI::SetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticLongField
void UnityEngine::AndroidJNI::SetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticFloatField
void UnityEngine::AndroidJNI::SetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticDoubleField
void UnityEngine::AndroidJNI::SetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToBooleanArray
System::IntPtr UnityEngine::AndroidJNI::ToBooleanArray(::ArrayW<bool> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToByteArray
System::IntPtr UnityEngine::AndroidJNI::ToByteArray(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToSByteArray
System::IntPtr UnityEngine::AndroidJNI::ToSByteArray(::ArrayW<int8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToCharArray
System::IntPtr UnityEngine::AndroidJNI::ToCharArray(::ArrayW<::Il2CppChar> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToShortArray
System::IntPtr UnityEngine::AndroidJNI::ToShortArray(::ArrayW<int16_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToIntArray
System::IntPtr UnityEngine::AndroidJNI::ToIntArray(::ArrayW<int> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToLongArray
System::IntPtr UnityEngine::AndroidJNI::ToLongArray(::ArrayW<int64_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToFloatArray
System::IntPtr UnityEngine::AndroidJNI::ToFloatArray(::ArrayW<float> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToDoubleArray
System::IntPtr UnityEngine::AndroidJNI::ToDoubleArray(::ArrayW<double> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToObjectArray
System::IntPtr UnityEngine::AndroidJNI::ToObjectArray(::ArrayW<System::IntPtr> array, System::IntPtr arrayClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayClass)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, arrayClass);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToObjectArray
System::IntPtr UnityEngine::AndroidJNI::ToObjectArray(::ArrayW<System::IntPtr> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromBooleanArray
::ArrayW<bool> UnityEngine::AndroidJNI::FromBooleanArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromByteArray
::ArrayW<uint8_t> UnityEngine::AndroidJNI::FromByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromSByteArray
::ArrayW<int8_t> UnityEngine::AndroidJNI::FromSByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromCharArray
::ArrayW<::Il2CppChar> UnityEngine::AndroidJNI::FromCharArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromShortArray
::ArrayW<int16_t> UnityEngine::AndroidJNI::FromShortArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromIntArray
::ArrayW<int> UnityEngine::AndroidJNI::FromIntArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromLongArray
::ArrayW<int64_t> UnityEngine::AndroidJNI::FromLongArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromFloatArray
::ArrayW<float> UnityEngine::AndroidJNI::FromFloatArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromDoubleArray
::ArrayW<double> UnityEngine::AndroidJNI::FromDoubleArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<double>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromObjectArray
::ArrayW<System::IntPtr> UnityEngine::AndroidJNI::FromObjectArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::IntPtr>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetArrayLength
int UnityEngine::AndroidJNI::GetArrayLength(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewBooleanArray
System::IntPtr UnityEngine::AndroidJNI::NewBooleanArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewByteArray
System::IntPtr UnityEngine::AndroidJNI::NewByteArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewSByteArray
System::IntPtr UnityEngine::AndroidJNI::NewSByteArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewCharArray
System::IntPtr UnityEngine::AndroidJNI::NewCharArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewShortArray
System::IntPtr UnityEngine::AndroidJNI::NewShortArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewIntArray
System::IntPtr UnityEngine::AndroidJNI::NewIntArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewLongArray
System::IntPtr UnityEngine::AndroidJNI::NewLongArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewFloatArray
System::IntPtr UnityEngine::AndroidJNI::NewFloatArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewDoubleArray
System::IntPtr UnityEngine::AndroidJNI::NewDoubleArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewObjectArray
System::IntPtr UnityEngine::AndroidJNI::NewObjectArray(int size, System::IntPtr clazz, System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, clazz, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetBooleanArrayElement
bool UnityEngine::AndroidJNI::GetBooleanArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetByteArrayElement
uint8_t UnityEngine::AndroidJNI::GetByteArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSByteArrayElement
int8_t UnityEngine::AndroidJNI::GetSByteArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetCharArrayElement
::Il2CppChar UnityEngine::AndroidJNI::GetCharArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetCharArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetCharArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetShortArrayElement
int16_t UnityEngine::AndroidJNI::GetShortArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetShortArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetShortArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetIntArrayElement
int UnityEngine::AndroidJNI::GetIntArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetIntArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetIntArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetLongArrayElement
int64_t UnityEngine::AndroidJNI::GetLongArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetLongArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetLongArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFloatArrayElement
float UnityEngine::AndroidJNI::GetFloatArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFloatArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFloatArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetDoubleArrayElement
double UnityEngine::AndroidJNI::GetDoubleArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetDoubleArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetDoubleArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectArrayElement
System::IntPtr UnityEngine::AndroidJNI::GetObjectArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanArrayElement
void UnityEngine::AndroidJNI::SetBooleanArrayElement(System::IntPtr array, int index, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanArrayElement
void UnityEngine::AndroidJNI::SetBooleanArrayElement(System::IntPtr array, int index, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetByteArrayElement
void UnityEngine::AndroidJNI::SetByteArrayElement(System::IntPtr array, int index, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetSByteArrayElement
void UnityEngine::AndroidJNI::SetSByteArrayElement(System::IntPtr array, int index, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetSByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetSByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetCharArrayElement
void UnityEngine::AndroidJNI::SetCharArrayElement(System::IntPtr array, int index, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetCharArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetCharArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetShortArrayElement
void UnityEngine::AndroidJNI::SetShortArrayElement(System::IntPtr array, int index, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetShortArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetShortArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetIntArrayElement
void UnityEngine::AndroidJNI::SetIntArrayElement(System::IntPtr array, int index, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetIntArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetIntArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetLongArrayElement
void UnityEngine::AndroidJNI::SetLongArrayElement(System::IntPtr array, int index, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetLongArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetLongArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetFloatArrayElement
void UnityEngine::AndroidJNI::SetFloatArrayElement(System::IntPtr array, int index, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetFloatArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetFloatArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetDoubleArrayElement
void UnityEngine::AndroidJNI::SetDoubleArrayElement(System::IntPtr array, int index, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetDoubleArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetDoubleArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetObjectArrayElement
void UnityEngine::AndroidJNI::SetObjectArrayElement(System::IntPtr array, int index, System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetObjectArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AndroidJNISafe
#include "UnityEngine/AndroidJNISafe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNISafe.CheckException
void UnityEngine::AndroidJNISafe::CheckException() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CheckException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CheckException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteGlobalRef
void UnityEngine::AndroidJNISafe::DeleteGlobalRef(System::IntPtr globalref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(globalref)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, globalref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteWeakGlobalRef
void UnityEngine::AndroidJNISafe::DeleteWeakGlobalRef(System::IntPtr globalref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteWeakGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(globalref)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, globalref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteLocalRef
void UnityEngine::AndroidJNISafe::DeleteLocalRef(System::IntPtr localref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localref)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.NewString
System::IntPtr UnityEngine::AndroidJNISafe::NewString(::StringW chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::NewString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "NewString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStringChars
::StringW UnityEngine::AndroidJNISafe::GetStringChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStringChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStringChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectClass
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectClass(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticMethodID
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticMethodID(System::IntPtr clazz, ::StringW name, ::StringW sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetMethodID
System::IntPtr UnityEngine::AndroidJNISafe::GetMethodID(System::IntPtr obj, ::StringW name, ::StringW sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetFieldID
System::IntPtr UnityEngine::AndroidJNISafe::GetFieldID(System::IntPtr clazz, ::StringW name, ::StringW sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticFieldID
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticFieldID(System::IntPtr clazz, ::StringW name, ::StringW sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromReflectedMethod
System::IntPtr UnityEngine::AndroidJNISafe::FromReflectedMethod(System::IntPtr refMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromReflectedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, refMethod);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FindClass
System::IntPtr UnityEngine::AndroidJNISafe::FindClass(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FindClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FindClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.NewObject
System::IntPtr UnityEngine::AndroidJNISafe::NewObject(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::NewObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "NewObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticObjectField
void UnityEngine::AndroidJNISafe::SetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticStringField
void UnityEngine::AndroidJNISafe::SetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID, ::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticCharField
void UnityEngine::AndroidJNISafe::SetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticDoubleField
void UnityEngine::AndroidJNISafe::SetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticFloatField
void UnityEngine::AndroidJNISafe::SetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticLongField
void UnityEngine::AndroidJNISafe::SetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticShortField
void UnityEngine::AndroidJNISafe::SetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticSByteField
void UnityEngine::AndroidJNISafe::SetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticBooleanField
void UnityEngine::AndroidJNISafe::SetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticIntField
void UnityEngine::AndroidJNISafe::SetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticObjectField
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticStringField
::StringW UnityEngine::AndroidJNISafe::GetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticCharField
::Il2CppChar UnityEngine::AndroidJNISafe::GetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticDoubleField
double UnityEngine::AndroidJNISafe::GetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticFloatField
float UnityEngine::AndroidJNISafe::GetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticLongField
int64_t UnityEngine::AndroidJNISafe::GetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticShortField
int16_t UnityEngine::AndroidJNISafe::GetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticSByteField
int8_t UnityEngine::AndroidJNISafe::GetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticBooleanField
bool UnityEngine::AndroidJNISafe::GetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticIntField
int UnityEngine::AndroidJNISafe::GetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticVoidMethod
void UnityEngine::AndroidJNISafe::CallStaticVoidMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticObjectMethod
System::IntPtr UnityEngine::AndroidJNISafe::CallStaticObjectMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticStringMethod
::StringW UnityEngine::AndroidJNISafe::CallStaticStringMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticCharMethod
::Il2CppChar UnityEngine::AndroidJNISafe::CallStaticCharMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticDoubleMethod
double UnityEngine::AndroidJNISafe::CallStaticDoubleMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticFloatMethod
float UnityEngine::AndroidJNISafe::CallStaticFloatMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticLongMethod
int64_t UnityEngine::AndroidJNISafe::CallStaticLongMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticShortMethod
int16_t UnityEngine::AndroidJNISafe::CallStaticShortMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticSByteMethod
int8_t UnityEngine::AndroidJNISafe::CallStaticSByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticBooleanMethod
bool UnityEngine::AndroidJNISafe::CallStaticBooleanMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticIntMethod
int UnityEngine::AndroidJNISafe::CallStaticIntMethod(System::IntPtr clazz, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetObjectField
void UnityEngine::AndroidJNISafe::SetObjectField(System::IntPtr obj, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStringField
void UnityEngine::AndroidJNISafe::SetStringField(System::IntPtr obj, System::IntPtr fieldID, ::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetCharField
void UnityEngine::AndroidJNISafe::SetCharField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetDoubleField
void UnityEngine::AndroidJNISafe::SetDoubleField(System::IntPtr obj, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetFloatField
void UnityEngine::AndroidJNISafe::SetFloatField(System::IntPtr obj, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetLongField
void UnityEngine::AndroidJNISafe::SetLongField(System::IntPtr obj, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetShortField
void UnityEngine::AndroidJNISafe::SetShortField(System::IntPtr obj, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetSByteField
void UnityEngine::AndroidJNISafe::SetSByteField(System::IntPtr obj, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetBooleanField
void UnityEngine::AndroidJNISafe::SetBooleanField(System::IntPtr obj, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetIntField
void UnityEngine::AndroidJNISafe::SetIntField(System::IntPtr obj, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectField
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStringField
::StringW UnityEngine::AndroidJNISafe::GetStringField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetCharField
::Il2CppChar UnityEngine::AndroidJNISafe::GetCharField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetDoubleField
double UnityEngine::AndroidJNISafe::GetDoubleField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetFloatField
float UnityEngine::AndroidJNISafe::GetFloatField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetLongField
int64_t UnityEngine::AndroidJNISafe::GetLongField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetShortField
int16_t UnityEngine::AndroidJNISafe::GetShortField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetSByteField
int8_t UnityEngine::AndroidJNISafe::GetSByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetBooleanField
bool UnityEngine::AndroidJNISafe::GetBooleanField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetIntField
int UnityEngine::AndroidJNISafe::GetIntField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallVoidMethod
void UnityEngine::AndroidJNISafe::CallVoidMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallObjectMethod
System::IntPtr UnityEngine::AndroidJNISafe::CallObjectMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStringMethod
::StringW UnityEngine::AndroidJNISafe::CallStringMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallCharMethod
::Il2CppChar UnityEngine::AndroidJNISafe::CallCharMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallDoubleMethod
double UnityEngine::AndroidJNISafe::CallDoubleMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallFloatMethod
float UnityEngine::AndroidJNISafe::CallFloatMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallLongMethod
int64_t UnityEngine::AndroidJNISafe::CallLongMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallShortMethod
int16_t UnityEngine::AndroidJNISafe::CallShortMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallSByteMethod
int8_t UnityEngine::AndroidJNISafe::CallSByteMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallBooleanMethod
bool UnityEngine::AndroidJNISafe::CallBooleanMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallIntMethod
int UnityEngine::AndroidJNISafe::CallIntMethod(System::IntPtr obj, System::IntPtr methodID, ::ArrayW<UnityEngine::jvalue> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromCharArray
::ArrayW<::Il2CppChar> UnityEngine::AndroidJNISafe::FromCharArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromDoubleArray
::ArrayW<double> UnityEngine::AndroidJNISafe::FromDoubleArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<double>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromFloatArray
::ArrayW<float> UnityEngine::AndroidJNISafe::FromFloatArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromLongArray
::ArrayW<int64_t> UnityEngine::AndroidJNISafe::FromLongArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromShortArray
::ArrayW<int16_t> UnityEngine::AndroidJNISafe::FromShortArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromByteArray
::ArrayW<uint8_t> UnityEngine::AndroidJNISafe::FromByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromSByteArray
::ArrayW<int8_t> UnityEngine::AndroidJNISafe::FromSByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromBooleanArray
::ArrayW<bool> UnityEngine::AndroidJNISafe::FromBooleanArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromIntArray
::ArrayW<int> UnityEngine::AndroidJNISafe::FromIntArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToObjectArray
System::IntPtr UnityEngine::AndroidJNISafe::ToObjectArray(::ArrayW<System::IntPtr> array, System::IntPtr type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, type);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToCharArray
System::IntPtr UnityEngine::AndroidJNISafe::ToCharArray(::ArrayW<::Il2CppChar> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToDoubleArray
System::IntPtr UnityEngine::AndroidJNISafe::ToDoubleArray(::ArrayW<double> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToFloatArray
System::IntPtr UnityEngine::AndroidJNISafe::ToFloatArray(::ArrayW<float> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToLongArray
System::IntPtr UnityEngine::AndroidJNISafe::ToLongArray(::ArrayW<int64_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToShortArray
System::IntPtr UnityEngine::AndroidJNISafe::ToShortArray(::ArrayW<int16_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToByteArray
System::IntPtr UnityEngine::AndroidJNISafe::ToByteArray(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToSByteArray
System::IntPtr UnityEngine::AndroidJNISafe::ToSByteArray(::ArrayW<int8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToBooleanArray
System::IntPtr UnityEngine::AndroidJNISafe::ToBooleanArray(::ArrayW<bool> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToIntArray
System::IntPtr UnityEngine::AndroidJNISafe::ToIntArray(::ArrayW<int> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectArrayElement
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetArrayLength
int UnityEngine::AndroidJNISafe::GetArrayLength(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaRunnable.Invoke
void UnityEngine::AndroidJavaRunnable::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaRunnable.BeginInvoke
System::IAsyncResult* UnityEngine::AndroidJavaRunnable::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AndroidJavaRunnable.EndInvoke
void UnityEngine::AndroidJavaRunnable::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AndroidJavaException
#include "UnityEngine/AndroidJavaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String mJavaStackTrace
::StringW& UnityEngine::AndroidJavaException::dyn_mJavaStackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaException::dyn_mJavaStackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mJavaStackTrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AndroidJavaException.get_StackTrace
::StringW UnityEngine::AndroidJavaException::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaException::get_StackTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
bool& UnityEngine::GlobalJavaObjectRef::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GlobalJavaObjectRef::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.IntPtr m_jobject
System::IntPtr& UnityEngine::GlobalJavaObjectRef::dyn_m_jobject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GlobalJavaObjectRef::dyn_m_jobject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_jobject"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.GlobalJavaObjectRef.Dispose
void UnityEngine::GlobalJavaObjectRef::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GlobalJavaObjectRef::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GlobalJavaObjectRef.Finalize
void UnityEngine::GlobalJavaObjectRef::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GlobalJavaObjectRef::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AndroidJavaRunnableProxy
#include "UnityEngine/AndroidJavaRunnableProxy.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AndroidJavaRunnable mRunnable
UnityEngine::AndroidJavaRunnable*& UnityEngine::AndroidJavaRunnableProxy::dyn_mRunnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnableProxy::dyn_mRunnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mRunnable"))->offset;
  return *reinterpret_cast<UnityEngine::AndroidJavaRunnable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AndroidJavaRunnableProxy.run
void UnityEngine::AndroidJavaRunnableProxy::run() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnableProxy::run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
