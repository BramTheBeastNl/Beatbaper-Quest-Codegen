// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/<GetCoverImageAsync>d__65
#include "GlobalNamespace/BeatmapLevelSO_-GetCoverImageAsync-d__65.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*> GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSO <>4__this
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSO <>4__this
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_$$4__this(GlobalNamespace::BeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*> GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BeatmapLevelSO/<GetCoverImageAsync>d__65.MoveNext
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/<GetCoverImageAsync>d__65.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__68
#include "GlobalNamespace/BeatmapLevelSO_-GetBeatmapLevelDataAsync-d__68.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapLevelSO/GetBeatmapLevelDataResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult> GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapLevelSO/GetBeatmapLevelDataResult> <>t__builder
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSO <>4__this
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSO <>4__this
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_set_$$4__this(GlobalNamespace::BeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapLevelSO/GetBeatmapLevelDataResult> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult> GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapLevelSO/GetBeatmapLevelDataResult> <>u__1
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__68.MoveNext
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__68.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: LevelDataAssetDownloadUpdate
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
// Including type: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__31
#include "GlobalNamespace/BeatmapLevelsModel_-ReloadCustomLevelPackCollectionAsync-d__31.hpp"
// Including type: BeatmapLevelsModel/<>c__DisplayClass34_0
#include "GlobalNamespace/BeatmapLevelsModel_--c__DisplayClass34_0.hpp"
// Including type: BeatmapLevelsModel/<>c
#include "GlobalNamespace/BeatmapLevelsModel_--c.hpp"
// Including type: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__37
#include "GlobalNamespace/BeatmapLevelsModel_-GetBeatmapLevelAsync-d__37.hpp"
// Including type: BeatmapLevelPackCollectionContainerSO
#include "GlobalNamespace/BeatmapLevelPackCollectionContainerSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: BeatmapLevelDataLoaderSO
#include "GlobalNamespace/BeatmapLevelDataLoaderSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: IBeatmapDataAssetFileModel
#include "GlobalNamespace/IBeatmapDataAssetFileModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMCache`2
#include "GlobalNamespace/HMCache_2.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapLevelLoader
#include "GlobalNamespace/BeatmapLevelLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionContainerSO _dlcLevelPackCollectionContainer
GlobalNamespace::BeatmapLevelPackCollectionContainerSO* GlobalNamespace::BeatmapLevelsModel::_get__dlcLevelPackCollectionContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__dlcLevelPackCollectionContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcLevelPackCollectionContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelPackCollectionContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelPackCollectionContainerSO _dlcLevelPackCollectionContainer
void GlobalNamespace::BeatmapLevelsModel::_set__dlcLevelPackCollectionContainer(GlobalNamespace::BeatmapLevelPackCollectionContainerSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__dlcLevelPackCollectionContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcLevelPackCollectionContainer"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelPackCollectionContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasPackCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::BeatmapLevelsModel::_get__ostAndExtrasPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__ostAndExtrasPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ostAndExtrasPackCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasPackCollection
void GlobalNamespace::BeatmapLevelsModel::_set__ostAndExtrasPackCollection(GlobalNamespace::BeatmapLevelPackCollectionSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__ostAndExtrasPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ostAndExtrasPackCollection"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelDataLoaderSO _beatmapLevelDataLoader
GlobalNamespace::BeatmapLevelDataLoaderSO* GlobalNamespace::BeatmapLevelsModel::_get__beatmapLevelDataLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__beatmapLevelDataLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelDataLoader"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelDataLoaderSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelDataLoaderSO _beatmapLevelDataLoader
void GlobalNamespace::BeatmapLevelsModel::_set__beatmapLevelDataLoader(GlobalNamespace::BeatmapLevelDataLoaderSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__beatmapLevelDataLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelDataLoader"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelDataLoaderSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxCachedBeatmapLevels
int GlobalNamespace::BeatmapLevelsModel::_get__maxCachedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__maxCachedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCachedBeatmapLevels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _maxCachedBeatmapLevels
void GlobalNamespace::BeatmapLevelsModel::_set__maxCachedBeatmapLevels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__maxCachedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCachedBeatmapLevels"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private AdditionalContentModel _additionalContentModel
GlobalNamespace::AdditionalContentModel* GlobalNamespace::BeatmapLevelsModel::_get__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private AdditionalContentModel _additionalContentModel
void GlobalNamespace::BeatmapLevelsModel::_set__additionalContentModel(GlobalNamespace::AdditionalContentModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  *reinterpret_cast<GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapDataAssetFileModel _beatmapDataAssetFileModel
GlobalNamespace::IBeatmapDataAssetFileModel* GlobalNamespace::BeatmapLevelsModel::_get__beatmapDataAssetFileModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__beatmapDataAssetFileModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataAssetFileModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapDataAssetFileModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IBeatmapDataAssetFileModel _beatmapDataAssetFileModel
void GlobalNamespace::BeatmapLevelsModel::_set__beatmapDataAssetFileModel(GlobalNamespace::IBeatmapDataAssetFileModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__beatmapDataAssetFileModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataAssetFileModel"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapDataAssetFileModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapLevelsModel/LevelDownloadingUpdate> levelDownloadingUpdateEvent
System::Action_1<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>* GlobalNamespace::BeatmapLevelsModel::_get_levelDownloadingUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get_levelDownloadingUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDownloadingUpdateEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<BeatmapLevelsModel/LevelDownloadingUpdate> levelDownloadingUpdateEvent
void GlobalNamespace::BeatmapLevelsModel::_set_levelDownloadingUpdateEvent(System::Action_1<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set_levelDownloadingUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDownloadingUpdateEvent"))->offset;
  *reinterpret_cast<System::Action_1<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPackCollection _allLoadedBeatmapLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::_get__allLoadedBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__allLoadedBeatmapLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allLoadedBeatmapLevelPackCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IBeatmapLevelPackCollection _allLoadedBeatmapLevelPackCollection
void GlobalNamespace::BeatmapLevelsModel::_set__allLoadedBeatmapLevelPackCollection(GlobalNamespace::IBeatmapLevelPackCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__allLoadedBeatmapLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allLoadedBeatmapLevelPackCollection"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPackCollection _allLoadedBeatmapLevelWithoutCustomLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::_get__allLoadedBeatmapLevelWithoutCustomLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__allLoadedBeatmapLevelWithoutCustomLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allLoadedBeatmapLevelWithoutCustomLevelPackCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IBeatmapLevelPackCollection _allLoadedBeatmapLevelWithoutCustomLevelPackCollection
void GlobalNamespace::BeatmapLevelsModel::_set__allLoadedBeatmapLevelWithoutCustomLevelPackCollection(GlobalNamespace::IBeatmapLevelPackCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__allLoadedBeatmapLevelWithoutCustomLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allLoadedBeatmapLevelWithoutCustomLevelPackCollection"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPackCollection _customLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::_get__customLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__customLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customLevelPackCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IBeatmapLevelPackCollection _customLevelPackCollection
void GlobalNamespace::BeatmapLevelsModel::_set__customLevelPackCollection(GlobalNamespace::IBeatmapLevelPackCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__customLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customLevelPackCollection"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMCache`2<System.String,IBeatmapLevel> _loadedBeatmapLevels
GlobalNamespace::HMCache_2<::Il2CppString*, GlobalNamespace::IBeatmapLevel*>* GlobalNamespace::BeatmapLevelsModel::_get__loadedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__loadedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedBeatmapLevels"))->offset;
  return *reinterpret_cast<GlobalNamespace::HMCache_2<::Il2CppString*, GlobalNamespace::IBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMCache`2<System.String,IBeatmapLevel> _loadedBeatmapLevels
void GlobalNamespace::BeatmapLevelsModel::_set__loadedBeatmapLevels(GlobalNamespace::HMCache_2<::Il2CppString*, GlobalNamespace::IBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__loadedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedBeatmapLevels"))->offset;
  *reinterpret_cast<GlobalNamespace::HMCache_2<::Il2CppString*, GlobalNamespace::IBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,IPreviewBeatmapLevel> _loadedPreviewBeatmapLevels
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::BeatmapLevelsModel::_get__loadedPreviewBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__loadedPreviewBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedPreviewBeatmapLevels"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<System.String,IPreviewBeatmapLevel> _loadedPreviewBeatmapLevels
void GlobalNamespace::BeatmapLevelsModel::_set__loadedPreviewBeatmapLevels(System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__loadedPreviewBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedPreviewBeatmapLevels"))->offset;
  *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelLoader _beatmapLevelLoader
GlobalNamespace::BeatmapLevelLoader* GlobalNamespace::BeatmapLevelsModel::_get__beatmapLevelLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_get__beatmapLevelLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelLoader"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelLoader _beatmapLevelLoader
void GlobalNamespace::BeatmapLevelsModel::_set__beatmapLevelLoader(GlobalNamespace::BeatmapLevelLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::_set__beatmapLevelLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelLoader"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BeatmapLevelsModel.get_ostAndExtrasPackCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::BeatmapLevelsModel::get_ostAndExtrasPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_ostAndExtrasPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ostAndExtrasPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_dlcBeatmapLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_dlcBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_dlcBeatmapLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dlcBeatmapLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_allLoadedBeatmapLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allLoadedBeatmapLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_customLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_customLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_customLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.add_levelDownloadingUpdateEvent
void GlobalNamespace::BeatmapLevelsModel::add_levelDownloadingUpdateEvent(System::Action_1<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::add_levelDownloadingUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDownloadingUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapLevelsModel.remove_levelDownloadingUpdateEvent
void GlobalNamespace::BeatmapLevelsModel::remove_levelDownloadingUpdateEvent(System::Action_1<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::remove_levelDownloadingUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDownloadingUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapLevelsModel.Init
void GlobalNamespace::BeatmapLevelsModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.Start
void GlobalNamespace::BeatmapLevelsModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.OnDestroy
void GlobalNamespace::BeatmapLevelsModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.ClearLoadedBeatmapLevelsCaches
void GlobalNamespace::BeatmapLevelsModel::ClearLoadedBeatmapLevelsCaches() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::ClearLoadedBeatmapLevelsCaches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLoadedBeatmapLevelsCaches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.ReloadCustomLevelPackCollectionAsync
System::Threading::Tasks::Task_1<GlobalNamespace::IBeatmapLevelPackCollection*>* GlobalNamespace::BeatmapLevelsModel::ReloadCustomLevelPackCollectionAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::ReloadCustomLevelPackCollectionAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadCustomLevelPackCollectionAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::IBeatmapLevelPackCollection*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPackForLevelId
GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::BeatmapLevelsModel::GetLevelPackForLevelId(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetLevelPackForLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPackForLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPack
GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::BeatmapLevelsModel::GetLevelPack(::Il2CppString* levePacklId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levePacklId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method, levePacklId);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPreviewForLevelId
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::BeatmapLevelsModel::GetLevelPreviewForLevelId(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetLevelPreviewForLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPreviewForLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.IsBeatmapLevelLoaded
bool GlobalNamespace::BeatmapLevelsModel::IsBeatmapLevelLoaded(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::IsBeatmapLevelLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBeatmapLevelLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetBeatmapLevelIfLoaded
GlobalNamespace::IBeatmapLevel* GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelIfLoaded(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelIfLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapLevelIfLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetBeatmapLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>* GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelAsync(::Il2CppString* levelID, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelID), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>*, false>(this, ___internal__method, levelID, cancellationToken);
}
// Autogenerated method: BeatmapLevelsModel.HandleLevelDataAssetDownloadUpdate
void GlobalNamespace::BeatmapLevelsModel::HandleLevelDataAssetDownloadUpdate(GlobalNamespace::LevelDataAssetDownloadUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::HandleLevelDataAssetDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDataAssetDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: BeatmapLevelsModel.UpdateLoadedPreviewLevels
void GlobalNamespace::BeatmapLevelsModel::UpdateLoadedPreviewLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::UpdateLoadedPreviewLevels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLoadedPreviewLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.UpdateAllLoadedBeatmapLevelPacks
void GlobalNamespace::BeatmapLevelsModel::UpdateAllLoadedBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::UpdateAllLoadedBeatmapLevelPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllLoadedBeatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/GetBeatmapLevelResult
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isError
bool GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::_get_isError() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::_get_isError");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean isError
void GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::_set_isError(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::_set_isError");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isError"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevel beatmapLevel
GlobalNamespace::IBeatmapLevel* GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::_get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::_get_beatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly IBeatmapLevel beatmapLevel
void GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::_set_beatmapLevel(GlobalNamespace::IBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::_set_beatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelsModel/LevelDownloadingUpdate
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String levelID
::Il2CppString* GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_get_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String levelID
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_set_levelID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_set_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 bytesTotal
uint GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_get_bytesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_get_bytesTotal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTotal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.UInt32 bytesTotal
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_set_bytesTotal(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_set_bytesTotal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTotal"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 bytesTransferred
uint GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_get_bytesTransferred() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_get_bytesTransferred");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTransferred"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.UInt32 bytesTransferred
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_set_bytesTransferred(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_set_bytesTransferred");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTransferred"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState downloadingState
GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_get_downloadingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_get_downloadingState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadingState"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState downloadingState
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_set_downloadingState(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::_set_downloadingState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadingState"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState PreparingToDownload
GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_PreparingToDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_PreparingToDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "PreparingToDownload"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState PreparingToDownload
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_PreparingToDownload(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_PreparingToDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "PreparingToDownload", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Downloading
GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Downloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Downloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Downloading"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Downloading
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Downloading(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Downloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Downloading", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Completed
GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Completed
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Completed(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Completed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__31
#include "GlobalNamespace/BeatmapLevelsModel_-ReloadCustomLevelPackCollectionAsync-d__31.hpp"
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapLevelPackCollection> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::IBeatmapLevelPackCollection*> GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::IBeatmapLevelPackCollection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapLevelPackCollection> <>t__builder
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::IBeatmapLevelPackCollection*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::IBeatmapLevelPackCollection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapLevelPackCollection> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IBeatmapLevelPackCollection*> GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IBeatmapLevelPackCollection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapLevelPackCollection> <>u__1
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IBeatmapLevelPackCollection*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IBeatmapLevelPackCollection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__31.MoveNext
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__31.SetStateMachine
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelsModel/<>c__DisplayClass34_0
#include "GlobalNamespace/BeatmapLevelsModel_--c__DisplayClass34_0.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString* GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass34_0::_get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass34_0::_get_levelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String levelId
void GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass34_0::_set_levelId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass34_0::_set_levelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BeatmapLevelsModel/<>c__DisplayClass34_0.<GetLevelPreviewForLevelId>b__1
bool GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass34_0::$GetLevelPreviewForLevelId$b__1(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass34_0::<GetLevelPreviewForLevelId>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLevelPreviewForLevelId>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/<>c
#include "GlobalNamespace/BeatmapLevelsModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapLevelsModel/<>c <>9
GlobalNamespace::BeatmapLevelsModel::$$c* GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel::$$c*>("", "BeatmapLevelsModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapLevelsModel/<>c <>9
void GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9(GlobalNamespace::BeatmapLevelsModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.Collections.Generic.IEnumerable`1<IPreviewBeatmapLevel>> <>9__34_0
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>*>* GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9__34_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9__34_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>*>*>("", "BeatmapLevelsModel/<>c", "<>9__34_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.Collections.Generic.IEnumerable`1<IPreviewBeatmapLevel>> <>9__34_0
void GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9__34_0(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9__34_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/<>c", "<>9__34_0", value)));
}
// Autogenerated method: BeatmapLevelsModel/<>c..cctor
void GlobalNamespace::BeatmapLevelsModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelsModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<>c.<GetLevelPreviewForLevelId>b__34_0
System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::BeatmapLevelsModel::$$c::$GetLevelPreviewForLevelId$b__34_0(GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::<GetLevelPreviewForLevelId>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLevelPreviewForLevelId>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPack)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method, beatmapLevelPack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__37
#include "GlobalNamespace/BeatmapLevelsModel_-GetBeatmapLevelAsync-d__37.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapLevelsModel/GetBeatmapLevelResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult> GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapLevelsModel/GetBeatmapLevelResult> <>t__builder
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelsModel <>4__this
GlobalNamespace::BeatmapLevelsModel* GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelsModel <>4__this
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$4__this(GlobalNamespace::BeatmapLevelsModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String levelID
::Il2CppString* GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String levelID
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_levelID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus> GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapLevelLoader/LoadBeatmapLevelResult> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult> GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_get_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapLevelLoader/LoadBeatmapLevelResult> <>u__2
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$u__2(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::_set_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__37.MoveNext
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__37.SetStateMachine
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomBeatmapLevelPack
#include "GlobalNamespace/CustomBeatmapLevelPack.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: CustomBeatmapLevelCollection
#include "GlobalNamespace/CustomBeatmapLevelCollection.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _packID
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::_get__packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_get__packID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _packID
void GlobalNamespace::CustomBeatmapLevelPack::_set__packID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_set__packID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packID"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _packName
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::_get__packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_get__packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _packName
void GlobalNamespace::CustomBeatmapLevelPack::_set__packName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_set__packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _shortPackName
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::_get__shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_get__shortPackName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortPackName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _shortPackName
void GlobalNamespace::CustomBeatmapLevelPack::_set__shortPackName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_set__shortPackName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortPackName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
UnityEngine::Sprite* GlobalNamespace::CustomBeatmapLevelPack::_get__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_get__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _coverImage
void GlobalNamespace::CustomBeatmapLevelPack::_set__coverImage(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_set__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private CustomBeatmapLevelCollection _customBeatmapLevelCollection
GlobalNamespace::CustomBeatmapLevelCollection* GlobalNamespace::CustomBeatmapLevelPack::_get__customBeatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_get__customBeatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customBeatmapLevelCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::CustomBeatmapLevelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private CustomBeatmapLevelCollection _customBeatmapLevelCollection
void GlobalNamespace::CustomBeatmapLevelPack::_set__customBeatmapLevelCollection(GlobalNamespace::CustomBeatmapLevelCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::_set__customBeatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customBeatmapLevelCollection"))->offset;
  *reinterpret_cast<GlobalNamespace::CustomBeatmapLevelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomBeatmapLevelPack.get_packID
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::get_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_packID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_packName
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::get_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_packName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_shortPackName
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::get_shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_shortPackName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_collectionName
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_coverImage
UnityEngine::Sprite* GlobalNamespace::CustomBeatmapLevelPack::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::CustomBeatmapLevelPack::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_isPackAlwaysOwned
bool GlobalNamespace::CustomBeatmapLevelPack::get_isPackAlwaysOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_isPackAlwaysOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPackAlwaysOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomBeatmapLevelCollection
#include "GlobalNamespace/CustomBeatmapLevelCollection.hpp"
// Including type: CustomPreviewBeatmapLevel
#include "GlobalNamespace/CustomPreviewBeatmapLevel.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CustomPreviewBeatmapLevel[] _customPreviewBeatmapLevels
::Array<GlobalNamespace::CustomPreviewBeatmapLevel*>* GlobalNamespace::CustomBeatmapLevelCollection::_get__customPreviewBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelCollection::_get__customPreviewBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customPreviewBeatmapLevels"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::CustomPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private CustomPreviewBeatmapLevel[] _customPreviewBeatmapLevels
void GlobalNamespace::CustomBeatmapLevelCollection::_set__customPreviewBeatmapLevels(::Array<GlobalNamespace::CustomPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelCollection::_set__customPreviewBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customPreviewBeatmapLevels"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::CustomPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomBeatmapLevelCollection.get_beatmapLevels
::Array<GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::CustomBeatmapLevelCollection::get_beatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelCollection::get_beatmapLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomDifficultyBeatmapSet
#include "GlobalNamespace/CustomDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: CustomDifficultyBeatmap
#include "GlobalNamespace/CustomDifficultyBeatmap.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::CustomDifficultyBeatmapSet::_get__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::_get__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
void GlobalNamespace::CustomDifficultyBeatmapSet::_set__beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::_set__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private CustomDifficultyBeatmap[] _difficultyBeatmaps
::Array<GlobalNamespace::CustomDifficultyBeatmap*>* GlobalNamespace::CustomDifficultyBeatmapSet::_get__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::_get__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::CustomDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private CustomDifficultyBeatmap[] _difficultyBeatmaps
void GlobalNamespace::CustomDifficultyBeatmapSet::_set__difficultyBeatmaps(::Array<GlobalNamespace::CustomDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::_set__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::CustomDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomDifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::CustomDifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::CustomDifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::get_difficultyBeatmaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmapSet.SetCustomDifficultyBeatmaps
void GlobalNamespace::CustomDifficultyBeatmapSet::SetCustomDifficultyBeatmaps(::Array<GlobalNamespace::CustomDifficultyBeatmap*>* difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::SetCustomDifficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCustomDifficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomDifficultyBeatmap
#include "GlobalNamespace/CustomDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevel _level
GlobalNamespace::IBeatmapLevel* GlobalNamespace::CustomDifficultyBeatmap::_get__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_get__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IBeatmapLevel _level
void GlobalNamespace::CustomDifficultyBeatmap::_set__level(GlobalNamespace::IBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_set__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmapSet _parentDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::CustomDifficultyBeatmap::_get__parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_get__parentDifficultyBeatmapSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentDifficultyBeatmapSet"))->offset;
  return *reinterpret_cast<GlobalNamespace::IDifficultyBeatmapSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IDifficultyBeatmapSet _parentDifficultyBeatmapSet
void GlobalNamespace::CustomDifficultyBeatmap::_set__parentDifficultyBeatmapSet(GlobalNamespace::IDifficultyBeatmapSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_set__parentDifficultyBeatmapSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentDifficultyBeatmapSet"))->offset;
  *reinterpret_cast<GlobalNamespace::IDifficultyBeatmapSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::CustomDifficultyBeatmap::_get__difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_get__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficulty _difficulty
void GlobalNamespace::CustomDifficultyBeatmap::_set__difficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_set__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _difficultyRank
int GlobalNamespace::CustomDifficultyBeatmap::_get__difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_get__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _difficultyRank
void GlobalNamespace::CustomDifficultyBeatmap::_set__difficultyRank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_set__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpMovementSpeed
float GlobalNamespace::CustomDifficultyBeatmap::_get__noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_get__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _noteJumpMovementSpeed
void GlobalNamespace::CustomDifficultyBeatmap::_set__noteJumpMovementSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_set__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpStartBeatOffset
float GlobalNamespace::CustomDifficultyBeatmap::_get__noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_get__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _noteJumpStartBeatOffset
void GlobalNamespace::CustomDifficultyBeatmap::_set__noteJumpStartBeatOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_set__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapData _beatmapData
GlobalNamespace::BeatmapData* GlobalNamespace::CustomDifficultyBeatmap::_get__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_get__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapData _beatmapData
void GlobalNamespace::CustomDifficultyBeatmap::_set__beatmapData(GlobalNamespace::BeatmapData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::_set__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomDifficultyBeatmap.get_level
GlobalNamespace::IBeatmapLevel* GlobalNamespace::CustomDifficultyBeatmap::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_level");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_parentDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::CustomDifficultyBeatmap::get_parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_parentDifficultyBeatmapSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::CustomDifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_difficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::CustomDifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_difficultyRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpStartBeatOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_beatmapData
GlobalNamespace::BeatmapData* GlobalNamespace::CustomDifficultyBeatmap::get_beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_beatmapData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomBeatmapLevel
#include "GlobalNamespace/CustomBeatmapLevel.hpp"
// Including type: BeatmapLevelData
#include "GlobalNamespace/BeatmapLevelData.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelData _beatmapLevelData
GlobalNamespace::BeatmapLevelData* GlobalNamespace::CustomBeatmapLevel::_get__beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevel::_get__beatmapLevelData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelData _beatmapLevelData
void GlobalNamespace::CustomBeatmapLevel::_set__beatmapLevelData(GlobalNamespace::BeatmapLevelData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevel::_set__beatmapLevelData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelData"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomBeatmapLevel.get_beatmapLevelData
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::CustomBeatmapLevel::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevel::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevel.SetBeatmapLevelData
void GlobalNamespace::CustomBeatmapLevel::SetBeatmapLevelData(GlobalNamespace::BeatmapLevelData* beatmapLevelData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevel::SetBeatmapLevelData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevelData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomPreviewBeatmapLevel
#include "GlobalNamespace/CustomPreviewBeatmapLevel.hpp"
// Including type: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetPreviewAudioClipAsync-d__60.hpp"
// Including type: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetCoverImageAsync-d__61.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: IAudioClipAsyncLoader
#include "GlobalNamespace/IAudioClipAsyncLoader.hpp"
// Including type: ISpriteAsyncLoader
#include "GlobalNamespace/ISpriteAsyncLoader.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardLevelInfoSaveData _standardLevelInfoSaveData
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::CustomPreviewBeatmapLevel::_get__standardLevelInfoSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__standardLevelInfoSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelInfoSaveData"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelInfoSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StandardLevelInfoSaveData _standardLevelInfoSaveData
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__standardLevelInfoSaveData(GlobalNamespace::StandardLevelInfoSaveData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__standardLevelInfoSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelInfoSaveData"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelInfoSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _customLevelPath
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::_get__customLevelPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__customLevelPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customLevelPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _customLevelPath
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__customLevelPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__customLevelPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customLevelPath"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IAudioClipAsyncLoader _audioClipAsyncLoader
GlobalNamespace::IAudioClipAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::_get__audioClipAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__audioClipAsyncLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipAsyncLoader"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAudioClipAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IAudioClipAsyncLoader _audioClipAsyncLoader
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__audioClipAsyncLoader(GlobalNamespace::IAudioClipAsyncLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__audioClipAsyncLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipAsyncLoader"))->offset;
  *reinterpret_cast<GlobalNamespace::IAudioClipAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ISpriteAsyncLoader _spriteAsyncLoader
GlobalNamespace::ISpriteAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::_get__spriteAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__spriteAsyncLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteAsyncLoader"))->offset;
  return *reinterpret_cast<GlobalNamespace::ISpriteAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ISpriteAsyncLoader _spriteAsyncLoader
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__spriteAsyncLoader(GlobalNamespace::ISpriteAsyncLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__spriteAsyncLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteAsyncLoader"))->offset;
  *reinterpret_cast<GlobalNamespace::ISpriteAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelID
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::_get__levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _levelID
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__levelID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelID"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::_get__songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songName
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__songName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songSubName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::_get__songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songSubName
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__songSubName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songAuthorName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::_get__songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songAuthorName
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__songAuthorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelAuthorName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::_get__levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _levelAuthorName
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__levelAuthorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _previewAudioClip
UnityEngine::AudioClip* GlobalNamespace::CustomPreviewBeatmapLevel::_get__previewAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__previewAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewAudioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AudioClip _previewAudioClip
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__previewAudioClip(UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__previewAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewAudioClip"))->offset;
  *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatsPerMinute
float GlobalNamespace::CustomPreviewBeatmapLevel::_get__beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _beatsPerMinute
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__beatsPerMinute(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTimeOffset
float GlobalNamespace::CustomPreviewBeatmapLevel::_get__songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _songTimeOffset
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__songTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shuffle
float GlobalNamespace::CustomPreviewBeatmapLevel::_get__shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _shuffle
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__shuffle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shufflePeriod
float GlobalNamespace::CustomPreviewBeatmapLevel::_get__shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _shufflePeriod
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__shufflePeriod(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewStartTime
float GlobalNamespace::CustomPreviewBeatmapLevel::_get__previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _previewStartTime
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__previewStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::_get__previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _previewDuration
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__previewDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::_get__songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__songDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _songDuration
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__songDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__songDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _defaultCoverImage
UnityEngine::Sprite* GlobalNamespace::CustomPreviewBeatmapLevel::_get__defaultCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__defaultCoverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultCoverImage"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _defaultCoverImage
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__defaultCoverImage(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__defaultCoverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultCoverImage"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
UnityEngine::Sprite* GlobalNamespace::CustomPreviewBeatmapLevel::_get__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _coverImage
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__coverImage(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::_get__environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private EnvironmentInfoSO _environmentInfo
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__environmentInfo(GlobalNamespace::EnvironmentInfoSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::_get__allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__allDirectionsEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDirectionsEnvironmentInfo"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private EnvironmentInfoSO _allDirectionsEnvironmentInfo
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__allDirectionsEnvironmentInfo(GlobalNamespace::EnvironmentInfoSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__allDirectionsEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDirectionsEnvironmentInfo"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PreviewDifficultyBeatmapSet[] _previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::CustomPreviewBeatmapLevel::_get__previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_get__previewDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDifficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PreviewDifficultyBeatmapSet[] _previewDifficultyBeatmapSets
void GlobalNamespace::CustomPreviewBeatmapLevel::_set__previewDifficultyBeatmapSets(::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::_set__previewDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDifficultyBeatmapSets"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_audioClipAsyncLoader
GlobalNamespace::IAudioClipAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::get_audioClipAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_audioClipAsyncLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipAsyncLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IAudioClipAsyncLoader*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_spriteAsyncLoader
GlobalNamespace::ISpriteAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::get_spriteAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_spriteAsyncLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsyncLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ISpriteAsyncLoader*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_standardLevelInfoSaveData
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::CustomPreviewBeatmapLevel::get_standardLevelInfoSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_standardLevelInfoSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_standardLevelInfoSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_customLevelPath
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_customLevelPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_customLevelPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customLevelPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_levelID
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songSubName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songAuthorName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_levelAuthorName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::CustomPreviewBeatmapLevel::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songTimeOffset
float GlobalNamespace::CustomPreviewBeatmapLevel::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_shuffle
float GlobalNamespace::CustomPreviewBeatmapLevel::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_shufflePeriod
float GlobalNamespace::CustomPreviewBeatmapLevel::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewStartTime
float GlobalNamespace::CustomPreviewBeatmapLevel::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_defaultCoverImage
UnityEngine::Sprite* GlobalNamespace::CustomPreviewBeatmapLevel::get_defaultCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_defaultCoverImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultCoverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::CustomPreviewBeatmapLevel::GetPreviewAudioClipAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::GetPreviewAudioClipAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: CustomPreviewBeatmapLevel.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::CustomPreviewBeatmapLevel::GetCoverImageAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetPreviewAudioClipAsync-d__60.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.AudioClip> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*> GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.AudioClip> <>t__builder
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public CustomPreviewBeatmapLevel <>4__this
GlobalNamespace::CustomPreviewBeatmapLevel* GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::CustomPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public CustomPreviewBeatmapLevel <>4__this
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_$$4__this(GlobalNamespace::CustomPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::CustomPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::AudioClip*> GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__1
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::AudioClip*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60.MoveNext
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60.SetStateMachine
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetCoverImageAsync-d__61.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*> GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public CustomPreviewBeatmapLevel <>4__this
GlobalNamespace::CustomPreviewBeatmapLevel* GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::CustomPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public CustomPreviewBeatmapLevel <>4__this
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_$$4__this(GlobalNamespace::CustomPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::CustomPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*> GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61.MoveNext
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61.SetStateMachine
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EmptyBeatmapLevel
#include "GlobalNamespace/EmptyBeatmapLevel.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <levelID>k__BackingField
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::_get_$levelID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$levelID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelID>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String <levelID>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$levelID$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$levelID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelID>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <songName>k__BackingField
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::_get_$songName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$songName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songName>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String <songName>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$songName$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$songName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songName>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <songSubName>k__BackingField
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::_get_$songSubName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$songSubName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songSubName>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String <songSubName>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$songSubName$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$songSubName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songSubName>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <songAuthorName>k__BackingField
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::_get_$songAuthorName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$songAuthorName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songAuthorName>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String <songAuthorName>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$songAuthorName$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$songAuthorName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songAuthorName>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <levelAuthorName>k__BackingField
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::_get_$levelAuthorName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$levelAuthorName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelAuthorName>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String <levelAuthorName>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$levelAuthorName$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$levelAuthorName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelAuthorName>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <beatsPerMinute>k__BackingField
float GlobalNamespace::EmptyBeatmapLevel::_get_$beatsPerMinute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$beatsPerMinute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatsPerMinute>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <beatsPerMinute>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$beatsPerMinute$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$beatsPerMinute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatsPerMinute>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <songTimeOffset>k__BackingField
float GlobalNamespace::EmptyBeatmapLevel::_get_$songTimeOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$songTimeOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songTimeOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <songTimeOffset>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$songTimeOffset$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$songTimeOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songTimeOffset>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <shuffle>k__BackingField
float GlobalNamespace::EmptyBeatmapLevel::_get_$shuffle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$shuffle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shuffle>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <shuffle>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$shuffle$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$shuffle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shuffle>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <shufflePeriod>k__BackingField
float GlobalNamespace::EmptyBeatmapLevel::_get_$shufflePeriod$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$shufflePeriod$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shufflePeriod>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <shufflePeriod>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$shufflePeriod$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$shufflePeriod$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shufflePeriod>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <previewStartTime>k__BackingField
float GlobalNamespace::EmptyBeatmapLevel::_get_$previewStartTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$previewStartTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewStartTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <previewStartTime>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$previewStartTime$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$previewStartTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewStartTime>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <previewDuration>k__BackingField
float GlobalNamespace::EmptyBeatmapLevel::_get_$previewDuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$previewDuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewDuration>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <previewDuration>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$previewDuration$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$previewDuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewDuration>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <songDuration>k__BackingField
float GlobalNamespace::EmptyBeatmapLevel::_get_$songDuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$songDuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songDuration>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <songDuration>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$songDuration$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$songDuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songDuration>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentInfoSO <environmentInfo>k__BackingField
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EmptyBeatmapLevel::_get_$environmentInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$environmentInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<environmentInfo>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly EnvironmentInfoSO <environmentInfo>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$environmentInfo$k__BackingField(GlobalNamespace::EnvironmentInfoSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$environmentInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<environmentInfo>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentInfoSO <allDirectionsEnvironmentInfo>k__BackingField
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EmptyBeatmapLevel::_get_$allDirectionsEnvironmentInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$allDirectionsEnvironmentInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<allDirectionsEnvironmentInfo>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly EnvironmentInfoSO <allDirectionsEnvironmentInfo>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$allDirectionsEnvironmentInfo$k__BackingField(GlobalNamespace::EnvironmentInfoSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$allDirectionsEnvironmentInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<allDirectionsEnvironmentInfo>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly PreviewDifficultyBeatmapSet[] <previewDifficultyBeatmapSets>k__BackingField
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::EmptyBeatmapLevel::_get_$previewDifficultyBeatmapSets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$previewDifficultyBeatmapSets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewDifficultyBeatmapSets>k__BackingField"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PreviewDifficultyBeatmapSet[] <previewDifficultyBeatmapSets>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$previewDifficultyBeatmapSets$k__BackingField(::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$previewDifficultyBeatmapSets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewDifficultyBeatmapSets>k__BackingField"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapLevelData <beatmapLevelData>k__BackingField
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::EmptyBeatmapLevel::_get_$beatmapLevelData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_get_$beatmapLevelData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapLevelData>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapLevelData <beatmapLevelData>k__BackingField
void GlobalNamespace::EmptyBeatmapLevel::_set_$beatmapLevelData$k__BackingField(GlobalNamespace::IBeatmapLevelData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::_set_$beatmapLevelData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapLevelData>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: EmptyBeatmapLevel.get_levelID
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songName
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songSubName
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songAuthorName
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_levelAuthorName
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::EmptyBeatmapLevel::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songTimeOffset
float GlobalNamespace::EmptyBeatmapLevel::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_shuffle
float GlobalNamespace::EmptyBeatmapLevel::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_shufflePeriod
float GlobalNamespace::EmptyBeatmapLevel::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewStartTime
float GlobalNamespace::EmptyBeatmapLevel::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewDuration
float GlobalNamespace::EmptyBeatmapLevel::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songDuration
float GlobalNamespace::EmptyBeatmapLevel::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EmptyBeatmapLevel::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EmptyBeatmapLevel::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::EmptyBeatmapLevel::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_beatmapLevelData
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::EmptyBeatmapLevel::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::EmptyBeatmapLevel::GetPreviewAudioClipAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::GetPreviewAudioClipAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: EmptyBeatmapLevel.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::EmptyBeatmapLevel::GetCoverImageAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EmptyBeatmapLevelData
#include "GlobalNamespace/EmptyBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.AudioClip <audioClip>k__BackingField
UnityEngine::AudioClip* GlobalNamespace::EmptyBeatmapLevelData::_get_$audioClip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevelData::_get_$audioClip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<audioClip>k__BackingField"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly UnityEngine.AudioClip <audioClip>k__BackingField
void GlobalNamespace::EmptyBeatmapLevelData::_set_$audioClip$k__BackingField(UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevelData::_set_$audioClip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<audioClip>k__BackingField"))->offset;
  *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IDifficultyBeatmapSet[] <difficultyBeatmapSets>k__BackingField
::Array<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::EmptyBeatmapLevelData::_get_$difficultyBeatmapSets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevelData::_get_$difficultyBeatmapSets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyBeatmapSets>k__BackingField"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::IDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IDifficultyBeatmapSet[] <difficultyBeatmapSets>k__BackingField
void GlobalNamespace::EmptyBeatmapLevelData::_set_$difficultyBeatmapSets$k__BackingField(::Array<GlobalNamespace::IDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevelData::_set_$difficultyBeatmapSets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyBeatmapSets>k__BackingField"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::IDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: EmptyBeatmapLevelData.get_audioClip
UnityEngine::AudioClip* GlobalNamespace::EmptyBeatmapLevelData::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevelData::get_audioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevelData.get_difficultyBeatmapSets
::Array<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::EmptyBeatmapLevelData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevelData::get_difficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyDifficultyBeatmap
#include "GlobalNamespace/EmptyDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapLevel <level>k__BackingField
GlobalNamespace::IBeatmapLevel* GlobalNamespace::EmptyDifficultyBeatmap::_get_$level$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_get_$level$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<level>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapLevel <level>k__BackingField
void GlobalNamespace::EmptyDifficultyBeatmap::_set_$level$k__BackingField(GlobalNamespace::IBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_set_$level$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<level>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IDifficultyBeatmapSet <parentDifficultyBeatmapSet>k__BackingField
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::EmptyDifficultyBeatmap::_get_$parentDifficultyBeatmapSet$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_get_$parentDifficultyBeatmapSet$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parentDifficultyBeatmapSet>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::IDifficultyBeatmapSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IDifficultyBeatmapSet <parentDifficultyBeatmapSet>k__BackingField
void GlobalNamespace::EmptyDifficultyBeatmap::_set_$parentDifficultyBeatmapSet$k__BackingField(GlobalNamespace::IDifficultyBeatmapSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_set_$parentDifficultyBeatmapSet$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parentDifficultyBeatmapSet>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::IDifficultyBeatmapSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDifficulty <difficulty>k__BackingField
GlobalNamespace::BeatmapDifficulty GlobalNamespace::EmptyDifficultyBeatmap::_get_$difficulty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_get_$difficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficulty>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapDifficulty <difficulty>k__BackingField
void GlobalNamespace::EmptyDifficultyBeatmap::_set_$difficulty$k__BackingField(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_set_$difficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficulty>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <difficultyRank>k__BackingField
int GlobalNamespace::EmptyDifficultyBeatmap::_get_$difficultyRank$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_get_$difficultyRank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyRank>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Int32 <difficultyRank>k__BackingField
void GlobalNamespace::EmptyDifficultyBeatmap::_set_$difficultyRank$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_set_$difficultyRank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyRank>k__BackingField"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <noteJumpMovementSpeed>k__BackingField
float GlobalNamespace::EmptyDifficultyBeatmap::_get_$noteJumpMovementSpeed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_get_$noteJumpMovementSpeed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteJumpMovementSpeed>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <noteJumpMovementSpeed>k__BackingField
void GlobalNamespace::EmptyDifficultyBeatmap::_set_$noteJumpMovementSpeed$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_set_$noteJumpMovementSpeed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteJumpMovementSpeed>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <noteJumpStartBeatOffset>k__BackingField
float GlobalNamespace::EmptyDifficultyBeatmap::_get_$noteJumpStartBeatOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_get_$noteJumpStartBeatOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteJumpStartBeatOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Single <noteJumpStartBeatOffset>k__BackingField
void GlobalNamespace::EmptyDifficultyBeatmap::_set_$noteJumpStartBeatOffset$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_set_$noteJumpStartBeatOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteJumpStartBeatOffset>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapData <beatmapData>k__BackingField
GlobalNamespace::BeatmapData* GlobalNamespace::EmptyDifficultyBeatmap::_get_$beatmapData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_get_$beatmapData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapData>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapData <beatmapData>k__BackingField
void GlobalNamespace::EmptyDifficultyBeatmap::_set_$beatmapData$k__BackingField(GlobalNamespace::BeatmapData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::_set_$beatmapData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapData>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: EmptyDifficultyBeatmap.get_level
GlobalNamespace::IBeatmapLevel* GlobalNamespace::EmptyDifficultyBeatmap::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_level");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_parentDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::EmptyDifficultyBeatmap::get_parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_parentDifficultyBeatmapSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::EmptyDifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_difficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::EmptyDifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_difficultyRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpStartBeatOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_beatmapData
GlobalNamespace::BeatmapData* GlobalNamespace::EmptyDifficultyBeatmap::get_beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_beatmapData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevel.get_beatmapLevelData
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::IBeatmapLevel::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevel::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevelData.get_audioClip
UnityEngine::AudioClip* GlobalNamespace::IBeatmapLevelData::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevelData::get_audioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapLevelData.get_difficultyBeatmapSets
::Array<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::IBeatmapLevelData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevelData::get_difficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelDataExtensions
#include "GlobalNamespace/BeatmapLevelDataExtensions.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap(GlobalNamespace::IBeatmapLevelData* beatmapLevelData, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristic, difficulty);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet(GlobalNamespace::IBeatmapLevelData* beatmapLevelData, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristic);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap(GlobalNamespace::IBeatmapLevelData* beatmapLevelData, ::Il2CppString* beatmapCharacteristicName, GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData), ::il2cpp_utils::ExtractType(beatmapCharacteristicName), ::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristicName, difficulty);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet(GlobalNamespace::IBeatmapLevelData* beatmapLevelData, ::Il2CppString* beatmapCharacteristicName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData), ::il2cpp_utils::ExtractType(beatmapCharacteristicName)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristicName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDifficultyBeatmap.get_level
GlobalNamespace::IBeatmapLevel* GlobalNamespace::IDifficultyBeatmap::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_level");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_parentDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::IDifficultyBeatmap::get_parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_parentDifficultyBeatmapSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::IDifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_difficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::IDifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_difficultyRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::IDifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::IDifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_noteJumpStartBeatOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_beatmapData
GlobalNamespace::BeatmapData* GlobalNamespace::IDifficultyBeatmap::get_beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_beatmapData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyBeatmapSerializedMethods
#include "GlobalNamespace/DifficultyBeatmapSerializedMethods.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DifficultyBeatmapSerializedMethods.SerializedName
::Il2CppString* GlobalNamespace::DifficultyBeatmapSerializedMethods::SerializedName(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DifficultyBeatmapSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::IDifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmapSet::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::IDifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmapSet::get_difficultyBeatmaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyBeatmapSet
#include "GlobalNamespace/DifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO <beatmapCharacteristic>k__BackingField
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::DifficultyBeatmapSet::_get_$beatmapCharacteristic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::_get_$beatmapCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapCharacteristic>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO <beatmapCharacteristic>k__BackingField
void GlobalNamespace::DifficultyBeatmapSet::_set_$beatmapCharacteristic$k__BackingField(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::_set_$beatmapCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapCharacteristic>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap[] <difficultyBeatmaps>k__BackingField
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::DifficultyBeatmapSet::_get_$difficultyBeatmaps$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::_get_$difficultyBeatmaps$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyBeatmaps>k__BackingField"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::IDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IDifficultyBeatmap[] <difficultyBeatmaps>k__BackingField
void GlobalNamespace::DifficultyBeatmapSet::_set_$difficultyBeatmaps$k__BackingField(::Array<GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::_set_$difficultyBeatmaps$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyBeatmaps>k__BackingField"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::IDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: DifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::DifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyBeatmapSet.set_beatmapCharacteristic
void GlobalNamespace::DifficultyBeatmapSet::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::set_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::get_difficultyBeatmaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyBeatmapSet.set_difficultyBeatmaps
void GlobalNamespace::DifficultyBeatmapSet::set_difficultyBeatmaps(::Array<GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::set_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyBeatmapSetExtensions
#include "GlobalNamespace/DifficultyBeatmapSetExtensions.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPreviewBeatmapLevel.get_levelID
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songName
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songSubName
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songAuthorName
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_levelAuthorName
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::IPreviewBeatmapLevel::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songTimeOffset
float GlobalNamespace::IPreviewBeatmapLevel::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_shuffle
float GlobalNamespace::IPreviewBeatmapLevel::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_shufflePeriod
float GlobalNamespace::IPreviewBeatmapLevel::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_previewStartTime
float GlobalNamespace::IPreviewBeatmapLevel::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_previewDuration
float GlobalNamespace::IPreviewBeatmapLevel::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songDuration
float GlobalNamespace::IPreviewBeatmapLevel::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::IPreviewBeatmapLevel::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::IPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::IPreviewBeatmapLevel::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::IPreviewBeatmapLevel::GetPreviewAudioClipAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::GetPreviewAudioClipAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: IPreviewBeatmapLevel.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::IPreviewBeatmapLevel::GetCoverImageAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xEADCC0
// Autogenerated static field getter
// Get static field: static public readonly System.Single[] bpmValues
::Array<float>* GlobalNamespace::LevelFilterParams::_get_bpmValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_bpmValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<float>*>("", "LevelFilterParams", "bpmValues"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single[] bpmValues
void GlobalNamespace::LevelFilterParams::_set_bpmValues(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_bpmValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelFilterParams", "bpmValues", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterByLevelIds>k__BackingField
bool GlobalNamespace::LevelFilterParams::_get_$filterByLevelIds$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filterByLevelIds$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByLevelIds>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterByLevelIds>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filterByLevelIds$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filterByLevelIds$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByLevelIds>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> <beatmapLevelIds>k__BackingField
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::LevelFilterParams::_get_$beatmapLevelIds$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$beatmapLevelIds$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapLevelIds>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.HashSet`1<System.String> <beatmapLevelIds>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$beatmapLevelIds$k__BackingField(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$beatmapLevelIds$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapLevelIds>k__BackingField"))->offset;
  *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterByOwned>k__BackingField
bool GlobalNamespace::LevelFilterParams::_get_$filterByOwned$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filterByOwned$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByOwned>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterByOwned>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filterByOwned$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filterByOwned$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByOwned>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String <searchText>k__BackingField
::Il2CppString* GlobalNamespace::LevelFilterParams::_get_$searchText$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$searchText$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<searchText>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <searchText>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$searchText$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$searchText$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<searchText>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterByDifficulty>k__BackingField
bool GlobalNamespace::LevelFilterParams::_get_$filterByDifficulty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filterByDifficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByDifficulty>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterByDifficulty>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filterByDifficulty$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filterByDifficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByDifficulty>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficultyMask <filteredDifficulty>k__BackingField
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::LevelFilterParams::_get_$filteredDifficulty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filteredDifficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredDifficulty>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficultyMask <filteredDifficulty>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filteredDifficulty$k__BackingField(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filteredDifficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredDifficulty>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterBySongPacks>k__BackingField
bool GlobalNamespace::LevelFilterParams::_get_$filterBySongPacks$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filterBySongPacks$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterBySongPacks>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterBySongPacks>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filterBySongPacks$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filterBySongPacks$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterBySongPacks>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private SongPackMask <filteredSongPacks>k__BackingField
GlobalNamespace::SongPackMask GlobalNamespace::LevelFilterParams::_get_$filteredSongPacks$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filteredSongPacks$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredSongPacks>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private SongPackMask <filteredSongPacks>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filteredSongPacks$k__BackingField(GlobalNamespace::SongPackMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filteredSongPacks$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredSongPacks>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterByCharacteristic>k__BackingField
bool GlobalNamespace::LevelFilterParams::_get_$filterByCharacteristic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filterByCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByCharacteristic>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterByCharacteristic>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filterByCharacteristic$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filterByCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByCharacteristic>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO <filteredCharacteristic>k__BackingField
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LevelFilterParams::_get_$filteredCharacteristic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filteredCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredCharacteristic>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO <filteredCharacteristic>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filteredCharacteristic$k__BackingField(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filteredCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredCharacteristic>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterByNotPlayedYet>k__BackingField
bool GlobalNamespace::LevelFilterParams::_get_$filterByNotPlayedYet$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filterByNotPlayedYet$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByNotPlayedYet>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterByNotPlayedYet>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filterByNotPlayedYet$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filterByNotPlayedYet$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByNotPlayedYet>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterByMinBpm>k__BackingField
bool GlobalNamespace::LevelFilterParams::_get_$filterByMinBpm$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filterByMinBpm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByMinBpm>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterByMinBpm>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filterByMinBpm$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filterByMinBpm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByMinBpm>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single <filteredMinBpm>k__BackingField
float GlobalNamespace::LevelFilterParams::_get_$filteredMinBpm$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filteredMinBpm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredMinBpm>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single <filteredMinBpm>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filteredMinBpm$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filteredMinBpm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredMinBpm>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterByMaxBpm>k__BackingField
bool GlobalNamespace::LevelFilterParams::_get_$filterByMaxBpm$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filterByMaxBpm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByMaxBpm>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterByMaxBpm>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filterByMaxBpm$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filterByMaxBpm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterByMaxBpm>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single <filteredMaxBpm>k__BackingField
float GlobalNamespace::LevelFilterParams::_get_$filteredMaxBpm$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_$filteredMaxBpm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredMaxBpm>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single <filteredMaxBpm>k__BackingField
void GlobalNamespace::LevelFilterParams::_set_$filteredMaxBpm$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_$filteredMaxBpm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filteredMaxBpm>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LevelFilterParams.get_filterByLevelIds
bool GlobalNamespace::LevelFilterParams::get_filterByLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterByLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByLevelIds
void GlobalNamespace::LevelFilterParams::set_filterByLevelIds(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterByLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_beatmapLevelIds
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::LevelFilterParams::get_beatmapLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_beatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_beatmapLevelIds
void GlobalNamespace::LevelFilterParams::set_beatmapLevelIds(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_beatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByOwned
bool GlobalNamespace::LevelFilterParams::get_filterByOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterByOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByOwned
void GlobalNamespace::LevelFilterParams::set_filterByOwned(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterByOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_searchText
::Il2CppString* GlobalNamespace::LevelFilterParams::get_searchText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_searchText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_searchText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_searchText
void GlobalNamespace::LevelFilterParams::set_searchText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_searchText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_searchText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByDifficulty
bool GlobalNamespace::LevelFilterParams::get_filterByDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterByDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByDifficulty
void GlobalNamespace::LevelFilterParams::set_filterByDifficulty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterByDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredDifficulty
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::LevelFilterParams::get_filteredDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filteredDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficultyMask, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredDifficulty
void GlobalNamespace::LevelFilterParams::set_filteredDifficulty(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filteredDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterBySongPacks
bool GlobalNamespace::LevelFilterParams::get_filterBySongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterBySongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterBySongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterBySongPacks
void GlobalNamespace::LevelFilterParams::set_filterBySongPacks(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterBySongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterBySongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredSongPacks
GlobalNamespace::SongPackMask GlobalNamespace::LevelFilterParams::get_filteredSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filteredSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredSongPacks
void GlobalNamespace::LevelFilterParams::set_filteredSongPacks(GlobalNamespace::SongPackMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filteredSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByCharacteristic
bool GlobalNamespace::LevelFilterParams::get_filterByCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterByCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByCharacteristic
void GlobalNamespace::LevelFilterParams::set_filterByCharacteristic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterByCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LevelFilterParams::get_filteredCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filteredCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredCharacteristic
void GlobalNamespace::LevelFilterParams::set_filteredCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filteredCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByNotPlayedYet
bool GlobalNamespace::LevelFilterParams::get_filterByNotPlayedYet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByNotPlayedYet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterByNotPlayedYet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByNotPlayedYet
void GlobalNamespace::LevelFilterParams::set_filterByNotPlayedYet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByNotPlayedYet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterByNotPlayedYet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByMinBpm
bool GlobalNamespace::LevelFilterParams::get_filterByMinBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByMinBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterByMinBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByMinBpm
void GlobalNamespace::LevelFilterParams::set_filterByMinBpm(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByMinBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterByMinBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredMinBpm
float GlobalNamespace::LevelFilterParams::get_filteredMinBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredMinBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filteredMinBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredMinBpm
void GlobalNamespace::LevelFilterParams::set_filteredMinBpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredMinBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filteredMinBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByMaxBpm
bool GlobalNamespace::LevelFilterParams::get_filterByMaxBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByMaxBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterByMaxBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByMaxBpm
void GlobalNamespace::LevelFilterParams::set_filterByMaxBpm(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByMaxBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterByMaxBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredMaxBpm
float GlobalNamespace::LevelFilterParams::get_filteredMaxBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredMaxBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filteredMaxBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredMaxBpm
void GlobalNamespace::LevelFilterParams::set_filteredMaxBpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredMaxBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filteredMaxBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams..cctor
void GlobalNamespace::LevelFilterParams::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelFilterParams", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LevelFilterParams.IsWithoutFilter
bool GlobalNamespace::LevelFilterParams::IsWithoutFilter(bool ignoreFilterBySongs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::IsWithoutFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWithoutFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreFilterBySongs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ignoreFilterBySongs);
}
// Autogenerated method: LevelFilterParams.NoFilter
GlobalNamespace::LevelFilterParams* GlobalNamespace::LevelFilterParams::NoFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::NoFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelFilterParams", "NoFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelFilterParams*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LevelFilterParams.ByBeatmapLevelIds
GlobalNamespace::LevelFilterParams* GlobalNamespace::LevelFilterParams::ByBeatmapLevelIds(System::Collections::Generic::HashSet_1<::Il2CppString*>* beatmapLevelIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::ByBeatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelFilterParams", "ByBeatmapLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelIds)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelFilterParams*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelIds);
}
// Autogenerated method: LevelFilterParams.ByBeatmapCharacteristic
GlobalNamespace::LevelFilterParams* GlobalNamespace::LevelFilterParams::ByBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::ByBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelFilterParams", "ByBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelFilterParams*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapCharacteristic);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewBeatmapLevelCollectionSO
#include "GlobalNamespace/PreviewBeatmapLevelCollectionSO.hpp"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PreviewBeatmapLevelSO[] _beatmapLevels
::Array<GlobalNamespace::PreviewBeatmapLevelSO*>* GlobalNamespace::PreviewBeatmapLevelCollectionSO::_get__beatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelCollectionSO::_get__beatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevels"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::PreviewBeatmapLevelSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PreviewBeatmapLevelSO[] _beatmapLevels
void GlobalNamespace::PreviewBeatmapLevelCollectionSO::_set__beatmapLevels(::Array<GlobalNamespace::PreviewBeatmapLevelSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelCollectionSO::_set__beatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevels"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::PreviewBeatmapLevelSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PreviewBeatmapLevelCollectionSO.get_beatmapLevels
::Array<GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::PreviewBeatmapLevelCollectionSO::get_beatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelCollectionSO::get_beatmapLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: PreviewBeatmapLevelCollectionSO
#include "GlobalNamespace/PreviewBeatmapLevelCollectionSO.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _packID
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::_get__packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_get__packID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _packID
void GlobalNamespace::PreviewBeatmapLevelPackSO::_set__packID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_set__packID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packID"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _packName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::_get__packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_get__packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _packName
void GlobalNamespace::PreviewBeatmapLevelPackSO::_set__packName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_set__packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _shortPackName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::_get__shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_get__shortPackName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortPackName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _shortPackName
void GlobalNamespace::PreviewBeatmapLevelPackSO::_set__shortPackName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_set__shortPackName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortPackName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
UnityEngine::Sprite* GlobalNamespace::PreviewBeatmapLevelPackSO::_get__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_get__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _coverImage
void GlobalNamespace::PreviewBeatmapLevelPackSO::_set__coverImage(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_set__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PreviewBeatmapLevelCollectionSO _previewBeatmapLevelCollection
GlobalNamespace::PreviewBeatmapLevelCollectionSO* GlobalNamespace::PreviewBeatmapLevelPackSO::_get__previewBeatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_get__previewBeatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::PreviewBeatmapLevelCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PreviewBeatmapLevelCollectionSO _previewBeatmapLevelCollection
void GlobalNamespace::PreviewBeatmapLevelPackSO::_set__previewBeatmapLevelCollection(GlobalNamespace::PreviewBeatmapLevelCollectionSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::_set__previewBeatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelCollection"))->offset;
  *reinterpret_cast<GlobalNamespace::PreviewBeatmapLevelCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_packID
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::get_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_packID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_packName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::get_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_packName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_shortPackName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::get_shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_shortPackName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_collectionName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_coverImage
UnityEngine::Sprite* GlobalNamespace::PreviewBeatmapLevelPackSO::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::PreviewBeatmapLevelPackSO::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
// Including type: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetPreviewAudioClipAsync-d__51.hpp"
// Including type: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetCoverImageAsync-d__52.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _levelID
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::_get__levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _levelID
void GlobalNamespace::PreviewBeatmapLevelSO::_set__levelID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelID"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::_get__songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songName
void GlobalNamespace::PreviewBeatmapLevelSO::_set__songName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songSubName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::_get__songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songSubName
void GlobalNamespace::PreviewBeatmapLevelSO::_set__songSubName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songAuthorName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::_get__songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songAuthorName
void GlobalNamespace::PreviewBeatmapLevelSO::_set__songAuthorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelAuthorName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::_get__levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _levelAuthorName
void GlobalNamespace::PreviewBeatmapLevelSO::_set__levelAuthorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _previewAudioClip
UnityEngine::AudioClip* GlobalNamespace::PreviewBeatmapLevelSO::_get__previewAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__previewAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewAudioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AudioClip _previewAudioClip
void GlobalNamespace::PreviewBeatmapLevelSO::_set__previewAudioClip(UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__previewAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewAudioClip"))->offset;
  *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatsPerMinute
float GlobalNamespace::PreviewBeatmapLevelSO::_get__beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _beatsPerMinute
void GlobalNamespace::PreviewBeatmapLevelSO::_set__beatsPerMinute(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTimeOffset
float GlobalNamespace::PreviewBeatmapLevelSO::_get__songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _songTimeOffset
void GlobalNamespace::PreviewBeatmapLevelSO::_set__songTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shuffle
float GlobalNamespace::PreviewBeatmapLevelSO::_get__shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _shuffle
void GlobalNamespace::PreviewBeatmapLevelSO::_set__shuffle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shufflePeriod
float GlobalNamespace::PreviewBeatmapLevelSO::_get__shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _shufflePeriod
void GlobalNamespace::PreviewBeatmapLevelSO::_set__shufflePeriod(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewStartTime
float GlobalNamespace::PreviewBeatmapLevelSO::_get__previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _previewStartTime
void GlobalNamespace::PreviewBeatmapLevelSO::_set__previewStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewDuration
float GlobalNamespace::PreviewBeatmapLevelSO::_get__previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _previewDuration
void GlobalNamespace::PreviewBeatmapLevelSO::_set__previewDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songDuration
float GlobalNamespace::PreviewBeatmapLevelSO::_get__songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__songDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _songDuration
void GlobalNamespace::PreviewBeatmapLevelSO::_set__songDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__songDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
UnityEngine::Sprite* GlobalNamespace::PreviewBeatmapLevelSO::_get__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _coverImage
void GlobalNamespace::PreviewBeatmapLevelSO::_set__coverImage(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PreviewBeatmapLevelSO::_get__environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private EnvironmentInfoSO _environmentInfo
void GlobalNamespace::PreviewBeatmapLevelSO::_set__environmentInfo(GlobalNamespace::EnvironmentInfoSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PreviewBeatmapLevelSO::_get__allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__allDirectionsEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDirectionsEnvironmentInfo"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private EnvironmentInfoSO _allDirectionsEnvironmentInfo
void GlobalNamespace::PreviewBeatmapLevelSO::_set__allDirectionsEnvironmentInfo(GlobalNamespace::EnvironmentInfoSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__allDirectionsEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDirectionsEnvironmentInfo"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PreviewDifficultyBeatmapSet[] _previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::PreviewBeatmapLevelSO::_get__previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__previewDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDifficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PreviewDifficultyBeatmapSet[] _previewDifficultyBeatmapSets
void GlobalNamespace::PreviewBeatmapLevelSO::_set__previewDifficultyBeatmapSets(::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__previewDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDifficultyBeatmapSets"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _ignore360MovementBeatmaps
bool GlobalNamespace::PreviewBeatmapLevelSO::_get__ignore360MovementBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__ignore360MovementBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignore360MovementBeatmaps"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _ignore360MovementBeatmaps
void GlobalNamespace::PreviewBeatmapLevelSO::_set__ignore360MovementBeatmaps(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__ignore360MovementBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignore360MovementBeatmaps"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PreviewDifficultyBeatmapSet[] _no360MovementPreviewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::PreviewBeatmapLevelSO::_get__no360MovementPreviewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_get__no360MovementPreviewDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_no360MovementPreviewDifficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PreviewDifficultyBeatmapSet[] _no360MovementPreviewDifficultyBeatmapSets
void GlobalNamespace::PreviewBeatmapLevelSO::_set__no360MovementPreviewDifficultyBeatmapSets(::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::_set__no360MovementPreviewDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_no360MovementPreviewDifficultyBeatmapSets"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PreviewBeatmapLevelSO.get_levelID
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songSubName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songAuthorName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_levelAuthorName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_beatsPerMinute
float GlobalNamespace::PreviewBeatmapLevelSO::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songTimeOffset
float GlobalNamespace::PreviewBeatmapLevelSO::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songDuration
float GlobalNamespace::PreviewBeatmapLevelSO::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_shuffle
float GlobalNamespace::PreviewBeatmapLevelSO::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_shufflePeriod
float GlobalNamespace::PreviewBeatmapLevelSO::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewStartTime
float GlobalNamespace::PreviewBeatmapLevelSO::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewDuration
float GlobalNamespace::PreviewBeatmapLevelSO::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PreviewBeatmapLevelSO::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PreviewBeatmapLevelSO::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::PreviewBeatmapLevelSO::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.InitData
void GlobalNamespace::PreviewBeatmapLevelSO::InitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::InitData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::PreviewBeatmapLevelSO::GetPreviewAudioClipAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::GetPreviewAudioClipAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: PreviewBeatmapLevelSO.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::PreviewBeatmapLevelSO::GetCoverImageAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: PreviewBeatmapLevelSO.OnEnable
void GlobalNamespace::PreviewBeatmapLevelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetPreviewAudioClipAsync-d__51.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.AudioClip> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*> GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.AudioClip> <>t__builder
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public PreviewBeatmapLevelSO <>4__this
GlobalNamespace::PreviewBeatmapLevelSO* GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::PreviewBeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public PreviewBeatmapLevelSO <>4__this
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_$$4__this(GlobalNamespace::PreviewBeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::PreviewBeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::AudioClip*> GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__1
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::AudioClip*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51.MoveNext
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51.SetStateMachine
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetCoverImageAsync-d__52.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*> GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public PreviewBeatmapLevelSO <>4__this
GlobalNamespace::PreviewBeatmapLevelSO* GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::PreviewBeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public PreviewBeatmapLevelSO <>4__this
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_$$4__this(GlobalNamespace::PreviewBeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::PreviewBeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*> GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52.MoveNext
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52.SetStateMachine
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PreviewDifficultyBeatmapSet::_get__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::_get__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
void GlobalNamespace::PreviewDifficultyBeatmapSet::_set__beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::_set__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty[] _beatmapDifficulties
::Array<GlobalNamespace::BeatmapDifficulty>* GlobalNamespace::PreviewDifficultyBeatmapSet::_get__beatmapDifficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::_get__beatmapDifficulties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulties"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::BeatmapDifficulty>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficulty[] _beatmapDifficulties
void GlobalNamespace::PreviewDifficultyBeatmapSet::_set__beatmapDifficulties(::Array<GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::_set__beatmapDifficulties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulties"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::BeatmapDifficulty>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PreviewDifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewDifficultyBeatmapSet.get_beatmapDifficulties
::Array<GlobalNamespace::BeatmapDifficulty>* GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapDifficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapDifficulties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficulties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BeatmapDifficulty>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper.hpp"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper/<>c
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper_--c.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: AlphabetScrollInfo/Data
#include "GlobalNamespace/AlphabetScrollInfo_Data.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kFirstAlphabet
::Il2CppString* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kFirstAlphabet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kFirstAlphabet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kFirstAlphabet"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFirstAlphabet
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kFirstAlphabet(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kFirstAlphabet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kFirstAlphabet", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char kNonAlphabetChar
::Il2CppChar GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kNonAlphabetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kNonAlphabetChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kNonAlphabetChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char kNonAlphabetChar
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kNonAlphabetChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kNonAlphabetChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kNonAlphabetChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxCharactersCount
int GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kMaxCharactersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kMaxCharactersCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kMaxCharactersCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxCharactersCount
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kMaxCharactersCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kMaxCharactersCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kMaxCharactersCount", value));
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper.CreateData
::Array<GlobalNamespace::AlphabetScrollInfo::Data*>* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::CreateData(::Array<GlobalNamespace::IPreviewBeatmapLevel*>* previewBeatmapLevels, ByRef<::Array<GlobalNamespace::IPreviewBeatmapLevel*>*> sortedPreviewBeatmapLevels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::CreateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AlphabetScrollbarInfoBeatmapLevelHelper", "CreateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevels), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::IPreviewBeatmapLevel*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::AlphabetScrollInfo::Data*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, previewBeatmapLevels, byref(sortedPreviewBeatmapLevels));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper/<>c
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AlphabetScrollbarInfoBeatmapLevelHelper/<>c <>9
GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c*>("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AlphabetScrollbarInfoBeatmapLevelHelper/<>c <>9
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9(GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IPreviewBeatmapLevel,System.String> <>9__3_0
System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>*>("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IPreviewBeatmapLevel,System.String> <>9__3_0
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9__3_0(System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9__3_0", value)));
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper/<>c..cctor
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper/<>c.<CreateData>b__3_0
::Il2CppString* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::$CreateData$b__3_0(GlobalNamespace::IPreviewBeatmapLevel* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::<CreateData>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateData>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapDataAssetFileModel
#include "GlobalNamespace/IBeatmapDataAssetFileModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::IBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IBeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::IBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IBeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::IBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: IBeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::IBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GetAssetBundleFileResult
#include "GlobalNamespace/GetAssetBundleFileResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isError
bool GlobalNamespace::GetAssetBundleFileResult::_get_isError() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GetAssetBundleFileResult::_get_isError");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean isError
void GlobalNamespace::GetAssetBundleFileResult::_set_isError(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GetAssetBundleFileResult::_set_isError");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isError"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String assetBundlePath
::Il2CppString* GlobalNamespace::GetAssetBundleFileResult::_get_assetBundlePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GetAssetBundleFileResult::_get_assetBundlePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetBundlePath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String assetBundlePath
void GlobalNamespace::GetAssetBundleFileResult::_set_assetBundlePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GetAssetBundleFileResult::_set_assetBundlePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetBundlePath"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelDataAssetDownloadUpdate
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String levelID
::Il2CppString* GlobalNamespace::LevelDataAssetDownloadUpdate::_get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::_get_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String levelID
void GlobalNamespace::LevelDataAssetDownloadUpdate::_set_levelID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::_set_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 bytesTotal
uint GlobalNamespace::LevelDataAssetDownloadUpdate::_get_bytesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::_get_bytesTotal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTotal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.UInt32 bytesTotal
void GlobalNamespace::LevelDataAssetDownloadUpdate::_set_bytesTotal(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::_set_bytesTotal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTotal"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 bytesTransferred
uint GlobalNamespace::LevelDataAssetDownloadUpdate::_get_bytesTransferred() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::_get_bytesTransferred");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTransferred"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.UInt32 bytesTransferred
void GlobalNamespace::LevelDataAssetDownloadUpdate::_set_bytesTransferred(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::_set_bytesTransferred");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTransferred"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly LevelDataAssetDownloadUpdate/AssetDownloadingState assetDownloadingState
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::_get_assetDownloadingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::_get_assetDownloadingState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetDownloadingState"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly LevelDataAssetDownloadUpdate/AssetDownloadingState assetDownloadingState
void GlobalNamespace::LevelDataAssetDownloadUpdate::_set_assetDownloadingState(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::_set_assetDownloadingState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetDownloadingState"))->offset;
  *reinterpret_cast<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelDataAssetDownloadUpdate/AssetDownloadingState
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState PreparingToDownload
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_PreparingToDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_PreparingToDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "PreparingToDownload"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState PreparingToDownload
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_PreparingToDownload(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_PreparingToDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "PreparingToDownload", value));
}
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Downloading
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Downloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Downloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Downloading"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Downloading
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Downloading(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Downloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Downloading", value));
}
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Completed
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Completed
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Completed(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Completed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestBeatmapDataAssetFileModel
#include "GlobalNamespace/TestBeatmapDataAssetFileModel.hpp"
// Including type: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__5.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kAssetsDir
::Il2CppString* GlobalNamespace::TestBeatmapDataAssetFileModel::_get_kAssetsDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::_get_kAssetsDir");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "TestBeatmapDataAssetFileModel", "kAssetsDir"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAssetsDir
void GlobalNamespace::TestBeatmapDataAssetFileModel::_set_kAssetsDir(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::_set_kAssetsDir");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestBeatmapDataAssetFileModel", "kAssetsDir", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LevelDataAssetDownloadUpdate> levelDataAssetDownloadUpdateEvent
System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* GlobalNamespace::TestBeatmapDataAssetFileModel::_get_levelDataAssetDownloadUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::_get_levelDataAssetDownloadUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDataAssetDownloadUpdateEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<LevelDataAssetDownloadUpdate> levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::_set_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::_set_levelDataAssetDownloadUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDataAssetDownloadUpdateEvent"))->offset;
  *reinterpret_cast<System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TestBeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::TestBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::TestBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<GetAssetBundleFileResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::GetAssetBundleFileResult> GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::GetAssetBundleFileResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<GetAssetBundleFileResult> <>t__builder
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::GetAssetBundleFileResult> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::GetAssetBundleFileResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel previewBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_previewBeatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public IPreviewBeatmapLevel previewBeatmapLevel
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_previewBeatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_previewBeatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public TestBeatmapDataAssetFileModel <>4__this
GlobalNamespace::TestBeatmapDataAssetFileModel* GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::TestBeatmapDataAssetFileModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public TestBeatmapDataAssetFileModel <>4__this
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$4__this(GlobalNamespace::TestBeatmapDataAssetFileModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::TestBeatmapDataAssetFileModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String <path>5__2
::Il2CppString* GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$path$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$path$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<path>5__2"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <path>5__2
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$path$5__2(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$path$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<path>5__2"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <i>5__3
uint GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$i$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$i$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.UInt32 <i>5__3
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$i$5__3(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$i$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<GetAssetBundleFileResult> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::GetAssetBundleFileResult> GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_get_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::GetAssetBundleFileResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<GetAssetBundleFileResult> <>u__2
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$u__2(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::GetAssetBundleFileResult> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::_set_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::GetAssetBundleFileResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4.MoveNext
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4.SetStateMachine
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool> GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<bool> GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5.MoveNext
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5.SetStateMachine
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_collectionName
::Il2CppString* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_coverImage
UnityEngine::Sprite* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlaylistSO
#include "GlobalNamespace/PlaylistSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: BeatmapLevelCollectionSO
#include "GlobalNamespace/BeatmapLevelCollectionSO.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _playListLocalizedName
::Il2CppString* GlobalNamespace::PlaylistSO::_get__playListLocalizedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::_get__playListLocalizedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playListLocalizedName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _playListLocalizedName
void GlobalNamespace::PlaylistSO::_set__playListLocalizedName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::_set__playListLocalizedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playListLocalizedName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
UnityEngine::Sprite* GlobalNamespace::PlaylistSO::_get__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::_get__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _coverImage
void GlobalNamespace::PlaylistSO::_set__coverImage(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::_set__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelCollectionSO _beatmapLevelCollection
GlobalNamespace::BeatmapLevelCollectionSO* GlobalNamespace::PlaylistSO::_get__beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::_get__beatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelCollectionSO _beatmapLevelCollection
void GlobalNamespace::PlaylistSO::_set__beatmapLevelCollection(GlobalNamespace::BeatmapLevelCollectionSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::_set__beatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelCollection"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PlaylistSO.get_collectionName
::Il2CppString* GlobalNamespace::PlaylistSO::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlaylistSO.get_coverImage
UnityEngine::Sprite* GlobalNamespace::PlaylistSO::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: PlaylistSO.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::PlaylistSO::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultBeatmapCharacteristicName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultBeatmapCharacteristicName
void GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _version
void GlobalNamespace::StandardLevelInfoSaveData::_set__version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songName
void GlobalNamespace::StandardLevelInfoSaveData::_set__songName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songSubName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songSubName
void GlobalNamespace::StandardLevelInfoSaveData::_set__songSubName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songAuthorName
void GlobalNamespace::StandardLevelInfoSaveData::_set__songAuthorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _levelAuthorName
void GlobalNamespace::StandardLevelInfoSaveData::_set__levelAuthorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData::_get__beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _beatsPerMinute
void GlobalNamespace::StandardLevelInfoSaveData::_set__beatsPerMinute(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData::_get__songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _songTimeOffset
void GlobalNamespace::StandardLevelInfoSaveData::_set__songTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shuffle
float GlobalNamespace::StandardLevelInfoSaveData::_get__shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _shuffle
void GlobalNamespace::StandardLevelInfoSaveData::_set__shuffle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData::_get__shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _shufflePeriod
void GlobalNamespace::StandardLevelInfoSaveData::_set__shufflePeriod(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData::_get__previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _previewStartTime
void GlobalNamespace::StandardLevelInfoSaveData::_set__previewStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewDuration
float GlobalNamespace::StandardLevelInfoSaveData::_get__previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _previewDuration
void GlobalNamespace::StandardLevelInfoSaveData::_set__previewDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__songFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songFilename
void GlobalNamespace::StandardLevelInfoSaveData::_set__songFilename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__songFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFilename"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _coverImageFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__coverImageFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImageFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _coverImageFilename
void GlobalNamespace::StandardLevelInfoSaveData::_set__coverImageFilename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__coverImageFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImageFilename"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _environmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _environmentName
void GlobalNamespace::StandardLevelInfoSaveData::_set__environmentName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _allDirectionsEnvironmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get__allDirectionsEnvironmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__allDirectionsEnvironmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDirectionsEnvironmentName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _allDirectionsEnvironmentName
void GlobalNamespace::StandardLevelInfoSaveData::_set__allDirectionsEnvironmentName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__allDirectionsEnvironmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDirectionsEnvironmentName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelInfoSaveData/DifficultyBeatmapSet[] _difficultyBeatmapSets
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>* GlobalNamespace::StandardLevelInfoSaveData::_get__difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get__difficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StandardLevelInfoSaveData/DifficultyBeatmapSet[] _difficultyBeatmapSets
void GlobalNamespace::StandardLevelInfoSaveData::_set__difficultyBeatmapSets(::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set__difficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapSets"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelInfoSaveData.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songSubName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_levelAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_coverImageFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImageFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_environmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_allDirectionsEnvironmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_difficultyBeatmapSets
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>* GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAllData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename(::Il2CppString* songFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSongFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songFilename)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songFilename);
}
// Autogenerated method: StandardLevelInfoSaveData.SerializeToJSONString
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.DeserializeFromJSONString
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString(::Il2CppString* stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardLevelInfoSaveData", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _beatmapCharacteristicName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::_get__beatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::_get__beatmapCharacteristicName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _beatmapCharacteristicName
void GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::_set__beatmapCharacteristicName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::_set__beatmapCharacteristicName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelInfoSaveData/DifficultyBeatmap[] _difficultyBeatmaps
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::_get__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::_get__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StandardLevelInfoSaveData/DifficultyBeatmap[] _difficultyBeatmaps
void GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::_set__difficultyBeatmaps(::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::_set__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmapSet.get_beatmapCharacteristicName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_beatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_beatmapCharacteristicName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _difficulty
void GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__difficulty(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _difficultyRank
void GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__difficultyRank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__beatmapFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _beatmapFilename
void GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__beatmapFilename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__beatmapFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapFilename"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _noteJumpMovementSpeed
void GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__noteJumpMovementSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpStartBeatOffset
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_get__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _noteJumpStartBeatOffset
void GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__noteJumpStartBeatOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::_set__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficultyRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_beatmapFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::_get__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::_get__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _version
void GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::_set__version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::_set__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelInfoSaveData/VersionCheck.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100
#include "GlobalNamespace/StandardLevelInfoSaveData_V100.hpp"
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData_V100/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kCurrentVersion
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData_V100", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData_V100", "kCurrentVersion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _version
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songName
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songSubName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songSubName
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songSubName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songAuthorName
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songAuthorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _levelAuthorName
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__levelAuthorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData_V100::_get__beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _beatsPerMinute
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__beatsPerMinute(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _songTimeOffset
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shuffle
float GlobalNamespace::StandardLevelInfoSaveData_V100::_get__shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _shuffle
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__shuffle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData_V100::_get__shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _shufflePeriod
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__shufflePeriod(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData_V100::_get__previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _previewStartTime
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__previewStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewDuration
float GlobalNamespace::StandardLevelInfoSaveData_V100::_get__previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _previewDuration
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__previewDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _songFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__songFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _songFilename
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songFilename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__songFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFilename"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _coverImageFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__coverImageFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImageFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _coverImageFilename
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__coverImageFilename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__coverImageFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImageFilename"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _environmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _environmentName
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__environmentName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelInfoSaveData_V100/DifficultyBeatmap[] _difficultyBeatmaps
::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>* GlobalNamespace::StandardLevelInfoSaveData_V100::_get__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StandardLevelInfoSaveData_V100/DifficultyBeatmap[] _difficultyBeatmaps
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set__difficultyBeatmaps(::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songSubName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_levelAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_coverImageFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_coverImageFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImageFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_environmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_difficultyBeatmaps
::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>* GlobalNamespace::StandardLevelInfoSaveData_V100::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData_V100::get_hasAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_hasAllData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAllData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData_V100::SetSongFilename(::Il2CppString* songFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::SetSongFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSongFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songFilename)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songFilename);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.SerializeToJSONString
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.DeserializeFromJSONString
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData_V100::DeserializeFromJSONString(::Il2CppString* stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardLevelInfoSaveData_V100", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _difficulty
void GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__difficulty(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _difficultyRank
void GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__difficultyRank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__beatmapFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _beatmapFilename
void GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__beatmapFilename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__beatmapFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapFilename"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _noteJumpMovementSpeed
void GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__noteJumpMovementSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _noteJumpStartBeatOffset
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_get__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _noteJumpStartBeatOffset
void GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__noteJumpStartBeatOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::_set__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpStartBeatOffset
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_VersionCheck.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::_get__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::_get__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _version
void GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::_set__version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::_set__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelInfoSaveData_V100/VersionCheck.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassGraphicsSettingsPresetsSO/Preset[] _presets
::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>* GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::_get__presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::_get__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BloomPrePassGraphicsSettingsPresetsSO/Preset[] _presets
void GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::_set__presets(::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::_set__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BloomPrePassGraphicsSettingsPresetsSO.get_presets
::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>* GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassGraphicsSettingsPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_namedPresets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BloomPrePassEffectSO bloomPrePassEffect
GlobalNamespace::BloomPrePassEffectSO* GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset::_get_bloomPrePassEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset::_get_bloomPrePassEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomPrePassEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BloomPrePassEffectSO bloomPrePassEffect
void GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset::_set_bloomPrePassEffect(GlobalNamespace::BloomPrePassEffectSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset::_set_bloomPrePassEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomPrePassEffect"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainEffectGraphicsSettingsPresetsSO/Preset[] _presets
::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>* GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::_get__presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::_get__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MainEffectGraphicsSettingsPresetsSO/Preset[] _presets
void GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::_set__presets(::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::_set__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MainEffectGraphicsSettingsPresetsSO.get_presets
::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>* GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectGraphicsSettingsPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_namedPresets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MainEffectSO mainEffect
GlobalNamespace::MainEffectSO* GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset::_get_mainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset::_get_mainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MainEffectSO mainEffect
void GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset::_set_mainEffect(GlobalNamespace::MainEffectSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset::_set_mainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffect"))->offset;
  *reinterpret_cast<GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsBestGraphicsValues
#include "GlobalNamespace/MainSettingsBestGraphicsValues.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainSettingsBestGraphicsValues.ApplyValues
void GlobalNamespace::MainSettingsBestGraphicsValues::ApplyValues(GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsBestGraphicsValues::ApplyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainSettingsBestGraphicsValues", "ApplyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainSettingsModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mainSettingsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainSettingsDefaultValues
#include "GlobalNamespace/MainSettingsDefaultValues.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerPositionX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerPositionX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerPositionX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerPositionX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerPositionY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerPositionY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerPositionY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerPositionY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerPositionZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerPositionZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerPositionZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerPositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerRotationX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerRotationX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerRotationX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerRotationX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerRotationY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerRotationY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerRotationY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerRotationY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerRotationZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerRotationZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerRotationZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerRotationZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultWindowResolutionWidth
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultWindowResolutionWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultWindowResolutionWidth
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultWindowResolutionWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultWindowResolutionHeight
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultWindowResolutionHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultWindowResolutionHeight
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultWindowResolutionHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultMirrorGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMirrorGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultMirrorGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultMirrorGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMirrorGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMirrorGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMirrorGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMainEffectGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultMainEffectGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMainEffectGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMainEffectGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMainEffectGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultBloomGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBloomGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBloomGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultBloomGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultBloomGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBloomGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBloomGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultBloomGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultSmokeGraphicsSettings
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultSmokeGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultSmokeGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultSmokeGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultSmokeGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultSmokeGraphicsSettings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultSmokeGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultSmokeGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultAntiAliasingLevel
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAntiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAntiAliasingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultAntiAliasingLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultAntiAliasingLevel
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAntiAliasingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAntiAliasingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultAntiAliasingLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultVrResolutionScale
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultVrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultVrResolutionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultVrResolutionScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultVrResolutionScale
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultVrResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultVrResolutionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultVrResolutionScale", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMenuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMenuVRResolutionScaleMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultMenuVRResolutionScaleMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMenuVRResolutionScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMenuVRResolutionScaleMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMenuVRResolutionScaleMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultUseFixedFoveatedRenderingDuringGameplay"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultUseFixedFoveatedRenderingDuringGameplay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBurnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBurnMarkTrailsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultBurnMarkTrailsEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBurnMarkTrailsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBurnMarkTrailsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultBurnMarkTrailsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultScreenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultScreenDisplacementEffectsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultScreenDisplacementEffectsEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultScreenDisplacementEffectsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultScreenDisplacementEffectsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultScreenDisplacementEffectsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultAudioLatency
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAudioLatency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultAudioLatency"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultAudioLatency
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAudioLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAudioLatency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultAudioLatency", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxShockwaveParticles
int GlobalNamespace::MainSettingsDefaultValues::_get_kMaxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kMaxShockwaveParticles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kMaxShockwaveParticles"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxShockwaveParticles
void GlobalNamespace::MainSettingsDefaultValues::_set_kMaxShockwaveParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kMaxShockwaveParticles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kMaxShockwaveParticles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxNumberOfCutSoundEffects
int GlobalNamespace::MainSettingsDefaultValues::_get_kMaxNumberOfCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kMaxNumberOfCutSoundEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kMaxNumberOfCutSoundEffects"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxNumberOfCutSoundEffects
void GlobalNamespace::MainSettingsDefaultValues::_set_kMaxNumberOfCutSoundEffects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kMaxNumberOfCutSoundEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kMaxNumberOfCutSoundEffects", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kCreateScreenshotDuringTheGame
bool GlobalNamespace::MainSettingsDefaultValues::_get_kCreateScreenshotDuringTheGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kCreateScreenshotDuringTheGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kCreateScreenshotDuringTheGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kCreateScreenshotDuringTheGame
void GlobalNamespace::MainSettingsDefaultValues::_set_kCreateScreenshotDuringTheGame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kCreateScreenshotDuringTheGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kCreateScreenshotDuringTheGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kSystemLanguageSerializedName
::Il2CppString* GlobalNamespace::MainSettingsDefaultValues::_get_kSystemLanguageSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kSystemLanguageSerializedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsDefaultValues", "kSystemLanguageSerializedName"));
}
// Autogenerated static field setter
// Set static field: static public System.String kSystemLanguageSerializedName
void GlobalNamespace::MainSettingsDefaultValues::_set_kSystemLanguageSerializedName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kSystemLanguageSerializedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kSystemLanguageSerializedName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultPauseButtonPressDurationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultPauseButtonPressDurationLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultPauseButtonPressDurationLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultPauseButtonPressDurationLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultPauseButtonPressDurationLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultPauseButtonPressDurationLevel", value));
}
// Autogenerated method: MainSettingsDefaultValues.SetFixedDefaultValues
void GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues(GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainSettingsDefaultValues", "SetFixedDefaultValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainSettingsModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mainSettingsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MainSettingsModelSO/WindowMode
#include "GlobalNamespace/MainSettingsModelSO_WindowMode.hpp"
// Including type: MainSettingsModelSO/Config
#include "GlobalNamespace/MainSettingsModelSO_Config.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: Vector2IntSO
#include "GlobalNamespace/Vector2IntSO.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: LanguageSO
#include "GlobalNamespace/LanguageSO.hpp"
// Including type: StringSO
#include "GlobalNamespace/StringSO.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultPlayerHeight
float GlobalNamespace::MainSettingsModelSO::_get_kDefaultPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kDefaultPlayerHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kDefaultPlayerHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultPlayerHeight
void GlobalNamespace::MainSettingsModelSO::_set_kDefaultPlayerHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kDefaultPlayerHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kDefaultPlayerHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kHeadPosToPlayerHeightOffset
float GlobalNamespace::MainSettingsModelSO::_get_kHeadPosToPlayerHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kHeadPosToPlayerHeightOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kHeadPosToPlayerHeightOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kHeadPosToPlayerHeightOffset
void GlobalNamespace::MainSettingsModelSO::_set_kHeadPosToPlayerHeightOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kHeadPosToPlayerHeightOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kHeadPosToPlayerHeightOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFileName
void GlobalNamespace::MainSettingsModelSO::_set_kFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kTempFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kTempFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kTempFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kTempFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTempFileName
void GlobalNamespace::MainSettingsModelSO::_set_kTempFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kTempFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kTempFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackupFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kBackupFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kBackupFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kBackupFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackupFileName
void GlobalNamespace::MainSettingsModelSO::_set_kBackupFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kBackupFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kBackupFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::MainSettingsModelSO::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kControllersPositionOffsetLimit
float GlobalNamespace::MainSettingsModelSO::_get_kControllersPositionOffsetLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kControllersPositionOffsetLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kControllersPositionOffsetLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kControllersPositionOffsetLimit
void GlobalNamespace::MainSettingsModelSO::_set_kControllersPositionOffsetLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kControllersPositionOffsetLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kControllersPositionOffsetLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kControllersRotationOffsetLimit
float GlobalNamespace::MainSettingsModelSO::_get_kControllersRotationOffsetLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kControllersRotationOffsetLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kControllersRotationOffsetLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kControllersRotationOffsetLimit
void GlobalNamespace::MainSettingsModelSO::_set_kControllersRotationOffsetLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kControllersRotationOffsetLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kControllersRotationOffsetLimit", value));
}
// Autogenerated instance field getter
// Get instance field: public FloatSO vrResolutionScale
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_vrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_vrResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrResolutionScale"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO vrResolutionScale
void GlobalNamespace::MainSettingsModelSO::_set_vrResolutionScale(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_vrResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrResolutionScale"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FloatSO menuVRResolutionScaleMultiplier
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_menuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_menuVRResolutionScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuVRResolutionScaleMultiplier"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO menuVRResolutionScaleMultiplier
void GlobalNamespace::MainSettingsModelSO::_set_menuVRResolutionScaleMultiplier(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_menuVRResolutionScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuVRResolutionScaleMultiplier"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO useFixedFoveatedRenderingDuringGameplay
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_useFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_useFixedFoveatedRenderingDuringGameplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedFoveatedRenderingDuringGameplay"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO useFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::MainSettingsModelSO::_set_useFixedFoveatedRenderingDuringGameplay(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_useFixedFoveatedRenderingDuringGameplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedFoveatedRenderingDuringGameplay"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Vector2IntSO windowResolution
GlobalNamespace::Vector2IntSO* GlobalNamespace::MainSettingsModelSO::_get_windowResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_windowResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolution"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector2IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Vector2IntSO windowResolution
void GlobalNamespace::MainSettingsModelSO::_set_windowResolution(GlobalNamespace::Vector2IntSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_windowResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolution"))->offset;
  *reinterpret_cast<GlobalNamespace::Vector2IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO fullscreen
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_fullscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_fullscreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullscreen"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO fullscreen
void GlobalNamespace::MainSettingsModelSO::_set_fullscreen(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_fullscreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullscreen"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public IntSO antiAliasingLevel
GlobalNamespace::IntSO* GlobalNamespace::MainSettingsModelSO::_get_antiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_antiAliasingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antiAliasingLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public IntSO antiAliasingLevel
void GlobalNamespace::MainSettingsModelSO::_set_antiAliasingLevel(GlobalNamespace::IntSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_antiAliasingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antiAliasingLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FloatSO volume
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO volume
void GlobalNamespace::MainSettingsModelSO::_set_volume(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FloatSO ambientVolumeScale
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_ambientVolumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientVolumeScale"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO ambientVolumeScale
void GlobalNamespace::MainSettingsModelSO::_set_ambientVolumeScale(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientVolumeScale"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO controllersRumbleEnabled
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_controllersRumbleEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_controllersRumbleEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllersRumbleEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO controllersRumbleEnabled
void GlobalNamespace::MainSettingsModelSO::_set_controllersRumbleEnabled(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_controllersRumbleEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllersRumbleEnabled"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO roomCenter
GlobalNamespace::Vector3SO* GlobalNamespace::MainSettingsModelSO::_get_roomCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenter"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Vector3SO roomCenter
void GlobalNamespace::MainSettingsModelSO::_set_roomCenter(GlobalNamespace::Vector3SO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenter"))->offset;
  *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FloatSO roomRotation
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomRotation"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO roomRotation
void GlobalNamespace::MainSettingsModelSO::_set_roomRotation(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomRotation"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO controllerPosition
GlobalNamespace::Vector3SO* GlobalNamespace::MainSettingsModelSO::_get_controllerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_controllerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPosition"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Vector3SO controllerPosition
void GlobalNamespace::MainSettingsModelSO::_set_controllerPosition(GlobalNamespace::Vector3SO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_controllerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPosition"))->offset;
  *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO controllerRotation
GlobalNamespace::Vector3SO* GlobalNamespace::MainSettingsModelSO::_get_controllerRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_controllerRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotation"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Vector3SO controllerRotation
void GlobalNamespace::MainSettingsModelSO::_set_controllerRotation(GlobalNamespace::Vector3SO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_controllerRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotation"))->offset;
  *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public IntSO mirrorGraphicsSettings
GlobalNamespace::IntSO* GlobalNamespace::MainSettingsModelSO::_get_mirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_mirrorGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorGraphicsSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public IntSO mirrorGraphicsSettings
void GlobalNamespace::MainSettingsModelSO::_set_mirrorGraphicsSettings(GlobalNamespace::IntSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_mirrorGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorGraphicsSettings"))->offset;
  *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public IntSO mainEffectGraphicsSettings
GlobalNamespace::IntSO* GlobalNamespace::MainSettingsModelSO::_get_mainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_mainEffectGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffectGraphicsSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public IntSO mainEffectGraphicsSettings
void GlobalNamespace::MainSettingsModelSO::_set_mainEffectGraphicsSettings(GlobalNamespace::IntSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_mainEffectGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffectGraphicsSettings"))->offset;
  *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public IntSO bloomPrePassGraphicsSettings
GlobalNamespace::IntSO* GlobalNamespace::MainSettingsModelSO::_get_bloomPrePassGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_bloomPrePassGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomPrePassGraphicsSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public IntSO bloomPrePassGraphicsSettings
void GlobalNamespace::MainSettingsModelSO::_set_bloomPrePassGraphicsSettings(GlobalNamespace::IntSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_bloomPrePassGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomPrePassGraphicsSettings"))->offset;
  *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO smokeGraphicsSettings
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_smokeGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_smokeGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smokeGraphicsSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO smokeGraphicsSettings
void GlobalNamespace::MainSettingsModelSO::_set_smokeGraphicsSettings(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_smokeGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smokeGraphicsSettings"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO enableAlphaFeatures
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_enableAlphaFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_enableAlphaFeatures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAlphaFeatures"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO enableAlphaFeatures
void GlobalNamespace::MainSettingsModelSO::_set_enableAlphaFeatures(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_enableAlphaFeatures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAlphaFeatures"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public IntSO pauseButtonPressDurationLevel
GlobalNamespace::IntSO* GlobalNamespace::MainSettingsModelSO::_get_pauseButtonPressDurationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_pauseButtonPressDurationLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseButtonPressDurationLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public IntSO pauseButtonPressDurationLevel
void GlobalNamespace::MainSettingsModelSO::_set_pauseButtonPressDurationLevel(GlobalNamespace::IntSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_pauseButtonPressDurationLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseButtonPressDurationLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO burnMarkTrailsEnabled
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_burnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_burnMarkTrailsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burnMarkTrailsEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO burnMarkTrailsEnabled
void GlobalNamespace::MainSettingsModelSO::_set_burnMarkTrailsEnabled(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_burnMarkTrailsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burnMarkTrailsEnabled"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO screenDisplacementEffectsEnabled
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_screenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_screenDisplacementEffectsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenDisplacementEffectsEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO screenDisplacementEffectsEnabled
void GlobalNamespace::MainSettingsModelSO::_set_screenDisplacementEffectsEnabled(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_screenDisplacementEffectsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenDisplacementEffectsEnabled"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO smoothCameraEnabled
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_smoothCameraEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_smoothCameraEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO smoothCameraEnabled
void GlobalNamespace::MainSettingsModelSO::_set_smoothCameraEnabled(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_smoothCameraEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraEnabled"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FloatSO smoothCameraFieldOfView
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_smoothCameraFieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_smoothCameraFieldOfView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraFieldOfView"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO smoothCameraFieldOfView
void GlobalNamespace::MainSettingsModelSO::_set_smoothCameraFieldOfView(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_smoothCameraFieldOfView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraFieldOfView"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO smoothCameraThirdPersonPosition
GlobalNamespace::Vector3SO* GlobalNamespace::MainSettingsModelSO::_get_smoothCameraThirdPersonPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_smoothCameraThirdPersonPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPosition"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Vector3SO smoothCameraThirdPersonPosition
void GlobalNamespace::MainSettingsModelSO::_set_smoothCameraThirdPersonPosition(GlobalNamespace::Vector3SO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_smoothCameraThirdPersonPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPosition"))->offset;
  *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO smoothCameraThirdPersonEulerAngles
GlobalNamespace::Vector3SO* GlobalNamespace::MainSettingsModelSO::_get_smoothCameraThirdPersonEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_smoothCameraThirdPersonEulerAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAngles"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Vector3SO smoothCameraThirdPersonEulerAngles
void GlobalNamespace::MainSettingsModelSO::_set_smoothCameraThirdPersonEulerAngles(GlobalNamespace::Vector3SO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_smoothCameraThirdPersonEulerAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAngles"))->offset;
  *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO smoothCameraThirdPersonEnabled
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_smoothCameraThirdPersonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_smoothCameraThirdPersonEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO smoothCameraThirdPersonEnabled
void GlobalNamespace::MainSettingsModelSO::_set_smoothCameraThirdPersonEnabled(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_smoothCameraThirdPersonEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEnabled"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FloatSO smoothCameraRotationSmooth
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_smoothCameraRotationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_smoothCameraRotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraRotationSmooth"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO smoothCameraRotationSmooth
void GlobalNamespace::MainSettingsModelSO::_set_smoothCameraRotationSmooth(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_smoothCameraRotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraRotationSmooth"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FloatSO smoothCameraPositionSmooth
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_smoothCameraPositionSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_smoothCameraPositionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraPositionSmooth"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO smoothCameraPositionSmooth
void GlobalNamespace::MainSettingsModelSO::_set_smoothCameraPositionSmooth(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_smoothCameraPositionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraPositionSmooth"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO overrideAudioLatency
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_overrideAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_overrideAudioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideAudioLatency"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO overrideAudioLatency
void GlobalNamespace::MainSettingsModelSO::_set_overrideAudioLatency(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_overrideAudioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideAudioLatency"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FloatSO audioLatency
GlobalNamespace::FloatSO* GlobalNamespace::MainSettingsModelSO::_get_audioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_audioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLatency"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FloatSO audioLatency
void GlobalNamespace::MainSettingsModelSO::_set_audioLatency(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_audioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLatency"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public IntSO maxShockwaveParticles
GlobalNamespace::IntSO* GlobalNamespace::MainSettingsModelSO::_get_maxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_maxShockwaveParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxShockwaveParticles"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public IntSO maxShockwaveParticles
void GlobalNamespace::MainSettingsModelSO::_set_maxShockwaveParticles(GlobalNamespace::IntSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_maxShockwaveParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxShockwaveParticles"))->offset;
  *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public IntSO maxNumberOfCutSoundEffects
GlobalNamespace::IntSO* GlobalNamespace::MainSettingsModelSO::_get_maxNumberOfCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_maxNumberOfCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNumberOfCutSoundEffects"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public IntSO maxNumberOfCutSoundEffects
void GlobalNamespace::MainSettingsModelSO::_set_maxNumberOfCutSoundEffects(GlobalNamespace::IntSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_maxNumberOfCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNumberOfCutSoundEffects"))->offset;
  *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO onlineServicesEnabled
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_onlineServicesEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_onlineServicesEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlineServicesEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO onlineServicesEnabled
void GlobalNamespace::MainSettingsModelSO::_set_onlineServicesEnabled(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_onlineServicesEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlineServicesEnabled"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO oculusMRCEnabled
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_oculusMRCEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_oculusMRCEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusMRCEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO oculusMRCEnabled
void GlobalNamespace::MainSettingsModelSO::_set_oculusMRCEnabled(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_oculusMRCEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusMRCEnabled"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO openVrThreadedHaptics
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_openVrThreadedHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_openVrThreadedHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "openVrThreadedHaptics"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO openVrThreadedHaptics
void GlobalNamespace::MainSettingsModelSO::_set_openVrThreadedHaptics(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_openVrThreadedHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "openVrThreadedHaptics"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public LanguageSO language
GlobalNamespace::LanguageSO* GlobalNamespace::MainSettingsModelSO::_get_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<GlobalNamespace::LanguageSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public LanguageSO language
void GlobalNamespace::MainSettingsModelSO::_set_language(GlobalNamespace::LanguageSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  *reinterpret_cast<GlobalNamespace::LanguageSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO useCustomServerEnvironment
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_useCustomServerEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_useCustomServerEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCustomServerEnvironment"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO useCustomServerEnvironment
void GlobalNamespace::MainSettingsModelSO::_set_useCustomServerEnvironment(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_useCustomServerEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCustomServerEnvironment"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public StringSO customServerHostName
GlobalNamespace::StringSO* GlobalNamespace::MainSettingsModelSO::_get_customServerHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_customServerHostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customServerHostName"))->offset;
  return *reinterpret_cast<GlobalNamespace::StringSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public StringSO customServerHostName
void GlobalNamespace::MainSettingsModelSO::_set_customServerHostName(GlobalNamespace::StringSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_customServerHostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customServerHostName"))->offset;
  *reinterpret_cast<GlobalNamespace::StringSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BoolSO depthTextureEnabled
GlobalNamespace::BoolSO* GlobalNamespace::MainSettingsModelSO::_get_depthTextureEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_depthTextureEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthTextureEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BoolSO depthTextureEnabled
void GlobalNamespace::MainSettingsModelSO::_set_depthTextureEnabled(GlobalNamespace::BoolSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_depthTextureEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthTextureEnabled"))->offset;
  *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <createScreenshotDuringTheGame>k__BackingField
bool GlobalNamespace::MainSettingsModelSO::_get_$createScreenshotDuringTheGame$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_$createScreenshotDuringTheGame$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<createScreenshotDuringTheGame>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <createScreenshotDuringTheGame>k__BackingField
void GlobalNamespace::MainSettingsModelSO::_set_$createScreenshotDuringTheGame$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_$createScreenshotDuringTheGame$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<createScreenshotDuringTheGame>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <playingForTheFirstTime>k__BackingField
bool GlobalNamespace::MainSettingsModelSO::_get_$playingForTheFirstTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_$playingForTheFirstTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playingForTheFirstTime>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <playingForTheFirstTime>k__BackingField
void GlobalNamespace::MainSettingsModelSO::_set_$playingForTheFirstTime$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_$playingForTheFirstTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playingForTheFirstTime>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playingForTheFirstTimeChecked
bool GlobalNamespace::MainSettingsModelSO::_get__playingForTheFirstTimeChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get__playingForTheFirstTimeChecked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playingForTheFirstTimeChecked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _playingForTheFirstTimeChecked
void GlobalNamespace::MainSettingsModelSO::_set__playingForTheFirstTimeChecked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set__playingForTheFirstTimeChecked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playingForTheFirstTimeChecked"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isLoaded
bool GlobalNamespace::MainSettingsModelSO::_get__isLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get__isLoaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isLoaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isLoaded
void GlobalNamespace::MainSettingsModelSO::_set__isLoaded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set__isLoaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isLoaded"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MainSettingsModelSO.get_createScreenshotDuringTheGame
bool GlobalNamespace::MainSettingsModelSO::get_createScreenshotDuringTheGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::get_createScreenshotDuringTheGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_createScreenshotDuringTheGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.set_createScreenshotDuringTheGame
void GlobalNamespace::MainSettingsModelSO::set_createScreenshotDuringTheGame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::set_createScreenshotDuringTheGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_createScreenshotDuringTheGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsModelSO.get_playingForTheFirstTime
bool GlobalNamespace::MainSettingsModelSO::get_playingForTheFirstTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::get_playingForTheFirstTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playingForTheFirstTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.set_playingForTheFirstTime
void GlobalNamespace::MainSettingsModelSO::set_playingForTheFirstTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::set_playingForTheFirstTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playingForTheFirstTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsModelSO.Save
void GlobalNamespace::MainSettingsModelSO::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.Load
void GlobalNamespace::MainSettingsModelSO::Load(bool forced) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forced)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forced);
}
// Autogenerated method: MainSettingsModelSO.__DeleteSettingsFiles
void GlobalNamespace::MainSettingsModelSO::__DeleteSettingsFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::__DeleteSettingsFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__DeleteSettingsFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.OnDisable
void GlobalNamespace::MainSettingsModelSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.OnEnable
void GlobalNamespace::MainSettingsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsModelSO/WindowMode
#include "GlobalNamespace/MainSettingsModelSO_WindowMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MainSettingsModelSO/WindowMode Windowed
GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Windowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Windowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainSettingsModelSO::WindowMode>("", "MainSettingsModelSO/WindowMode", "Windowed"));
}
// Autogenerated static field setter
// Set static field: static public MainSettingsModelSO/WindowMode Windowed
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Windowed(GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Windowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO/WindowMode", "Windowed", value));
}
// Autogenerated static field getter
// Get static field: static public MainSettingsModelSO/WindowMode Fullscreen
GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Fullscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Fullscreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainSettingsModelSO::WindowMode>("", "MainSettingsModelSO/WindowMode", "Fullscreen"));
}
// Autogenerated static field setter
// Set static field: static public MainSettingsModelSO/WindowMode Fullscreen
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Fullscreen(GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Fullscreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO/WindowMode", "Fullscreen", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MainSettingsModelSO::WindowMode::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainSettingsModelSO/Config
#include "GlobalNamespace/MainSettingsModelSO_Config.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String version
::Il2CppString* GlobalNamespace::MainSettingsModelSO::Config::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String version
void GlobalNamespace::MainSettingsModelSO::Config::_set_version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 windowResolutionWidth
int GlobalNamespace::MainSettingsModelSO::Config::_get_windowResolutionWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_windowResolutionWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolutionWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 windowResolutionWidth
void GlobalNamespace::MainSettingsModelSO::Config::_set_windowResolutionWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_windowResolutionWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolutionWidth"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 windowResolutionHeight
int GlobalNamespace::MainSettingsModelSO::Config::_get_windowResolutionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_windowResolutionHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolutionHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 windowResolutionHeight
void GlobalNamespace::MainSettingsModelSO::Config::_set_windowResolutionHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_windowResolutionHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolutionHeight"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MainSettingsModelSO/WindowMode windowMode
GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::Config::_get_windowMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_windowMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowMode"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsModelSO::WindowMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MainSettingsModelSO/WindowMode windowMode
void GlobalNamespace::MainSettingsModelSO::Config::_set_windowMode(GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_windowMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowMode"))->offset;
  *reinterpret_cast<GlobalNamespace::MainSettingsModelSO::WindowMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single vrResolutionScale
float GlobalNamespace::MainSettingsModelSO::Config::_get_vrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_vrResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrResolutionScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single vrResolutionScale
void GlobalNamespace::MainSettingsModelSO::Config::_set_vrResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_vrResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrResolutionScale"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single menuVRResolutionScaleMultiplier
float GlobalNamespace::MainSettingsModelSO::Config::_get_menuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_menuVRResolutionScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuVRResolutionScaleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single menuVRResolutionScaleMultiplier
void GlobalNamespace::MainSettingsModelSO::Config::_set_menuVRResolutionScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_menuVRResolutionScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuVRResolutionScaleMultiplier"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFixedFoveatedRenderingDuringGameplay
bool GlobalNamespace::MainSettingsModelSO::Config::_get_useFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_useFixedFoveatedRenderingDuringGameplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedFoveatedRenderingDuringGameplay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean useFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::MainSettingsModelSO::Config::_set_useFixedFoveatedRenderingDuringGameplay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_useFixedFoveatedRenderingDuringGameplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedFoveatedRenderingDuringGameplay"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 antiAliasingLevel
int GlobalNamespace::MainSettingsModelSO::Config::_get_antiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_antiAliasingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antiAliasingLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 antiAliasingLevel
void GlobalNamespace::MainSettingsModelSO::Config::_set_antiAliasingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_antiAliasingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antiAliasingLevel"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mirrorGraphicsSettings
int GlobalNamespace::MainSettingsModelSO::Config::_get_mirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_mirrorGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorGraphicsSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 mirrorGraphicsSettings
void GlobalNamespace::MainSettingsModelSO::Config::_set_mirrorGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_mirrorGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorGraphicsSettings"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mainEffectGraphicsSettings
int GlobalNamespace::MainSettingsModelSO::Config::_get_mainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_mainEffectGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffectGraphicsSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 mainEffectGraphicsSettings
void GlobalNamespace::MainSettingsModelSO::Config::_set_mainEffectGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_mainEffectGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffectGraphicsSettings"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bloomGraphicsSettings
int GlobalNamespace::MainSettingsModelSO::Config::_get_bloomGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_bloomGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomGraphicsSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 bloomGraphicsSettings
void GlobalNamespace::MainSettingsModelSO::Config::_set_bloomGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_bloomGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomGraphicsSettings"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smokeGraphicsSettings
int GlobalNamespace::MainSettingsModelSO::Config::_get_smokeGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smokeGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smokeGraphicsSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 smokeGraphicsSettings
void GlobalNamespace::MainSettingsModelSO::Config::_set_smokeGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smokeGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smokeGraphicsSettings"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean burnMarkTrailsEnabled
bool GlobalNamespace::MainSettingsModelSO::Config::_get_burnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_burnMarkTrailsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burnMarkTrailsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean burnMarkTrailsEnabled
void GlobalNamespace::MainSettingsModelSO::Config::_set_burnMarkTrailsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_burnMarkTrailsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burnMarkTrailsEnabled"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean screenDisplacementEffectsEnabled
bool GlobalNamespace::MainSettingsModelSO::Config::_get_screenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_screenDisplacementEffectsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenDisplacementEffectsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean screenDisplacementEffectsEnabled
void GlobalNamespace::MainSettingsModelSO::Config::_set_screenDisplacementEffectsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_screenDisplacementEffectsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenDisplacementEffectsEnabled"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomCenterX
float GlobalNamespace::MainSettingsModelSO::Config::_get_roomCenterX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_roomCenterX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single roomCenterX
void GlobalNamespace::MainSettingsModelSO::Config::_set_roomCenterX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_roomCenterX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomCenterY
float GlobalNamespace::MainSettingsModelSO::Config::_get_roomCenterY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_roomCenterY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single roomCenterY
void GlobalNamespace::MainSettingsModelSO::Config::_set_roomCenterY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_roomCenterY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomCenterZ
float GlobalNamespace::MainSettingsModelSO::Config::_get_roomCenterZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_roomCenterZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single roomCenterZ
void GlobalNamespace::MainSettingsModelSO::Config::_set_roomCenterZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_roomCenterZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomRotation
float GlobalNamespace::MainSettingsModelSO::Config::_get_roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single roomRotation
void GlobalNamespace::MainSettingsModelSO::Config::_set_roomRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomRotation"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerPositionX
float GlobalNamespace::MainSettingsModelSO::Config::_get_controllerPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_controllerPositionX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single controllerPositionX
void GlobalNamespace::MainSettingsModelSO::Config::_set_controllerPositionX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_controllerPositionX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerPositionY
float GlobalNamespace::MainSettingsModelSO::Config::_get_controllerPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_controllerPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single controllerPositionY
void GlobalNamespace::MainSettingsModelSO::Config::_set_controllerPositionY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_controllerPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerPositionZ
float GlobalNamespace::MainSettingsModelSO::Config::_get_controllerPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_controllerPositionZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single controllerPositionZ
void GlobalNamespace::MainSettingsModelSO::Config::_set_controllerPositionZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_controllerPositionZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerRotationX
float GlobalNamespace::MainSettingsModelSO::Config::_get_controllerRotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_controllerRotationX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single controllerRotationX
void GlobalNamespace::MainSettingsModelSO::Config::_set_controllerRotationX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_controllerRotationX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerRotationY
float GlobalNamespace::MainSettingsModelSO::Config::_get_controllerRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_controllerRotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single controllerRotationY
void GlobalNamespace::MainSettingsModelSO::Config::_set_controllerRotationY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_controllerRotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerRotationZ
float GlobalNamespace::MainSettingsModelSO::Config::_get_controllerRotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_controllerRotationZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single controllerRotationZ
void GlobalNamespace::MainSettingsModelSO::Config::_set_controllerRotationZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_controllerRotationZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothCameraEnabled
int GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraEnabled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 smoothCameraEnabled
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraEnabled(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraEnabled"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraFieldOfView
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraFieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraFieldOfView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraFieldOfView"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraFieldOfView
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraFieldOfView(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraFieldOfView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraFieldOfView"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonPositionX
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonPositionX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraThirdPersonPositionX
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonPositionX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonPositionX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonPositionY
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraThirdPersonPositionY
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonPositionY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonPositionZ
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonPositionZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraThirdPersonPositionZ
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonPositionZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonPositionZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonEulerAnglesX
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonEulerAnglesX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonEulerAnglesX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraThirdPersonEulerAnglesX
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonEulerAnglesX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonEulerAnglesX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonEulerAnglesY
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonEulerAnglesY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonEulerAnglesY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraThirdPersonEulerAnglesY
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonEulerAnglesY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonEulerAnglesY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonEulerAnglesZ
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonEulerAnglesZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonEulerAnglesZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraThirdPersonEulerAnglesZ
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonEulerAnglesZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonEulerAnglesZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothCameraThirdPersonEnabled
int GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraThirdPersonEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEnabled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 smoothCameraThirdPersonEnabled
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonEnabled(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraThirdPersonEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEnabled"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraRotationSmooth
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraRotationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraRotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraRotationSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraRotationSmooth
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraRotationSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraRotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraRotationSmooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraPositionSmooth
float GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraPositionSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_smoothCameraPositionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraPositionSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single smoothCameraPositionSmooth
void GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraPositionSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_smoothCameraPositionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraPositionSmooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useCustomServerEnvironment
bool GlobalNamespace::MainSettingsModelSO::Config::_get_useCustomServerEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_useCustomServerEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCustomServerEnvironment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean useCustomServerEnvironment
void GlobalNamespace::MainSettingsModelSO::Config::_set_useCustomServerEnvironment(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_useCustomServerEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCustomServerEnvironment"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String customServerHostName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::Config::_get_customServerHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_customServerHostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customServerHostName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String customServerHostName
void GlobalNamespace::MainSettingsModelSO::Config::_set_customServerHostName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_customServerHostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customServerHostName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
float GlobalNamespace::MainSettingsModelSO::Config::_get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single volume
void GlobalNamespace::MainSettingsModelSO::Config::_set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single ambientVolumeScale
float GlobalNamespace::MainSettingsModelSO::Config::_get_ambientVolumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientVolumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single ambientVolumeScale
void GlobalNamespace::MainSettingsModelSO::Config::_set_ambientVolumeScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientVolumeScale"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean controllersRumbleEnabled
bool GlobalNamespace::MainSettingsModelSO::Config::_get_controllersRumbleEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_controllersRumbleEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllersRumbleEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean controllersRumbleEnabled
void GlobalNamespace::MainSettingsModelSO::Config::_set_controllersRumbleEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_controllersRumbleEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllersRumbleEnabled"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 enableAlphaFeatures
int GlobalNamespace::MainSettingsModelSO::Config::_get_enableAlphaFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_enableAlphaFeatures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAlphaFeatures"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 enableAlphaFeatures
void GlobalNamespace::MainSettingsModelSO::Config::_set_enableAlphaFeatures(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_enableAlphaFeatures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAlphaFeatures"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pauseButtonPressDurationLevel
int GlobalNamespace::MainSettingsModelSO::Config::_get_pauseButtonPressDurationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_pauseButtonPressDurationLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseButtonPressDurationLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 pauseButtonPressDurationLevel
void GlobalNamespace::MainSettingsModelSO::Config::_set_pauseButtonPressDurationLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_pauseButtonPressDurationLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseButtonPressDurationLevel"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxShockwaveParticles
int GlobalNamespace::MainSettingsModelSO::Config::_get_maxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_maxShockwaveParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxShockwaveParticles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 maxShockwaveParticles
void GlobalNamespace::MainSettingsModelSO::Config::_set_maxShockwaveParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_maxShockwaveParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxShockwaveParticles"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideAudioLatency
bool GlobalNamespace::MainSettingsModelSO::Config::_get_overrideAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_overrideAudioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideAudioLatency"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean overrideAudioLatency
void GlobalNamespace::MainSettingsModelSO::Config::_set_overrideAudioLatency(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_overrideAudioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideAudioLatency"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioLatency
float GlobalNamespace::MainSettingsModelSO::Config::_get_audioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_audioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLatency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single audioLatency
void GlobalNamespace::MainSettingsModelSO::Config::_set_audioLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_audioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLatency"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxNumberOfCutSoundEffects
int GlobalNamespace::MainSettingsModelSO::Config::_get_maxNumberOfCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_maxNumberOfCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNumberOfCutSoundEffects"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 maxNumberOfCutSoundEffects
void GlobalNamespace::MainSettingsModelSO::Config::_set_maxNumberOfCutSoundEffects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_maxNumberOfCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNumberOfCutSoundEffects"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean onlineServicesEnabled
bool GlobalNamespace::MainSettingsModelSO::Config::_get_onlineServicesEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_onlineServicesEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlineServicesEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean onlineServicesEnabled
void GlobalNamespace::MainSettingsModelSO::Config::_set_onlineServicesEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_onlineServicesEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlineServicesEnabled"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean oculusMRCEnabled
bool GlobalNamespace::MainSettingsModelSO::Config::_get_oculusMRCEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_oculusMRCEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusMRCEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean oculusMRCEnabled
void GlobalNamespace::MainSettingsModelSO::Config::_set_oculusMRCEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_oculusMRCEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusMRCEnabled"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean openVrThreadedHaptics
bool GlobalNamespace::MainSettingsModelSO::Config::_get_openVrThreadedHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_openVrThreadedHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "openVrThreadedHaptics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean openVrThreadedHaptics
void GlobalNamespace::MainSettingsModelSO::Config::_set_openVrThreadedHaptics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_openVrThreadedHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "openVrThreadedHaptics"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String language
::Il2CppString* GlobalNamespace::MainSettingsModelSO::Config::_get_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_get_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String language
void GlobalNamespace::MainSettingsModelSO::Config::_set_language(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Config::_set_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets/Preset
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MirrorRendererGraphicsSettingsPresets/Preset[] _presets
::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>* GlobalNamespace::MirrorRendererGraphicsSettingsPresets::_get__presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::_get__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MirrorRendererGraphicsSettingsPresets/Preset[] _presets
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::_set__presets(::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::_set__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MirrorRendererGraphicsSettingsPresets.get_presets
::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>* GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_presets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererGraphicsSettingsPresets.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_namedPresets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererGraphicsSettingsPresets/Preset
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType mirrorType
GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_mirrorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_mirrorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorType"))->offset;
  return *reinterpret_cast<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType mirrorType
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_mirrorType(GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_mirrorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorType"))->offset;
  *reinterpret_cast<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask reflectLayers
UnityEngine::LayerMask GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_reflectLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_reflectLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reflectLayers"))->offset;
  return *reinterpret_cast<UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.LayerMask reflectLayers
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_reflectLayers(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_reflectLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reflectLayers"))->offset;
  *reinterpret_cast<UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stereoTextureWidth
int GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_stereoTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_stereoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 stereoTextureWidth
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_stereoTextureWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_stereoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoTextureWidth"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stereoTextureHeight
int GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_stereoTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_stereoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoTextureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 stereoTextureHeight
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_stereoTextureHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_stereoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoTextureHeight"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 monoTextureWidth
int GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_monoTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_monoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 monoTextureWidth
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_monoTextureWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_monoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoTextureWidth"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 monoTextureHeight
int GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_monoTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_monoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoTextureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 monoTextureHeight
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_monoTextureHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_monoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoTextureHeight"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxAntiAliasing
int GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_maxAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_maxAntiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAntiAliasing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 maxAntiAliasing
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_maxAntiAliasing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_maxAntiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAntiAliasing"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableBloomPrePassFog
bool GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_enableBloomPrePassFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_get_enableBloomPrePassFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableBloomPrePassFog"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean enableBloomPrePassFog
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_enableBloomPrePassFog(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::_set_enableBloomPrePassFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableBloomPrePassFog"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererGraphicsSettingsPresets/Preset/MirrorType
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType None
GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType>("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType None
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_None(GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType FakeMirror
GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_FakeMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_FakeMirror");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType>("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "FakeMirror"));
}
// Autogenerated static field setter
// Set static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType FakeMirror
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_FakeMirror(GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_FakeMirror");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "FakeMirror", value));
}
// Autogenerated static field getter
// Get static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType RenderedMirror
GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_RenderedMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_RenderedMirror");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType>("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "RenderedMirror"));
}
// Autogenerated static field setter
// Set static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType RenderedMirror
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_RenderedMirror(GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_RenderedMirror");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "RenderedMirror", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _presetNameLocalizationKey
::Il2CppString* GlobalNamespace::NamedPreset::_get__presetNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedPreset::_get__presetNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presetNameLocalizationKey"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _presetNameLocalizationKey
void GlobalNamespace::NamedPreset::_set__presetNameLocalizationKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedPreset::_set__presetNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presetNameLocalizationKey"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: NamedPreset.get_presetNameLocalizationKey
::Il2CppString* GlobalNamespace::NamedPreset::get_presetNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedPreset::get_presetNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_presetNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedPresetsSO
#include "GlobalNamespace/NamedPresetsSO.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::NamedPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedPresetsSO::get_namedPresets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuLightsPresetSO/LightIdColorPair
#include "GlobalNamespace/MenuLightsPresetSO_LightIdColorPair.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _playersPlaceNeonsColor
GlobalNamespace::ColorSO* GlobalNamespace::MenuLightsPresetSO::_get__playersPlaceNeonsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::_get__playersPlaceNeonsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersPlaceNeonsColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _playersPlaceNeonsColor
void GlobalNamespace::MenuLightsPresetSO::_set__playersPlaceNeonsColor(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::_set__playersPlaceNeonsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersPlaceNeonsColor"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _playersPlaceNeonsIntensity
float GlobalNamespace::MenuLightsPresetSO::_get__playersPlaceNeonsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::_get__playersPlaceNeonsIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersPlaceNeonsIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _playersPlaceNeonsIntensity
void GlobalNamespace::MenuLightsPresetSO::_set__playersPlaceNeonsIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::_set__playersPlaceNeonsIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersPlaceNeonsIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO/LightIdColorPair[] _lightIdColorPairs
::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>* GlobalNamespace::MenuLightsPresetSO::_get__lightIdColorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::_get__lightIdColorPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIdColorPairs"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MenuLightsPresetSO/LightIdColorPair[] _lightIdColorPairs
void GlobalNamespace::MenuLightsPresetSO::_set__lightIdColorPairs(::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::_set__lightIdColorPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIdColorPairs"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MenuLightsPresetSO.get_playersPlaceNeonsColor
GlobalNamespace::ColorSO* GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersPlaceNeonsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSO*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsPresetSO.get_playersPlaceNeonsIntensity
float GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersPlaceNeonsIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsPresetSO.get_lightIdColorPairs
::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>* GlobalNamespace::MenuLightsPresetSO::get_lightIdColorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_lightIdColorPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightIdColorPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuLightsPresetSO/LightIdColorPair
#include "GlobalNamespace/MenuLightsPresetSO_LightIdColorPair.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 lightId
int GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_get_lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_get_lightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 lightId
void GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_set_lightId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_set_lightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightId"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public ColorSO baseColor
GlobalNamespace::ColorSO* GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_get_baseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_get_baseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public ColorSO baseColor
void GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_set_baseColor(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_set_baseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseColor"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
float GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_get_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_get_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single intensity
void GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_set_intensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::_set_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MenuLightsPresetSO/LightIdColorPair.get_lightColor
UnityEngine::Color GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::get_lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::get_lightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly LevelCompletionResults levelCompletionResults
GlobalNamespace::LevelCompletionResults* GlobalNamespace::MissionCompletionResults::_get_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionCompletionResults::_get_levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly LevelCompletionResults levelCompletionResults
void GlobalNamespace::MissionCompletionResults::_set_levelCompletionResults(GlobalNamespace::LevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionCompletionResults::_set_levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCompletionResults"))->offset;
  *reinterpret_cast<GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly MissionObjectiveResult[] missionObjectiveResults
::Array<GlobalNamespace::MissionObjectiveResult*>* GlobalNamespace::MissionCompletionResults::_get_missionObjectiveResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionCompletionResults::_get_missionObjectiveResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionObjectiveResults"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MissionObjectiveResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly MissionObjectiveResult[] missionObjectiveResults
void GlobalNamespace::MissionCompletionResults::_set_missionObjectiveResults(::Array<GlobalNamespace::MissionObjectiveResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionCompletionResults::_set_missionObjectiveResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionObjectiveResults"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MissionObjectiveResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionCompletionResults.get_IsMissionComplete
bool GlobalNamespace::MissionCompletionResults::get_IsMissionComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionCompletionResults::get_IsMissionComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMissionComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerDataModel _playerDataModel
GlobalNamespace::PlayerDataModel* GlobalNamespace::CampaignProgressModel::_get__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_get__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PlayerDataModel _playerDataModel
void GlobalNamespace::CampaignProgressModel::_set__playerDataModel(GlobalNamespace::PlayerDataModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_set__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _missionIds
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::CampaignProgressModel::_get__missionIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_get__missionIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionIds"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.HashSet`1<System.String> _missionIds
void GlobalNamespace::CampaignProgressModel::_set__missionIds(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_set__missionIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionIds"))->offset;
  *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _finalMissionId
::Il2CppString* GlobalNamespace::CampaignProgressModel::_get__finalMissionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_get__finalMissionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalMissionId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _finalMissionId
void GlobalNamespace::CampaignProgressModel::_set__finalMissionId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_set__finalMissionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalMissionId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _numberOfClearedMissionsDirty
bool GlobalNamespace::CampaignProgressModel::_get__numberOfClearedMissionsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_get__numberOfClearedMissionsDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfClearedMissionsDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _numberOfClearedMissionsDirty
void GlobalNamespace::CampaignProgressModel::_set__numberOfClearedMissionsDirty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_set__numberOfClearedMissionsDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfClearedMissionsDirty"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::_get__numberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_get__numberOfClearedMissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfClearedMissions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _numberOfClearedMissions
void GlobalNamespace::CampaignProgressModel::_set__numberOfClearedMissions(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::_set__numberOfClearedMissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfClearedMissions"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CampaignProgressModel.get_numberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::get_numberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::get_numberOfClearedMissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfClearedMissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CampaignProgressModel.Awake
void GlobalNamespace::CampaignProgressModel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CampaignProgressModel.IsMissionRegistered
bool GlobalNamespace::CampaignProgressModel::IsMissionRegistered(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMissionRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.RegisterMissionId
void GlobalNamespace::CampaignProgressModel::RegisterMissionId(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::RegisterMissionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterMissionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.IsMissionCleared
bool GlobalNamespace::CampaignProgressModel::IsMissionCleared(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMissionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.IsMissionFinal
bool GlobalNamespace::CampaignProgressModel::IsMissionFinal(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMissionFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.SetFinalMissionId
void GlobalNamespace::CampaignProgressModel::SetFinalMissionId(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::SetFinalMissionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFinalMissionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.WillFinishGameAfterThisMission
bool GlobalNamespace::CampaignProgressModel::WillFinishGameAfterThisMission(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::WillFinishGameAfterThisMission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillFinishGameAfterThisMission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.SetMissionCleared
void GlobalNamespace::CampaignProgressModel::SetMissionCleared(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMissionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.__SetMissionCleared
void GlobalNamespace::CampaignProgressModel::__SetMissionCleared(::Il2CppString* missionId, bool cleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::__SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetMissionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId), ::il2cpp_utils::ExtractType(cleared)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId, cleared);
}
// Autogenerated method: CampaignProgressModel.UpdateNumberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::UpdateNumberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::UpdateNumberOfClearedMissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNumberOfClearedMissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DistanceObjectiveValueFormatterSO
#include "GlobalNamespace/DistanceObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DistanceObjectiveValueFormatterSO.FormatValue
::Il2CppString* GlobalNamespace::DistanceObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DistanceObjectiveValueFormatterSO::FormatValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionDataSO
#include "GlobalNamespace/MissionDataSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _level
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::MissionDataSO::_get__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_get__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelSO _level
void GlobalNamespace::MissionDataSO::_set__level(GlobalNamespace::BeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_set__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MissionDataSO::_get__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_get__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
void GlobalNamespace::MissionDataSO::_set__beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_set__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::MissionDataSO::_get__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_get__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficulty _beatmapDifficulty
void GlobalNamespace::MissionDataSO::_set__beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_set__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjective[] _missionObjectives
::Array<GlobalNamespace::MissionObjective*>* GlobalNamespace::MissionDataSO::_get__missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_get__missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectives"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MissionObjective*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjective[] _missionObjectives
void GlobalNamespace::MissionDataSO::_set__missionObjectives(::Array<GlobalNamespace::MissionObjective*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_set__missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectives"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MissionObjective*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::MissionDataSO::_get__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_get__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameplayModifiers _gameplayModifiers
void GlobalNamespace::MissionDataSO::_set__gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_set__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionHelpSO _missionHelp
GlobalNamespace::MissionHelpSO* GlobalNamespace::MissionDataSO::_get__missionHelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_get__missionHelp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelp"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionHelpSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionHelpSO _missionHelp
void GlobalNamespace::MissionDataSO::_set__missionHelp(GlobalNamespace::MissionHelpSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::_set__missionHelp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelp"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionHelpSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionDataSO.get_missionObjectives
::Array<GlobalNamespace::MissionObjective*>* GlobalNamespace::MissionDataSO::get_missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_missionObjectives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionObjectives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MissionObjective*>*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_level
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::MissionDataSO::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MissionDataSO::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::MissionDataSO::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::MissionDataSO::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_missionHelp
GlobalNamespace::MissionHelpSO* GlobalNamespace::MissionDataSO::get_missionHelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_missionHelp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionHelp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionHelpSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.OnValidate
void GlobalNamespace::MissionDataSO::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _missionHelpId
::Il2CppString* GlobalNamespace::MissionHelpSO::_get__missionHelpId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpSO::_get__missionHelpId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelpId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _missionHelpId
void GlobalNamespace::MissionHelpSO::_set__missionHelpId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpSO::_set__missionHelpId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelpId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionHelpSO.get_missionHelpId
::Il2CppString* GlobalNamespace::MissionHelpSO::get_missionHelpId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpSO::get_missionHelpId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionHelpId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: MissionObjectiveTypeSO
#include "GlobalNamespace/MissionObjectiveTypeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveTypeSO _type
GlobalNamespace::MissionObjectiveTypeSO* GlobalNamespace::MissionObjective::_get__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::_get__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveTypeSO _type
void GlobalNamespace::MissionObjective::_set__type(GlobalNamespace::MissionObjectiveTypeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::_set__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjective/ReferenceValueComparisonType _referenceValueComparisonType
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::_get__referenceValueComparisonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::_get__referenceValueComparisonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceValueComparisonType"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjective::ReferenceValueComparisonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjective/ReferenceValueComparisonType _referenceValueComparisonType
void GlobalNamespace::MissionObjective::_set__referenceValueComparisonType(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::_set__referenceValueComparisonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceValueComparisonType"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjective::ReferenceValueComparisonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _referenceValue
int GlobalNamespace::MissionObjective::_get__referenceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::_get__referenceValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _referenceValue
void GlobalNamespace::MissionObjective::_set__referenceValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::_set__referenceValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceValue"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionObjective.get_type
GlobalNamespace::MissionObjectiveTypeSO* GlobalNamespace::MissionObjective::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionObjectiveTypeSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.get_referenceValueComparisonType
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::get_referenceValueComparisonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_referenceValueComparisonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceValueComparisonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionObjective::ReferenceValueComparisonType, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.get_referenceValue
int GlobalNamespace::MissionObjective::get_referenceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_referenceValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.Equals
bool GlobalNamespace::MissionObjective::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: MissionObjective.GetHashCode
int GlobalNamespace::MissionObjective::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.op_Equality
bool GlobalNamespace::operator ==(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionObjective", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj1), ::il2cpp_utils::ExtractType(&obj2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, &obj2);
}
// Autogenerated method: MissionObjective.op_Inequality
bool GlobalNamespace::operator !=(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionObjective", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj1), ::il2cpp_utils::ExtractType(&obj2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, &obj2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjective/ReferenceValueComparisonType
#include "GlobalNamespace/MissionObjective.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType None
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType None
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_None(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Equal
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Equal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Equal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Equal"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Equal
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Equal(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Equal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Equal", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Max
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Max"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Max
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Max(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Max", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Min
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Min"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Min
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Min(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Min", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionDataExtensions
#include "GlobalNamespace/MissionDataExtensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionDataExtensions.Name
::Il2CppString* GlobalNamespace::MissionDataExtensions::Name(GlobalNamespace::MissionObjective::ReferenceValueComparisonType comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataExtensions::Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionDataExtensions", "Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, comparisonType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionObjective <missionObjective>k__BackingField
GlobalNamespace::MissionObjective* GlobalNamespace::MissionObjectiveResult::_get_$missionObjective$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::_get_$missionObjective$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missionObjective>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjective**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjective <missionObjective>k__BackingField
void GlobalNamespace::MissionObjectiveResult::_set_$missionObjective$k__BackingField(GlobalNamespace::MissionObjective* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::_set_$missionObjective$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missionObjective>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjective**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <cleared>k__BackingField
bool GlobalNamespace::MissionObjectiveResult::_get_$cleared$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::_get_$cleared$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cleared>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <cleared>k__BackingField
void GlobalNamespace::MissionObjectiveResult::_set_$cleared$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::_set_$cleared$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cleared>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <value>k__BackingField
int GlobalNamespace::MissionObjectiveResult::_get_$value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::_get_$value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <value>k__BackingField
void GlobalNamespace::MissionObjectiveResult::_set_$value$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::_set_$value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionObjectiveResult.get_missionObjective
GlobalNamespace::MissionObjective* GlobalNamespace::MissionObjectiveResult::get_missionObjective() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::get_missionObjective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionObjective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionObjective*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_missionObjective
void GlobalNamespace::MissionObjectiveResult::set_missionObjective(GlobalNamespace::MissionObjective* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::set_missionObjective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missionObjective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionObjectiveResult.get_cleared
bool GlobalNamespace::MissionObjectiveResult::get_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::get_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_cleared
void GlobalNamespace::MissionObjectiveResult::set_cleared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::set_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionObjectiveResult.get_value
int GlobalNamespace::MissionObjectiveResult::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_value
void GlobalNamespace::MissionObjectiveResult::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionObjectiveTypeSO
#include "GlobalNamespace/MissionObjectiveTypeSO.hpp"
// Including type: ObjectiveValueFormatterSO
#include "GlobalNamespace/ObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _objectiveName
::Il2CppString* GlobalNamespace::MissionObjectiveTypeSO::_get__objectiveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::_get__objectiveName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectiveName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _objectiveName
void GlobalNamespace::MissionObjectiveTypeSO::_set__objectiveName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::_set__objectiveName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectiveName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _noConditionValue
bool GlobalNamespace::MissionObjectiveTypeSO::_get__noConditionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::_get__noConditionValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noConditionValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _noConditionValue
void GlobalNamespace::MissionObjectiveTypeSO::_set__noConditionValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::_set__noConditionValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noConditionValue"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ObjectiveValueFormatterSO _objectiveValueFormater
GlobalNamespace::ObjectiveValueFormatterSO* GlobalNamespace::MissionObjectiveTypeSO::_get__objectiveValueFormater() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::_get__objectiveValueFormater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectiveValueFormater"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObjectiveValueFormatterSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ObjectiveValueFormatterSO _objectiveValueFormater
void GlobalNamespace::MissionObjectiveTypeSO::_set__objectiveValueFormater(GlobalNamespace::ObjectiveValueFormatterSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::_set__objectiveValueFormater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectiveValueFormater"))->offset;
  *reinterpret_cast<GlobalNamespace::ObjectiveValueFormatterSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveName
::Il2CppString* GlobalNamespace::MissionObjectiveTypeSO::get_objectiveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::get_objectiveName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectiveName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveNameLocalized
::Il2CppString* GlobalNamespace::MissionObjectiveTypeSO::get_objectiveNameLocalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::get_objectiveNameLocalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectiveNameLocalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_noConditionValue
bool GlobalNamespace::MissionObjectiveTypeSO::get_noConditionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::get_noConditionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noConditionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveValueFormater
GlobalNamespace::ObjectiveValueFormatterSO* GlobalNamespace::MissionObjectiveTypeSO::get_objectiveValueFormater() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::get_objectiveValueFormater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectiveValueFormater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObjectiveValueFormatterSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _minimumMissionsToUnlock
int GlobalNamespace::MissionStage::_get__minimumMissionsToUnlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStage::_get__minimumMissionsToUnlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumMissionsToUnlock"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _minimumMissionsToUnlock
void GlobalNamespace::MissionStage::_set__minimumMissionsToUnlock(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStage::_set__minimumMissionsToUnlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumMissionsToUnlock"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
UnityEngine::RectTransform* GlobalNamespace::MissionStage::_get__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStage::_get__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _rectTransform
void GlobalNamespace::MissionStage::_set__rectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStage::_set__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionStage.get_minimumMissionsToUnlock
int GlobalNamespace::MissionStage::get_minimumMissionsToUnlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStage::get_minimumMissionsToUnlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minimumMissionsToUnlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionStage.get_position
UnityEngine::Vector2 GlobalNamespace::MissionStage::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStage::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObjectiveValueFormatterSO
#include "GlobalNamespace/ObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObjectiveValueFormatterSO.FormatValue
::Il2CppString* GlobalNamespace::ObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObjectiveValueFormatterSO::FormatValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScoreObjectiveValueFormatterSO
#include "GlobalNamespace/ScoreObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ScoreObjectiveValueFormatterSO.FormatValue
::Il2CppString* GlobalNamespace::ScoreObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreObjectiveValueFormatterSO::FormatValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMasterServerAvailabilityModel
#include "GlobalNamespace/IMasterServerAvailabilityModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMasterServerAvailabilityModel.GetAvailabilityAsync
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::IMasterServerAvailabilityModel::GetAvailabilityAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMasterServerAvailabilityModel::GetAvailabilityAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMasterServerQuickPlaySetupModel
#include "GlobalNamespace/IMasterServerQuickPlaySetupModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServerQuickPlaySetupData
#include "GlobalNamespace/MasterServerQuickPlaySetupData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMasterServerQuickPlaySetupModel.GetQuickPlaySetupAsync
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>* GlobalNamespace::IMasterServerQuickPlaySetupModel::GetQuickPlaySetupAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMasterServerQuickPlaySetupModel::GetQuickPlaySetupAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuickPlaySetupAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: MasterServerAvailabilityData/UserMessage
#include "GlobalNamespace/MasterServerAvailabilityData_UserMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String minimumAppVersion
::Il2CppString* GlobalNamespace::MasterServerAvailabilityData::_get_minimumAppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_get_minimumAppVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumAppVersion"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String minimumAppVersion
void GlobalNamespace::MasterServerAvailabilityData::_set_minimumAppVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_set_minimumAppVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumAppVersion"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServerAvailabilityData/AvailabilityStatus status
GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus GlobalNamespace::MasterServerAvailabilityData::_get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_get_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServerAvailabilityData/AvailabilityStatus status
void GlobalNamespace::MasterServerAvailabilityData::_set_status(GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_set_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  *reinterpret_cast<GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 maintenanceStartTime
int64_t GlobalNamespace::MasterServerAvailabilityData::_get_maintenanceStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_get_maintenanceStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintenanceStartTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int64 maintenanceStartTime
void GlobalNamespace::MasterServerAvailabilityData::_set_maintenanceStartTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_set_maintenanceStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintenanceStartTime"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 maintenanceEndTime
int64_t GlobalNamespace::MasterServerAvailabilityData::_get_maintenanceEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_get_maintenanceEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintenanceEndTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int64 maintenanceEndTime
void GlobalNamespace::MasterServerAvailabilityData::_set_maintenanceEndTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_set_maintenanceEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintenanceEndTime"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServerAvailabilityData/UserMessage userMessage
GlobalNamespace::MasterServerAvailabilityData::UserMessage* GlobalNamespace::MasterServerAvailabilityData::_get_userMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_get_userMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userMessage"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerAvailabilityData::UserMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServerAvailabilityData/UserMessage userMessage
void GlobalNamespace::MasterServerAvailabilityData::_set_userMessage(GlobalNamespace::MasterServerAvailabilityData::UserMessage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::_set_userMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userMessage"))->offset;
  *reinterpret_cast<GlobalNamespace::MasterServerAvailabilityData::UserMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerAvailabilityData/AvailabilityStatus
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServerAvailabilityData/AvailabilityStatus Online
GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus>("", "MasterServerAvailabilityData/AvailabilityStatus", "Online"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerAvailabilityData/AvailabilityStatus Online
void GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_Online(GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityData/AvailabilityStatus", "Online", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerAvailabilityData/AvailabilityStatus MaintenanceUpcoming
GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_MaintenanceUpcoming() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_MaintenanceUpcoming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus>("", "MasterServerAvailabilityData/AvailabilityStatus", "MaintenanceUpcoming"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerAvailabilityData/AvailabilityStatus MaintenanceUpcoming
void GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_MaintenanceUpcoming(GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_MaintenanceUpcoming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityData/AvailabilityStatus", "MaintenanceUpcoming", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerAvailabilityData/AvailabilityStatus Offline
GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus>("", "MasterServerAvailabilityData/AvailabilityStatus", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerAvailabilityData/AvailabilityStatus Offline
void GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_Offline(GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityData/AvailabilityStatus", "Offline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerAvailabilityData/UserMessage
#include "GlobalNamespace/MasterServerAvailabilityData_UserMessage.hpp"
// Including type: MasterServerAvailabilityData/UserMessage/LocalizedMessage
#include "GlobalNamespace/MasterServerAvailabilityData_UserMessage_LocalizedMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServerAvailabilityData/UserMessage/LocalizedMessage[] localizations
::Array<GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage*>* GlobalNamespace::MasterServerAvailabilityData::UserMessage::_get_localizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::UserMessage::_get_localizations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizations"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServerAvailabilityData/UserMessage/LocalizedMessage[] localizations
void GlobalNamespace::MasterServerAvailabilityData::UserMessage::_set_localizations(::Array<GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::UserMessage::_set_localizations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizations"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerAvailabilityData/UserMessage/LocalizedMessage
#include "GlobalNamespace/MasterServerAvailabilityData_UserMessage_LocalizedMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String language
::Il2CppString* GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage::_get_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage::_get_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String language
void GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage::_set_language(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage::_set_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String message
::Il2CppString* GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage::_get_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String message
void GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage::_set_message(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::UserMessage::LocalizedMessage::_set_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerAvailabilityModel
#include "GlobalNamespace/MasterServerAvailabilityModel.hpp"
// Including type: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__10
#include "GlobalNamespace/MasterServerAvailabilityModel_-GetAvailabilityAsyncInternal-d__10.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kRequestCacheTimeHours
float GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestCacheTimeHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestCacheTimeHours");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MasterServerAvailabilityModel", "kRequestCacheTimeHours"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRequestCacheTimeHours
void GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestCacheTimeHours(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestCacheTimeHours");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityModel", "kRequestCacheTimeHours", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestTimeoutSeconds
int GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestTimeoutSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestTimeoutSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MasterServerAvailabilityModel", "kRequestTimeoutSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestTimeoutSeconds
void GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestTimeoutSeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestTimeoutSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityModel", "kRequestTimeoutSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
GlobalNamespace::INetworkConfig* GlobalNamespace::MasterServerAvailabilityModel::_get__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_get__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly INetworkConfig _networkConfig
void GlobalNamespace::MasterServerAvailabilityModel::_set__networkConfig(GlobalNamespace::INetworkConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_set__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  *reinterpret_cast<GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpClient _client
System::Net::Http::HttpClient* GlobalNamespace::MasterServerAvailabilityModel::_get__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_get__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Net.Http.HttpClient _client
void GlobalNamespace::MasterServerAvailabilityModel::_set__client(System::Net::Http::HttpClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_set__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  *reinterpret_cast<System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<MasterServerAvailabilityData> _request
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::MasterServerAvailabilityModel::_get__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_get__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task`1<MasterServerAvailabilityData> _request
void GlobalNamespace::MasterServerAvailabilityModel::_set__request(System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_set__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _lastRequestTime
System::DateTime GlobalNamespace::MasterServerAvailabilityModel::_get__lastRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_get__lastRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRequestTime"))->offset;
  return *reinterpret_cast<System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.DateTime _lastRequestTime
void GlobalNamespace::MasterServerAvailabilityModel::_set__lastRequestTime(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_set__lastRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRequestTime"))->offset;
  *reinterpret_cast<System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServerAvailabilityModel.Init
void GlobalNamespace::MasterServerAvailabilityModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel.GetAvailabilityAsync
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: MasterServerAvailabilityModel.IsAvailabilityTaskValid
bool GlobalNamespace::MasterServerAvailabilityModel::IsAvailabilityTaskValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::IsAvailabilityTaskValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAvailabilityTaskValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel.StartRequest
void GlobalNamespace::MasterServerAvailabilityModel::StartRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::StartRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel.GetAvailabilityAsyncInternal
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsyncInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAvailabilityAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__10
#include "GlobalNamespace/MasterServerAvailabilityModel_-GetAvailabilityAsyncInternal-d__10.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MasterServerAvailabilityData> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::MasterServerAvailabilityData*> GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::MasterServerAvailabilityData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MasterServerAvailabilityData> <>t__builder
void GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::MasterServerAvailabilityData*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::MasterServerAvailabilityData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServerAvailabilityModel <>4__this
GlobalNamespace::MasterServerAvailabilityModel* GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerAvailabilityModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServerAvailabilityModel <>4__this
void GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_set_$$4__this(GlobalNamespace::MasterServerAvailabilityModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::MasterServerAvailabilityModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*> GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
void GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__10.MoveNext
void GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__10.SetStateMachine
void GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerQuickPlaySetupModel
#include "GlobalNamespace/MasterServerQuickPlaySetupModel.hpp"
// Including type: MasterServerQuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10
#include "GlobalNamespace/MasterServerQuickPlaySetupModel_-GetQuickPlaySetupInternal-d__10.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServerQuickPlaySetupData
#include "GlobalNamespace/MasterServerQuickPlaySetupData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kRequestCacheTimeoutHours
float GlobalNamespace::MasterServerQuickPlaySetupModel::_get_kRequestCacheTimeoutHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_get_kRequestCacheTimeoutHours");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MasterServerQuickPlaySetupModel", "kRequestCacheTimeoutHours"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRequestCacheTimeoutHours
void GlobalNamespace::MasterServerQuickPlaySetupModel::_set_kRequestCacheTimeoutHours(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_set_kRequestCacheTimeoutHours");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerQuickPlaySetupModel", "kRequestCacheTimeoutHours", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestTimeoutSeconds
int GlobalNamespace::MasterServerQuickPlaySetupModel::_get_kRequestTimeoutSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_get_kRequestTimeoutSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MasterServerQuickPlaySetupModel", "kRequestTimeoutSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestTimeoutSeconds
void GlobalNamespace::MasterServerQuickPlaySetupModel::_set_kRequestTimeoutSeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_set_kRequestTimeoutSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerQuickPlaySetupModel", "kRequestTimeoutSeconds", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kQuickPlayOverrideSetupJson
::Il2CppString* GlobalNamespace::MasterServerQuickPlaySetupModel::_get_kQuickPlayOverrideSetupJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_get_kQuickPlayOverrideSetupJson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MasterServerQuickPlaySetupModel", "kQuickPlayOverrideSetupJson"));
}
// Autogenerated static field setter
// Set static field: static private System.String kQuickPlayOverrideSetupJson
void GlobalNamespace::MasterServerQuickPlaySetupModel::_set_kQuickPlayOverrideSetupJson(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_set_kQuickPlayOverrideSetupJson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerQuickPlaySetupModel", "kQuickPlayOverrideSetupJson", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
GlobalNamespace::INetworkConfig* GlobalNamespace::MasterServerQuickPlaySetupModel::_get__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_get__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly INetworkConfig _networkConfig
void GlobalNamespace::MasterServerQuickPlaySetupModel::_set__networkConfig(GlobalNamespace::INetworkConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_set__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  *reinterpret_cast<GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.HttpClient _client
System::Net::Http::HttpClient* GlobalNamespace::MasterServerQuickPlaySetupModel::_get__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_get__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Net.Http.HttpClient _client
void GlobalNamespace::MasterServerQuickPlaySetupModel::_set__client(System::Net::Http::HttpClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_set__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  *reinterpret_cast<System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<MasterServerQuickPlaySetupData> _request
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>* GlobalNamespace::MasterServerQuickPlaySetupModel::_get__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_get__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task`1<MasterServerQuickPlaySetupData> _request
void GlobalNamespace::MasterServerQuickPlaySetupModel::_set__request(System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_set__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _lastRequestTime
System::DateTime GlobalNamespace::MasterServerQuickPlaySetupModel::_get__lastRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_get__lastRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRequestTime"))->offset;
  return *reinterpret_cast<System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.DateTime _lastRequestTime
void GlobalNamespace::MasterServerQuickPlaySetupModel::_set__lastRequestTime(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::_set__lastRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRequestTime"))->offset;
  *reinterpret_cast<System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServerQuickPlaySetupModel.GetQuickPlaySetupAsync
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>* GlobalNamespace::MasterServerQuickPlaySetupModel::GetQuickPlaySetupAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::GetQuickPlaySetupAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuickPlaySetupAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: MasterServerQuickPlaySetupModel.Init
void GlobalNamespace::MasterServerQuickPlaySetupModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerQuickPlaySetupModel.StartRequest
void GlobalNamespace::MasterServerQuickPlaySetupModel::StartRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::StartRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerQuickPlaySetupModel.GetQuickPlaySetupInternal
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>* GlobalNamespace::MasterServerQuickPlaySetupModel::GetQuickPlaySetupInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::GetQuickPlaySetupInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuickPlaySetupInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerQuickPlaySetupData*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerQuickPlaySetupModel.IsQuickPlaySetupTaskValid
bool GlobalNamespace::MasterServerQuickPlaySetupModel::IsQuickPlaySetupTaskValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::IsQuickPlaySetupTaskValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsQuickPlaySetupTaskValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerQuickPlaySetupModel.IsUrlValid
bool GlobalNamespace::MasterServerQuickPlaySetupModel::IsUrlValid(::Il2CppString* url) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::IsUrlValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUrlValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, url);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerQuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10
#include "GlobalNamespace/MasterServerQuickPlaySetupModel_-GetQuickPlaySetupInternal-d__10.hpp"
// Including type: MasterServerQuickPlaySetupData
#include "GlobalNamespace/MasterServerQuickPlaySetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MasterServerQuickPlaySetupData> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::MasterServerQuickPlaySetupData*> GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::MasterServerQuickPlaySetupData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MasterServerQuickPlaySetupData> <>t__builder
void GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::MasterServerQuickPlaySetupData*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::MasterServerQuickPlaySetupData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServerQuickPlaySetupModel <>4__this
GlobalNamespace::MasterServerQuickPlaySetupModel* GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerQuickPlaySetupModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServerQuickPlaySetupModel <>4__this
void GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_set_$$4__this(GlobalNamespace::MasterServerQuickPlaySetupModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::MasterServerQuickPlaySetupModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*> GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
void GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServerQuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10.MoveNext
void GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServerQuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10.SetStateMachine
void GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerQuickPlaySetupData
#include "GlobalNamespace/MasterServerQuickPlaySetupData.hpp"
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride quickPlayAvailablePacksOverride
GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride* GlobalNamespace::MasterServerQuickPlaySetupData::_get_quickPlayAvailablePacksOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::_get_quickPlayAvailablePacksOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayAvailablePacksOverride"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride quickPlayAvailablePacksOverride
void GlobalNamespace::MasterServerQuickPlaySetupData::_set_quickPlayAvailablePacksOverride(GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::_set_quickPlayAvailablePacksOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayAvailablePacksOverride"))->offset;
  *reinterpret_cast<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServerQuickPlaySetupData.get_hasOverride
bool GlobalNamespace::MasterServerQuickPlaySetupData::get_hasOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::get_hasOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride.hpp"
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPack.hpp"
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride_PredefinedPack.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack> predefinedPackIds
System::Collections::Generic::List_1<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack*>* GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::_get_predefinedPackIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::_get_predefinedPackIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "predefinedPackIds"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.List`1<MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack> predefinedPackIds
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::_set_predefinedPackIds(System::Collections::Generic::List_1<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::_set_predefinedPackIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "predefinedPackIds"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack> localizedCustomPacks
System::Collections::Generic::List_1<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*>* GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::_get_localizedCustomPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::_get_localizedCustomPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedCustomPacks"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.List`1<MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack> localizedCustomPacks
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::_set_localizedCustomPacks(System::Collections::Generic::List_1<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::_set_localizedCustomPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedCustomPacks"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String language
::Il2CppString* GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::_get_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::_get_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String language
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::_set_language(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::_set_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String packName
::Il2CppString* GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::_get_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::_get_packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String packName
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::_set_packName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::_set_packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPack.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serializedName
::Il2CppString* GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_get_serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String serializedName
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_set_serializedName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_set_serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
int GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_get_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 order
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_set_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName[] localizedNames
::Array<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*>* GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_get_localizedNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_get_localizedNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedNames"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName[] localizedNames
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_set_localizedNames(::Array<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_set_localizedNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedNames"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> packIds
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_get_packIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_get_packIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packIds"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.List`1<System.String> packIds
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_set_packIds(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::_set_packIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packIds"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerQuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack
#include "GlobalNamespace/MasterServerQuickPlaySetupData_QuickPlaySongPacksOverride_PredefinedPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
int GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::_get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::_get_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 order
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::_set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::_set_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
::Il2CppString* GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::_get_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::_get_packId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String packId
void GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::_set_packId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerQuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::_set_packId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
