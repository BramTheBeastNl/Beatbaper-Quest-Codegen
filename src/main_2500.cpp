// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.SequencedChannel
#include "LiteNetLib/SequencedChannel.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _localSequence
int& LiteNetLib::SequencedChannel::dyn__localSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::dyn__localSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localSequence"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _remoteSequence
uint16_t& LiteNetLib::SequencedChannel::dyn__remoteSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::dyn__remoteSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remoteSequence"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _reliable
bool& LiteNetLib::SequencedChannel::dyn__reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::dyn__reliable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reliable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.NetPacket _lastPacket
LiteNetLib::NetPacket*& LiteNetLib::SequencedChannel::dyn__lastPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::dyn__lastPacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPacket"))->offset;
  return *reinterpret_cast<LiteNetLib::NetPacket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.NetPacket _ackPacket
LiteNetLib::NetPacket*& LiteNetLib::SequencedChannel::dyn__ackPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::dyn__ackPacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ackPacket"))->offset;
  return *reinterpret_cast<LiteNetLib::NetPacket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mustSendAck
bool& LiteNetLib::SequencedChannel::dyn__mustSendAck() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::dyn__mustSendAck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mustSendAck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _id
uint8_t& LiteNetLib::SequencedChannel::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastPacketSendTime
int64_t& LiteNetLib::SequencedChannel::dyn__lastPacketSendTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::dyn__lastPacketSendTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPacketSendTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLib.SequencedChannel.SendNextPackets
void LiteNetLib::SequencedChannel::SendNextPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::SendNextPackets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNextPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.SequencedChannel.ProcessPacket
bool LiteNetLib::SequencedChannel::ProcessPacket(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SequencedChannel::ProcessPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.SimpleChannel
#include "LiteNetLib/SimpleChannel.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.SimpleChannel.SendNextPackets
void LiteNetLib::SimpleChannel::SendNextPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SimpleChannel::SendNextPackets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNextPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.SimpleChannel.ProcessPacket
bool LiteNetLib::SimpleChannel::ProcessPacket(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SimpleChannel::ProcessPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.CRC32C
#include "LiteNetLib/Utils/CRC32C.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 ChecksumSize
int LiteNetLib::Utils::CRC32C::_get_ChecksumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::CRC32C::_get_ChecksumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib.Utils", "CRC32C", "ChecksumSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ChecksumSize
void LiteNetLib::Utils::CRC32C::_set_ChecksumSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::CRC32C::_set_ChecksumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "CRC32C", "ChecksumSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 Poly
uint LiteNetLib::Utils::CRC32C::_get_Poly() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::CRC32C::_get_Poly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("LiteNetLib.Utils", "CRC32C", "Poly"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 Poly
void LiteNetLib::Utils::CRC32C::_set_Poly(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::CRC32C::_set_Poly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "CRC32C", "Poly", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] Table
::ArrayW<uint> LiteNetLib::Utils::CRC32C::_get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::CRC32C::_get_Table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("LiteNetLib.Utils", "CRC32C", "Table"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] Table
void LiteNetLib::Utils::CRC32C::_set_Table(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::CRC32C::_set_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "CRC32C", "Table", value));
}
// Autogenerated method: LiteNetLib.Utils.CRC32C..cctor
void LiteNetLib::Utils::CRC32C::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::CRC32C::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "CRC32C", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.CRC32C.Compute
uint LiteNetLib::Utils::CRC32C::Compute(::ArrayW<uint8_t> input, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::CRC32C::Compute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "CRC32C", "Compute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.FastBitConverter
#include "LiteNetLib/Utils/FastBitConverter.hpp"
// Including type: LiteNetLib.Utils.FastBitConverter/LiteNetLib.Utils.ConverterHelperDouble
#include "LiteNetLib/Utils/FastBitConverter_ConverterHelperDouble.hpp"
// Including type: LiteNetLib.Utils.FastBitConverter/LiteNetLib.Utils.ConverterHelperFloat
#include "LiteNetLib/Utils/FastBitConverter_ConverterHelperFloat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.WriteLittleEndian
void LiteNetLib::Utils::FastBitConverter::WriteLittleEndian(::ArrayW<uint8_t> buffer, int offset, uint64_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::WriteLittleEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "WriteLittleEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset, data);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.WriteLittleEndian
void LiteNetLib::Utils::FastBitConverter::WriteLittleEndian(::ArrayW<uint8_t> buffer, int offset, int data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::WriteLittleEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "WriteLittleEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset, data);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.WriteLittleEndian
void LiteNetLib::Utils::FastBitConverter::WriteLittleEndian(::ArrayW<uint8_t> buffer, int offset, int16_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::WriteLittleEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "WriteLittleEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset, data);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.GetBytes
void LiteNetLib::Utils::FastBitConverter::GetBytes(::ArrayW<uint8_t> bytes, int startIndex, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, startIndex, value);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.GetBytes
void LiteNetLib::Utils::FastBitConverter::GetBytes(::ArrayW<uint8_t> bytes, int startIndex, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, startIndex, value);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.GetBytes
void LiteNetLib::Utils::FastBitConverter::GetBytes(::ArrayW<uint8_t> bytes, int startIndex, int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, startIndex, value);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.GetBytes
void LiteNetLib::Utils::FastBitConverter::GetBytes(::ArrayW<uint8_t> bytes, int startIndex, uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, startIndex, value);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.GetBytes
void LiteNetLib::Utils::FastBitConverter::GetBytes(::ArrayW<uint8_t> bytes, int startIndex, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, startIndex, value);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.GetBytes
void LiteNetLib::Utils::FastBitConverter::GetBytes(::ArrayW<uint8_t> bytes, int startIndex, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, startIndex, value);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.GetBytes
void LiteNetLib::Utils::FastBitConverter::GetBytes(::ArrayW<uint8_t> bytes, int startIndex, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, startIndex, value);
}
// Autogenerated method: LiteNetLib.Utils.FastBitConverter.GetBytes
void LiteNetLib::Utils::FastBitConverter::GetBytes(::ArrayW<uint8_t> bytes, int startIndex, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::FastBitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "FastBitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, startIndex, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Utils.INetSerializable.Serialize
void LiteNetLib::Utils::INetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::INetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LiteNetLib.Utils.INetSerializable.Deserialize
void LiteNetLib::Utils::INetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::INetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] _data
::ArrayW<uint8_t>& LiteNetLib::Utils::NetDataReader::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _position
int& LiteNetLib::Utils::NetDataReader::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _dataSize
int& LiteNetLib::Utils::NetDataReader::dyn__dataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::dyn__dataSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _offset
int& LiteNetLib::Utils::NetDataReader::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_RawData
::ArrayW<uint8_t> LiteNetLib::Utils::NetDataReader::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_RawDataSize
int LiteNetLib::Utils::NetDataReader::get_RawDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_RawDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_UserDataOffset
int LiteNetLib::Utils::NetDataReader::get_UserDataOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_UserDataOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserDataOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_UserDataSize
int LiteNetLib::Utils::NetDataReader::get_UserDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_UserDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_IsNull
bool LiteNetLib::Utils::NetDataReader::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_Position
int LiteNetLib::Utils::NetDataReader::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_EndOfData
bool LiteNetLib::Utils::NetDataReader::get_EndOfData() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_EndOfData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_AvailableBytes
int LiteNetLib::Utils::NetDataReader::get_AvailableBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_AvailableBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SkipBytes
void LiteNetLib::Utils::NetDataReader::SkipBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SkipBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SetSource
void LiteNetLib::Utils::NetDataReader::SetSource(LiteNetLib::Utils::NetDataWriter* dataWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SetSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataWriter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataWriter);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SetSource
void LiteNetLib::Utils::NetDataReader::SetSource(::ArrayW<uint8_t> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SetSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SetSource
void LiteNetLib::Utils::NetDataReader::SetSource(::ArrayW<uint8_t> source, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SetSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, offset);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SetSource
void LiteNetLib::Utils::NetDataReader::SetSource(::ArrayW<uint8_t> source, int offset, int maxSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SetSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(maxSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, offset, maxSize);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetNetEndPoint
System::Net::IPEndPoint* LiteNetLib::Utils::NetDataReader::GetNetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetNetEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetByte
uint8_t LiteNetLib::Utils::NetDataReader::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetSByte
int8_t LiteNetLib::Utils::NetDataReader::GetSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBoolArray
::ArrayW<bool> LiteNetLib::Utils::NetDataReader::GetBoolArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBoolArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoolArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetUShortArray
::ArrayW<uint16_t> LiteNetLib::Utils::NetDataReader::GetUShortArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetUShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint16_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetShortArray
::ArrayW<int16_t> LiteNetLib::Utils::NetDataReader::GetShortArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetLongArray
::ArrayW<int64_t> LiteNetLib::Utils::NetDataReader::GetLongArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetULongArray
::ArrayW<uint64_t> LiteNetLib::Utils::NetDataReader::GetULongArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetULongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetULongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint64_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetIntArray
::ArrayW<int> LiteNetLib::Utils::NetDataReader::GetIntArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetUIntArray
::ArrayW<uint> LiteNetLib::Utils::NetDataReader::GetUIntArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetUIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetFloatArray
::ArrayW<float> LiteNetLib::Utils::NetDataReader::GetFloatArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetDoubleArray
::ArrayW<double> LiteNetLib::Utils::NetDataReader::GetDoubleArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<double>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetStringArray
::ArrayW<::StringW> LiteNetLib::Utils::NetDataReader::GetStringArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetStringArray
::ArrayW<::StringW> LiteNetLib::Utils::NetDataReader::GetStringArray(int maxStringLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxStringLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, maxStringLength);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBool
bool LiteNetLib::Utils::NetDataReader::GetBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetChar
::Il2CppChar LiteNetLib::Utils::NetDataReader::GetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetUShort
uint16_t LiteNetLib::Utils::NetDataReader::GetUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetShort
int16_t LiteNetLib::Utils::NetDataReader::GetShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetLong
int64_t LiteNetLib::Utils::NetDataReader::GetLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetULong
uint64_t LiteNetLib::Utils::NetDataReader::GetULong() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetInt
int LiteNetLib::Utils::NetDataReader::GetInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetUInt
uint LiteNetLib::Utils::NetDataReader::GetUInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetFloat
float LiteNetLib::Utils::NetDataReader::GetFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetDouble
double LiteNetLib::Utils::NetDataReader::GetDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetString
::StringW LiteNetLib::Utils::NetDataReader::GetString(int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, maxLength);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetString
::StringW LiteNetLib::Utils::NetDataReader::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetRemainingBytesSegment
System::ArraySegment_1<uint8_t> LiteNetLib::Utils::NetDataReader::GetRemainingBytesSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetRemainingBytesSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingBytesSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::ArraySegment_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetRemainingBytes
::ArrayW<uint8_t> LiteNetLib::Utils::NetDataReader::GetRemainingBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetRemainingBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBytes
void LiteNetLib::Utils::NetDataReader::GetBytes(::ArrayW<uint8_t> destination, int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, start, count);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBytes
void LiteNetLib::Utils::NetDataReader::GetBytes(::ArrayW<uint8_t> destination, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, count);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetSBytesWithLength
::ArrayW<int8_t> LiteNetLib::Utils::NetDataReader::GetSBytesWithLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetSBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBytesWithLength
::ArrayW<uint8_t> LiteNetLib::Utils::NetDataReader::GetBytesWithLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekByte
uint8_t LiteNetLib::Utils::NetDataReader::PeekByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekSByte
int8_t LiteNetLib::Utils::NetDataReader::PeekSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekBool
bool LiteNetLib::Utils::NetDataReader::PeekBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekChar
::Il2CppChar LiteNetLib::Utils::NetDataReader::PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekUShort
uint16_t LiteNetLib::Utils::NetDataReader::PeekUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekShort
int16_t LiteNetLib::Utils::NetDataReader::PeekShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekLong
int64_t LiteNetLib::Utils::NetDataReader::PeekLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekULong
uint64_t LiteNetLib::Utils::NetDataReader::PeekULong() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekInt
int LiteNetLib::Utils::NetDataReader::PeekInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekUInt
uint LiteNetLib::Utils::NetDataReader::PeekUInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekFloat
float LiteNetLib::Utils::NetDataReader::PeekFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekDouble
double LiteNetLib::Utils::NetDataReader::PeekDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekString
::StringW LiteNetLib::Utils::NetDataReader::PeekString(int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, maxLength);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekString
::StringW LiteNetLib::Utils::NetDataReader::PeekString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetByte
bool LiteNetLib::Utils::NetDataReader::TryGetByte(ByRef<uint8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetSByte
bool LiteNetLib::Utils::NetDataReader::TryGetSByte(ByRef<int8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetBool
bool LiteNetLib::Utils::NetDataReader::TryGetBool(ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetChar
bool LiteNetLib::Utils::NetDataReader::TryGetChar(ByRef<::Il2CppChar> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetShort
bool LiteNetLib::Utils::NetDataReader::TryGetShort(ByRef<int16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetUShort
bool LiteNetLib::Utils::NetDataReader::TryGetUShort(ByRef<uint16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetInt
bool LiteNetLib::Utils::NetDataReader::TryGetInt(ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetUInt
bool LiteNetLib::Utils::NetDataReader::TryGetUInt(ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetLong
bool LiteNetLib::Utils::NetDataReader::TryGetLong(ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetULong
bool LiteNetLib::Utils::NetDataReader::TryGetULong(ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetFloat
bool LiteNetLib::Utils::NetDataReader::TryGetFloat(ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetDouble
bool LiteNetLib::Utils::NetDataReader::TryGetDouble(ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetString
bool LiteNetLib::Utils::NetDataReader::TryGetString(ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetStringArray
bool LiteNetLib::Utils::NetDataReader::TryGetStringArray(ByRef<::ArrayW<::StringW>> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetBytesWithLength
bool LiteNetLib::Utils::NetDataReader::TryGetBytesWithLength(ByRef<::ArrayW<uint8_t>> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.Clear
void LiteNetLib::Utils::NetDataReader::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 InitialSize
int LiteNetLib::Utils::NetDataWriter::_get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::_get_InitialSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib.Utils", "NetDataWriter", "InitialSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitialSize
void LiteNetLib::Utils::NetDataWriter::_set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::_set_InitialSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NetDataWriter", "InitialSize", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] _data
::ArrayW<uint8_t>& LiteNetLib::Utils::NetDataWriter::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _position
int& LiteNetLib::Utils::NetDataWriter::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _autoResize
bool& LiteNetLib::Utils::NetDataWriter::dyn__autoResize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::dyn__autoResize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoResize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.get_Capacity
int LiteNetLib::Utils::NetDataWriter::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.get_Data
::ArrayW<uint8_t> LiteNetLib::Utils::NetDataWriter::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.get_Length
int LiteNetLib::Utils::NetDataWriter::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.FromBytes
LiteNetLib::Utils::NetDataWriter* LiteNetLib::Utils::NetDataWriter::FromBytes(::ArrayW<uint8_t> bytes, bool copy) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NetDataWriter", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(copy)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NetDataWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, copy);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.FromBytes
LiteNetLib::Utils::NetDataWriter* LiteNetLib::Utils::NetDataWriter::FromBytes(::ArrayW<uint8_t> bytes, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NetDataWriter", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NetDataWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, offset, length);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.FromString
LiteNetLib::Utils::NetDataWriter* LiteNetLib::Utils::NetDataWriter::FromString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::FromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NetDataWriter", "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NetDataWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.ResizeIfNeed
void LiteNetLib::Utils::NetDataWriter::ResizeIfNeed(int newSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::ResizeIfNeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeIfNeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSize);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Reset
void LiteNetLib::Utils::NetDataWriter::Reset(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Reset
void LiteNetLib::Utils::NetDataWriter::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.CopyData
::ArrayW<uint8_t> LiteNetLib::Utils::NetDataWriter::CopyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::CopyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::ArrayW<uint8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutSBytesWithLength
void LiteNetLib::Utils::NetDataWriter::PutSBytesWithLength(::ArrayW<int8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutSBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutSBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutSBytesWithLength
void LiteNetLib::Utils::NetDataWriter::PutSBytesWithLength(::ArrayW<int8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutSBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutSBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutBytesWithLength
void LiteNetLib::Utils::NetDataWriter::PutBytesWithLength(::ArrayW<uint8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutBytesWithLength
void LiteNetLib::Utils::NetDataWriter::PutBytesWithLength(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(System::Array* arr, int sz) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr), ::il2cpp_utils::ExtractType(sz)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arr, sz);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::ArrayW<::StringW> value, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(maxLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, maxLength);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::StringW value, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(maxLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, maxLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetPacketProcessor
#include "LiteNetLib/Utils/NetPacketProcessor.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.HashCache`1
#include "LiteNetLib/Utils/NetPacketProcessor_HashCache_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.SubscribeDelegate
#include "LiteNetLib/Utils/NetPacketProcessor_SubscribeDelegate.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.<>c__DisplayClass25_0`1
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass25_0_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.<>c__DisplayClass26_0`2
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass26_0_2.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.<>c__DisplayClass27_0`1
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass27_0_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.<>c__DisplayClass28_0`2
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass28_0_2.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.<>c__DisplayClass29_0`2
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass29_0_2.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.<>c__DisplayClass30_0`1
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass30_0_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.<>c__DisplayClass31_0`2
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass31_0_2.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.<>c__DisplayClass32_0`1
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass32_0_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer
#include "LiteNetLib/Utils/NetSerializer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetSerializer _netSerializer
LiteNetLib::Utils::NetSerializer*& LiteNetLib::Utils::NetPacketProcessor::dyn__netSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::dyn__netSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netSerializer"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.SubscribeDelegate> _callbacks
System::Collections::Generic::Dictionary_2<uint64_t, LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate*>*& LiteNetLib::Utils::NetPacketProcessor::dyn__callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::dyn__callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callbacks"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<uint64_t, LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _netDataWriter
LiteNetLib::Utils::NetDataWriter*& LiteNetLib::Utils::NetPacketProcessor::dyn__netDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::dyn__netDataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netDataWriter"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.GetCallbackFromData
LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate* LiteNetLib::Utils::NetPacketProcessor::GetCallbackFromData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::GetCallbackFromData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCallbackFromData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate*, false>(this, ___internal__method, reader);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.ReadAllPackets
void LiteNetLib::Utils::NetPacketProcessor::ReadAllPackets(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::ReadAllPackets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAllPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.ReadAllPackets
void LiteNetLib::Utils::NetPacketProcessor::ReadAllPackets(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::ReadAllPackets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAllPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, userData);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.ReadPacket
void LiteNetLib::Utils::NetPacketProcessor::ReadPacket(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.ReadPacket
void LiteNetLib::Utils::NetPacketProcessor::ReadPacket(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, userData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.SubscribeDelegate
#include "LiteNetLib/Utils/NetPacketProcessor_SubscribeDelegate.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.SubscribeDelegate.Invoke
void LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::Invoke(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, userData);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.SubscribeDelegate.BeginInvoke
System::IAsyncResult* LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::BeginInvoke(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppObject* userData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, reader, userData, callback, object);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor/LiteNetLib.Utils.SubscribeDelegate.EndInvoke
void LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.InvalidTypeException
#include "LiteNetLib/Utils/InvalidTypeException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.ParseException
#include "LiteNetLib/Utils/ParseException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NetSerializer
#include "LiteNetLib/Utils/NetSerializer.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.FastCall`1
#include "LiteNetLib/Utils/NetSerializer_FastCall_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.FastCallSpecific`2
#include "LiteNetLib/Utils/NetSerializer_FastCallSpecific_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.FastCallSpecificAuto`2
#include "LiteNetLib/Utils/NetSerializer_FastCallSpecificAuto_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.FastCallStatic`2
#include "LiteNetLib/Utils/NetSerializer_FastCallStatic_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.FastCallStruct`2
#include "LiteNetLib/Utils/NetSerializer_FastCallStruct_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.FastCallClass`2
#include "LiteNetLib/Utils/NetSerializer_FastCallClass_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.IntSerializer`1
#include "LiteNetLib/Utils/NetSerializer_IntSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.UIntSerializer`1
#include "LiteNetLib/Utils/NetSerializer_UIntSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.ShortSerializer`1
#include "LiteNetLib/Utils/NetSerializer_ShortSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.UShortSerializer`1
#include "LiteNetLib/Utils/NetSerializer_UShortSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.LongSerializer`1
#include "LiteNetLib/Utils/NetSerializer_LongSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.ULongSerializer`1
#include "LiteNetLib/Utils/NetSerializer_ULongSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.ByteSerializer`1
#include "LiteNetLib/Utils/NetSerializer_ByteSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.SByteSerializer`1
#include "LiteNetLib/Utils/NetSerializer_SByteSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.FloatSerializer`1
#include "LiteNetLib/Utils/NetSerializer_FloatSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.DoubleSerializer`1
#include "LiteNetLib/Utils/NetSerializer_DoubleSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.BoolSerializer`1
#include "LiteNetLib/Utils/NetSerializer_BoolSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.CharSerializer`1
#include "LiteNetLib/Utils/NetSerializer_CharSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.IPEndPointSerializer`1
#include "LiteNetLib/Utils/NetSerializer_IPEndPointSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.StringSerializer`1
#include "LiteNetLib/Utils/NetSerializer_StringSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.EnumByteSerializer`1
#include "LiteNetLib/Utils/NetSerializer_EnumByteSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.EnumIntSerializer`1
#include "LiteNetLib/Utils/NetSerializer_EnumIntSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.ClassInfo`1
#include "LiteNetLib/Utils/NetSerializer_ClassInfo_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.CustomType
#include "LiteNetLib/Utils/NetSerializer_CustomType.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.CustomTypeStruct`1
#include "LiteNetLib/Utils/NetSerializer_CustomTypeStruct_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.CustomTypeClass`1
#include "LiteNetLib/Utils/NetSerializer_CustomTypeClass_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.CustomTypeStatic`1
#include "LiteNetLib/Utils/NetSerializer_CustomTypeStatic_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.Utils.NetDataWriter _writer
LiteNetLib::Utils::NetDataWriter*& LiteNetLib::Utils::NetSerializer::dyn__writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetSerializer::dyn__writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writer"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _maxStringLength
int& LiteNetLib::Utils::NetSerializer::dyn__maxStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetSerializer::dyn__maxStringLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxStringLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.CustomType> _registeredTypes
System::Collections::Generic::Dictionary_2<System::Type*, LiteNetLib::Utils::NetSerializer::CustomType*>*& LiteNetLib::Utils::NetSerializer::dyn__registeredTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetSerializer::dyn__registeredTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_registeredTypes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<System::Type*, LiteNetLib::Utils::NetSerializer::CustomType*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.CustomType
#include "LiteNetLib/Utils/NetSerializer_CustomType.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LiteNetLib.Utils.FastCall`1
#include "LiteNetLib/Utils/NetSerializer_FastCall_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NtpPacket
#include "LiteNetLib/Utils/NtpPacket.hpp"
// Including type: LiteNetLib.Utils.NtpLeapIndicator
#include "LiteNetLib/Utils/NtpLeapIndicator.hpp"
// Including type: LiteNetLib.Utils.NtpMode
#include "LiteNetLib/Utils/NtpMode.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime Epoch
System::DateTime LiteNetLib::Utils::NtpPacket::_get_Epoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::_get_Epoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("LiteNetLib.Utils", "NtpPacket", "Epoch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime Epoch
void LiteNetLib::Utils::NtpPacket::_set_Epoch(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::_set_Epoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpPacket", "Epoch", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Bytes>k__BackingField
::ArrayW<uint8_t>& LiteNetLib::Utils::NtpPacket::dyn_$Bytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::dyn_$Bytes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Bytes>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTime> <DestinationTimestamp>k__BackingField
System::Nullable_1<System::DateTime>& LiteNetLib::Utils::NtpPacket::dyn_$DestinationTimestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::dyn_$DestinationTimestamp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DestinationTimestamp>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Bytes
::ArrayW<uint8_t> LiteNetLib::Utils::NtpPacket::get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_Bytes
void LiteNetLib::Utils::NtpPacket::set_Bytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_Bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_LeapIndicator
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpPacket::get_LeapIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_LeapIndicator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeapIndicator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NtpLeapIndicator, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_VersionNumber
int LiteNetLib::Utils::NtpPacket::get_VersionNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_VersionNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VersionNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_VersionNumber
void LiteNetLib::Utils::NtpPacket::set_VersionNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_VersionNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VersionNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Mode
LiteNetLib::Utils::NtpMode LiteNetLib::Utils::NtpPacket::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NtpMode, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_Mode
void LiteNetLib::Utils::NtpPacket::set_Mode(LiteNetLib::Utils::NtpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Stratum
int LiteNetLib::Utils::NtpPacket::get_Stratum() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Stratum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Stratum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Poll
int LiteNetLib::Utils::NtpPacket::get_Poll() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Poll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Poll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Precision
int LiteNetLib::Utils::NtpPacket::get_Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Precision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Precision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_RootDelay
System::TimeSpan LiteNetLib::Utils::NtpPacket::get_RootDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_RootDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_RootDispersion
System::TimeSpan LiteNetLib::Utils::NtpPacket::get_RootDispersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_RootDispersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootDispersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_ReferenceId
uint LiteNetLib::Utils::NtpPacket::get_ReferenceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_ReferenceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_ReferenceTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_ReferenceTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_ReferenceTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_OriginTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_OriginTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_OriginTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_ReceiveTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_ReceiveTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_ReceiveTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceiveTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_TransmitTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_TransmitTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_TransmitTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransmitTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_TransmitTimestamp
void LiteNetLib::Utils::NtpPacket::set_TransmitTimestamp(System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_TransmitTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransmitTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_DestinationTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_DestinationTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_DestinationTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DestinationTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_DestinationTimestamp
void LiteNetLib::Utils::NtpPacket::set_DestinationTimestamp(System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_DestinationTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DestinationTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_RoundTripTime
System::TimeSpan LiteNetLib::Utils::NtpPacket::get_RoundTripTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_RoundTripTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RoundTripTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_CorrectionOffset
System::TimeSpan LiteNetLib::Utils::NtpPacket::get_CorrectionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_CorrectionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CorrectionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket..cctor
void LiteNetLib::Utils::NtpPacket::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpPacket", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.FromServerResponse
LiteNetLib::Utils::NtpPacket* LiteNetLib::Utils::NtpPacket::FromServerResponse(::ArrayW<uint8_t> bytes, System::DateTime destinationTimestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::FromServerResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpPacket", "FromServerResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(destinationTimestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NtpPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, destinationTimestamp);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.ValidateRequest
void LiteNetLib::Utils::NtpPacket::ValidateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::ValidateRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.ValidateReply
void LiteNetLib::Utils::NtpPacket::ValidateReply() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::ValidateReply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateReply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.CheckTimestamps
void LiteNetLib::Utils::NtpPacket::CheckTimestamps() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::CheckTimestamps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTimestamps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetDateTime64
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::GetDateTime64(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetDateTime64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDateTime64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.SetDateTime64
void LiteNetLib::Utils::NtpPacket::SetDateTime64(int offset, System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::SetDateTime64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDateTime64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetTimeSpan32
System::TimeSpan LiteNetLib::Utils::NtpPacket::GetTimeSpan32(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetTimeSpan32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeSpan32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::TimeSpan, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetUInt64BE
uint64_t LiteNetLib::Utils::NtpPacket::GetUInt64BE(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetUInt64BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt64BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.SetUInt64BE
void LiteNetLib::Utils::NtpPacket::SetUInt64BE(int offset, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::SetUInt64BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUInt64BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetInt32BE
int LiteNetLib::Utils::NtpPacket::GetInt32BE(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetInt32BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetUInt32BE
uint LiteNetLib::Utils::NtpPacket::GetUInt32BE(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetUInt32BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt32BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.SwapEndianness
uint LiteNetLib::Utils::NtpPacket::SwapEndianness(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::SwapEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpPacket", "SwapEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.SwapEndianness
uint64_t LiteNetLib::Utils::NtpPacket::SwapEndianness(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::SwapEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpPacket", "SwapEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NtpLeapIndicator
#include "LiteNetLib/Utils/NtpLeapIndicator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpLeapIndicator NoWarning
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpLeapIndicator::_get_NoWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_get_NoWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpLeapIndicator>("LiteNetLib.Utils", "NtpLeapIndicator", "NoWarning"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpLeapIndicator NoWarning
void LiteNetLib::Utils::NtpLeapIndicator::_set_NoWarning(LiteNetLib::Utils::NtpLeapIndicator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_set_NoWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpLeapIndicator", "NoWarning", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpLeapIndicator LastMinuteHas61Seconds
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpLeapIndicator::_get_LastMinuteHas61Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_get_LastMinuteHas61Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpLeapIndicator>("LiteNetLib.Utils", "NtpLeapIndicator", "LastMinuteHas61Seconds"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpLeapIndicator LastMinuteHas61Seconds
void LiteNetLib::Utils::NtpLeapIndicator::_set_LastMinuteHas61Seconds(LiteNetLib::Utils::NtpLeapIndicator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_set_LastMinuteHas61Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpLeapIndicator", "LastMinuteHas61Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpLeapIndicator LastMinuteHas59Seconds
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpLeapIndicator::_get_LastMinuteHas59Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_get_LastMinuteHas59Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpLeapIndicator>("LiteNetLib.Utils", "NtpLeapIndicator", "LastMinuteHas59Seconds"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpLeapIndicator LastMinuteHas59Seconds
void LiteNetLib::Utils::NtpLeapIndicator::_set_LastMinuteHas59Seconds(LiteNetLib::Utils::NtpLeapIndicator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_set_LastMinuteHas59Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpLeapIndicator", "LastMinuteHas59Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpLeapIndicator AlarmCondition
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpLeapIndicator::_get_AlarmCondition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_get_AlarmCondition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpLeapIndicator>("LiteNetLib.Utils", "NtpLeapIndicator", "AlarmCondition"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpLeapIndicator AlarmCondition
void LiteNetLib::Utils::NtpLeapIndicator::_set_AlarmCondition(LiteNetLib::Utils::NtpLeapIndicator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_set_AlarmCondition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpLeapIndicator", "AlarmCondition", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& LiteNetLib::Utils::NtpLeapIndicator::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NtpMode
#include "LiteNetLib/Utils/NtpMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpMode Client
LiteNetLib::Utils::NtpMode LiteNetLib::Utils::NtpMode::_get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::_get_Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpMode>("LiteNetLib.Utils", "NtpMode", "Client"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpMode Client
void LiteNetLib::Utils::NtpMode::_set_Client(LiteNetLib::Utils::NtpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::_set_Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpMode", "Client", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpMode Server
LiteNetLib::Utils::NtpMode LiteNetLib::Utils::NtpMode::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpMode>("LiteNetLib.Utils", "NtpMode", "Server"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpMode Server
void LiteNetLib::Utils::NtpMode::_set_Server(LiteNetLib::Utils::NtpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpMode", "Server", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& LiteNetLib::Utils::NtpMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NtpRequest
#include "LiteNetLib/Utils/NtpRequest.hpp"
// Including type: LiteNetLib.NetSocket
#include "LiteNetLib/NetSocket.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LiteNetLib.Utils.NtpPacket
#include "LiteNetLib/Utils/NtpPacket.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultPort
int LiteNetLib::Utils::NtpRequest::_get_DefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::_get_DefaultPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib.Utils", "NtpRequest", "DefaultPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultPort
void LiteNetLib::Utils::NtpRequest::_set_DefaultPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::_set_DefaultPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpRequest", "DefaultPort", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.NetSocket _socket
LiteNetLib::NetSocket*& LiteNetLib::Utils::NtpRequest::dyn__socket() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::dyn__socket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_socket"))->offset;
  return *reinterpret_cast<LiteNetLib::NetSocket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LiteNetLib.Utils.NtpPacket> _onRequestComplete
System::Action_1<LiteNetLib::Utils::NtpPacket*>*& LiteNetLib::Utils::NtpRequest::dyn__onRequestComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::dyn__onRequestComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRequestComplete"))->offset;
  return *reinterpret_cast<System::Action_1<LiteNetLib::Utils::NtpPacket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.IPEndPoint _ntpEndPoint
System::Net::IPEndPoint*& LiteNetLib::Utils::NtpRequest::dyn__ntpEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::dyn__ntpEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ntpEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Create
LiteNetLib::Utils::NtpRequest* LiteNetLib::Utils::NtpRequest::Create(System::Net::IPEndPoint* endPoint, System::Action_1<LiteNetLib::Utils::NtpPacket*>* onRequestComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(onRequestComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NtpRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, endPoint, onRequestComplete);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Create
LiteNetLib::Utils::NtpRequest* LiteNetLib::Utils::NtpRequest::Create(System::Net::IPAddress* ipAddress, System::Action_1<LiteNetLib::Utils::NtpPacket*>* onRequestComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(onRequestComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NtpRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ipAddress, onRequestComplete);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Create
LiteNetLib::Utils::NtpRequest* LiteNetLib::Utils::NtpRequest::Create(::StringW ntpServerAddress, int port, System::Action_1<LiteNetLib::Utils::NtpPacket*>* onRequestComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ntpServerAddress), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(onRequestComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NtpRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ntpServerAddress, port, onRequestComplete);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Create
LiteNetLib::Utils::NtpRequest* LiteNetLib::Utils::NtpRequest::Create(::StringW ntpServerAddress, System::Action_1<LiteNetLib::Utils::NtpPacket*>* onRequestComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ntpServerAddress), ::il2cpp_utils::ExtractType(onRequestComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<LiteNetLib::Utils::NtpRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ntpServerAddress, onRequestComplete);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Send
void LiteNetLib::Utils::NtpRequest::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Close
void LiteNetLib::Utils::NtpRequest::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.LiteNetLib.INetSocketListener.OnMessageReceived
void LiteNetLib::Utils::NtpRequest::LiteNetLib_INetSocketListener_OnMessageReceived(::ArrayW<uint8_t> data, int length, System::Net::Sockets::SocketError errorCode, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::LiteNetLib.INetSocketListener.OnMessageReceived");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetSocketListener.OnMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(remoteEndPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, length, errorCode, remoteEndPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Layers.Crc32cLayer
#include "LiteNetLib/Layers/Crc32cLayer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Layers.Crc32cLayer.ProcessInboundPacket
void LiteNetLib::Layers::Crc32cLayer::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::Crc32cLayer::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated method: LiteNetLib.Layers.Crc32cLayer.ProcessOutBoundPacket
void LiteNetLib::Layers::Crc32cLayer::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::Crc32cLayer::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Layers.PacketLayerBase
#include "LiteNetLib/Layers/PacketLayerBase.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 ExtraPacketSizeForLayer
int& LiteNetLib::Layers::PacketLayerBase::dyn_ExtraPacketSizeForLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::PacketLayerBase::dyn_ExtraPacketSizeForLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraPacketSizeForLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLib.Layers.PacketLayerBase.ProcessInboundPacket
void LiteNetLib::Layers::PacketLayerBase::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::PacketLayerBase::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated method: LiteNetLib.Layers.PacketLayerBase.ProcessOutBoundPacket
void LiteNetLib::Layers::PacketLayerBase::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::PacketLayerBase::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Layers.XorEncryptLayer
#include "LiteNetLib/Layers/XorEncryptLayer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteKey
::ArrayW<uint8_t>& LiteNetLib::Layers::XorEncryptLayer::dyn__byteKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::dyn__byteKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLib.Layers.XorEncryptLayer.SetKey
void LiteNetLib::Layers::XorEncryptLayer::SetKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: LiteNetLib.Layers.XorEncryptLayer.SetKey
void LiteNetLib::Layers::XorEncryptLayer::SetKey(::ArrayW<uint8_t> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: LiteNetLib.Layers.XorEncryptLayer.ProcessInboundPacket
void LiteNetLib::Layers::XorEncryptLayer::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated method: LiteNetLib.Layers.XorEncryptLayer.ProcessOutBoundPacket
void LiteNetLib::Layers::XorEncryptLayer::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.INVALIDATION_FLAGS
#include "LIV/SDK/Unity/INVALIDATION_FLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS NONE
LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS NONE
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_NONE(LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS HMD_CAMERA
LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_HMD_CAMERA() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_get_HMD_CAMERA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "HMD_CAMERA"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS HMD_CAMERA
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_HMD_CAMERA(LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_set_HMD_CAMERA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "HMD_CAMERA", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS STAGE
LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_STAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_get_STAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "STAGE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS STAGE
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_STAGE(LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_set_STAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "STAGE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS MR_CAMERA_PREFAB
LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_MR_CAMERA_PREFAB() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_get_MR_CAMERA_PREFAB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "MR_CAMERA_PREFAB"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS MR_CAMERA_PREFAB
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_MR_CAMERA_PREFAB(LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_set_MR_CAMERA_PREFAB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "MR_CAMERA_PREFAB", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS EXCLUDE_BEHAVIOURS
LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_EXCLUDE_BEHAVIOURS() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_get_EXCLUDE_BEHAVIOURS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "EXCLUDE_BEHAVIOURS"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS EXCLUDE_BEHAVIOURS
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_EXCLUDE_BEHAVIOURS(LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::_set_EXCLUDE_BEHAVIOURS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "EXCLUDE_BEHAVIOURS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::INVALIDATION_FLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::INVALIDATION_FLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68
#include "LIV/SDK/Unity/LIV_-WaitForUnityEndOfFrame-d__68.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action onActivate
System::Action*& LIV::SDK::Unity::LIV::dyn_onActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn_onActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onActivate"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPreRender
System::Action_1<LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn_onPreRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPreRender"))->offset;
  return *reinterpret_cast<System::Action_1<LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPreRenderBackground
System::Action_1<LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPreRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn_onPreRenderBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPreRenderBackground"))->offset;
  return *reinterpret_cast<System::Action_1<LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPostRenderBackground
System::Action_1<LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPostRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn_onPostRenderBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPostRenderBackground"))->offset;
  return *reinterpret_cast<System::Action_1<LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPreRenderForeground
System::Action_1<LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPreRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn_onPreRenderForeground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPreRenderForeground"))->offset;
  return *reinterpret_cast<System::Action_1<LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPostRenderForeground
System::Action_1<LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPostRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn_onPostRenderForeground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPostRenderForeground"))->offset;
  return *reinterpret_cast<System::Action_1<LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPostRender
System::Action_1<LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn_onPostRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPostRender"))->offset;
  return *reinterpret_cast<System::Action_1<LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onDeactivate
System::Action*& LIV::SDK::Unity::LIV::dyn_onDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn_onDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDeactivate"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stage
UnityEngine::Transform*& LIV::SDK::Unity::LIV::dyn__stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__stage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stage"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stageTransform
UnityEngine::Transform*& LIV::SDK::Unity::LIV::dyn__stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__stageTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stageTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _HMDCamera
UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn__HMDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__HMDCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HMDCamera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _MRCameraPrefab
UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn__MRCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__MRCameraPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MRCameraPrefab"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disableStandardAssets
bool& LIV::SDK::Unity::LIV::dyn__disableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__disableStandardAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableStandardAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _spectatorLayerMask
UnityEngine::LayerMask& LIV::SDK::Unity::LIV::dyn__spectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__spectatorLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatorLayerMask"))->offset;
  return *reinterpret_cast<UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _excludeBehaviours
::ArrayW<::StringW>& LIV::SDK::Unity::LIV::dyn__excludeBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__excludeBehaviours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_excludeBehaviours"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fixPostEffectsAlpha
bool& LIV::SDK::Unity::LIV::dyn__fixPostEffectsAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__fixPostEffectsAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixPostEffectsAlpha"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
bool& LIV::SDK::Unity::LIV::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKRender _render
LIV::SDK::Unity::SDKRender*& LIV::SDK::Unity::LIV::dyn__render() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__render");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_render"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKRender**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasReady
bool& LIV::SDK::Unity::LIV::dyn__wasReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__wasReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.INVALIDATION_FLAGS _invalidate
LIV::SDK::Unity::INVALIDATION_FLAGS& LIV::SDK::Unity::LIV::dyn__invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__invalidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invalidate"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::INVALIDATION_FLAGS*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stageCandidate
UnityEngine::Transform*& LIV::SDK::Unity::LIV::dyn__stageCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__stageCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stageCandidate"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _HMDCameraCandidate
UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn__HMDCameraCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__HMDCameraCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HMDCameraCandidate"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _MRCameraPrefabCandidate
UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn__MRCameraPrefabCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__MRCameraPrefabCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MRCameraPrefabCandidate"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _excludeBehavioursCandidate
::ArrayW<::StringW>& LIV::SDK::Unity::LIV::dyn__excludeBehavioursCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__excludeBehavioursCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_excludeBehavioursCandidate"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enabled
bool& LIV::SDK::Unity::LIV::dyn__enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _waitForEndOfFrameCoroutine
UnityEngine::Coroutine*& LIV::SDK::Unity::LIV::dyn__waitForEndOfFrameCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::dyn__waitForEndOfFrameCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitForEndOfFrameCoroutine"))->offset;
  return *reinterpret_cast<UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_stage
UnityEngine::Transform* LIV::SDK::Unity::LIV::get_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_stage
void LIV::SDK::Unity::LIV::set_stage(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_trackedSpaceOrigin
UnityEngine::Transform* LIV::SDK::Unity::LIV::get_trackedSpaceOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_trackedSpaceOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackedSpaceOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_trackedSpaceOrigin
void LIV::SDK::Unity::LIV::set_trackedSpaceOrigin(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_trackedSpaceOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackedSpaceOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_stageLocalToWorldMatrix
UnityEngine::Matrix4x4 LIV::SDK::Unity::LIV::get_stageLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_stageLocalToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageLocalToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_stageWorldToLocalMatrix
UnityEngine::Matrix4x4 LIV::SDK::Unity::LIV::get_stageWorldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_stageWorldToLocalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageWorldToLocalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_stageTransform
UnityEngine::Transform* LIV::SDK::Unity::LIV::get_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_stageTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_stageTransform
void LIV::SDK::Unity::LIV::set_stageTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_stageTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stageTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_HMDCamera
UnityEngine::Camera* LIV::SDK::Unity::LIV::get_HMDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_HMDCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HMDCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_HMDCamera
void LIV::SDK::Unity::LIV::set_HMDCamera(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_HMDCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HMDCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_MRCameraPrefab
UnityEngine::Camera* LIV::SDK::Unity::LIV::get_MRCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_MRCameraPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MRCameraPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_MRCameraPrefab
void LIV::SDK::Unity::LIV::set_MRCameraPrefab(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_MRCameraPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MRCameraPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_disableStandardAssets
bool LIV::SDK::Unity::LIV::get_disableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_disableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_disableStandardAssets
void LIV::SDK::Unity::LIV::set_disableStandardAssets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_disableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_spectatorLayerMask
UnityEngine::LayerMask LIV::SDK::Unity::LIV::get_spectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_spectatorLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spectatorLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_spectatorLayerMask
void LIV::SDK::Unity::LIV::set_spectatorLayerMask(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_spectatorLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spectatorLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_excludeBehaviours
::ArrayW<::StringW> LIV::SDK::Unity::LIV::get_excludeBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_excludeBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_excludeBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_excludeBehaviours
void LIV::SDK::Unity::LIV::set_excludeBehaviours(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_excludeBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_excludeBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_fixPostEffectsAlpha
bool LIV::SDK::Unity::LIV::get_fixPostEffectsAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_fixPostEffectsAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fixPostEffectsAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_fixPostEffectsAlpha
void LIV::SDK::Unity::LIV::set_fixPostEffectsAlpha(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::set_fixPostEffectsAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fixPostEffectsAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_isValid
bool LIV::SDK::Unity::LIV::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_isActive
bool LIV::SDK::Unity::LIV::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_isActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get__isReady
bool LIV::SDK::Unity::LIV::get__isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get__isReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_render
LIV::SDK::Unity::SDKRender* LIV::SDK::Unity::LIV::get_render() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::get_render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKRender*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnEnable
void LIV::SDK::Unity::LIV::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.Update
void LIV::SDK::Unity::LIV::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnDisable
void LIV::SDK::Unity::LIV::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.WaitForUnityEndOfFrame
System::Collections::IEnumerator* LIV::SDK::Unity::LIV::WaitForUnityEndOfFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::WaitForUnityEndOfFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForUnityEndOfFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.UpdateSDKReady
void LIV::SDK::Unity::LIV::UpdateSDKReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::UpdateSDKReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSDKReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnSDKReadyChanged
void LIV::SDK::Unity::LIV::OnSDKReadyChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::OnSDKReadyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSDKReadyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnSDKActivate
void LIV::SDK::Unity::LIV::OnSDKActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::OnSDKActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSDKActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnSDKDeactivate
void LIV::SDK::Unity::LIV::OnSDKDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::OnSDKDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSDKDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.CreateAssets
void LIV::SDK::Unity::LIV::CreateAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::CreateAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.DestroyAssets
void LIV::SDK::Unity::LIV::DestroyAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::DestroyAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.StartRenderCoroutine
void LIV::SDK::Unity::LIV::StartRenderCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::StartRenderCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRenderCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.StopRenderCoroutine
void LIV::SDK::Unity::LIV::StopRenderCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::StopRenderCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRenderCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.SubmitSDKOutput
void LIV::SDK::Unity::LIV::SubmitSDKOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::SubmitSDKOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitSDKOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.Invalidate
void LIV::SDK::Unity::LIV::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::Invalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68
#include "LIV/SDK/Unity/LIV_-WaitForUnityEndOfFrame-d__68.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.LIV <>4__this
LIV::SDK::Unity::LIV*& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.IDisposable.Dispose
void LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.MoveNext
bool LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.IEnumerator.Reset
void LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKBridge
#include "LIV/SDK/Unity/SDKBridge.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: LIV.SDK.Unity.SDKTexture
#include "LIV/SDK/Unity/SDKTexture.hpp"
// Including type: LIV.SDK.Unity.SDKApplicationOutput
#include "LIV/SDK/Unity/SDKApplicationOutput.hpp"
// Including type: LIV.SDK.Unity.SDKOutputFrame
#include "LIV/SDK/Unity/SDKOutputFrame.hpp"
// Including type: LIV.SDK.Unity.SDKPlane
#include "LIV/SDK/Unity/SDKPlane.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKInputFrame> _injection_SDKInputFrame
LIV::SDK::Unity::SDKBridge::SDKInjection_1<LIV::SDK::Unity::SDKInputFrame> LIV::SDK::Unity::SDKBridge::_get__injection_SDKInputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_get__injection_SDKInputFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::SDKBridge::SDKInjection_1<LIV::SDK::Unity::SDKInputFrame>>("LIV.SDK.Unity", "SDKBridge", "_injection_SDKInputFrame"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKInputFrame> _injection_SDKInputFrame
void LIV::SDK::Unity::SDKBridge::_set__injection_SDKInputFrame(LIV::SDK::Unity::SDKBridge::SDKInjection_1<LIV::SDK::Unity::SDKInputFrame> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_set__injection_SDKInputFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_SDKInputFrame", value));
}
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKResolution> _injection_SDKResolution
LIV::SDK::Unity::SDKBridge::SDKInjection_1<LIV::SDK::Unity::SDKResolution> LIV::SDK::Unity::SDKBridge::_get__injection_SDKResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_get__injection_SDKResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::SDKBridge::SDKInjection_1<LIV::SDK::Unity::SDKResolution>>("LIV.SDK.Unity", "SDKBridge", "_injection_SDKResolution"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKResolution> _injection_SDKResolution
void LIV::SDK::Unity::SDKBridge::_set__injection_SDKResolution(LIV::SDK::Unity::SDKBridge::SDKInjection_1<LIV::SDK::Unity::SDKResolution> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_set__injection_SDKResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_SDKResolution", value));
}
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<System.Boolean> _injection_IsActive
LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool> LIV::SDK::Unity::SDKBridge::_get__injection_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_get__injection_IsActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool>>("LIV.SDK.Unity", "SDKBridge", "_injection_IsActive"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<System.Boolean> _injection_IsActive
void LIV::SDK::Unity::SDKBridge::_set__injection_IsActive(LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_set__injection_IsActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_IsActive", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableSubmit
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmit"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableSubmit
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableSubmitApplicationOutput
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmitApplicationOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmitApplicationOutput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmitApplicationOutput"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableSubmitApplicationOutput
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmitApplicationOutput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmitApplicationOutput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmitApplicationOutput", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableAddTexture
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableAddTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_get__injection_DisableAddTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableAddTexture"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableAddTexture
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableAddTexture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_set__injection_DisableAddTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableAddTexture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableCreateFrame
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableCreateFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_get__injection_DisableCreateFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableCreateFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableCreateFrame
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableCreateFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::_set__injection_DisableCreateFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableCreateFrame", value));
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.get_IsActive
bool LIV::SDK::Unity::SDKBridge::get_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::get_IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "get_IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge..cctor
void LIV::SDK::Unity::SDKBridge::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddStringToChannel
int LIV::SDK::Unity::SDKBridge::AddStringToChannel(int slot, System::IntPtr str, int length, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::AddStringToChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddStringToChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, str, length, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.addtexture
int LIV::SDK::Unity::SDKBridge::addtexture(System::IntPtr sourcetexture, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::addtexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "addtexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcetexture), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcetexture, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetObjectTimeStamp
uint64_t LIV::SDK::Unity::SDKBridge::GetObjectTimeStamp(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetObjectTimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetObjectTimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCurrentTimeTicks
uint64_t LIV::SDK::Unity::SDKBridge::GetCurrentTimeTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetCurrentTimeTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCurrentTimeTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetIsCaptureActive
bool LIV::SDK::Unity::SDKBridge::GetIsCaptureActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetIsCaptureActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetIsCaptureActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetRenderEventFunc
System::IntPtr LIV::SDK::Unity::SDKBridge::GetRenderEventFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetRenderEventFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetRenderEventFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCompositorChannelObject
System::IntPtr LIV::SDK::Unity::SDKBridge::GetCompositorChannelObject(int slot, uint64_t tag, uint64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetCompositorChannelObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCompositorChannelObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, tag, timestamp);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToCompositorChannel
int LIV::SDK::Unity::SDKBridge::AddObjectToCompositorChannel(int slot, System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::AddObjectToCompositorChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToCompositorChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToFrame
int LIV::SDK::Unity::SDKBridge::AddObjectToFrame(System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::AddObjectToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.updatinputframe
System::IntPtr LIV::SDK::Unity::SDKBridge::updatinputframe(System::IntPtr InputFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::updatinputframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "updatinputframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InputFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InputFrame);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetViewportTexture
System::IntPtr LIV::SDK::Unity::SDKBridge::GetViewportTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetViewportTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetViewportTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetChannelObject
System::IntPtr LIV::SDK::Unity::SDKBridge::GetChannelObject(int slot, uint64_t tag, uint64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetChannelObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetChannelObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, tag, timestamp);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToChannel
int LIV::SDK::Unity::SDKBridge::AddObjectToChannel(int slot, System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::AddObjectToChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.Tag
uint64_t LIV::SDK::Unity::SDKBridge::Tag(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddString
void LIV::SDK::Unity::SDKBridge::AddString(::StringW tag, ::StringW value, int slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(slot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag, value, slot);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddTexture
void LIV::SDK::Unity::SDKBridge::AddTexture(LIV::SDK::Unity::SDKTexture texture, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::AddTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetObjectTime
uint64_t LIV::SDK::Unity::SDKBridge::GetObjectTime(System::IntPtr objectptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetObjectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetObjectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectptr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectptr);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCurrentTime
uint64_t LIV::SDK::Unity::SDKBridge::GetCurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetCurrentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCurrentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.IssuePluginEvent
void LIV::SDK::Unity::SDKBridge::IssuePluginEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::IssuePluginEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "IssuePluginEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.SubmitApplicationOutput
void LIV::SDK::Unity::SDKBridge::SubmitApplicationOutput(LIV::SDK::Unity::SDKApplicationOutput applicationOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::SubmitApplicationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "SubmitApplicationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applicationOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, applicationOutput);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.UpdateInputFrame
bool LIV::SDK::Unity::SDKBridge::UpdateInputFrame(ByRef<LIV::SDK::Unity::SDKInputFrame> setframe) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::UpdateInputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "UpdateInputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setframe)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(setframe));
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetViewfinderTexture
LIV::SDK::Unity::SDKTexture LIV::SDK::Unity::SDKBridge::GetViewfinderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetViewfinderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetViewfinderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKTexture, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddTexture
void LIV::SDK::Unity::SDKBridge::AddTexture(LIV::SDK::Unity::SDKTexture texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::AddTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.CreateFrame
void LIV::SDK::Unity::SDKBridge::CreateFrame(LIV::SDK::Unity::SDKOutputFrame frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::CreateFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "CreateFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frame);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.SetGroundPlane
void LIV::SDK::Unity::SDKBridge::SetGroundPlane(LIV::SDK::Unity::SDKPlane groundPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groundPlane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groundPlane);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetResolution
bool LIV::SDK::Unity::SDKBridge::GetResolution(ByRef<LIV::SDK::Unity::SDKResolution> sdkResolution) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKBridge::GetResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sdkResolution)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sdkResolution));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Rendering.ColorWriteMask
#include "UnityEngine/Rendering/ColorWriteMask.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_ID
#include "LIV/SDK/Unity/TEXTURE_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _clipPlaneCommandBuffer
UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__clipPlaneCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCommandBuffer"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _combineAlphaCommandBuffer
UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__combineAlphaCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__combineAlphaCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combineAlphaCommandBuffer"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _captureTextureCommandBuffer
UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__captureTextureCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__captureTextureCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureTextureCommandBuffer"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _applyTextureCommandBuffer
UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__applyTextureCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__applyTextureCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyTextureCommandBuffer"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _optimizedRenderingCommandBuffer
UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderingCommandBuffer"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _clipPlaneCameraEvent
UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__clipPlaneCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCameraEvent"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _optimizedRenderingCameraEvent
UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderingCameraEvent"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _clipPlaneMesh
UnityEngine::Mesh*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__clipPlaneMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneMesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneSimpleMaterial
UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneSimpleMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneSimpleDebugMaterial
UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleDebugMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleDebugMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneSimpleDebugMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneComplexMaterial
UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneComplexMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneComplexDebugMaterial
UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexDebugMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexDebugMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneComplexDebugMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _writeOpaqueToAlphaMaterial
UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__writeOpaqueToAlphaMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__writeOpaqueToAlphaMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeOpaqueToAlphaMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _combineAlphaMaterial
UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__combineAlphaMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__combineAlphaMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combineAlphaMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _writeMaterial
UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__writeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__writeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _forceForwardRenderingMaterial
UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__forceForwardRenderingMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__forceForwardRenderingMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceForwardRenderingMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _backgroundRenderTexture
UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__backgroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__backgroundRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundRenderTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _foregroundRenderTexture
UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__foregroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__foregroundRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foregroundRenderTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _optimizedRenderTexture
UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__optimizedRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _complexClipPlaneRenderTexture
UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__complexClipPlaneRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__complexClipPlaneRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_complexClipPlaneRenderTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.LIV _liv
LIV::SDK::Unity::LIV*& LIV::SDK::Unity::SDKRender::dyn__liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__liv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liv"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKOutputFrame _outputFrame
LIV::SDK::Unity::SDKOutputFrame& LIV::SDK::Unity::SDKRender::dyn__outputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__outputFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputFrame"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKOutputFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKInputFrame _inputFrame
LIV::SDK::Unity::SDKInputFrame& LIV::SDK::Unity::SDKRender::dyn__inputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__inputFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFrame"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKInputFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKResolution _resolution
LIV::SDK::Unity::SDKResolution& LIV::SDK::Unity::SDKRender::dyn__resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolution"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKResolution*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _cameraInstance
UnityEngine::Camera*& LIV::SDK::Unity::SDKRender::dyn__cameraInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__cameraInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraInstance"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKPose _requestedPose
LIV::SDK::Unity::SDKPose& LIV::SDK::Unity::SDKRender::dyn__requestedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__requestedPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedPose"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _requestedPoseFrameIndex
int& LIV::SDK::Unity::SDKRender::dyn__requestedPoseFrameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::dyn__requestedPoseFrameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedPoseFrameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_useDeferredRendering
bool LIV::SDK::Unity::SDKRender::get_useDeferredRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_useDeferredRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useDeferredRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_interlacedRendering
bool LIV::SDK::Unity::SDKRender::get_interlacedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_interlacedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interlacedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderBackground
bool LIV::SDK::Unity::SDKRender::get_canRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_canRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderForeground
bool LIV::SDK::Unity::SDKRender::get_canRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_canRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderOptimized
bool LIV::SDK::Unity::SDKRender::get_canRenderOptimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_canRenderOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_liv
LIV::SDK::Unity::LIV* LIV::SDK::Unity::SDKRender::get_liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_liv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_liv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::LIV*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_outputFrame
LIV::SDK::Unity::SDKOutputFrame LIV::SDK::Unity::SDKRender::get_outputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_outputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKOutputFrame, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_inputFrame
LIV::SDK::Unity::SDKInputFrame LIV::SDK::Unity::SDKRender::get_inputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_inputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKInputFrame, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_resolution
LIV::SDK::Unity::SDKResolution LIV::SDK::Unity::SDKRender::get_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_resolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKResolution, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_cameraInstance
UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_cameraInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_cameraInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_cameraReference
UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_cameraReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_cameraReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_hmdCamera
UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_hmdCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_hmdCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmdCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stage
UnityEngine::Transform* LIV::SDK::Unity::SDKRender::get_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stageTransform
UnityEngine::Transform* LIV::SDK::Unity::SDKRender::get_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_stageTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stageLocalToWorldMatrix
UnityEngine::Matrix4x4 LIV::SDK::Unity::SDKRender::get_stageLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_stageLocalToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageLocalToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_localToWorldMatrix
UnityEngine::Matrix4x4 LIV::SDK::Unity::SDKRender::get_localToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_localToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_spectatorLayerMask
int LIV::SDK::Unity::SDKRender::get_spectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_spectatorLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spectatorLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_disableStandardAssets
bool LIV::SDK::Unity::SDKRender::get_disableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_disableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canSetPose
bool LIV::SDK::Unity::SDKRender::get_canSetPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::get_canSetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.GetClipPlaneMaterial
UnityEngine::Material* LIV::SDK::Unity::SDKRender::GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::GetClipPlaneMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipPlaneMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugClipPlane), ::il2cpp_utils::ExtractType(complexClipPlane), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Material*, false>(this, ___internal__method, debugClipPlane, complexClipPlane, colorWriteMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.GetGroundClipPlaneMaterial
UnityEngine::Material* LIV::SDK::Unity::SDKRender::GetGroundClipPlaneMaterial(bool debugClipPlane, UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::GetGroundClipPlaneMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroundClipPlaneMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugClipPlane), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Material*, false>(this, ___internal__method, debugClipPlane, colorWriteMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.Render
void LIV::SDK::Unity::SDKRender::Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderBackground
void LIV::SDK::Unity::SDKRender::RenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::RenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderForeground
void LIV::SDK::Unity::SDKRender::RenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::RenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderOptimized
void LIV::SDK::Unity::SDKRender::RenderOptimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::RenderOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateAssets
void LIV::SDK::Unity::SDKRender::CreateAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::CreateAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.DestroyAssets
void LIV::SDK::Unity::SDKRender::DestroyAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::DestroyAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.Dispose
void LIV::SDK::Unity::SDKRender::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetPose
bool LIV::SDK::Unity::SDKRender::SetPose(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, float verticalFieldOfView, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::SetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(verticalFieldOfView), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position, rotation, verticalFieldOfView, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(float distance, UnityEngine::Vector3 normal, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance, normal, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(UnityEngine::Plane plane, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(UnityEngine::Transform* transform, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.ReleaseBridgePoseControl
void LIV::SDK::Unity::SDKRender::ReleaseBridgePoseControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::ReleaseBridgePoseControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBridgePoseControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateBridgeResolution
void LIV::SDK::Unity::SDKRender::UpdateBridgeResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::UpdateBridgeResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBridgeResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateBridgeInputFrame
void LIV::SDK::Unity::SDKRender::UpdateBridgeInputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::UpdateBridgeInputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBridgeInputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRender
void LIV::SDK::Unity::SDKRender::InvokePreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::InvokePreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.IvokePostRender
void LIV::SDK::Unity::SDKRender::IvokePostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::IvokePostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IvokePostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRenderBackground
void LIV::SDK::Unity::SDKRender::InvokePreRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::InvokePreRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePostRenderBackground
void LIV::SDK::Unity::SDKRender::InvokePostRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::InvokePostRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePostRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRenderForeground
void LIV::SDK::Unity::SDKRender::InvokePreRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::InvokePreRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePostRenderForeground
void LIV::SDK::Unity::SDKRender::InvokePostRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::InvokePostRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePostRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateBackgroundTexture
void LIV::SDK::Unity::SDKRender::CreateBackgroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::CreateBackgroundTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBackgroundTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateForegroundTexture
void LIV::SDK::Unity::SDKRender::CreateForegroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::CreateForegroundTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateForegroundTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateOptimizedTexture
void LIV::SDK::Unity::SDKRender::CreateOptimizedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::CreateOptimizedTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOptimizedTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateComplexClipPlaneTexture
void LIV::SDK::Unity::SDKRender::CreateComplexClipPlaneTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::CreateComplexClipPlaneTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComplexClipPlaneTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateTextures
void LIV::SDK::Unity::SDKRender::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SendTextureToBridge
void LIV::SDK::Unity::SDKRender::SendTextureToBridge(UnityEngine::RenderTexture* texture, LIV::SDK::Unity::TEXTURE_ID id) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKRender::SendTextureToBridge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTextureToBridge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKShaders
#include "LIV/SDK/Unity/SDKShaders.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_COLOR_MASK
int LIV::SDK::Unity::SDKShaders::_get_LIV_COLOR_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_COLOR_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_COLOR_MASK"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_COLOR_MASK
void LIV::SDK::Unity::SDKShaders::_set_LIV_COLOR_MASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_COLOR_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_COLOR_MASK", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_TESSELLATION_PROPERTY
int LIV::SDK::Unity::SDKShaders::_get_LIV_TESSELLATION_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_TESSELLATION_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_TESSELLATION_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_TESSELLATION_PROPERTY
void LIV::SDK::Unity::SDKShaders::_set_LIV_TESSELLATION_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_TESSELLATION_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_TESSELLATION_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY
int LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_FOREGROUND_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_FOREGROUND_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_MR_FOREGROUND_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_FOREGROUND_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_FOREGROUND_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_FOREGROUND_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_MR_FOREGROUND_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_FOREGROUND_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_BACKGROUND_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_BACKGROUND_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_MR_BACKGROUND_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_BACKGROUND_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_BACKGROUND_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_BACKGROUND_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_MR_BACKGROUND_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_BACKGROUND_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_MR_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_MR_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_SIMPLE_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_SIMPLE_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_COMPLEX_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_COMPLEX_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_WRITE_OPAQUE_TO_ALPHA_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_OPAQUE_TO_ALPHA_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_WRITE_OPAQUE_TO_ALPHA_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_OPAQUE_TO_ALPHA_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_COMBINE_ALPHA_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_COMBINE_ALPHA_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_COMBINE_ALPHA_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_COMBINE_ALPHA_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_COMBINE_ALPHA_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_COMBINE_ALPHA_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_COMBINE_ALPHA_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_COMBINE_ALPHA_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_WRITE_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_WRITE_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_FORCE_FORWARD_RENDERING_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_FORCE_FORWARD_RENDERING_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_get_LIV_FORCE_FORWARD_RENDERING_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_FORCE_FORWARD_RENDERING_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_FORCE_FORWARD_RENDERING_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_FORCE_FORWARD_RENDERING_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::_set_LIV_FORCE_FORWARD_RENDERING_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_FORCE_FORWARD_RENDERING_SHADER", value));
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders..cctor
void LIV::SDK::Unity::SDKShaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartRendering
void LIV::SDK::Unity::SDKShaders::StartRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::StartRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopRendering
void LIV::SDK::Unity::SDKShaders::StopRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::StopRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartForegroundRendering
void LIV::SDK::Unity::SDKShaders::StartForegroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::StartForegroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartForegroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopForegroundRendering
void LIV::SDK::Unity::SDKShaders::StopForegroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::StopForegroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopForegroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartBackgroundRendering
void LIV::SDK::Unity::SDKShaders::StartBackgroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::StartBackgroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartBackgroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopBackgroundRendering
void LIV::SDK::Unity::SDKShaders::StopBackgroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKShaders::StopBackgroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopBackgroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKConstants
#include "LIV/SDK/Unity/SDKConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String SDK_ID
::StringW LIV::SDK::Unity::SDKConstants::_get_SDK_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKConstants::_get_SDK_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "SDK_ID"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_ID
void LIV::SDK::Unity::SDKConstants::_set_SDK_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKConstants::_set_SDK_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "SDK_ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SDK_VERSION
::StringW LIV::SDK::Unity::SDKConstants::_get_SDK_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKConstants::_get_SDK_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "SDK_VERSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_VERSION
void LIV::SDK::Unity::SDKConstants::_set_SDK_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKConstants::_set_SDK_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "SDK_VERSION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENGINE_NAME
::StringW LIV::SDK::Unity::SDKConstants::_get_ENGINE_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKConstants::_get_ENGINE_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "ENGINE_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENGINE_NAME
void LIV::SDK::Unity::SDKConstants::_set_ENGINE_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKConstants::_set_ENGINE_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "ENGINE_NAME", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.PRIORITY
#include "LIV/SDK/Unity/PRIORITY.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.PRIORITY NONE
LIV::SDK::Unity::PRIORITY LIV::SDK::Unity::PRIORITY::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::PRIORITY::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::PRIORITY>("LIV.SDK.Unity", "PRIORITY", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.PRIORITY NONE
void LIV::SDK::Unity::PRIORITY::_set_NONE(LIV::SDK::Unity::PRIORITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::PRIORITY::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "PRIORITY", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.PRIORITY GAME
LIV::SDK::Unity::PRIORITY LIV::SDK::Unity::PRIORITY::_get_GAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::PRIORITY::_get_GAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::PRIORITY>("LIV.SDK.Unity", "PRIORITY", "GAME"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.PRIORITY GAME
void LIV::SDK::Unity::PRIORITY::_set_GAME(LIV::SDK::Unity::PRIORITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::PRIORITY::_set_GAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "PRIORITY", "GAME", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
int8_t& LIV::SDK::Unity::PRIORITY::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::PRIORITY::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.FEATURES
#include "LIV/SDK/Unity/FEATURES.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES NONE
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES NONE
void LIV::SDK::Unity::FEATURES::_set_NONE(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_RENDER
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_BACKGROUND_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_BACKGROUND_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "BACKGROUND_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_RENDER
void LIV::SDK::Unity::FEATURES::_set_BACKGROUND_RENDER(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_BACKGROUND_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "BACKGROUND_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES FOREGROUND_RENDER
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_FOREGROUND_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_FOREGROUND_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "FOREGROUND_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES FOREGROUND_RENDER
void LIV::SDK::Unity::FEATURES::_set_FOREGROUND_RENDER(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_FOREGROUND_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "FOREGROUND_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES COMPLEX_CLIP_PLANE
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_COMPLEX_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_COMPLEX_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "COMPLEX_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES COMPLEX_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_COMPLEX_CLIP_PLANE(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_COMPLEX_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "COMPLEX_CLIP_PLANE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_DEPTH_RENDER
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_BACKGROUND_DEPTH_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_BACKGROUND_DEPTH_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "BACKGROUND_DEPTH_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_DEPTH_RENDER
void LIV::SDK::Unity::FEATURES::_set_BACKGROUND_DEPTH_RENDER(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_BACKGROUND_DEPTH_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "BACKGROUND_DEPTH_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES OVERRIDE_POST_PROCESSING
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_OVERRIDE_POST_PROCESSING() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_OVERRIDE_POST_PROCESSING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "OVERRIDE_POST_PROCESSING"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES OVERRIDE_POST_PROCESSING
void LIV::SDK::Unity::FEATURES::_set_OVERRIDE_POST_PROCESSING(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_OVERRIDE_POST_PROCESSING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "OVERRIDE_POST_PROCESSING", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES FIX_FOREGROUND_ALPHA
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_FIX_FOREGROUND_ALPHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_FIX_FOREGROUND_ALPHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "FIX_FOREGROUND_ALPHA"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES FIX_FOREGROUND_ALPHA
void LIV::SDK::Unity::FEATURES::_set_FIX_FOREGROUND_ALPHA(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_FIX_FOREGROUND_ALPHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "FIX_FOREGROUND_ALPHA", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES GROUND_CLIP_PLANE
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_GROUND_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_GROUND_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "GROUND_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES GROUND_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_GROUND_CLIP_PLANE(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_GROUND_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "GROUND_CLIP_PLANE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES RELEASE_CONTROL
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_RELEASE_CONTROL() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_RELEASE_CONTROL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "RELEASE_CONTROL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES RELEASE_CONTROL
void LIV::SDK::Unity::FEATURES::_set_RELEASE_CONTROL(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_RELEASE_CONTROL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "RELEASE_CONTROL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES OPTIMIZED_RENDER
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_OPTIMIZED_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_OPTIMIZED_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "OPTIMIZED_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES OPTIMIZED_RENDER
void LIV::SDK::Unity::FEATURES::_set_OPTIMIZED_RENDER(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_OPTIMIZED_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "OPTIMIZED_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES INTERLACED_RENDER
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_INTERLACED_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_INTERLACED_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "INTERLACED_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES INTERLACED_RENDER
void LIV::SDK::Unity::FEATURES::_set_INTERLACED_RENDER(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_INTERLACED_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "INTERLACED_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES DEBUG_CLIP_PLANE
LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_DEBUG_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_get_DEBUG_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "DEBUG_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES DEBUG_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_DEBUG_CLIP_PLANE(LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::_set_DEBUG_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "DEBUG_CLIP_PLANE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
uint64_t& LIV::SDK::Unity::FEATURES::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::FEATURES::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_ID
#include "LIV/SDK/Unity/TEXTURE_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID UNDEFINED
LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID UNDEFINED
void LIV::SDK::Unity::TEXTURE_ID::_set_UNDEFINED(LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID BACKGROUND_COLOR_BUFFER_ID
LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_BACKGROUND_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::_get_BACKGROUND_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "BACKGROUND_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID BACKGROUND_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_BACKGROUND_COLOR_BUFFER_ID(LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::_set_BACKGROUND_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "BACKGROUND_COLOR_BUFFER_ID", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID FOREGROUND_COLOR_BUFFER_ID
LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_FOREGROUND_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::_get_FOREGROUND_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "FOREGROUND_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID FOREGROUND_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_FOREGROUND_COLOR_BUFFER_ID(LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::_set_FOREGROUND_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "FOREGROUND_COLOR_BUFFER_ID", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID OPTIMIZED_COLOR_BUFFER_ID
LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_OPTIMIZED_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::_get_OPTIMIZED_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "OPTIMIZED_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID OPTIMIZED_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_OPTIMIZED_COLOR_BUFFER_ID(LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::_set_OPTIMIZED_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "OPTIMIZED_COLOR_BUFFER_ID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_ID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_ID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_TYPE
#include "LIV/SDK/Unity/TEXTURE_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_TYPE UNDEFINED
LIV::SDK::Unity::TEXTURE_TYPE LIV::SDK::Unity::TEXTURE_TYPE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_TYPE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_TYPE>("LIV.SDK.Unity", "TEXTURE_TYPE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_TYPE UNDEFINED
void LIV::SDK::Unity::TEXTURE_TYPE::_set_UNDEFINED(LIV::SDK::Unity::TEXTURE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_TYPE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_TYPE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_TYPE COLOR_BUFFER
LIV::SDK::Unity::TEXTURE_TYPE LIV::SDK::Unity::TEXTURE_TYPE::_get_COLOR_BUFFER() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_TYPE::_get_COLOR_BUFFER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_TYPE>("LIV.SDK.Unity", "TEXTURE_TYPE", "COLOR_BUFFER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_TYPE COLOR_BUFFER
void LIV::SDK::Unity::TEXTURE_TYPE::_set_COLOR_BUFFER(LIV::SDK::Unity::TEXTURE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_TYPE::_set_COLOR_BUFFER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_TYPE", "COLOR_BUFFER", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_FORMAT
#include "LIV/SDK/Unity/TEXTURE_FORMAT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_FORMAT UNDEFINED
LIV::SDK::Unity::TEXTURE_FORMAT LIV::SDK::Unity::TEXTURE_FORMAT::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_FORMAT::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_FORMAT>("LIV.SDK.Unity", "TEXTURE_FORMAT", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_FORMAT UNDEFINED
void LIV::SDK::Unity::TEXTURE_FORMAT::_set_UNDEFINED(LIV::SDK::Unity::TEXTURE_FORMAT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_FORMAT::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_FORMAT", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_FORMAT ARGB32
LIV::SDK::Unity::TEXTURE_FORMAT LIV::SDK::Unity::TEXTURE_FORMAT::_get_ARGB32() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_FORMAT::_get_ARGB32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_FORMAT>("LIV.SDK.Unity", "TEXTURE_FORMAT", "ARGB32"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_FORMAT ARGB32
void LIV::SDK::Unity::TEXTURE_FORMAT::_set_ARGB32(LIV::SDK::Unity::TEXTURE_FORMAT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_FORMAT::_set_ARGB32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_FORMAT", "ARGB32", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_FORMAT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_FORMAT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_DEVICE
#include "LIV/SDK/Unity/TEXTURE_DEVICE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE UNDEFINED
LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE UNDEFINED
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_UNDEFINED(LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE RAW
LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_RAW() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_get_RAW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "RAW"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE RAW
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_RAW(LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_set_RAW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "RAW", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE DIRECTX
LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_DIRECTX() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_get_DIRECTX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "DIRECTX"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE DIRECTX
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_DIRECTX(LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_set_DIRECTX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "DIRECTX", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE OPENGL
LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_OPENGL() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_get_OPENGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "OPENGL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE OPENGL
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_OPENGL(LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_set_OPENGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "OPENGL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE VULKAN
LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_VULKAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_get_VULKAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "VULKAN"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE VULKAN
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_VULKAN(LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_set_VULKAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "VULKAN", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE METAL
LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_METAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_get_METAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "METAL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE METAL
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_METAL(LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::_set_METAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "METAL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_DEVICE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_DEVICE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_COLOR_SPACE
#include "LIV/SDK/Unity/TEXTURE_COLOR_SPACE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE UNDEFINED
LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE UNDEFINED
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_UNDEFINED(LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE LINEAR
LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_LINEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_LINEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "LINEAR"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE LINEAR
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_LINEAR(LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_LINEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "LINEAR", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE SRGB
LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_SRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_SRGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "SRGB"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE SRGB
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_SRGB(LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_SRGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "SRGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_COLOR_SPACE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::TEXTURE_COLOR_SPACE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.RENDERING_PIPELINE
#include "LIV/SDK/Unity/RENDERING_PIPELINE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNDEFINED(LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_FORWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_get_FORWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "FORWARD"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_FORWARD(LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_set_FORWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "FORWARD", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_DEFERRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_get_DEFERRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "DEFERRED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_DEFERRED(LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_set_DEFERRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "DEFERRED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_VERTEX_LIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_get_VERTEX_LIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "VERTEX_LIT"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_VERTEX_LIT(LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_set_VERTEX_LIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "VERTEX_LIT", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNIVERSAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNIVERSAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNIVERSAL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNIVERSAL(LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNIVERSAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNIVERSAL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_HIGH_DEFINITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_get_HIGH_DEFINITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "HIGH_DEFINITION"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_HIGH_DEFINITION(LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::_set_HIGH_DEFINITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "HIGH_DEFINITION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::RENDERING_PIPELINE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::RENDERING_PIPELINE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKResolution
#include "LIV/SDK/Unity/SDKResolution.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKResolution::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKResolution::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKResolution::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKResolution::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKResolution.get_zero
LIV::SDK::Unity::SDKResolution LIV::SDK::Unity::SDKResolution::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKResolution::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKResolution", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKResolution, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKResolution.ToString
::StringW LIV::SDK::Unity::SDKResolution::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKResolution::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& LIV::SDK::Unity::SDKVector3::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& LIV::SDK::Unity::SDKVector3::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& LIV::SDK::Unity::SDKVector3::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_zero
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_one
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_forward
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_up
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_right
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.ToString
::StringW LIV::SDK::Unity::SDKVector3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Addition
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator+(const LIV::SDK::Unity::SDKVector3& lhs, const LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Subtraction
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator-(const LIV::SDK::Unity::SDKVector3& lhs, const LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Multiply
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const LIV::SDK::Unity::SDKVector3& lhs, const LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Multiply
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const LIV::SDK::Unity::SDKVector3& lhs, const float& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKQuaternion
#include "LIV/SDK/Unity/SDKQuaternion.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& LIV::SDK::Unity::SDKQuaternion::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& LIV::SDK::Unity::SDKQuaternion::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& LIV::SDK::Unity::SDKQuaternion::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
float& LIV::SDK::Unity::SDKQuaternion::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.get_identity
LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::SDKQuaternion::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.Euler
LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::SDKQuaternion::Euler(float pitch, float yaw, float roll) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::Euler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "Euler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(yaw), ::il2cpp_utils::ExtractType(roll)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pitch, yaw, roll);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.ToString
::StringW LIV::SDK::Unity::SDKQuaternion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.op_Multiply
LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::operator*(const LIV::SDK::Unity::SDKQuaternion& lhs, const LIV::SDK::Unity::SDKQuaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.op_Multiply
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const LIV::SDK::Unity::SDKQuaternion& lhs, const LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKQuaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKMatrix4x4
#include "LIV/SDK/Unity/SDKMatrix4x4.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
// Including type: LIV.SDK.Unity.SDKQuaternion
#include "LIV/SDK/Unity/SDKQuaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single m00
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m00() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m00"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m01
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m01() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m01");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m02
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m02() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m02");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m02"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m03
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m03() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m03");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m03"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m10
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m10() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m11
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m11() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m12
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m12() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m13
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m13() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m20
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m20() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m20"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m21
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m21() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m21"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m22
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m22() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m22"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m23
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m23() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m23"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m30
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m30() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m30"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m31
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m31() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m31"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m32
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m32() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m32"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m33
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m33() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::dyn_m33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m33"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.get_identity
LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Perspective
LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Perspective(float vFov, float aspect, float zNear, float zFar) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::Perspective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Perspective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vFov), ::il2cpp_utils::ExtractType(aspect), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vFov, aspect, zNear, zFar);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Translate
LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Translate(LIV::SDK::Unity::SDKVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Rotate
LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Rotate(LIV::SDK::Unity::SDKQuaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Scale
LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Scale(LIV::SDK::Unity::SDKVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.TRS
LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::TRS(LIV::SDK::Unity::SDKVector3 translation, LIV::SDK::Unity::SDKQuaternion rotation, LIV::SDK::Unity::SDKVector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::TRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "TRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, translation, rotation, scale);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.ToString
::StringW LIV::SDK::Unity::SDKMatrix4x4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.op_Multiply
LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::operator*(const LIV::SDK::Unity::SDKMatrix4x4& lhs, const LIV::SDK::Unity::SDKMatrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.op_Multiply
LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const LIV::SDK::Unity::SDKMatrix4x4& lhs, const LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKMatrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPlane
#include "LIV/SDK/Unity/SDKPlane.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single distance
float& LIV::SDK::Unity::SDKPlane::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPlane::dyn_distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 normal
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKPlane::dyn_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPlane::dyn_normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normal"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPlane.get_empty
LIV::SDK::Unity::SDKPlane LIV::SDK::Unity::SDKPlane::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPlane::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPlane", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKPlane, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPlane.ToString
::StringW LIV::SDK::Unity::SDKPlane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPlane::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPriority
#include "LIV/SDK/Unity/SDKPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.SByte pose
int8_t& LIV::SDK::Unity::SDKPriority::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::dyn_pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte clipPlane
int8_t& LIV::SDK::Unity::SDKPriority::dyn_clipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::dyn_clipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPlane"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte stage
int8_t& LIV::SDK::Unity::SDKPriority::dyn_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::dyn_stage");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stage"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte resolution
int8_t& LIV::SDK::Unity::SDKPriority::dyn_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::dyn_resolution");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolution"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte feature
int8_t& LIV::SDK::Unity::SDKPriority::dyn_feature() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::dyn_feature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feature"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte nearFarAdjustment
int8_t& LIV::SDK::Unity::SDKPriority::dyn_nearFarAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::dyn_nearFarAdjustment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearFarAdjustment"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte groundPlane
int8_t& LIV::SDK::Unity::SDKPriority::dyn_groundPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::dyn_groundPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundPlane"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte reserved2
int8_t& LIV::SDK::Unity::SDKPriority::dyn_reserved2() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::dyn_reserved2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reserved2"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPriority.get_empty
LIV::SDK::Unity::SDKPriority LIV::SDK::Unity::SDKPriority::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPriority", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKPriority, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPriority.ToString
::StringW LIV::SDK::Unity::SDKPriority::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPriority::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKApplicationOutput
#include "LIV/SDK/Unity/SDKApplicationOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.FEATURES supportedFeatures
LIV::SDK::Unity::FEATURES& LIV::SDK::Unity::SDKApplicationOutput::dyn_supportedFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_supportedFeatures");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportedFeatures"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::FEATURES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String engineName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_engineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_engineName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "engineName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String engineVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_engineVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_engineVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "engineVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String applicationName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String applicationVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String xrDeviceName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_xrDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_xrDeviceName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrDeviceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String graphicsAPI
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_graphicsAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_graphicsAPI");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphicsAPI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sdkID
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sdkVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKApplicationOutput.get_empty
LIV::SDK::Unity::SDKApplicationOutput LIV::SDK::Unity::SDKApplicationOutput::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKApplicationOutput", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKApplicationOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKApplicationOutput.ToString
::StringW LIV::SDK::Unity::SDKApplicationOutput::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKApplicationOutput::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKInputFrame
#include "LIV/SDK/Unity/SDKInputFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKPose pose
LIV::SDK::Unity::SDKPose& LIV::SDK::Unity::SDKInputFrame::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::dyn_pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKClipPlane clipPlane
LIV::SDK::Unity::SDKClipPlane& LIV::SDK::Unity::SDKInputFrame::dyn_clipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::dyn_clipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPlane"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKClipPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKTransform stageTransform
LIV::SDK::Unity::SDKTransform& LIV::SDK::Unity::SDKInputFrame::dyn_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::dyn_stageTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stageTransform"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.FEATURES features
LIV::SDK::Unity::FEATURES& LIV::SDK::Unity::SDKInputFrame::dyn_features() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::dyn_features");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "features"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::FEATURES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKClipPlane groundClipPlane
LIV::SDK::Unity::SDKClipPlane& LIV::SDK::Unity::SDKInputFrame::dyn_groundClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::dyn_groundClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundClipPlane"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKClipPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 frameid
uint64_t& LIV::SDK::Unity::SDKInputFrame::dyn_frameid() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::dyn_frameid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameid"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 referenceframe
uint64_t& LIV::SDK::Unity::SDKInputFrame::dyn_referenceframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::dyn_referenceframe");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceframe"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKPriority priority
LIV::SDK::Unity::SDKPriority& LIV::SDK::Unity::SDKInputFrame::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::dyn_priority");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.get_empty
LIV::SDK::Unity::SDKInputFrame LIV::SDK::Unity::SDKInputFrame::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKInputFrame", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKInputFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ReleaseControl
void LIV::SDK::Unity::SDKInputFrame::ReleaseControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::ReleaseControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReleaseControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ObtainControl
void LIV::SDK::Unity::SDKInputFrame::ObtainControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::ObtainControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ObtainControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ToString
::StringW LIV::SDK::Unity::SDKInputFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKInputFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKOutputFrame
#include "LIV/SDK/Unity/SDKOutputFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.RENDERING_PIPELINE renderingPipeline
LIV::SDK::Unity::RENDERING_PIPELINE& LIV::SDK::Unity::SDKOutputFrame::dyn_renderingPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKOutputFrame::dyn_renderingPipeline");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderingPipeline"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::RENDERING_PIPELINE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKTrackedSpace trackedSpace
LIV::SDK::Unity::SDKTrackedSpace& LIV::SDK::Unity::SDKOutputFrame::dyn_trackedSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKOutputFrame::dyn_trackedSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpace"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKTrackedSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKOutputFrame.get_empty
LIV::SDK::Unity::SDKOutputFrame LIV::SDK::Unity::SDKOutputFrame::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKOutputFrame::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKOutputFrame", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKOutputFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKOutputFrame.ToString
::StringW LIV::SDK::Unity::SDKOutputFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKOutputFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTrackedSpace
#include "LIV/SDK/Unity/SDKTrackedSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 trackedSpaceWorldPosition
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldPosition"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion trackedSpaceWorldRotation
LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldRotation"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 trackedSpaceLocalScale
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceLocalScale"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 trackedSpaceLocalToWorldMatrix
LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalToWorldMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceLocalToWorldMatrix"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 trackedSpaceWorldToLocalMatrix
LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldToLocalMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldToLocalMatrix"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTrackedSpace.get_empty
LIV::SDK::Unity::SDKTrackedSpace LIV::SDK::Unity::SDKTrackedSpace::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTrackedSpace::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTrackedSpace", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKTrackedSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTrackedSpace.ToString
::StringW LIV::SDK::Unity::SDKTrackedSpace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTrackedSpace::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTexture
#include "LIV/SDK/Unity/SDKTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_ID id
LIV::SDK::Unity::TEXTURE_ID& LIV::SDK::Unity::SDKTexture::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::TEXTURE_ID*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr texturePtr
System::IntPtr& LIV::SDK::Unity::SDKTexture::dyn_texturePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_texturePtr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texturePtr"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr SharedHandle
System::IntPtr& LIV::SDK::Unity::SDKTexture::dyn_SharedHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_SharedHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SharedHandle"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_DEVICE device
LIV::SDK::Unity::TEXTURE_DEVICE& LIV::SDK::Unity::SDKTexture::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_device");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::TEXTURE_DEVICE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 dummy
int& LIV::SDK::Unity::SDKTexture::dyn_dummy() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_dummy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dummy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_TYPE type
LIV::SDK::Unity::TEXTURE_TYPE& LIV::SDK::Unity::SDKTexture::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::TEXTURE_TYPE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_FORMAT format
LIV::SDK::Unity::TEXTURE_FORMAT& LIV::SDK::Unity::SDKTexture::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_format");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::TEXTURE_FORMAT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_COLOR_SPACE colorSpace
LIV::SDK::Unity::TEXTURE_COLOR_SPACE& LIV::SDK::Unity::SDKTexture::dyn_colorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_colorSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSpace"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::TEXTURE_COLOR_SPACE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKTexture::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKTexture::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTexture.get_empty
LIV::SDK::Unity::SDKTexture LIV::SDK::Unity::SDKTexture::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTexture", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKTexture, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTexture.ToString
::StringW LIV::SDK::Unity::SDKTexture::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTexture::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTransform
#include "LIV/SDK/Unity/SDKTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localPosition
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTransform::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTransform::dyn_localPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion localRotation
LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKTransform::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTransform::dyn_localRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localScale
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTransform::dyn_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTransform::dyn_localScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localScale"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTransform.get_empty
LIV::SDK::Unity::SDKTransform LIV::SDK::Unity::SDKTransform::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTransform::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTransform", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTransform.ToString
::StringW LIV::SDK::Unity::SDKTransform::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKTransform::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKClipPlane
#include "LIV/SDK/Unity/SDKClipPlane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 transform
LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKClipPlane::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKClipPlane::dyn_transform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKClipPlane::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKClipPlane::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKClipPlane::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKClipPlane::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tesselation
float& LIV::SDK::Unity::SDKClipPlane::dyn_tesselation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKClipPlane::dyn_tesselation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tesselation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKClipPlane.get_empty
LIV::SDK::Unity::SDKClipPlane LIV::SDK::Unity::SDKClipPlane::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKClipPlane::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKClipPlane", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKClipPlane, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKClipPlane.ToString
::StringW LIV::SDK::Unity::SDKClipPlane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKClipPlane::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKControllerState
#include "LIV/SDK/Unity/SDKControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 hmdposition
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_hmdposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_hmdposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdposition"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion hmdrotation
LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_hmdrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_hmdrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdrotation"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 calibrationcameraposition
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_calibrationcameraposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_calibrationcameraposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationcameraposition"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion calibrationcamerarotation
LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_calibrationcamerarotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_calibrationcamerarotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationcamerarotation"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 cameraposition
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_cameraposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_cameraposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraposition"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion camerarotation
LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_camerarotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_camerarotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camerarotation"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 leftposition
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_leftposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_leftposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftposition"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion leftrotation
LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_leftrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_leftrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftrotation"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 rightposition
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_rightposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_rightposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightposition"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion rightrotation
LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_rightrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::dyn_rightrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightrotation"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKControllerState.get_empty
LIV::SDK::Unity::SDKControllerState LIV::SDK::Unity::SDKControllerState::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKControllerState", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKControllerState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKControllerState.ToString
::StringW LIV::SDK::Unity::SDKControllerState::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKControllerState::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPose
#include "LIV/SDK/Unity/SDKPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 projectionMatrix
LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKPose::dyn_projectionMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::dyn_projectionMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectionMatrix"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localPosition
LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKPose::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::dyn_localPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion localRotation
LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKPose::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::dyn_localRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single verticalFieldOfView
float& LIV::SDK::Unity::SDKPose::dyn_verticalFieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::dyn_verticalFieldOfView");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verticalFieldOfView"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nearClipPlane
float& LIV::SDK::Unity::SDKPose::dyn_nearClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::dyn_nearClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearClipPlane"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single farClipPlane
float& LIV::SDK::Unity::SDKPose::dyn_farClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::dyn_farClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "farClipPlane"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unused0
int& LIV::SDK::Unity::SDKPose::dyn_unused0() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::dyn_unused0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unused1
int& LIV::SDK::Unity::SDKPose::dyn_unused1() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::dyn_unused1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPose.get_empty
LIV::SDK::Unity::SDKPose LIV::SDK::Unity::SDKPose::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPose", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPose.ToString
::StringW LIV::SDK::Unity::SDKPose::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKPose::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKUtils
#include "LIV/SDK/Unity/SDKUtils.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_COLOR_SPACE
#include "LIV/SDK/Unity/TEXTURE_COLOR_SPACE.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.RenderTextureReadWrite
#include "UnityEngine/RenderTextureReadWrite.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: LIV.SDK.Unity.RENDERING_PIPELINE
#include "LIV/SDK/Unity/RENDERING_PIPELINE.hpp"
// Including type: UnityEngine.RenderingPath
#include "UnityEngine/RenderingPath.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_DEVICE
#include "LIV/SDK/Unity/TEXTURE_DEVICE.hpp"
// Including type: LIV.SDK.Unity.SDKPose
#include "LIV/SDK/Unity/SDKPose.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: LIV.SDK.Unity.SDKInputFrame
#include "LIV/SDK/Unity/SDKInputFrame.hpp"
// Including type: LIV.SDK.Unity.SDKTrackedSpace
#include "LIV/SDK/Unity/SDKTrackedSpace.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.RenderTextureFormat
#include "UnityEngine/RenderTextureFormat.hpp"
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: LIV.SDK.Unity.FEATURES
#include "LIV/SDK/Unity/FEATURES.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LIV.SDK.Unity.SDKUtils.get_GetDefaultColorSpace
LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::SDKUtils::get_GetDefaultColorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::get_GetDefaultColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "get_GetDefaultColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::TEXTURE_COLOR_SPACE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateClipPlane
void LIV::SDK::Unity::SDKUtils::CreateClipPlane(UnityEngine::Mesh* mesh, int resX, int resY, bool useQuads, float skirtLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::CreateClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(resX), ::il2cpp_utils::ExtractType(resY), ::il2cpp_utils::ExtractType(useQuads), ::il2cpp_utils::ExtractType(skirtLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mesh, resX, resY, useQuads, skirtLength);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetReadWriteFromColorSpace
UnityEngine::RenderTextureReadWrite LIV::SDK::Unity::SDKUtils::GetReadWriteFromColorSpace(LIV::SDK::Unity::TEXTURE_COLOR_SPACE colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::GetReadWriteFromColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetReadWriteFromColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::RenderTextureReadWrite, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetColorSpace
LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::SDKUtils::GetColorSpace(UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::GetColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::TEXTURE_COLOR_SPACE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderTexture);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetRenderingPipeline
LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::SDKUtils::GetRenderingPipeline(UnityEngine::RenderingPath renderingPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::GetRenderingPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetRenderingPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderingPath)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::RENDERING_PIPELINE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderingPath);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetDevice
LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::SDKUtils::GetDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::GetDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::TEXTURE_DEVICE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ContainsFlag
bool LIV::SDK::Unity::SDKUtils::ContainsFlag(uint64_t flags, uint64_t flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::ContainsFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ContainsFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, flag);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.SetFlag
uint64_t LIV::SDK::Unity::SDKUtils::SetFlag(uint64_t flags, uint64_t flag, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::SetFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "SetFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, flag, enabled);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetCameraPositionAndRotation
void LIV::SDK::Unity::SDKUtils::GetCameraPositionAndRotation(LIV::SDK::Unity::SDKPose pose, UnityEngine::Matrix4x4 originLocalToWorldMatrix, ByRef<UnityEngine::Vector3> position, ByRef<UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::GetCameraPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetCameraPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(originLocalToWorldMatrix), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pose, originLocalToWorldMatrix, byref(position), byref(rotation));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CleanCameraBehaviours
void LIV::SDK::Unity::SDKUtils::CleanCameraBehaviours(UnityEngine::Camera* camera, ::ArrayW<::StringW> excludeBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::CleanCameraBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CleanCameraBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(excludeBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, excludeBehaviours);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.SetCamera
void LIV::SDK::Unity::SDKUtils::SetCamera(UnityEngine::Camera* camera, UnityEngine::Transform* cameraTransform, LIV::SDK::Unity::SDKInputFrame inputFrame, UnityEngine::Matrix4x4 originLocalToWorldMatrix, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::SetCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "SetCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cameraTransform), ::il2cpp_utils::ExtractType(inputFrame), ::il2cpp_utils::ExtractType(originLocalToWorldMatrix), ::il2cpp_utils::ExtractType(layerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, cameraTransform, inputFrame, originLocalToWorldMatrix, layerMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.RotateQuaternionByMatrix
UnityEngine::Quaternion LIV::SDK::Unity::SDKUtils::RotateQuaternionByMatrix(UnityEngine::Matrix4x4 matrix, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::RotateQuaternionByMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "RotateQuaternionByMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matrix, rotation);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetTrackedSpace
LIV::SDK::Unity::SDKTrackedSpace LIV::SDK::Unity::SDKUtils::GetTrackedSpace(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::GetTrackedSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetTrackedSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<LIV::SDK::Unity::SDKTrackedSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateTexture
bool LIV::SDK::Unity::SDKUtils::CreateTexture(ByRef<UnityEngine::RenderTexture*> renderTexture, int width, int height, int depth, UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::CreateTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(renderTexture), width, height, depth, format);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.DestroyTexture
void LIV::SDK::Unity::SDKUtils::DestroyTexture(ByRef<UnityEngine::RenderTexture*> _renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::DestroyTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "DestroyTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_renderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_renderTexture));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ApplyUserSpaceTransform
void LIV::SDK::Unity::SDKUtils::ApplyUserSpaceTransform(LIV::SDK::Unity::SDKRender* render) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::ApplyUserSpaceTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ApplyUserSpaceTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(render)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, render);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateBridgeOutputFrame
void LIV::SDK::Unity::SDKUtils::CreateBridgeOutputFrame(LIV::SDK::Unity::SDKRender* render) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::CreateBridgeOutputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateBridgeOutputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(render)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, render);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.FeatureEnabled
bool LIV::SDK::Unity::SDKUtils::FeatureEnabled(LIV::SDK::Unity::FEATURES features, LIV::SDK::Unity::FEATURES feature) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::FeatureEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "FeatureEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(features), ::il2cpp_utils::ExtractType(feature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, features, feature);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.DisableStandardAssets
void LIV::SDK::Unity::SDKUtils::DisableStandardAssets(UnityEngine::Camera* cameraInstance, ByRef<::ArrayW<UnityEngine::MonoBehaviour*>> behaviours, ByRef<::ArrayW<bool>> wasBehaviourEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::DisableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "DisableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraInstance), ::il2cpp_utils::ExtractType(behaviours), ::il2cpp_utils::ExtractType(wasBehaviourEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraInstance, byref(behaviours), byref(wasBehaviourEnabled));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.RestoreStandardAssets
void LIV::SDK::Unity::SDKUtils::RestoreStandardAssets(ByRef<::ArrayW<UnityEngine::MonoBehaviour*>> behaviours, ByRef<::ArrayW<bool>> wasBehaviourEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::RestoreStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "RestoreStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviours), ::il2cpp_utils::ExtractType(wasBehaviourEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(behaviours), byref(wasBehaviourEnabled));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ForceForwardRendering
void LIV::SDK::Unity::SDKUtils::ForceForwardRendering(UnityEngine::Camera* cameraInstance, UnityEngine::Mesh* clipPlaneMesh, UnityEngine::Material* forceForwardRenderingMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::SDKUtils::ForceForwardRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ForceForwardRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraInstance), ::il2cpp_utils::ExtractType(clipPlaneMesh), ::il2cpp_utils::ExtractType(forceForwardRenderingMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraInstance, clipPlaneMesh, forceForwardRenderingMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentShaderWarmup
#include "GlobalNamespace/EnvironmentShaderWarmup.hpp"
// Including type: EnvironmentShaderWarmup/<Start>d__6
#include "GlobalNamespace/EnvironmentShaderWarmup_-Start-d__6.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kNumberOfColumns
int GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfColumns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentShaderWarmup", "kNumberOfColumns"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kNumberOfColumns
void GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfColumns(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfColumns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentShaderWarmup", "kNumberOfColumns", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kNumberOfRows
int GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfRows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentShaderWarmup", "kNumberOfRows"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kNumberOfRows
void GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfRows(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfRows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentShaderWarmup", "kNumberOfRows", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] _materials
::ArrayW<UnityEngine::Material*>& GlobalNamespace::EnvironmentShaderWarmup::dyn__materials() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::dyn__materials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materials"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainCamera _mainCamera
GlobalNamespace::MainCamera*& GlobalNamespace::EnvironmentShaderWarmup::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager*& GlobalNamespace::EnvironmentShaderWarmup::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _parentingTransform
UnityEngine::Transform*& GlobalNamespace::EnvironmentShaderWarmup::dyn__parentingTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::dyn__parentingTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentingTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentShaderWarmup.Start
System::Collections::IEnumerator* GlobalNamespace::EnvironmentShaderWarmup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentShaderWarmup/<Start>d__6
#include "GlobalNamespace/EnvironmentShaderWarmup_-Start-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentShaderWarmup <>4__this
GlobalNamespace::EnvironmentShaderWarmup*& GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentShaderWarmup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.System.IDisposable.Dispose
void GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.MoveNext
bool GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: BTSCharacterMaterialSwitcher
#include "GlobalNamespace/BTSCharacterMaterialSwitcher.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _characterName
::StringW& GlobalNamespace::BTSCharacter::dyn__characterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::dyn__characterName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
UnityEngine::Animator*& GlobalNamespace::BTSCharacter::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacterMaterialSwitcher _btsCharacterMaterialSwitcher
GlobalNamespace::BTSCharacterMaterialSwitcher*& GlobalNamespace::BTSCharacter::dyn__btsCharacterMaterialSwitcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::dyn__btsCharacterMaterialSwitcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharacterMaterialSwitcher"))->offset;
  return *reinterpret_cast<GlobalNamespace::BTSCharacterMaterialSwitcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::BTSCharacter::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
UnityEngine::Transform*& GlobalNamespace::BTSCharacter::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacter.get_characterName
::StringW GlobalNamespace::BTSCharacter::get_characterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::get_characterName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController* GlobalNamespace::BTSCharacter::get_materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::get_materialPropertyBlockController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialPropertyBlockController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<GlobalNamespace::MaterialPropertyBlockController*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_animator
UnityEngine::Animator* GlobalNamespace::BTSCharacter::get_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::get_animator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Animator*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_headTransform
UnityEngine::Transform* GlobalNamespace::BTSCharacter::get_headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::get_headTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.SetAlternativeAnimationAndMaterial
void GlobalNamespace::BTSCharacter::SetAlternativeAnimationAndMaterial(UnityEngine::AnimationClip* animation, bool alternativeMaterialOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::SetAlternativeAnimationAndMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlternativeAnimationAndMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(alternativeMaterialOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, alternativeMaterialOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterDataModel
#include "GlobalNamespace/BTSCharacterDataModel.hpp"
// Including type: BTSCharacterDataModel/PrefabWithId
#include "GlobalNamespace/BTSCharacterDataModel_PrefabWithId.hpp"
// Including type: BTSCharacterDataModel/AnimationClipWithId
#include "GlobalNamespace/BTSCharacterDataModel_AnimationClipWithId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BTSCharacterDataModel/PrefabWithId[] _prefabsWithIds
::ArrayW<GlobalNamespace::BTSCharacterDataModel::PrefabWithId*>& GlobalNamespace::BTSCharacterDataModel::dyn__prefabsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::dyn__prefabsWithIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabsWithIds"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BTSCharacterDataModel::PrefabWithId*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacterDataModel/AnimationClipWithId[] _animationClipsWithIds
::ArrayW<GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*>& GlobalNamespace::BTSCharacterDataModel::dyn__animationClipsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::dyn__animationClipsWithIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationClipsWithIds"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterDataModel.get_prefabsWithIds
::ArrayW<GlobalNamespace::BTSCharacterDataModel::PrefabWithId*> GlobalNamespace::BTSCharacterDataModel::get_prefabsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::get_prefabsWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabsWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<GlobalNamespace::BTSCharacterDataModel::PrefabWithId*>, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel.get_animationClipsWithIds
::ArrayW<GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*> GlobalNamespace::BTSCharacterDataModel::get_animationClipsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::get_animationClipsWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClipsWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterDataModel/PrefabWithId
#include "GlobalNamespace/BTSCharacterDataModel_PrefabWithId.hpp"
// Including type: UnityEngine.AddressableAssets.AssetReference
#include "UnityEngine/AddressableAssets/AssetReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _id
int& GlobalNamespace::BTSCharacterDataModel::PrefabWithId::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::PrefabWithId::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.AssetReference _prefabAssetReference
UnityEngine::AddressableAssets::AssetReference*& GlobalNamespace::BTSCharacterDataModel::PrefabWithId::dyn__prefabAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::PrefabWithId::dyn__prefabAssetReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabAssetReference"))->offset;
  return *reinterpret_cast<UnityEngine::AddressableAssets::AssetReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterDataModel/PrefabWithId.get_id
int GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel/PrefabWithId.get_prefabAssetReference
UnityEngine::AddressableAssets::AssetReference* GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_prefabAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_prefabAssetReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabAssetReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::AddressableAssets::AssetReference*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterDataModel/AnimationClipWithId
#include "GlobalNamespace/BTSCharacterDataModel_AnimationClipWithId.hpp"
// Including type: UnityEngine.AddressableAssets.AssetReference
#include "UnityEngine/AddressableAssets/AssetReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _id
int& GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.AssetReference _animationClipAssetReference
UnityEngine::AddressableAssets::AssetReference*& GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::dyn__animationClipAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::dyn__animationClipAssetReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationClipAssetReference"))->offset;
  return *reinterpret_cast<UnityEngine::AddressableAssets::AssetReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterDataModel/AnimationClipWithId.get_id
int GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel/AnimationClipWithId.get_animationClipAssetReference
UnityEngine::AddressableAssets::AssetReference* GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_animationClipAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_animationClipAssetReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClipAssetReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::AddressableAssets::AssetReference*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterMaterialSwitcher
#include "GlobalNamespace/BTSCharacterMaterialSwitcher.hpp"
// Including type: BTSCharacterMaterialSwitcher/RendererMaterialsPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_RendererMaterialsPairs.hpp"
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BTSCharacterMaterialSwitcher/RendererMaterialsPairs[] _rendererMaterialsPairs
::ArrayW<GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs*>& GlobalNamespace::BTSCharacterMaterialSwitcher::dyn__rendererMaterialsPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::dyn__rendererMaterialsPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rendererMaterialsPairs"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterMaterialSwitcher.SwapMaterials
void GlobalNamespace::BTSCharacterMaterialSwitcher::SwapMaterials(bool alternative) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::SwapMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alternative)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alternative);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterMaterialSwitcher/RendererMaterialsPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_RendererMaterialsPairs.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
UnityEngine::Renderer*& GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BTSCharacterMaterialSwitcher/MaterialPairs> _materialPairs
System::Collections::Generic::List_1<GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>*& GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::dyn__materialPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::dyn__materialPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPairs"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterMaterialSwitcher/RendererMaterialsPairs.get_renderer
UnityEngine::Renderer* GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterMaterialSwitcher/RendererMaterialsPairs.get_materialPairs
System::Collections::Generic::List_1<GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>* GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_materialPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_materialPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialIndex
int& GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_materialIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_materialIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material defaultMaterial
UnityEngine::Material*& GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_defaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_defaultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material alternativeMaterial
UnityEngine::Material*& GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_alternativeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_alternativeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alternativeMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterResultAnimationController
#include "GlobalNamespace/BTSCharacterResultAnimationController.hpp"
// Including type: MaterialPropertyBlockColorSetter
#include "GlobalNamespace/MaterialPropertyBlockColorSetter.hpp"
// Including type: MaterialPropertyBlockFloatAnimator
#include "GlobalNamespace/MaterialPropertyBlockFloatAnimator.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockColorSetter _rimLightColorSetter
GlobalNamespace::MaterialPropertyBlockColorSetter*& GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightColorSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockFloatAnimator _rimLightIntensityAnimator
GlobalNamespace::MaterialPropertyBlockFloatAnimator*& GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightIntensityAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightIntensityAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightIntensityAnimator"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockFloatAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockFloatAnimator _rimLightEdgeStartAnimator
GlobalNamespace::MaterialPropertyBlockFloatAnimator*& GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightEdgeStartAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightEdgeStartAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightEdgeStartAnimator"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockFloatAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _collidersGameObject
UnityEngine::GameObject*& GlobalNamespace::BTSCharacterResultAnimationController::dyn__collidersGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterResultAnimationController::dyn__collidersGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collidersGameObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterResultAnimationController.SetCharacter
void GlobalNamespace::BTSCharacterResultAnimationController::SetCharacter(GlobalNamespace::BTSCharacter* btsCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterResultAnimationController::SetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btsCharacter);
}
// Autogenerated method: BTSCharacterResultAnimationController.StopAnimation
void GlobalNamespace::BTSCharacterResultAnimationController::StopAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterResultAnimationController::StopAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
