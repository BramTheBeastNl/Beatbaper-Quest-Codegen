// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_ID
uint64_t Oculus::Platform::Models::NetworkingPeer::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::NetworkingPeer::get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_ID
void Oculus::Platform::Models::NetworkingPeer::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::NetworkingPeer::set_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_State
Oculus::Platform::PeerConnectionState Oculus::Platform::Models::NetworkingPeer::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::NetworkingPeer::get_State");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::PeerConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_State
void Oculus::Platform::Models::NetworkingPeer::set_State(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::NetworkingPeer::set_State");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Models.PingResult.get_ID
uint64_t Oculus::Platform::Models::PingResult::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::PingResult::get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.set_ID
void Oculus::Platform::Models::PingResult::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::PingResult::set_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_PingTimeUsec
uint64_t Oculus::Platform::Models::PingResult::get_PingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::PingResult::get_PingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PingTimeUsec", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_IsTimeout
bool Oculus::Platform::Models::PingResult::get_IsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::PingResult::get_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizationKeyAttribute
#include "GlobalNamespace/LocalizationKeyAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizationProvider
#include "GlobalNamespace/LocalizationProvider.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LocalizationProvider _instance
GlobalNamespace::LocalizationProvider* GlobalNamespace::LocalizationProvider::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizationProvider::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalizationProvider*>("", "LocalizationProvider", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private LocalizationProvider _instance
void GlobalNamespace::LocalizationProvider::_set__instance(GlobalNamespace::LocalizationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizationProvider::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalizationProvider", "_instance", value));
}
// Autogenerated method: LocalizationProvider.get_localization
Polyglot::Localization* GlobalNamespace::LocalizationProvider::get_localization() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizationProvider::get_localization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::Localization*, false>(this, ___internal__method);
}
// Autogenerated method: LocalizationProvider.get_Instance
GlobalNamespace::LocalizationProvider* GlobalNamespace::LocalizationProvider::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizationProvider::get_Instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LocalizationProvider", "get_Instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LocalizationProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LocalizationProvider.set_Instance
void GlobalNamespace::LocalizationProvider::set_Instance(GlobalNamespace::LocalizationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizationProvider::set_Instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LocalizationProvider", "set_Instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LocalizationProvider.get_HasInstance
bool GlobalNamespace::LocalizationProvider::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizationProvider::get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LocalizationProvider", "get_HasInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.CsvReader
#include "Polyglot/CsvReader.hpp"
// Including type: Polyglot.CsvReader/ParsingMode
#include "Polyglot/CsvReader_ParsingMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.CsvReader.Parse
System::Collections::Generic::List_1<System::Collections::Generic::List_1<::Il2CppString*>*>* Polyglot::CsvReader::Parse(::Il2CppString* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::CsvReader::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "CsvReader", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Collections::Generic::List_1<::Il2CppString*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.CsvReader/ParsingMode
#include "Polyglot/CsvReader_ParsingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/ParsingMode None
Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::CsvReader::ParsingMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/ParsingMode None
void Polyglot::CsvReader::ParsingMode::_set_None(Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::CsvReader::ParsingMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/ParsingMode OutQuote
Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_OutQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::CsvReader::ParsingMode::_get_OutQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "OutQuote"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/ParsingMode OutQuote
void Polyglot::CsvReader::ParsingMode::_set_OutQuote(Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::CsvReader::ParsingMode::_set_OutQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "OutQuote", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/ParsingMode InQuote
Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_InQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::CsvReader::ParsingMode::_get_InQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "InQuote"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/ParsingMode InQuote
void Polyglot::CsvReader::ParsingMode::_set_InQuote(Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::CsvReader::ParsingMode::_set_InQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "InQuote", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.TsvReader
#include "Polyglot/TsvReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.TsvReader.Parse
System::Collections::Generic::List_1<System::Collections::Generic::List_1<::Il2CppString*>*>* Polyglot::TsvReader::Parse(::Il2CppString* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::TsvReader::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "TsvReader", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Collections::Generic::List_1<::Il2CppString*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.GoogleDownload
#include "Polyglot/GoogleDownload.hpp"
// Including type: Polyglot.GoogleDownload/<DownloadSheet>d__0
#include "Polyglot/GoogleDownload_-DownloadSheet-d__0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.GoogleDownload.DownloadSheet
System::Collections::IEnumerator* Polyglot::GoogleDownload::DownloadSheet(::Il2CppString* docsId, ::Il2CppString* sheetId, System::Action_1<::Il2CppString*>* done, Polyglot::GoogleDriveDownloadFormat format, System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDownload::DownloadSheet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "GoogleDownload", "DownloadSheet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(docsId, sheetId, done, format, progressbar)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, docsId, sheetId, done, format, progressbar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.GoogleDownload/<DownloadSheet>d__0
#include "Polyglot/GoogleDownload_-DownloadSheet-d__0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.GoogleDownload/<DownloadSheet>d__0.System.IDisposable.Dispose
void Polyglot::GoogleDownload::$DownloadSheet$d__0::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDownload::$DownloadSheet$d__0::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/<DownloadSheet>d__0.MoveNext
bool Polyglot::GoogleDownload::$DownloadSheet$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDownload::$DownloadSheet$d__0::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_IEnumerator_MoveNext() {
  return Polyglot::GoogleDownload::$DownloadSheet$d__0::MoveNext();
}
// Autogenerated method: Polyglot.GoogleDownload/<DownloadSheet>d__0.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/<DownloadSheet>d__0.System.Collections.IEnumerator.Reset
void Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/<DownloadSheet>d__0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.GoogleDriveDownloadFormat CSV
Polyglot::GoogleDriveDownloadFormat Polyglot::GoogleDriveDownloadFormat::_get_CSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDriveDownloadFormat::_get_CSV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::GoogleDriveDownloadFormat>("Polyglot", "GoogleDriveDownloadFormat", "CSV"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.GoogleDriveDownloadFormat CSV
void Polyglot::GoogleDriveDownloadFormat::_set_CSV(Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDriveDownloadFormat::_set_CSV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "GoogleDriveDownloadFormat", "CSV", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.GoogleDriveDownloadFormat TSV
Polyglot::GoogleDriveDownloadFormat Polyglot::GoogleDriveDownloadFormat::_get_TSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDriveDownloadFormat::_get_TSV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::GoogleDriveDownloadFormat>("Polyglot", "GoogleDriveDownloadFormat", "TSV"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.GoogleDriveDownloadFormat TSV
void Polyglot::GoogleDriveDownloadFormat::_set_TSV(Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::GoogleDriveDownloadFormat::_set_TSV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "GoogleDriveDownloadFormat", "TSV", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.ILocalize
#include "Polyglot/ILocalize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.ILocalize.OnLocalize
void Polyglot::ILocalize::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::ILocalize::OnLocalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.Language English
Polyglot::Language Polyglot::Language::_get_English() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_English");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "English"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language English
void Polyglot::Language::_set_English(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_English");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "English", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language French
Polyglot::Language Polyglot::Language::_get_French() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_French");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "French"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language French
void Polyglot::Language::_set_French(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_French");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "French", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Spanish
Polyglot::Language Polyglot::Language::_get_Spanish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Spanish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Spanish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Spanish
void Polyglot::Language::_set_Spanish(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Spanish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Spanish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language German
Polyglot::Language Polyglot::Language::_get_German() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_German");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "German"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language German
void Polyglot::Language::_set_German(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_German");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "German", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Italian
Polyglot::Language Polyglot::Language::_get_Italian() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Italian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Italian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Italian
void Polyglot::Language::_set_Italian(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Italian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Italian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Portuguese_Brazil
Polyglot::Language Polyglot::Language::_get_Portuguese_Brazil() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Portuguese_Brazil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Portuguese_Brazil"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Portuguese_Brazil
void Polyglot::Language::_set_Portuguese_Brazil(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Portuguese_Brazil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Portuguese_Brazil", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Portuguese
Polyglot::Language Polyglot::Language::_get_Portuguese() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Portuguese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Portuguese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Portuguese
void Polyglot::Language::_set_Portuguese(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Portuguese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Portuguese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Russian
Polyglot::Language Polyglot::Language::_get_Russian() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Russian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Russian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Russian
void Polyglot::Language::_set_Russian(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Russian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Russian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Greek
Polyglot::Language Polyglot::Language::_get_Greek() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Greek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Greek"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Greek
void Polyglot::Language::_set_Greek(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Greek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Greek", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Turkish
Polyglot::Language Polyglot::Language::_get_Turkish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Turkish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Turkish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Turkish
void Polyglot::Language::_set_Turkish(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Turkish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Turkish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Danish
Polyglot::Language Polyglot::Language::_get_Danish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Danish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Danish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Danish
void Polyglot::Language::_set_Danish(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Danish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Danish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Norwegian
Polyglot::Language Polyglot::Language::_get_Norwegian() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Norwegian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Norwegian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Norwegian
void Polyglot::Language::_set_Norwegian(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Norwegian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Norwegian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Swedish
Polyglot::Language Polyglot::Language::_get_Swedish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Swedish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Swedish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Swedish
void Polyglot::Language::_set_Swedish(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Swedish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Swedish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Dutch
Polyglot::Language Polyglot::Language::_get_Dutch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Dutch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Dutch"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Dutch
void Polyglot::Language::_set_Dutch(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Dutch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Dutch", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Polish
Polyglot::Language Polyglot::Language::_get_Polish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Polish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Polish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Polish
void Polyglot::Language::_set_Polish(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Polish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Polish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Finnish
Polyglot::Language Polyglot::Language::_get_Finnish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Finnish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Finnish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Finnish
void Polyglot::Language::_set_Finnish(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Finnish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Finnish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Japanese
Polyglot::Language Polyglot::Language::_get_Japanese() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Japanese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Japanese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Japanese
void Polyglot::Language::_set_Japanese(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Japanese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Japanese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Simplified_Chinese
Polyglot::Language Polyglot::Language::_get_Simplified_Chinese() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Simplified_Chinese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Simplified_Chinese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Simplified_Chinese
void Polyglot::Language::_set_Simplified_Chinese(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Simplified_Chinese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Simplified_Chinese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Traditional_Chinese
Polyglot::Language Polyglot::Language::_get_Traditional_Chinese() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Traditional_Chinese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Traditional_Chinese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Traditional_Chinese
void Polyglot::Language::_set_Traditional_Chinese(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Traditional_Chinese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Traditional_Chinese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Korean
Polyglot::Language Polyglot::Language::_get_Korean() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Korean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Korean"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Korean
void Polyglot::Language::_set_Korean(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Korean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Korean", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Czech
Polyglot::Language Polyglot::Language::_get_Czech() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Czech");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Czech"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Czech
void Polyglot::Language::_set_Czech(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Czech");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Czech", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Hungarian
Polyglot::Language Polyglot::Language::_get_Hungarian() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Hungarian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Hungarian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Hungarian
void Polyglot::Language::_set_Hungarian(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Hungarian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Hungarian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Romanian
Polyglot::Language Polyglot::Language::_get_Romanian() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Romanian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Romanian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Romanian
void Polyglot::Language::_set_Romanian(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Romanian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Romanian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Thai
Polyglot::Language Polyglot::Language::_get_Thai() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Thai");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Thai"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Thai
void Polyglot::Language::_set_Thai(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Thai");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Thai", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Bulgarian
Polyglot::Language Polyglot::Language::_get_Bulgarian() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Bulgarian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Bulgarian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Bulgarian
void Polyglot::Language::_set_Bulgarian(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Bulgarian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Bulgarian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Hebrew
Polyglot::Language Polyglot::Language::_get_Hebrew() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Hebrew");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Hebrew"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Hebrew
void Polyglot::Language::_set_Hebrew(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Hebrew");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Hebrew", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Arabic
Polyglot::Language Polyglot::Language::_get_Arabic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Arabic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Arabic"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Arabic
void Polyglot::Language::_set_Arabic(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Arabic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Arabic", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Bosnian
Polyglot::Language Polyglot::Language::_get_Bosnian() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_get_Bosnian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>("Polyglot", "Language", "Bosnian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Bosnian
void Polyglot::Language::_set_Bosnian(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Language::_set_Bosnian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Bosnian", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.LanguageDirection LeftToRight
Polyglot::LanguageDirection Polyglot::LanguageDirection::_get_LeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LanguageDirection::_get_LeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::LanguageDirection>("Polyglot", "LanguageDirection", "LeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.LanguageDirection LeftToRight
void Polyglot::LanguageDirection::_set_LeftToRight(Polyglot::LanguageDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LanguageDirection::_set_LeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LanguageDirection", "LeftToRight", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.LanguageDirection RightToLeft
Polyglot::LanguageDirection Polyglot::LanguageDirection::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LanguageDirection::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::LanguageDirection>("Polyglot", "LanguageDirection", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.LanguageDirection RightToLeft
void Polyglot::LanguageDirection::_set_RightToLeft(Polyglot::LanguageDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LanguageDirection::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LanguageDirection", "RightToLeft", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LanguageDropdown
#include "Polyglot/LanguageDropdown.hpp"
// Including type: UnityEngine.UI.Dropdown
#include "UnityEngine/UI/Dropdown.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LanguageDropdown.Reset
void Polyglot::LanguageDropdown::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LanguageDropdown::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.Start
void Polyglot::LanguageDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LanguageDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.CreateDropdown
void Polyglot::LanguageDropdown::CreateDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LanguageDropdown::CreateDropdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateDropdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.OnLocalize
void Polyglot::LanguageDropdown::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LanguageDropdown::OnLocalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
// Including type: UnityEngine.SystemLanguage
#include "UnityEngine/SystemLanguage.hpp"
// Including type: Polyglot.ILocalize
#include "Polyglot/ILocalize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String KeyNotFound
::Il2CppString* Polyglot::Localization::_get_KeyNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::_get_KeyNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Polyglot", "Localization", "KeyNotFound"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyNotFound
void Polyglot::Localization::_set_KeyNotFound(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::_set_KeyNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Localization", "KeyNotFound", value));
}
// Autogenerated static field getter
// Get static field: static private Polyglot.Localization instance
Polyglot::Localization* Polyglot::Localization::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Localization*>("Polyglot", "Localization", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Polyglot.Localization instance
void Polyglot::Localization::_set_instance(Polyglot::Localization* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Localization", "instance", value));
}
// Autogenerated method: Polyglot.Localization.get_CustomDocument
Polyglot::LocalizationDocument* Polyglot::Localization::get_CustomDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_CustomDocument");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CustomDocument", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::LocalizationDocument*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_InputFiles
System::Collections::Generic::List_1<Polyglot::LocalizationAsset*>* Polyglot::Localization::get_InputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_InputFiles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InputFiles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Polyglot::LocalizationAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_Instance
Polyglot::Localization* Polyglot::Localization::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_Instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "Localization", "get_Instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::Localization*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.set_Instance
void Polyglot::Localization::set_Instance(Polyglot::Localization* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::set_Instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "Localization", "set_Instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Polyglot.Localization.get_HasInstance
bool Polyglot::Localization::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "Localization", "get_HasInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SupportedLanguages
System::Collections::Generic::List_1<Polyglot::Language>* Polyglot::Localization::get_SupportedLanguages() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_SupportedLanguages");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SupportedLanguages", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Polyglot::Language>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguageDirection
Polyglot::LanguageDirection Polyglot::Localization::get_SelectedLanguageDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_SelectedLanguageDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SelectedLanguageDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::LanguageDirection, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.GetLanguageDirection
Polyglot::LanguageDirection Polyglot::Localization::GetLanguageDirection(Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::GetLanguageDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLanguageDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(language)));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::LanguageDirection, false>(this, ___internal__method, language);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguageIndex
int Polyglot::Localization::get_SelectedLanguageIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_SelectedLanguageIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SelectedLanguageIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguage
Polyglot::Language Polyglot::Localization::get_SelectedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_SelectedLanguage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SelectedLanguage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::Language, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.set_SelectedLanguage
void Polyglot::Localization::set_SelectedLanguage(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::set_SelectedLanguage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SelectedLanguage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.Localization.IsLanguageSupported
bool Polyglot::Localization::IsLanguageSupported(Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::IsLanguageSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLanguageSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(language)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, language);
}
// Autogenerated method: Polyglot.Localization.InvokeOnLocalize
void Polyglot::Localization::InvokeOnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::InvokeOnLocalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeOnLocalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_EnglishLanguageNames
System::Collections::Generic::List_1<::Il2CppString*>* Polyglot::Localization::get_EnglishLanguageNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_EnglishLanguageNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_EnglishLanguageNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_LocalizedLanguageNames
System::Collections::Generic::List_1<::Il2CppString*>* Polyglot::Localization::get_LocalizedLanguageNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_LocalizedLanguageNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LocalizedLanguageNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_EnglishLanguageName
::Il2CppString* Polyglot::Localization::get_EnglishLanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_EnglishLanguageName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_EnglishLanguageName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_LocalizedLanguageName
::Il2CppString* Polyglot::Localization::get_LocalizedLanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::get_LocalizedLanguageName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LocalizedLanguageName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.SelectLanguage
void Polyglot::Localization::SelectLanguage(int selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::SelectLanguage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectLanguage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(selected)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.SelectLanguage
void Polyglot::Localization::SelectLanguage(Polyglot::Language selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::SelectLanguage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectLanguage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(selected)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.ConvertSystemLanguage
Polyglot::Language Polyglot::Localization::ConvertSystemLanguage(UnityEngine::SystemLanguage selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::ConvertSystemLanguage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConvertSystemLanguage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(selected)));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::Language, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.AddOnLocalizeEvent
void Polyglot::Localization::AddOnLocalizeEvent(Polyglot::ILocalize* localize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::AddOnLocalizeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddOnLocalizeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localize);
}
// Autogenerated method: Polyglot.Localization.RemoveOnLocalizeEvent
void Polyglot::Localization::RemoveOnLocalizeEvent(Polyglot::ILocalize* localize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::RemoveOnLocalizeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveOnLocalizeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localize);
}
// Autogenerated method: Polyglot.Localization.Get
::Il2CppString* Polyglot::Localization::Get(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "Localization", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.Localization.Get
::Il2CppString* Polyglot::Localization::Get(::Il2CppString* key, Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "Localization", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, language)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, language);
}
// Autogenerated method: Polyglot.Localization.KeyExist
bool Polyglot::Localization::KeyExist(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::KeyExist");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "Localization", "KeyExist", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.Localization.GetKeys
System::Collections::Generic::List_1<::Il2CppString*>* Polyglot::Localization::GetKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::GetKeys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "Localization", "GetKeys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.GetFormat
::Il2CppString* Polyglot::Localization::GetFormat(::Il2CppString* key, ::Array<::Il2CppObject*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::GetFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "Localization", "GetFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, arguments)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, arguments);
}
// Creating initializer_list -> params proxy for: System.String GetFormat(System.String key, params System.Object[] arguments)
::Il2CppString* Polyglot::Localization::GetFormat(::Il2CppString* key, std::initializer_list<::Il2CppObject*> arguments) {
  return Polyglot::Localization::GetFormat(key, ::Array<::Il2CppObject*>::New(arguments));
}
// Autogenerated method: Polyglot.Localization.InputFilesContains
bool Polyglot::Localization::InputFilesContains(Polyglot::LocalizationDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::Localization::InputFilesContains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InputFilesContains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(doc)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, doc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizationAsset.get_TextAsset
UnityEngine::TextAsset* Polyglot::LocalizationAsset::get_TextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationAsset::get_TextAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TextAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationAsset.set_TextAsset
void Polyglot::LocalizationAsset::set_TextAsset(UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationAsset::set_TextAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_TextAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationAsset.get_Format
Polyglot::GoogleDriveDownloadFormat Polyglot::LocalizationAsset::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationAsset::get_Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::GoogleDriveDownloadFormat, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationAsset.set_Format
void Polyglot::LocalizationAsset::set_Format(Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationAsset::set_Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizationDocument.get_TextAsset
UnityEngine::TextAsset* Polyglot::LocalizationDocument::get_TextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::get_TextAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TextAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_TextAsset
void Polyglot::LocalizationDocument::set_TextAsset(UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::set_TextAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_TextAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_DocsId
::Il2CppString* Polyglot::LocalizationDocument::get_DocsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::get_DocsId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DocsId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_DocsId
void Polyglot::LocalizationDocument::set_DocsId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::set_DocsId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_DocsId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_SheetId
::Il2CppString* Polyglot::LocalizationDocument::get_SheetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::get_SheetId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SheetId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_SheetId
void Polyglot::LocalizationDocument::set_SheetId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::set_SheetId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SheetId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_Format
Polyglot::GoogleDriveDownloadFormat Polyglot::LocalizationDocument::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::get_Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Polyglot::GoogleDriveDownloadFormat, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_Format
void Polyglot::LocalizationDocument::set_Format(Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::set_Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_DownloadOnStart
bool Polyglot::LocalizationDocument::get_DownloadOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::get_DownloadOnStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DownloadOnStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_DownloadOnStart
void Polyglot::LocalizationDocument::set_DownloadOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationDocument::set_DownloadOnStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_DownloadOnStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizationImporter
#include "Polyglot/LocalizationImporter.hpp"
// Including type: Polyglot.LocalizationImporter/<>c__DisplayClass5_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass5_0.hpp"
// Including type: Polyglot.LocalizationImporter/<>c__DisplayClass8_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.String>> languageStrings
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<::Il2CppString*>*>* Polyglot::LocalizationImporter::_get_languageStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::_get_languageStrings");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<::Il2CppString*>*>*>("Polyglot", "LocalizationImporter", "languageStrings")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.String>> languageStrings
void Polyglot::LocalizationImporter::_set_languageStrings(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<::Il2CppString*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::_set_languageStrings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "languageStrings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.String> EmptyList
System::Collections::Generic::List_1<::Il2CppString*>* Polyglot::LocalizationImporter::_get_EmptyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::_get_EmptyList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>("Polyglot", "LocalizationImporter", "EmptyList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.String> EmptyList
void Polyglot::LocalizationImporter::_set_EmptyList(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::_set_EmptyList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "EmptyList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Polyglot.LocalizationAsset> InputFiles
System::Collections::Generic::List_1<Polyglot::LocalizationAsset*>* Polyglot::LocalizationImporter::_get_InputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::_get_InputFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Polyglot::LocalizationAsset*>*>("Polyglot", "LocalizationImporter", "InputFiles"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Polyglot.LocalizationAsset> InputFiles
void Polyglot::LocalizationImporter::_set_InputFiles(System::Collections::Generic::List_1<Polyglot::LocalizationAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::_set_InputFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "InputFiles", value));
}
// Autogenerated method: Polyglot.LocalizationImporter..cctor
void Polyglot::LocalizationImporter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.Initialize
void Polyglot::LocalizationImporter::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportFromGoogle
void Polyglot::LocalizationImporter::ImportFromGoogle(Polyglot::Localization* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::ImportFromGoogle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportFromGoogle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(settings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, settings);
}
// Autogenerated method: Polyglot.LocalizationImporter.Import
void Polyglot::LocalizationImporter::Import(::Il2CppString* text, Polyglot::GoogleDriveDownloadFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::Import");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Import", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, format);
}
// Autogenerated method: Polyglot.LocalizationImporter.Download
System::Collections::IEnumerator* Polyglot::LocalizationImporter::Download(Polyglot::LocalizationDocument* document, System::Action_1<::Il2CppString*>* done, System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::Download");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Download", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(document, done, progressbar)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, document, done, progressbar);
}
// Autogenerated method: Polyglot.LocalizationImporter.DownloadCustomSheet
System::Collections::IEnumerator* Polyglot::LocalizationImporter::DownloadCustomSheet(System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::DownloadCustomSheet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "DownloadCustomSheet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(progressbar)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, progressbar);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportFromFiles
void Polyglot::LocalizationImporter::ImportFromFiles(Polyglot::Localization* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::ImportFromFiles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportFromFiles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(settings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, settings);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportInputFiles
void Polyglot::LocalizationImporter::ImportInputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::ImportInputFiles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportInputFiles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportTextFile
void Polyglot::LocalizationImporter::ImportTextFile(::Il2CppString* text, Polyglot::GoogleDriveDownloadFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::ImportTextFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportTextFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, format);
}
// Autogenerated method: Polyglot.LocalizationImporter.IsLineBreak
bool Polyglot::LocalizationImporter::IsLineBreak(::Il2CppString* currentString) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::IsLineBreak");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "IsLineBreak", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentString)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, currentString);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguages
System::Collections::Generic::List_1<::Il2CppString*>* Polyglot::LocalizationImporter::GetLanguages(::Il2CppString* key, System::Collections::Generic::List_1<Polyglot::Language>* supportedLanguages) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::GetLanguages");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguages", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, supportedLanguages)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, supportedLanguages);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguagesStartsWith
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<::Il2CppString*>*>* Polyglot::LocalizationImporter::GetLanguagesStartsWith(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::GetLanguagesStartsWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguagesStartsWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<::Il2CppString*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguagesContains
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<::Il2CppString*>*>* Polyglot::LocalizationImporter::GetLanguagesContains(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::GetLanguagesContains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguagesContains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<::Il2CppString*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.LocalizationImporter.Refresh
void Polyglot::LocalizationImporter::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::Refresh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetKeys
System::Collections::Generic::List_1<::Il2CppString*>* Polyglot::LocalizationImporter::GetKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::GetKeys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetKeys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizationImporter/<>c__DisplayClass5_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass5_0.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizationImporter/<>c__DisplayClass5_0.<ImportFromGoogle>b__0
void Polyglot::LocalizationImporter::$$c__DisplayClass5_0::$ImportFromGoogle$b__0(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::$$c__DisplayClass5_0::<ImportFromGoogle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ImportFromGoogle>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizationImporter/<>c__DisplayClass8_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass8_0.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizationImporter/<>c__DisplayClass8_0.<DownloadCustomSheet>b__0
void Polyglot::LocalizationImporter::$$c__DisplayClass8_0::$DownloadCustomSheet$b__0(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizationImporter::$$c__DisplayClass8_0::<DownloadCustomSheet>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadCustomSheet>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizedText
#include "Polyglot/LocalizedText.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedText.SetText
void Polyglot::LocalizedText::SetText(UnityEngine::UI::Text* text, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedText::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedText.UpdateAlignment
void Polyglot::LocalizedText::UpdateAlignment(UnityEngine::UI::Text* text, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedText::UpdateAlignment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, direction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedText.IsOppositeDirection
bool Polyglot::LocalizedText::IsOppositeDirection(UnityEngine::TextAnchor alignment, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedText::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment, direction)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedText.IsAlignmentRight
bool Polyglot::LocalizedText::IsAlignmentRight(UnityEngine::TextAnchor alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedText::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedText.IsAlignmentLeft
bool Polyglot::LocalizedText::IsAlignmentLeft(UnityEngine::TextAnchor alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedText::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizedTextMesh
#include "Polyglot/LocalizedTextMesh.hpp"
// Including type: UnityEngine.TextMesh
#include "UnityEngine/TextMesh.hpp"
// Including type: UnityEngine.TextAlignment
#include "UnityEngine/TextAlignment.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedTextMesh.get_Key
::Il2CppString* Polyglot::LocalizedTextMesh::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMesh::get_Key");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.Reset
void Polyglot::LocalizedTextMesh::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMesh::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.Start
void Polyglot::LocalizedTextMesh::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMesh::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsOppositeDirection
bool Polyglot::LocalizedTextMesh::IsOppositeDirection(UnityEngine::TextAlignment alignment, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMesh::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment, direction)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsAlignmentRight
bool Polyglot::LocalizedTextMesh::IsAlignmentRight(UnityEngine::TextAlignment alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMesh::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsAlignmentLeft
bool Polyglot::LocalizedTextMesh::IsAlignmentLeft(UnityEngine::TextAlignment alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMesh::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.OnLocalize
void Polyglot::LocalizedTextMesh::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMesh::OnLocalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizedTextMeshPro
#include "Polyglot/LocalizedTextMeshPro.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedTextMeshPro.SetText
void Polyglot::LocalizedTextMeshPro::SetText(TMPro::TextMeshPro* text, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshPro::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.UpdateAlignment
void Polyglot::LocalizedTextMeshPro::UpdateAlignment(TMPro::TextMeshPro* text, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshPro::UpdateAlignment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, direction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsOppositeDirection
bool Polyglot::LocalizedTextMeshPro::IsOppositeDirection(TMPro::TextAlignmentOptions alignment, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshPro::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment, direction)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsAlignmentRight
bool Polyglot::LocalizedTextMeshPro::IsAlignmentRight(TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshPro::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsAlignmentLeft
bool Polyglot::LocalizedTextMeshPro::IsAlignmentLeft(TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshPro::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizedTextMeshProUGUI
#include "Polyglot/LocalizedTextMeshProUGUI.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.SetText
void Polyglot::LocalizedTextMeshProUGUI::SetText(TMPro::TextMeshProUGUI* text, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshProUGUI::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.UpdateAlignment
void Polyglot::LocalizedTextMeshProUGUI::UpdateAlignment(TMPro::TextMeshProUGUI* text, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshProUGUI::UpdateAlignment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, direction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsOppositeDirection
bool Polyglot::LocalizedTextMeshProUGUI::IsOppositeDirection(TMPro::TextAlignmentOptions alignment, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshProUGUI::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment, direction)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsAlignmentRight
bool Polyglot::LocalizedTextMeshProUGUI::IsAlignmentRight(TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshProUGUI::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsAlignmentLeft
bool Polyglot::LocalizedTextMeshProUGUI::IsAlignmentLeft(TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedTextMeshProUGUI::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.SaveLanguagePreference
#include "Polyglot/SaveLanguagePreference.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.SaveLanguagePreference.Start
void Polyglot::SaveLanguagePreference::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::SaveLanguagePreference::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.SaveLanguagePreference.OnLocalize
void Polyglot::SaveLanguagePreference::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::SaveLanguagePreference::OnLocalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlwaysVisibleQuad
#include "GlobalNamespace/AlwaysVisibleQuad.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AlwaysVisibleQuad.OnEnable
void GlobalNamespace::AlwaysVisibleQuad::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysVisibleQuad::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysVisibleQuad.OnDisable
void GlobalNamespace::AlwaysVisibleQuad::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysVisibleQuad::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferBlurryScreenGrab
#include "GlobalNamespace/CommandBufferBlurryScreenGrab.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferBlurryScreenGrab::_get__cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferBlurryScreenGrab::_get__cameras");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>*>("", "CommandBufferBlurryScreenGrab", "_cameras")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
void GlobalNamespace::CommandBufferBlurryScreenGrab::_set__cameras(System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferBlurryScreenGrab::_set__cameras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferBlurryScreenGrab", "_cameras", value));
}
// Autogenerated method: CommandBufferBlurryScreenGrab.NoDomainReloadInit
void GlobalNamespace::CommandBufferBlurryScreenGrab::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferBlurryScreenGrab::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "CommandBufferBlurryScreenGrab", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CreateCommandBuffer
UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferBlurryScreenGrab::CreateCommandBuffer(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferBlurryScreenGrab::CreateCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(camera)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CamerasDict
System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferBlurryScreenGrab::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferBlurryScreenGrab::CamerasDict");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CommandBufferCameraEvent
UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferBlurryScreenGrab::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferBlurryScreenGrab::CommandBufferCameraEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferBlurryScreenGrab..cctor
void GlobalNamespace::CommandBufferBlurryScreenGrab::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferBlurryScreenGrab::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "CommandBufferBlurryScreenGrab", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CommandBufferGrabPass
#include "GlobalNamespace/CommandBufferGrabPass.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGrabPass::_get__cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGrabPass::_get__cameras");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>*>("", "CommandBufferGrabPass", "_cameras")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
void GlobalNamespace::CommandBufferGrabPass::_set__cameras(System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGrabPass::_set__cameras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferGrabPass", "_cameras", value));
}
// Autogenerated method: CommandBufferGrabPass.NoDomainReloadInit
void GlobalNamespace::CommandBufferGrabPass::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGrabPass::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "CommandBufferGrabPass", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: CommandBufferGrabPass.CreateCommandBuffer
UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferGrabPass::CreateCommandBuffer(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGrabPass::CreateCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(camera)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferGrabPass.CamerasDict
System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGrabPass::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGrabPass::CamerasDict");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGrabPass.CommandBufferCameraEvent
UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferGrabPass::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGrabPass::CommandBufferCameraEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGrabPass..cctor
void GlobalNamespace::CommandBufferGrabPass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGrabPass::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "CommandBufferGrabPass", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferGOCore
#include "GlobalNamespace/CommandBufferGOCore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD22D80
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
UnityEngine::Material* GlobalNamespace::CommandBufferGOCore::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGOCore::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "CommandBufferGOCore", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::CommandBufferGOCore::_set__material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGOCore::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferGOCore", "_material", value));
}
// Autogenerated method: CommandBufferGOCore.OnEnable
void GlobalNamespace::CommandBufferGOCore::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGOCore::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.OnDisable
void GlobalNamespace::CommandBufferGOCore::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGOCore::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.OnWillRenderObject
void GlobalNamespace::CommandBufferGOCore::OnWillRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGOCore::OnWillRenderObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnWillRenderObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.CommandBufferCameraEvent
UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferGOCore::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGOCore::CommandBufferCameraEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.CreateCommandBuffer
UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferGOCore::CreateCommandBuffer(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGOCore::CreateCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(camera)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferGOCore.CamerasDict
System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGOCore::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferGOCore::CamerasDict");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CommandBufferOwners.AddOwner
void GlobalNamespace::CommandBufferOwners::AddOwner(UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferOwners::AddOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(owner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, owner);
}
// Autogenerated method: CommandBufferOwners.RemoveOwner
void GlobalNamespace::CommandBufferOwners::RemoveOwner(UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferOwners::RemoveOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(owner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, owner);
}
// Autogenerated method: CommandBufferOwners.ContainsOwner
bool GlobalNamespace::CommandBufferOwners::ContainsOwner(UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferOwners::ContainsOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContainsOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(owner)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, owner);
}
// Autogenerated method: CommandBufferOwners.get_NumberOfOwners
int GlobalNamespace::CommandBufferOwners::get_NumberOfOwners() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandBufferOwners::get_NumberOfOwners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumberOfOwners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExternalCamerasManager
#include "GlobalNamespace/ExternalCamerasManager.hpp"
// Including type: ExternalCamerasManager/InitData
#include "GlobalNamespace/ExternalCamerasManager_InitData.hpp"
// Including type: OculusMRCManager
#include "GlobalNamespace/OculusMRCManager.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ExternalCamerasManager.Init
void GlobalNamespace::ExternalCamerasManager::Init(GlobalNamespace::ExternalCamerasManager::InitData* initData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ExternalCamerasManager::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(initData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, initData);
}
// Autogenerated method: ExternalCamerasManager.InstantiateMixedRealityBackgroundCameraGameObject
UnityEngine::GameObject* GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityBackgroundCameraGameObject(UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityBackgroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateMixedRealityBackgroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainCamera)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, mainCamera);
}
// Autogenerated method: ExternalCamerasManager.InstantiateMixedRealityForegroundCameraGameObject
UnityEngine::GameObject* GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityForegroundCameraGameObject(UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityForegroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateMixedRealityForegroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainCamera)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, mainCamera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExternalCamerasManager/InitData
#include "GlobalNamespace/ExternalCamerasManager_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeInOnSceneTransitionFinished
#include "GlobalNamespace/FadeInOnSceneTransitionFinished.hpp"
// Including type: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3
#include "GlobalNamespace/FadeInOnSceneTransitionFinished_-FadeInAfterSceneTransitionCoroutine-d__3.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FadeInOnSceneTransitionFinished.OnEnable
void GlobalNamespace::FadeInOnSceneTransitionFinished::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeInOnSceneTransitionFinished::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished.FadeInAfterSceneTransitionCoroutine
System::Collections::IEnumerator* GlobalNamespace::FadeInOnSceneTransitionFinished::FadeInAfterSceneTransitionCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeInOnSceneTransitionFinished::FadeInAfterSceneTransitionCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FadeInAfterSceneTransitionCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3
#include "GlobalNamespace/FadeInOnSceneTransitionFinished_-FadeInAfterSceneTransitionCoroutine-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.IDisposable.Dispose
void GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.MoveNext
bool GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::MoveNext();
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeOutInstantly
#include "GlobalNamespace/FadeOutInstantly.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FadeOutInstantly.Start
void GlobalNamespace::FadeOutInstantly::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeOutInstantly::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeOutOnSceneTransitionStart
#include "GlobalNamespace/FadeOutOnSceneTransitionStart.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FadeOutOnSceneTransitionStart.Start
void GlobalNamespace::FadeOutOnSceneTransitionStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeOutOnSceneTransitionStart::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeOutOnSceneTransitionStart.OnDestroy
void GlobalNamespace::FadeOutOnSceneTransitionStart::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeOutOnSceneTransitionStart::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeOutOnSceneTransitionStart.HandleGameScenesManagerTransitionDidStart
void GlobalNamespace::FadeOutOnSceneTransitionStart::HandleGameScenesManagerTransitionDidStart(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FadeOutOnSceneTransitionStart::HandleGameScenesManagerTransitionDidStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerTransitionDidStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCameraCullingMask
#include "GlobalNamespace/MainCameraCullingMask.hpp"
// Including type: MainCameraCullingMask/InitData
#include "GlobalNamespace/MainCameraCullingMask_InitData.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainCameraCullingMask.Start
void GlobalNamespace::MainCameraCullingMask::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCameraCullingMask::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCameraCullingMask/InitData
#include "GlobalNamespace/MainCameraCullingMask_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KawaseBloomMainEffectSO
#include "GlobalNamespace/KawaseBloomMainEffectSO.hpp"
// Including type: KawaseBlurRendererSO
#include "GlobalNamespace/KawaseBlurRendererSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD22F78
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomTexID
int GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomTexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBloomMainEffectSO", "_bloomTexID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomTexID
void GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomTexID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomTexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBloomMainEffectSO", "_bloomTexID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD22F88
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomIntensityID
int GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomIntensityID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomIntensityID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBloomMainEffectSO", "_bloomIntensityID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomIntensityID
void GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomIntensityID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomIntensityID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBloomMainEffectSO", "_bloomIntensityID", value));
}
// Autogenerated method: KawaseBloomMainEffectSO.OnDisable
void GlobalNamespace::KawaseBloomMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.LazyInitializeMaterials
void GlobalNamespace::KawaseBloomMainEffectSO::LazyInitializeMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::LazyInitializeMaterials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyInitializeMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::KawaseBloomMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::get_hasPostProcessEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.OnEnable
void GlobalNamespace::KawaseBloomMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.PreRender
void GlobalNamespace::KawaseBloomMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::PreRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.Render
void GlobalNamespace::KawaseBloomMainEffectSO::Render(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::Render");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, dest, fade)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated method: KawaseBloomMainEffectSO..cctor
void GlobalNamespace::KawaseBloomMainEffectSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBloomMainEffectSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "KawaseBloomMainEffectSO", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainEffectContainerSO.get_mainEffect
GlobalNamespace::MainEffectSO* GlobalNamespace::MainEffectContainerSO::get_mainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectContainerSO::get_mainEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mainEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MainEffectSO*, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectContainerSO.Init
void GlobalNamespace::MainEffectContainerSO::Init(GlobalNamespace::MainEffectSO* mainEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectContainerSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainEffect)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mainEffect);
}
// Autogenerated method: MainEffectContainerSO.OnEnable
void GlobalNamespace::MainEffectContainerSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectContainerSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainEffectController
#include "GlobalNamespace/MainEffectController.hpp"
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: ImageEffectController
#include "GlobalNamespace/ImageEffectController.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMainEffectEnabledKeyword
::Il2CppString* GlobalNamespace::MainEffectController::_get_kMainEffectEnabledKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::_get_kMainEffectEnabledKeyword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainEffectController", "kMainEffectEnabledKeyword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMainEffectEnabledKeyword
void GlobalNamespace::MainEffectController::_set_kMainEffectEnabledKeyword(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::_set_kMainEffectEnabledKeyword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectController", "kMainEffectEnabledKeyword", value));
}
// Autogenerated method: MainEffectController.add_afterImageEffectEvent
void GlobalNamespace::MainEffectController::add_afterImageEffectEvent(System::Action_1<UnityEngine::RenderTexture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::add_afterImageEffectEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_afterImageEffectEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainEffectController.remove_afterImageEffectEvent
void GlobalNamespace::MainEffectController::remove_afterImageEffectEvent(System::Action_1<UnityEngine::RenderTexture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::remove_afterImageEffectEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_afterImageEffectEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainEffectController.OnEnable
void GlobalNamespace::MainEffectController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnDisable
void GlobalNamespace::MainEffectController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnValidate
void GlobalNamespace::MainEffectController::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.LazySetupImageEffectController
void GlobalNamespace::MainEffectController::LazySetupImageEffectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::LazySetupImageEffectController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazySetupImageEffectController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.ImageEffectControllerCallback
void GlobalNamespace::MainEffectController::ImageEffectControllerCallback(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::ImageEffectControllerCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ImageEffectControllerCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, dest)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: MainEffectController.OnPreRender
void GlobalNamespace::MainEffectController::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnPostRender
void GlobalNamespace::MainEffectController::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectController::OnPostRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectCore
#include "GlobalNamespace/MainEffectCore.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD22FE8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _baseColorBoostID
int GlobalNamespace::MainEffectCore::_get__baseColorBoostID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectCore::_get__baseColorBoostID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainEffectCore", "_baseColorBoostID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _baseColorBoostID
void GlobalNamespace::MainEffectCore::_set__baseColorBoostID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectCore::_set__baseColorBoostID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectCore", "_baseColorBoostID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD22FF8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _baseColorBoostThresholdID
int GlobalNamespace::MainEffectCore::_get__baseColorBoostThresholdID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectCore::_get__baseColorBoostThresholdID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainEffectCore", "_baseColorBoostThresholdID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _baseColorBoostThresholdID
void GlobalNamespace::MainEffectCore::_set__baseColorBoostThresholdID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectCore::_set__baseColorBoostThresholdID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectCore", "_baseColorBoostThresholdID", value));
}
// Autogenerated method: MainEffectCore.SetGlobalShaderValues
void GlobalNamespace::MainEffectCore::SetGlobalShaderValues(float baseColorBoost, float baseColorBoostThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectCore::SetGlobalShaderValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MainEffectCore", "SetGlobalShaderValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseColorBoost, baseColorBoostThreshold)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseColorBoost, baseColorBoostThreshold);
}
// Autogenerated method: MainEffectCore..cctor
void GlobalNamespace::MainEffectCore::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectCore::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MainEffectCore", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainEffectSO.PreRender
void GlobalNamespace::MainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectSO::PreRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectSO.Render
void GlobalNamespace::MainEffectSO::Render(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectSO::Render");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, dest, fade)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated method: MainEffectSO.PostRender
void GlobalNamespace::MainEffectSO::PostRender(float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectSO::PostRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PostRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fade)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fade);
}
// Autogenerated method: MainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::MainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectSO::get_hasPostProcessEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoPostProcessMainEffectSO
#include "GlobalNamespace/NoPostProcessMainEffectSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoPostProcessMainEffectSO.OnDisable
void GlobalNamespace::NoPostProcessMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoPostProcessMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.DrawFadeQuad
void GlobalNamespace::NoPostProcessMainEffectSO::DrawFadeQuad(float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoPostProcessMainEffectSO::DrawFadeQuad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DrawFadeQuad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alpha)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha);
}
// Autogenerated method: NoPostProcessMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::NoPostProcessMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoPostProcessMainEffectSO::get_hasPostProcessEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.OnEnable
void GlobalNamespace::NoPostProcessMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoPostProcessMainEffectSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.PreRender
void GlobalNamespace::NoPostProcessMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoPostProcessMainEffectSO::PreRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.PostRender
void GlobalNamespace::NoPostProcessMainEffectSO::PostRender(float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoPostProcessMainEffectSO::PostRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PostRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fade)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PyramidBloomMainEffectSO
#include "GlobalNamespace/PyramidBloomMainEffectSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD23220
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomTexID
int GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomTexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomMainEffectSO", "_bloomTexID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomTexID
void GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomTexID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomTexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomMainEffectSO", "_bloomTexID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD23230
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomIntensityID
int GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomIntensityID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomIntensityID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomMainEffectSO", "_bloomIntensityID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomIntensityID
void GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomIntensityID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomIntensityID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomMainEffectSO", "_bloomIntensityID", value));
}
// Autogenerated method: PyramidBloomMainEffectSO.OnDisable
void GlobalNamespace::PyramidBloomMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.LazyInitializeMaterials
void GlobalNamespace::PyramidBloomMainEffectSO::LazyInitializeMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::LazyInitializeMaterials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyInitializeMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::PyramidBloomMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::get_hasPostProcessEffect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.OnEnable
void GlobalNamespace::PyramidBloomMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.PreRender
void GlobalNamespace::PyramidBloomMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::PreRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.Render
void GlobalNamespace::PyramidBloomMainEffectSO::Render(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::Render");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, dest, fade)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated method: PyramidBloomMainEffectSO..cctor
void GlobalNamespace::PyramidBloomMainEffectSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomMainEffectSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PyramidBloomMainEffectSO", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
