// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TitleViewController
#include "HMUI/TitleViewController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI* HMUI::TitleViewController::_get__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TitleViewController::_get__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _text
void HMUI::TitleViewController::_set__text(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TitleViewController::_set__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.TitleViewController.SetText
void HMUI::TitleViewController::SetText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TitleViewController::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: HMUI.ViewController/HMUI.DidActivateDelegate
#include "HMUI/ViewController_DidActivateDelegate.hpp"
// Including type: HMUI.ViewController/HMUI.DidDeactivateDelegate
#include "HMUI/ViewController_DidDeactivateDelegate.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationDirection
#include "HMUI/ViewController_AnimationDirection.hpp"
// Including type: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58
#include "HMUI/ViewController_-PresentViewControllerCoroutine-d__58.hpp"
// Including type: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60
#include "HMUI/ViewController_-ReplaceViewControllerCoroutine-d__60.hpp"
// Including type: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62
#include "HMUI/ViewController_-DismissViewControllerCoroutine-d__62.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.ContainerViewController
#include "HMUI/ContainerViewController.hpp"
// Including type: HMUI.Screen
#include "HMUI/Screen.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.EventSystems.BaseRaycaster
#include "UnityEngine/EventSystems/BaseRaycaster.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kTransitionDuration
float HMUI::ViewController::_get_kTransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get_kTransitionDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewController", "kTransitionDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kTransitionDuration
void HMUI::ViewController::_set_kTransitionDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set_kTransitionDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController", "kTransitionDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kTransitionMoveOffset
float HMUI::ViewController::_get_kTransitionMoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get_kTransitionMoveOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewController", "kTransitionMoveOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTransitionMoveOffset
void HMUI::ViewController::_set_kTransitionMoveOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set_kTransitionMoveOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController", "kTransitionMoveOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController/HMUI.DidActivateDelegate didActivateEvent
HMUI::ViewController::DidActivateDelegate* HMUI::ViewController::_get_didActivateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get_didActivateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didActivateEvent"))->offset;
  return *reinterpret_cast<HMUI::ViewController::DidActivateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ViewController/HMUI.DidActivateDelegate didActivateEvent
void HMUI::ViewController::_set_didActivateEvent(HMUI::ViewController::DidActivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set_didActivateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didActivateEvent"))->offset;
  *reinterpret_cast<HMUI::ViewController::DidActivateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController/HMUI.DidDeactivateDelegate didDeactivateEvent
HMUI::ViewController::DidDeactivateDelegate* HMUI::ViewController::_get_didDeactivateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get_didDeactivateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDeactivateEvent"))->offset;
  return *reinterpret_cast<HMUI::ViewController::DidDeactivateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ViewController/HMUI.DidDeactivateDelegate didDeactivateEvent
void HMUI::ViewController::_set_didDeactivateEvent(HMUI::ViewController::DidDeactivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set_didDeactivateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDeactivateEvent"))->offset;
  *reinterpret_cast<HMUI::ViewController::DidDeactivateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder <buttonBinder>k__BackingField
HMUI::ButtonBinder* HMUI::ViewController::_get_$buttonBinder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get_$buttonBinder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<buttonBinder>k__BackingField"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ButtonBinder <buttonBinder>k__BackingField
void HMUI::ViewController::_set_$buttonBinder$k__BackingField(HMUI::ButtonBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set_$buttonBinder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<buttonBinder>k__BackingField"))->offset;
  *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ContainerViewController _containerViewController
HMUI::ContainerViewController* HMUI::ViewController::_get__containerViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__containerViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_containerViewController"))->offset;
  return *reinterpret_cast<HMUI::ContainerViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ContainerViewController _containerViewController
void HMUI::ViewController::_set__containerViewController(HMUI::ContainerViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__containerViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_containerViewController"))->offset;
  *reinterpret_cast<HMUI::ContainerViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _parentViewController
HMUI::ViewController* HMUI::ViewController::_get__parentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__parentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ViewController _parentViewController
void HMUI::ViewController::_set__parentViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__parentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _childViewController
HMUI::ViewController* HMUI::ViewController::_get__childViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__childViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ViewController _childViewController
void HMUI::ViewController::_set__childViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__childViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.Screen _screen
HMUI::Screen* HMUI::ViewController::_get__screen() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__screen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screen"))->offset;
  return *reinterpret_cast<HMUI::Screen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.Screen _screen
void HMUI::ViewController::_set__screen(HMUI::Screen* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__screen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screen"))->offset;
  *reinterpret_cast<HMUI::Screen**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
UnityEngine::RectTransform* HMUI::ViewController::_get__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _rectTransform
void HMUI::ViewController::_set__rectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
UnityEngine::CanvasGroup* HMUI::ViewController::_get__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.CanvasGroup _canvasGroup
void HMUI::ViewController::_set__canvasGroup(UnityEngine::CanvasGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasActivatedBefore
bool HMUI::ViewController::_get__wasActivatedBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__wasActivatedBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasActivatedBefore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _wasActivatedBefore
void HMUI::ViewController::_set__wasActivatedBefore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__wasActivatedBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasActivatedBefore"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActivated
bool HMUI::ViewController::_get__isActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__isActivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActivated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isActivated
void HMUI::ViewController::_set__isActivated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__isActivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActivated"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInTransition
bool HMUI::ViewController::_get__isInTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__isInTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInTransition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isInTransition
void HMUI::ViewController::_set__isInTransition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__isInTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInTransition"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.BaseRaycaster _graphicRaycaster
UnityEngine::EventSystems::BaseRaycaster* HMUI::ViewController::_get__graphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_get__graphicRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphicRaycaster"))->offset;
  return *reinterpret_cast<UnityEngine::EventSystems::BaseRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.EventSystems.BaseRaycaster _graphicRaycaster
void HMUI::ViewController::_set__graphicRaycaster(UnityEngine::EventSystems::BaseRaycaster* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::_set__graphicRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphicRaycaster"))->offset;
  *reinterpret_cast<UnityEngine::EventSystems::BaseRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewController.get_containerViewController
HMUI::ContainerViewController* HMUI::ViewController::get_containerViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_containerViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containerViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ContainerViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_screen
HMUI::Screen* HMUI::ViewController::get_screen() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_screen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_screen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::Screen*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_parentViewController
HMUI::ViewController* HMUI::ViewController::get_parentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_parentViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_childViewController
HMUI::ViewController* HMUI::ViewController::get_childViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_childViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_isInViewControllerHierarchy
bool HMUI::ViewController::get_isInViewControllerHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_isInViewControllerHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInViewControllerHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_isActivated
bool HMUI::ViewController::get_isActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_isActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_wasActivatedBefore
bool HMUI::ViewController::get_wasActivatedBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_wasActivatedBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wasActivatedBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_isInTransition
bool HMUI::ViewController::get_isInTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_isInTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.set_isInTransition
void HMUI::ViewController::set_isInTransition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::set_isInTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.get_enableUserInteractions
bool HMUI::ViewController::get_enableUserInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_enableUserInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableUserInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.set_enableUserInteractions
void HMUI::ViewController::set_enableUserInteractions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::set_enableUserInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableUserInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.get_buttonBinder
HMUI::ButtonBinder* HMUI::ViewController::get_buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_buttonBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buttonBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ButtonBinder*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.set_buttonBinder
void HMUI::ViewController::set_buttonBinder(HMUI::ButtonBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::set_buttonBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.get_rectTransform
UnityEngine::RectTransform* HMUI::ViewController::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_canvasGroup
UnityEngine::CanvasGroup* HMUI::ViewController::get_canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_canvasGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::CanvasGroup*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_graphicRaycaster
UnityEngine::EventSystems::BaseRaycaster* HMUI::ViewController::get_graphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::get_graphicRaycaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphicRaycaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseRaycaster*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.add_didActivateEvent
void HMUI::ViewController::add_didActivateEvent(HMUI::ViewController::DidActivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::add_didActivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didActivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.remove_didActivateEvent
void HMUI::ViewController::remove_didActivateEvent(HMUI::ViewController::DidActivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::remove_didActivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didActivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.add_didDeactivateEvent
void HMUI::ViewController::add_didDeactivateEvent(HMUI::ViewController::DidDeactivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::add_didDeactivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDeactivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.remove_didDeactivateEvent
void HMUI::ViewController::remove_didDeactivateEvent(HMUI::ViewController::DidDeactivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::remove_didDeactivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDeactivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.OnDestroy
void HMUI::ViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.DidActivate
void HMUI::ViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HMUI.ViewController.DidDeactivate
void HMUI::ViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HMUI.ViewController.__Init
void HMUI::ViewController::__Init(HMUI::Screen* screen, HMUI::ViewController* parentViewController, HMUI::ContainerViewController* containerViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::__Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screen), ::il2cpp_utils::ExtractType(parentViewController), ::il2cpp_utils::ExtractType(containerViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, screen, parentViewController, containerViewController);
}
// Autogenerated method: HMUI.ViewController.__ResetViewController
void HMUI::ViewController::__ResetViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::__ResetViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__ResetViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.__PresentViewController
void HMUI::ViewController::__PresentViewController(HMUI::ViewController* viewController, System::Action* finishedCallback, HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::__PresentViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__PresentViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(immediately)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.ViewController.PresentViewControllerCoroutine
System::Collections::IEnumerator* HMUI::ViewController::PresentViewControllerCoroutine(HMUI::ViewController* newViewController, System::Action* finishedCallback, HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::PresentViewControllerCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentViewControllerCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(immediately)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, newViewController, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.ViewController.__ReplaceViewController
void HMUI::ViewController::__ReplaceViewController(HMUI::ViewController* viewController, System::Action* finishedCallback, HMUI::ViewController::AnimationType animationType, HMUI::ViewController::AnimationDirection animationDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::__ReplaceViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__ReplaceViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationType), ::il2cpp_utils::ExtractType(animationDirection)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, finishedCallback, animationType, animationDirection);
}
// Autogenerated method: HMUI.ViewController.ReplaceViewControllerCoroutine
System::Collections::IEnumerator* HMUI::ViewController::ReplaceViewControllerCoroutine(HMUI::ViewController* newViewController, System::Action* finishedCallback, HMUI::ViewController::AnimationType animationType, HMUI::ViewController::AnimationDirection animationDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::ReplaceViewControllerCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceViewControllerCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationType), ::il2cpp_utils::ExtractType(animationDirection)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, newViewController, finishedCallback, animationType, animationDirection);
}
// Autogenerated method: HMUI.ViewController.__DismissViewController
void HMUI::ViewController::__DismissViewController(System::Action* finishedCallback, HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::__DismissViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__DismissViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(immediately)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.ViewController.DismissViewControllerCoroutine
System::Collections::IEnumerator* HMUI::ViewController::DismissViewControllerCoroutine(System::Action* finishedCallback, HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DismissViewControllerCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DismissViewControllerCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(immediately)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.ViewController.__Activate
void HMUI::ViewController::__Activate(bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::__Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HMUI.ViewController.__Deactivate
void HMUI::ViewController::__Deactivate(bool removedFromHierarchy, bool deactivateGameObject, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::__Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(deactivateGameObject), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, deactivateGameObject, screenSystemDisabling);
}
// Autogenerated method: HMUI.ViewController.DeactivateGameObject
void HMUI::ViewController::DeactivateGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DeactivateGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.IsViewControllerInHierarchy
bool HMUI::ViewController::IsViewControllerInHierarchy(HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::IsViewControllerInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsViewControllerInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: HMUI.ViewController.Log
void HMUI::ViewController::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewController", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.DidActivateDelegate
#include "HMUI/ViewController_DidActivateDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ViewController/HMUI.DidActivateDelegate.Invoke
void HMUI::ViewController::DidActivateDelegate::Invoke(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DidActivateDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HMUI.ViewController/HMUI.DidActivateDelegate.BeginInvoke
System::IAsyncResult* HMUI::ViewController::DidActivateDelegate::BeginInvoke(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DidActivateDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling, callback, object);
}
// Autogenerated method: HMUI.ViewController/HMUI.DidActivateDelegate.EndInvoke
void HMUI::ViewController::DidActivateDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DidActivateDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.DidDeactivateDelegate
#include "HMUI/ViewController_DidDeactivateDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ViewController/HMUI.DidDeactivateDelegate.Invoke
void HMUI::ViewController::DidDeactivateDelegate::Invoke(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DidDeactivateDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HMUI.ViewController/HMUI.DidDeactivateDelegate.BeginInvoke
System::IAsyncResult* HMUI::ViewController::DidDeactivateDelegate::BeginInvoke(bool removedFromHierarchy, bool screenSystemDisabling, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DidDeactivateDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling, callback, object);
}
// Autogenerated method: HMUI.ViewController/HMUI.DidDeactivateDelegate.EndInvoke
void HMUI::ViewController::DidDeactivateDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::DidDeactivateDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationType None
HMUI::ViewController::AnimationType HMUI::ViewController::AnimationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ViewController::AnimationType>("HMUI", "ViewController/AnimationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationType None
void HMUI::ViewController::AnimationType::_set_None(HMUI::ViewController::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationType In
HMUI::ViewController::AnimationType HMUI::ViewController::AnimationType::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationType::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ViewController::AnimationType>("HMUI", "ViewController/AnimationType", "In"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationType In
void HMUI::ViewController::AnimationType::_set_In(HMUI::ViewController::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationType::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationType", "In", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationType Out
HMUI::ViewController::AnimationType HMUI::ViewController::AnimationType::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationType::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ViewController::AnimationType>("HMUI", "ViewController/AnimationType", "Out"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationType Out
void HMUI::ViewController::AnimationType::_set_Out(HMUI::ViewController::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationType::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationType", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::ViewController::AnimationType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::ViewController::AnimationType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewController/HMUI.AnimationDirection
#include "HMUI/ViewController_AnimationDirection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationDirection Horizontal
HMUI::ViewController::AnimationDirection HMUI::ViewController::AnimationDirection::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationDirection::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ViewController::AnimationDirection>("HMUI", "ViewController/AnimationDirection", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationDirection Horizontal
void HMUI::ViewController::AnimationDirection::_set_Horizontal(HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationDirection::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationDirection", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationDirection Vertical
HMUI::ViewController::AnimationDirection HMUI::ViewController::AnimationDirection::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationDirection::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ViewController::AnimationDirection>("HMUI", "ViewController/AnimationDirection", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationDirection Vertical
void HMUI::ViewController::AnimationDirection::_set_Vertical(HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationDirection::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationDirection", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::ViewController::AnimationDirection::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationDirection::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::ViewController::AnimationDirection::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::AnimationDirection::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58
#include "HMUI/ViewController_-PresentViewControllerCoroutine-d__58.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController <>4__this
HMUI::ViewController* HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController <>4__this
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_$$4__this(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController newViewController
HMUI::ViewController* HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_newViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_newViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController newViewController
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_newViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_newViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean immediately
bool HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_immediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_immediately");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediately"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean immediately
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_immediately(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_immediately");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediately"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
HMUI::ViewController::AnimationDirection HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_animationDirection(HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
System::Action* HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_get_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Action finishedCallback
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_finishedCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::_set_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.System.IDisposable.Dispose
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.MoveNext
bool HMUI::ViewController::$PresentViewControllerCoroutine$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.System.Collections.IEnumerator.Reset
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60
#include "HMUI/ViewController_-ReplaceViewControllerCoroutine-d__60.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController <>4__this
HMUI::ViewController* HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController <>4__this
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_$$4__this(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController newViewController
HMUI::ViewController* HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_newViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_newViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController newViewController
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_newViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_newViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationType animationType
HMUI::ViewController::AnimationType HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_animationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_animationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationType"))->offset;
  return *reinterpret_cast<HMUI::ViewController::AnimationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController/HMUI.AnimationType animationType
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_animationType(HMUI::ViewController::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_animationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationType"))->offset;
  *reinterpret_cast<HMUI::ViewController::AnimationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
HMUI::ViewController::AnimationDirection HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_animationDirection(HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
System::Action* HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_get_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Action finishedCallback
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_finishedCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::_set_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.System.IDisposable.Dispose
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.MoveNext
bool HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.System.Collections.IEnumerator.Reset
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62
#include "HMUI/ViewController_-DismissViewControllerCoroutine-d__62.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController <>4__this
HMUI::ViewController* HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController <>4__this
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_$$4__this(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean immediately
bool HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_immediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_immediately");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediately"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean immediately
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_immediately(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_immediately");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediately"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
HMUI::ViewController::AnimationDirection HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_animationDirection(HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
System::Action* HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Action finishedCallback
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_finishedCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController <movingInViewController>5__2
HMUI::ViewController* HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_$movingInViewController$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_get_$movingInViewController$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<movingInViewController>5__2"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ViewController <movingInViewController>5__2
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_$movingInViewController$5__2(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::_set_$movingInViewController$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<movingInViewController>5__2"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.System.IDisposable.Dispose
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.MoveNext
bool HMUI::ViewController::$DismissViewControllerCoroutine$d__62::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.System.Collections.IEnumerator.Reset
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewControllerTransitionHelpers
#include "HMUI/ViewControllerTransitionHelpers.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3
#include "HMUI/ViewControllerTransitionHelpers_-DoPresentTransition-d__3.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4
#include "HMUI/ViewControllerTransitionHelpers_-DoDismissTransition-d__4.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass5_0.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5
#include "HMUI/ViewControllerTransitionHelpers_-DoHorizontalTransition-d__5.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass6_0.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6
#include "HMUI/ViewControllerTransitionHelpers_-DoVerticalTransition-d__6.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8
#include "HMUI/ViewControllerTransitionHelpers_-AnimationCoroutine-d__8.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationDirection
#include "HMUI/ViewController_AnimationDirection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kTransitionDuration
float HMUI::ViewControllerTransitionHelpers::_get_kTransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::_get_kTransitionDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewControllerTransitionHelpers", "kTransitionDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTransitionDuration
void HMUI::ViewControllerTransitionHelpers::_set_kTransitionDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::_set_kTransitionDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewControllerTransitionHelpers", "kTransitionDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kHorizontalTransitionMoveOffset
float HMUI::ViewControllerTransitionHelpers::_get_kHorizontalTransitionMoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::_get_kHorizontalTransitionMoveOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewControllerTransitionHelpers", "kHorizontalTransitionMoveOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHorizontalTransitionMoveOffset
void HMUI::ViewControllerTransitionHelpers::_set_kHorizontalTransitionMoveOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::_set_kHorizontalTransitionMoveOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewControllerTransitionHelpers", "kHorizontalTransitionMoveOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVerticalTransitionMoveOffset
float HMUI::ViewControllerTransitionHelpers::_get_kVerticalTransitionMoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::_get_kVerticalTransitionMoveOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewControllerTransitionHelpers", "kVerticalTransitionMoveOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVerticalTransitionMoveOffset
void HMUI::ViewControllerTransitionHelpers::_set_kVerticalTransitionMoveOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::_set_kVerticalTransitionMoveOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewControllerTransitionHelpers", "kVerticalTransitionMoveOffset", value));
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.DoPresentTransition
System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::DoPresentTransition(HMUI::ViewController* toPresentViewController, HMUI::ViewController* toDismissViewController, HMUI::ViewController::AnimationDirection animationDirection, float moveOffsetMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::DoPresentTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "DoPresentTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(moveOffsetMultiplier)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController, animationDirection, moveOffsetMultiplier);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.DoDismissTransition
System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::DoDismissTransition(HMUI::ViewController* toPresentViewController, HMUI::ViewController* toDismissViewController, HMUI::ViewController::AnimationDirection animationDirection, float moveOffsetMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::DoDismissTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "DoDismissTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(moveOffsetMultiplier)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController, animationDirection, moveOffsetMultiplier);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.DoHorizontalTransition
System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::DoHorizontalTransition(HMUI::ViewController* toPresentViewController, HMUI::ViewController* toDismissViewController, float moveOffsetMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::DoHorizontalTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "DoHorizontalTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController), ::il2cpp_utils::ExtractType(moveOffsetMultiplier)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController, moveOffsetMultiplier);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.DoVerticalTransition
System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::DoVerticalTransition(HMUI::ViewController* toPresentViewController, HMUI::ViewController* toDismissViewController, float moveOffsetMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::DoVerticalTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "DoVerticalTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController), ::il2cpp_utils::ExtractType(moveOffsetMultiplier)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController, moveOffsetMultiplier);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.ImmediateTransition
void HMUI::ViewControllerTransitionHelpers::ImmediateTransition(HMUI::ViewController* toPresentViewController, HMUI::ViewController* toDismissViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::ImmediateTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "ImmediateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.AnimationCoroutine
System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::AnimationCoroutine(System::Action_1<float>* transitionAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::AnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "AnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionAnimation)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transitionAnimation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3
#include "HMUI/ViewControllerTransitionHelpers_-DoPresentTransition-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
HMUI::ViewController::AnimationDirection HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_animationDirection(HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toPresentViewController
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_toPresentViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toDismissViewController
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_toDismissViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffsetMultiplier
float HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_moveOffsetMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_get_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single moveOffsetMultiplier
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_moveOffsetMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::_set_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4
#include "HMUI/ViewControllerTransitionHelpers_-DoDismissTransition-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
HMUI::ViewController::AnimationDirection HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_animationDirection(HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  *reinterpret_cast<HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toPresentViewController
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_toPresentViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toDismissViewController
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_toDismissViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffsetMultiplier
float HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_moveOffsetMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_get_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single moveOffsetMultiplier
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_moveOffsetMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::_set_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass5_0.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_get_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_get_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toPresentViewController
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_set_toPresentViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_set_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffset
float HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_get_moveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_get_moveOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single moveOffset
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_set_moveOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_set_moveOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_get_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_get_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toDismissViewController
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_set_toDismissViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_set_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseCanvasGroupAlpha
float HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_get_baseCanvasGroupAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_get_baseCanvasGroupAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseCanvasGroupAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single baseCanvasGroupAlpha
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_set_baseCanvasGroupAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::_set_baseCanvasGroupAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseCanvasGroupAlpha"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0.<DoHorizontalTransition>b__0
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::$DoHorizontalTransition$b__0(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::<DoHorizontalTransition>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoHorizontalTransition>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5
#include "HMUI/ViewControllerTransitionHelpers_-DoHorizontalTransition-d__5.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass5_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toPresentViewController
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_toPresentViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toDismissViewController
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_toDismissViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffsetMultiplier
float HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_moveOffsetMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single moveOffsetMultiplier
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_moveOffsetMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0 <>8__1
HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0* HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_get_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0 <>8__1
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_$$8__1(HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::_set_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  *reinterpret_cast<HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass6_0.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_get_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_get_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toPresentViewController
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_set_toPresentViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_set_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffset
float HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_get_moveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_get_moveOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single moveOffset
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_set_moveOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_set_moveOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseCanvasGroupAlpha
float HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_get_baseCanvasGroupAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_get_baseCanvasGroupAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseCanvasGroupAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single baseCanvasGroupAlpha
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_set_baseCanvasGroupAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_set_baseCanvasGroupAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseCanvasGroupAlpha"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_get_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_get_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toDismissViewController
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_set_toDismissViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::_set_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0.<DoVerticalTransition>b__0
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::$DoVerticalTransition$b__0(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::<DoVerticalTransition>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoVerticalTransition>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6
#include "HMUI/ViewControllerTransitionHelpers_-DoVerticalTransition-d__6.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass6_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toPresentViewController
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_toPresentViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
HMUI::ViewController* HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ViewController toDismissViewController
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_toDismissViewController(HMUI::ViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  *reinterpret_cast<HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffsetMultiplier
float HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_moveOffsetMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single moveOffsetMultiplier
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_moveOffsetMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0 <>8__1
HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0* HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_get_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0 <>8__1
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_$$8__1(HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::_set_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  *reinterpret_cast<HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8
#include "HMUI/ViewControllerTransitionHelpers_-AnimationCoroutine-d__8.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> transitionAnimation
System::Action_1<float>* HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_get_transitionAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_get_transitionAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionAnimation"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Action`1<System.Single> transitionAnimation
void HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_set_transitionAnimation(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_set_transitionAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionAnimation"))->offset;
  *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
float HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_get_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_get_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single <elapsedTime>5__2
void HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_set_$elapsedTime$5__2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::_set_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView
#include "HMUI/AnimatedSwitchView.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.<>c
#include "HMUI/AnimatedSwitchView_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _knobRectTransform
UnityEngine::RectTransform* HMUI::AnimatedSwitchView::_get__knobRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__knobRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_knobRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _knobRectTransform
void HMUI::AnimatedSwitchView::_set__knobRectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__knobRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_knobRectTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _backgroundImage
HMUI::ImageView* HMUI::AnimatedSwitchView::_get__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ImageView _backgroundImage
void HMUI::AnimatedSwitchView::_set__backgroundImage(HMUI::ImageView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _knobImage
HMUI::ImageView* HMUI::AnimatedSwitchView::_get__knobImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__knobImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_knobImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ImageView _knobImage
void HMUI::AnimatedSwitchView::_set__knobImage(HMUI::ImageView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__knobImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_knobImage"))->offset;
  *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _onText
TMPro::TextMeshProUGUI* HMUI::AnimatedSwitchView::_get__onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _onText
void HMUI::AnimatedSwitchView::_set__onText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _offText
TMPro::TextMeshProUGUI* HMUI::AnimatedSwitchView::_get__offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _offText
void HMUI::AnimatedSwitchView::_set__offText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _switchAnimationSmooth
float HMUI::AnimatedSwitchView::_get__switchAnimationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__switchAnimationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchAnimationSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _switchAnimationSmooth
void HMUI::AnimatedSwitchView::_set__switchAnimationSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__switchAnimationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchAnimationSmooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disableAnimationDuration
float HMUI::AnimatedSwitchView::_get__disableAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__disableAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableAnimationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _disableAnimationDuration
void HMUI::AnimatedSwitchView::_set__disableAnimationDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__disableAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableAnimationDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _highlightAnimationDuration
float HMUI::AnimatedSwitchView::_get__highlightAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__highlightAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightAnimationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _highlightAnimationDuration
void HMUI::AnimatedSwitchView::_set__highlightAnimationDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__highlightAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightAnimationDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _horizontalStretchAmount
float HMUI::AnimatedSwitchView::_get__horizontalStretchAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__horizontalStretchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_horizontalStretchAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _horizontalStretchAmount
void HMUI::AnimatedSwitchView::_set__horizontalStretchAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__horizontalStretchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_horizontalStretchAmount"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _verticalStretchAmount
float HMUI::AnimatedSwitchView::_get__verticalStretchAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__verticalStretchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalStretchAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _verticalStretchAmount
void HMUI::AnimatedSwitchView::_set__verticalStretchAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__verticalStretchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalStretchAmount"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _onColors
HMUI::AnimatedSwitchView::ColorBlock* HMUI::AnimatedSwitchView::_get__onColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__onColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onColors"))->offset;
  return *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _onColors
void HMUI::AnimatedSwitchView::_set__onColors(HMUI::AnimatedSwitchView::ColorBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__onColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onColors"))->offset;
  *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _offColors
HMUI::AnimatedSwitchView::ColorBlock* HMUI::AnimatedSwitchView::_get__offColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__offColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColors"))->offset;
  return *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _offColors
void HMUI::AnimatedSwitchView::_set__offColors(HMUI::AnimatedSwitchView::ColorBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__offColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColors"))->offset;
  *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _onHighlightedColors
HMUI::AnimatedSwitchView::ColorBlock* HMUI::AnimatedSwitchView::_get__onHighlightedColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__onHighlightedColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onHighlightedColors"))->offset;
  return *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _onHighlightedColors
void HMUI::AnimatedSwitchView::_set__onHighlightedColors(HMUI::AnimatedSwitchView::ColorBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__onHighlightedColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onHighlightedColors"))->offset;
  *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _offHighlightedColors
HMUI::AnimatedSwitchView::ColorBlock* HMUI::AnimatedSwitchView::_get__offHighlightedColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__offHighlightedColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offHighlightedColors"))->offset;
  return *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _offHighlightedColors
void HMUI::AnimatedSwitchView::_set__offHighlightedColors(HMUI::AnimatedSwitchView::ColorBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__offHighlightedColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offHighlightedColors"))->offset;
  *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _disabledColors
HMUI::AnimatedSwitchView::ColorBlock* HMUI::AnimatedSwitchView::_get__disabledColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__disabledColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColors"))->offset;
  return *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _disabledColors
void HMUI::AnimatedSwitchView::_set__disabledColors(HMUI::AnimatedSwitchView::ColorBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__disabledColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColors"))->offset;
  *reinterpret_cast<HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.AnimationState _animationState
HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::_get__animationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__animationState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationState"))->offset;
  return *reinterpret_cast<HMUI::AnimatedSwitchView::AnimationState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.AnimatedSwitchView/HMUI.AnimationState _animationState
void HMUI::AnimatedSwitchView::_set__animationState(HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__animationState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationState"))->offset;
  *reinterpret_cast<HMUI::AnimatedSwitchView::AnimationState*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _switchAmount
float HMUI::AnimatedSwitchView::_get__switchAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__switchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _switchAmount
void HMUI::AnimatedSwitchView::_set__switchAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__switchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchAmount"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _highlightAmount
float HMUI::AnimatedSwitchView::_get__highlightAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__highlightAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _highlightAmount
void HMUI::AnimatedSwitchView::_set__highlightAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__highlightAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightAmount"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disabledAmount
float HMUI::AnimatedSwitchView::_get__disabledAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__disabledAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _disabledAmount
void HMUI::AnimatedSwitchView::_set__disabledAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__disabledAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAmount"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalKnobWidth
float HMUI::AnimatedSwitchView::_get__originalKnobWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__originalKnobWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalKnobWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _originalKnobWidth
void HMUI::AnimatedSwitchView::_set__originalKnobWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__originalKnobWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalKnobWidth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalKnobHeight
float HMUI::AnimatedSwitchView::_get__originalKnobHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__originalKnobHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalKnobHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _originalKnobHeight
void HMUI::AnimatedSwitchView::_set__originalKnobHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__originalKnobHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalKnobHeight"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleWithCallbacks _toggle
HMUI::ToggleWithCallbacks* HMUI::AnimatedSwitchView::_get__toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_get__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  return *reinterpret_cast<HMUI::ToggleWithCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ToggleWithCallbacks _toggle
void HMUI::AnimatedSwitchView::_set__toggle(HMUI::ToggleWithCallbacks* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::_set__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  *reinterpret_cast<HMUI::ToggleWithCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.AnimatedSwitchView.Awake
void HMUI::AnimatedSwitchView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.Start
void HMUI::AnimatedSwitchView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.OnDestroy
void HMUI::AnimatedSwitchView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.Update
void HMUI::AnimatedSwitchView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpPosition
void HMUI::AnimatedSwitchView::LerpPosition(float switchAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::LerpPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(switchAmount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, switchAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpStretch
void HMUI::AnimatedSwitchView::LerpStretch(float switchAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::LerpStretch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpStretch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(switchAmount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, switchAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpColors
void HMUI::AnimatedSwitchView::LerpColors(float switchAmount, float highlightAmount, float disabledAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::LerpColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(switchAmount), ::il2cpp_utils::ExtractType(highlightAmount), ::il2cpp_utils::ExtractType(disabledAmount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, switchAmount, highlightAmount, disabledAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpColor
UnityEngine::Color HMUI::AnimatedSwitchView::LerpColor(float switchAmount, float highlightAmount, float disabledAmount, HMUI::AnimatedSwitchView::GetColorDelegate* getColorDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::LerpColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(switchAmount), ::il2cpp_utils::ExtractType(highlightAmount), ::il2cpp_utils::ExtractType(disabledAmount), ::il2cpp_utils::ExtractType(getColorDelegate)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, switchAmount, highlightAmount, disabledAmount, getColorDelegate);
}
// Autogenerated method: HMUI.AnimatedSwitchView.HandleOnValueChanged
void HMUI::AnimatedSwitchView::HandleOnValueChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::HandleOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.AnimatedSwitchView.HandleStateDidChange
void HMUI::AnimatedSwitchView::HandleStateDidChange(HMUI::ToggleWithCallbacks::SelectionState selectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::HandleStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, selectionState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView/HMUI.ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color knobColor
UnityEngine::Color HMUI::AnimatedSwitchView::ColorBlock::_get_knobColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_get_knobColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color knobColor
void HMUI::AnimatedSwitchView::ColorBlock::_set_knobColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_set_knobColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color knobColor0
UnityEngine::Color HMUI::AnimatedSwitchView::ColorBlock::_get_knobColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_get_knobColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor0"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color knobColor0
void HMUI::AnimatedSwitchView::ColorBlock::_set_knobColor0(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_set_knobColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor0"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color knobColor1
UnityEngine::Color HMUI::AnimatedSwitchView::ColorBlock::_get_knobColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_get_knobColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor1"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color knobColor1
void HMUI::AnimatedSwitchView::ColorBlock::_set_knobColor1(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_set_knobColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor1"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color backgroundColor
UnityEngine::Color HMUI::AnimatedSwitchView::ColorBlock::_get_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_get_backgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color backgroundColor
void HMUI::AnimatedSwitchView::ColorBlock::_set_backgroundColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_set_backgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color backgroundColor0
UnityEngine::Color HMUI::AnimatedSwitchView::ColorBlock::_get_backgroundColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_get_backgroundColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor0"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color backgroundColor0
void HMUI::AnimatedSwitchView::ColorBlock::_set_backgroundColor0(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_set_backgroundColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor0"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color backgroundColor1
UnityEngine::Color HMUI::AnimatedSwitchView::ColorBlock::_get_backgroundColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_get_backgroundColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor1"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color backgroundColor1
void HMUI::AnimatedSwitchView::ColorBlock::_set_backgroundColor1(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::ColorBlock::_set_backgroundColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor1"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView/HMUI.AnimationState
#include "HMUI/AnimatedSwitchView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState Idle
HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState Idle
void HMUI::AnimatedSwitchView::AnimationState::_set_Idle(HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState SwitchingOn
HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_SwitchingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_get_SwitchingOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "SwitchingOn"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState SwitchingOn
void HMUI::AnimatedSwitchView::AnimationState::_set_SwitchingOn(HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_set_SwitchingOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "SwitchingOn", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState SwitchingOff
HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_SwitchingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_get_SwitchingOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "SwitchingOff"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState SwitchingOff
void HMUI::AnimatedSwitchView::AnimationState::_set_SwitchingOff(HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_set_SwitchingOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "SwitchingOff", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState HighlightingOn
HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_HighlightingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_get_HighlightingOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "HighlightingOn"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState HighlightingOn
void HMUI::AnimatedSwitchView::AnimationState::_set_HighlightingOn(HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_set_HighlightingOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "HighlightingOn", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState HighlightingOff
HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_HighlightingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_get_HighlightingOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "HighlightingOff"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState HighlightingOff
void HMUI::AnimatedSwitchView::AnimationState::_set_HighlightingOff(HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_set_HighlightingOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "HighlightingOff", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState DisablingOn
HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_DisablingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_get_DisablingOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "DisablingOn"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState DisablingOn
void HMUI::AnimatedSwitchView::AnimationState::_set_DisablingOn(HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_set_DisablingOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "DisablingOn", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState DisablingOff
HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_DisablingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_get_DisablingOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "DisablingOff"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState DisablingOff
void HMUI::AnimatedSwitchView::AnimationState::_set_DisablingOff(HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_set_DisablingOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "DisablingOff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::AnimatedSwitchView::AnimationState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::AnimatedSwitchView::AnimationState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::AnimationState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate.Invoke
UnityEngine::Color HMUI::AnimatedSwitchView::GetColorDelegate::Invoke(HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::GetColorDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate.BeginInvoke
System::IAsyncResult* HMUI::AnimatedSwitchView::GetColorDelegate::BeginInvoke(HMUI::AnimatedSwitchView::ColorBlock* colorBlock, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::GetColorDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, colorBlock, callback, object);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate.EndInvoke
UnityEngine::Color HMUI::AnimatedSwitchView::GetColorDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::GetColorDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView/HMUI.<>c
#include "HMUI/AnimatedSwitchView_--c.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HMUI.AnimatedSwitchView/HMUI.<>c <>9
HMUI::AnimatedSwitchView::$$c* HMUI::AnimatedSwitchView::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::$$c*>("HMUI", "AnimatedSwitchView/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HMUI.AnimatedSwitchView/HMUI.<>c <>9
void HMUI::AnimatedSwitchView::$$c::_set_$$9(HMUI::AnimatedSwitchView::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_0
HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_get_$$9__31_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_0")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_0
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_0(HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_set_$$9__31_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_0", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_1
HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_get_$$9__31_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_1")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_1
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_1(HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_set_$$9__31_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_1", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_2
HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_get_$$9__31_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_2")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_2
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_2(HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_set_$$9__31_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_2", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_3
HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_get_$$9__31_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_3")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_3
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_3(HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_set_$$9__31_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_3", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_4
HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_get_$$9__31_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_4")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_4
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_4(HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_set_$$9__31_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_4", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_5
HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_get_$$9__31_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_5")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_5
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_5(HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::_set_$$9__31_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_5", value)));
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c..cctor
void HMUI::AnimatedSwitchView::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "AnimatedSwitchView/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_0
UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_0(HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_1
UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_1(HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_2
UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_2(HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_3
UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_3(HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_4
UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_4(HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_5
UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_5(HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, colorBlock);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ButtonSpriteSwap
#include "HMUI/ButtonSpriteSwap.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Sprite _normalStateSprite
UnityEngine::Sprite* HMUI::ButtonSpriteSwap::_get__normalStateSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_get__normalStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalStateSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Sprite _normalStateSprite
void HMUI::ButtonSpriteSwap::_set__normalStateSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_set__normalStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalStateSprite"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Sprite _highlightStateSprite
UnityEngine::Sprite* HMUI::ButtonSpriteSwap::_get__highlightStateSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_get__highlightStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightStateSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Sprite _highlightStateSprite
void HMUI::ButtonSpriteSwap::_set__highlightStateSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_set__highlightStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightStateSprite"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Sprite _pressedStateSprite
UnityEngine::Sprite* HMUI::ButtonSpriteSwap::_get__pressedStateSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_get__pressedStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedStateSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Sprite _pressedStateSprite
void HMUI::ButtonSpriteSwap::_set__pressedStateSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_set__pressedStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedStateSprite"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Sprite _disabledStateSprite
UnityEngine::Sprite* HMUI::ButtonSpriteSwap::_get__disabledStateSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_get__disabledStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledStateSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Sprite _disabledStateSprite
void HMUI::ButtonSpriteSwap::_set__disabledStateSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_set__disabledStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledStateSprite"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.NoTransitionsButton _button
HMUI::NoTransitionsButton* HMUI::ButtonSpriteSwap::_get__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_get__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<HMUI::NoTransitionsButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.NoTransitionsButton _button
void HMUI::ButtonSpriteSwap::_set__button(HMUI::NoTransitionsButton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_set__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  *reinterpret_cast<HMUI::NoTransitionsButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Image[] _images
::Array<UnityEngine::UI::Image*>* HMUI::ButtonSpriteSwap::_get__images() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_get__images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_images"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::UI::Image*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.UI.Image[] _images
void HMUI::ButtonSpriteSwap::_set__images(::Array<UnityEngine::UI::Image*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_set__images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_images"))->offset;
  *reinterpret_cast<::Array<UnityEngine::UI::Image*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _didStart
bool HMUI::ButtonSpriteSwap::_get__didStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_get__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean _didStart
void HMUI::ButtonSpriteSwap::_set__didStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::_set__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ButtonSpriteSwap.Awake
void HMUI::ButtonSpriteSwap::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.Start
void HMUI::ButtonSpriteSwap::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.OnEnable
void HMUI::ButtonSpriteSwap::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.OnDestroy
void HMUI::ButtonSpriteSwap::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.HandleButtonSelectionStateDidChange
void HMUI::ButtonSpriteSwap::HandleButtonSelectionStateDidChange(HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwap::HandleButtonSelectionStateDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ButtonSpriteSwapToggle
#include "HMUI/ButtonSpriteSwapToggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _resetToggleOnEnable
bool HMUI::ButtonSpriteSwapToggle::_get__resetToggleOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwapToggle::_get__resetToggleOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetToggleOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _resetToggleOnEnable
void HMUI::ButtonSpriteSwapToggle::_set__resetToggleOnEnable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwapToggle::_set__resetToggleOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetToggleOnEnable"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreHighlight
bool HMUI::ButtonSpriteSwapToggle::_get__ignoreHighlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwapToggle::_get__ignoreHighlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreHighlight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _ignoreHighlight
void HMUI::ButtonSpriteSwapToggle::_set__ignoreHighlight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwapToggle::_set__ignoreHighlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreHighlight"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isToggled
bool HMUI::ButtonSpriteSwapToggle::_get__isToggled() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwapToggle::_get__isToggled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isToggled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isToggled
void HMUI::ButtonSpriteSwapToggle::_set__isToggled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwapToggle::_set__isToggled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isToggled"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ButtonSpriteSwapToggle.OnEnable
void HMUI::ButtonSpriteSwapToggle::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwapToggle::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwapToggle.HandleButtonSelectionStateDidChange
void HMUI::ButtonSpriteSwapToggle::HandleButtonSelectionStateDidChange(HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonSpriteSwapToggle::HandleButtonSelectionStateDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ButtonStaticAnimations
#include "HMUI/ButtonStaticAnimations.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.NoTransitionsButton _button
HMUI::NoTransitionsButton* HMUI::ButtonStaticAnimations::_get__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_get__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<HMUI::NoTransitionsButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.NoTransitionsButton _button
void HMUI::ButtonStaticAnimations::_set__button(HMUI::NoTransitionsButton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_set__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  *reinterpret_cast<HMUI::NoTransitionsButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalClip
UnityEngine::AnimationClip* HMUI::ButtonStaticAnimations::_get__normalClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_get__normalClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _normalClip
void HMUI::ButtonStaticAnimations::_set__normalClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_set__normalClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _highlightedClip
UnityEngine::AnimationClip* HMUI::ButtonStaticAnimations::_get__highlightedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_get__highlightedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _highlightedClip
void HMUI::ButtonStaticAnimations::_set__highlightedClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_set__highlightedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _pressedClip
UnityEngine::AnimationClip* HMUI::ButtonStaticAnimations::_get__pressedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_get__pressedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _pressedClip
void HMUI::ButtonStaticAnimations::_set__pressedClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_set__pressedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _disabledClip
UnityEngine::AnimationClip* HMUI::ButtonStaticAnimations::_get__disabledClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_get__disabledClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _disabledClip
void HMUI::ButtonStaticAnimations::_set__disabledClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_set__disabledClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didStart
bool HMUI::ButtonStaticAnimations::_get__didStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_get__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _didStart
void HMUI::ButtonStaticAnimations::_set__didStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::_set__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ButtonStaticAnimations.Awake
void HMUI::ButtonStaticAnimations::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.Start
void HMUI::ButtonStaticAnimations::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.OnEnable
void HMUI::ButtonStaticAnimations::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.OnDestroy
void HMUI::ButtonStaticAnimations::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.HandleButtonSelectionStateDidChange
void HMUI::ButtonStaticAnimations::HandleButtonSelectionStateDidChange(HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ButtonStaticAnimations::HandleButtonSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.NoTransitionsButton
#include "HMUI/NoTransitionsButton.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.NoTransitionsButton/HMUI.SelectionState> selectionStateDidChangeEvent
System::Action_1<HMUI::NoTransitionsButton::SelectionState>* HMUI::NoTransitionsButton::_get_selectionStateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::_get_selectionStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionStateDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<HMUI::NoTransitionsButton::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<HMUI.NoTransitionsButton/HMUI.SelectionState> selectionStateDidChangeEvent
void HMUI::NoTransitionsButton::_set_selectionStateDidChangeEvent(System::Action_1<HMUI::NoTransitionsButton::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::_set_selectionStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionStateDidChangeEvent"))->offset;
  *reinterpret_cast<System::Action_1<HMUI::NoTransitionsButton::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.NoTransitionsButton/HMUI.SelectionState _selectionState
HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::_get__selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::_get__selectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionState"))->offset;
  return *reinterpret_cast<HMUI::NoTransitionsButton::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.NoTransitionsButton/HMUI.SelectionState _selectionState
void HMUI::NoTransitionsButton::_set__selectionState(HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::_set__selectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionState"))->offset;
  *reinterpret_cast<HMUI::NoTransitionsButton::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.NoTransitionsButton.get_selectionState
HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::get_selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::get_selectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::NoTransitionsButton::SelectionState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.NoTransitionsButton.add_selectionStateDidChangeEvent
void HMUI::NoTransitionsButton::add_selectionStateDidChangeEvent(System::Action_1<HMUI::NoTransitionsButton::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::add_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.NoTransitionsButton.remove_selectionStateDidChangeEvent
void HMUI::NoTransitionsButton::remove_selectionStateDidChangeEvent(System::Action_1<HMUI::NoTransitionsButton::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::remove_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.NoTransitionsButton.DoStateTransition
void HMUI::NoTransitionsButton::DoStateTransition(UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.NoTransitionsButton/HMUI.SelectionState
#include "HMUI/NoTransitionsButton.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Normal
HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::SelectionState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::NoTransitionsButton::SelectionState>("HMUI", "NoTransitionsButton/SelectionState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Normal
void HMUI::NoTransitionsButton::SelectionState::_set_Normal(HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "NoTransitionsButton/SelectionState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Highlighted
HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::NoTransitionsButton::SelectionState>("HMUI", "NoTransitionsButton/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Highlighted
void HMUI::NoTransitionsButton::SelectionState::_set_Highlighted(HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "NoTransitionsButton/SelectionState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Pressed
HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::SelectionState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::NoTransitionsButton::SelectionState>("HMUI", "NoTransitionsButton/SelectionState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Pressed
void HMUI::NoTransitionsButton::SelectionState::_set_Pressed(HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "NoTransitionsButton/SelectionState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Disabled
HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::SelectionState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::NoTransitionsButton::SelectionState>("HMUI", "NoTransitionsButton/SelectionState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Disabled
void HMUI::NoTransitionsButton::SelectionState::_set_Disabled(HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "NoTransitionsButton/SelectionState", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::NoTransitionsButton::SelectionState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::NoTransitionsButton::SelectionState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::NoTransitionsButton::SelectionState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.TableView/HMUI.IDataSource
#include "HMUI/TableView_IDataSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
UnityEngine::UI::Button* HMUI::DropdownWithTableView::_get__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_get__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _button
void HMUI::DropdownWithTableView::_set__button(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_set__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
HMUI::TableView* HMUI::DropdownWithTableView::_get__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_get__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.TableView _tableView
void HMUI::DropdownWithTableView::_set__tableView(HMUI::TableView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_set__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  *reinterpret_cast<HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ModalView _modalView
HMUI::ModalView* HMUI::DropdownWithTableView::_get__modalView() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_get__modalView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modalView"))->offset;
  return *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ModalView _modalView
void HMUI::DropdownWithTableView::_set__modalView(HMUI::ModalView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_set__modalView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modalView"))->offset;
  *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfVisibleCells
int HMUI::DropdownWithTableView::_get__numberOfVisibleCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_get__numberOfVisibleCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfVisibleCells"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _numberOfVisibleCells
void HMUI::DropdownWithTableView::_set__numberOfVisibleCells(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_set__numberOfVisibleCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfVisibleCells"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<HMUI.DropdownWithTableView,System.Int32> didSelectCellWithIdxEvent
System::Action_2<HMUI::DropdownWithTableView*, int>* HMUI::DropdownWithTableView::_get_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_get_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<System::Action_2<HMUI::DropdownWithTableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<HMUI.DropdownWithTableView,System.Int32> didSelectCellWithIdxEvent
void HMUI::DropdownWithTableView::_set_didSelectCellWithIdxEvent(System::Action_2<HMUI::DropdownWithTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_set_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  *reinterpret_cast<System::Action_2<HMUI::DropdownWithTableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <selectedIndex>k__BackingField
int HMUI::DropdownWithTableView::_get_$selectedIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_get_$selectedIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectedIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <selectedIndex>k__BackingField
void HMUI::DropdownWithTableView::_set_$selectedIndex$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::_set_$selectedIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectedIndex>k__BackingField"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.DropdownWithTableView.get_tableViewDataSource
HMUI::TableView::IDataSource* HMUI::DropdownWithTableView::get_tableViewDataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::get_tableViewDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tableViewDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableView::IDataSource*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.get_selectedIndex
int HMUI::DropdownWithTableView::get_selectedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::get_selectedIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.set_selectedIndex
void HMUI::DropdownWithTableView::set_selectedIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::set_selectedIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectedIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.DropdownWithTableView.add_didSelectCellWithIdxEvent
void HMUI::DropdownWithTableView::add_didSelectCellWithIdxEvent(System::Action_2<HMUI::DropdownWithTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.DropdownWithTableView.remove_didSelectCellWithIdxEvent
void HMUI::DropdownWithTableView::remove_didSelectCellWithIdxEvent(System::Action_2<HMUI::DropdownWithTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.DropdownWithTableView.Init
void HMUI::DropdownWithTableView::Init(HMUI::TableView::IDataSource* tableViewDataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableViewDataSource)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, tableViewDataSource);
}
// Autogenerated method: HMUI.DropdownWithTableView.ReloadData
void HMUI::DropdownWithTableView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::ReloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.SelectCellWithIdx
void HMUI::DropdownWithTableView::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::SelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: HMUI.DropdownWithTableView.Awake
void HMUI::DropdownWithTableView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.OnDisable
void HMUI::DropdownWithTableView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.OnDestroy
void HMUI::DropdownWithTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.RefreshSize
void HMUI::DropdownWithTableView::RefreshSize(HMUI::TableView::IDataSource* dataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::RefreshSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSource)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, dataSource);
}
// Autogenerated method: HMUI.DropdownWithTableView.OnButtonClick
void HMUI::DropdownWithTableView::OnButtonClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::OnButtonClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnButtonClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.HandleTableViewDidSelectCellWithIdx
void HMUI::DropdownWithTableView::HandleTableViewDidSelectCellWithIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::HandleTableViewDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTableViewDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, tableView, idx);
}
// Autogenerated method: HMUI.DropdownWithTableView.Hide
void HMUI::DropdownWithTableView::Hide(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, animated);
}
// Autogenerated method: HMUI.DropdownWithTableView.Show
void HMUI::DropdownWithTableView::Show(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, animated);
}
// Autogenerated method: HMUI.DropdownWithTableView.HandleModalViewBlockerClicked
void HMUI::DropdownWithTableView::HandleModalViewBlockerClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::HandleModalViewBlockerClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleModalViewBlockerClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.GradientImage
#include "HMUI/GradientImage.hpp"
// Including type: HMUI.CurvedCanvasSettingsHelper
#include "HMUI/CurvedCanvasSettingsHelper.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE17484
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 kVec2Zero
UnityEngine::Vector2 HMUI::GradientImage::_get_kVec2Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get_kVec2Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("HMUI", "GradientImage", "kVec2Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 kVec2Zero
void HMUI::GradientImage::_set_kVec2Zero(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set_kVec2Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "kVec2Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE17494
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 kVec3Zero
UnityEngine::Vector3 HMUI::GradientImage::_get_kVec3Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get_kVec3Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("HMUI", "GradientImage", "kVec3Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 kVec3Zero
void HMUI::GradientImage::_set_kVec3Zero(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set_kVec3Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "kVec3Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE174A4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 kVec4Zero
UnityEngine::Vector4 HMUI::GradientImage::_get_kVec4Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get_kVec4Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector4>("HMUI", "GradientImage", "kVec4Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 kVec4Zero
void HMUI::GradientImage::_set_kVec4Zero(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set_kVec4Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "kVec4Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE174B4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_VertScratch
::Array<UnityEngine::Vector2>* HMUI::GradientImage::_get_s_VertScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get_s_VertScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "GradientImage", "s_VertScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_VertScratch
void HMUI::GradientImage::_set_s_VertScratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set_s_VertScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_VertScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE174C4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UVScratch
::Array<UnityEngine::Vector2>* HMUI::GradientImage::_get_s_UVScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get_s_UVScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "GradientImage", "s_UVScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UVScratch
void HMUI::GradientImage::_set_s_UVScratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set_s_UVScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_UVScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE174D4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color[] s_ColorScratch
::Array<UnityEngine::Color>* HMUI::GradientImage::_get_s_ColorScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get_s_ColorScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Color>*>("HMUI", "GradientImage", "s_ColorScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color[] s_ColorScratch
void HMUI::GradientImage::_set_s_ColorScratch(::Array<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set_s_ColorScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_ColorScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE174E4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Xy
::Array<UnityEngine::Vector3>* HMUI::GradientImage::_get_s_Xy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get_s_Xy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("HMUI", "GradientImage", "s_Xy"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Xy
void HMUI::GradientImage::_set_s_Xy(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set_s_Xy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_Xy", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE174F4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Uv
::Array<UnityEngine::Vector3>* HMUI::GradientImage::_get_s_Uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get_s_Uv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("HMUI", "GradientImage", "s_Uv"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Uv
void HMUI::GradientImage::_set_s_Uv(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set_s_Uv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_Uv", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color0
UnityEngine::Color HMUI::GradientImage::_get__color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get__color0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color0"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _color0
void HMUI::GradientImage::_set__color0(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set__color0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color0"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color1
UnityEngine::Color HMUI::GradientImage::_get__color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get__color1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color1"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _color1
void HMUI::GradientImage::_set__color1(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set__color1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color1"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.CurvedCanvasSettingsHelper _curvedCanvasSettingsHelper
HMUI::CurvedCanvasSettingsHelper* HMUI::GradientImage::_get__curvedCanvasSettingsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_get__curvedCanvasSettingsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curvedCanvasSettingsHelper"))->offset;
  return *reinterpret_cast<HMUI::CurvedCanvasSettingsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly HMUI.CurvedCanvasSettingsHelper _curvedCanvasSettingsHelper
void HMUI::GradientImage::_set__curvedCanvasSettingsHelper(HMUI::CurvedCanvasSettingsHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::_set__curvedCanvasSettingsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curvedCanvasSettingsHelper"))->offset;
  *reinterpret_cast<HMUI::CurvedCanvasSettingsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.GradientImage.get_color0
UnityEngine::Color HMUI::GradientImage::get_color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::get_color0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.GradientImage.set_color0
void HMUI::GradientImage::set_color0(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::set_color0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.GradientImage.get_color1
UnityEngine::Color HMUI::GradientImage::get_color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::get_color1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.GradientImage.set_color1
void HMUI::GradientImage::set_color1(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::set_color1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.GradientImage.GenerateSimpleSprite
void HMUI::GradientImage::GenerateSimpleSprite(UnityEngine::UI::VertexHelper* vh, bool lPreserveAspect, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::GenerateSimpleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSimpleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(lPreserveAspect), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, vh, lPreserveAspect, curvedUIRadius);
}
// Autogenerated method: HMUI.GradientImage.GenerateSlicedSprite
void HMUI::GradientImage::GenerateSlicedSprite(UnityEngine::UI::VertexHelper* vh, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::GenerateSlicedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSlicedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, vh, curvedUIRadius);
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color0, UnityEngine::Color32 color1, UnityEngine::Vector2 uv0Min, UnityEngine::Vector2 uv0Max, float elementWidthScale, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color0), ::il2cpp_utils::ExtractType(color1), ::il2cpp_utils::ExtractType(uv0Min), ::il2cpp_utils::ExtractType(uv0Max), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, elementWidthScale, curvedUIRadius);
}
// Autogenerated method: HMUI.GradientImage..cctor
void HMUI::GradientImage::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.GradientImage.OnPopulateMesh
void HMUI::GradientImage::OnPopulateMesh(UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toFill);
}
// Autogenerated method: HMUI.GradientImage.GenerateTiledSprite
void HMUI::GradientImage::GenerateTiledSprite(UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::GenerateTiledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTiledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toFill);
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, ::Array<UnityEngine::Vector3>* quadPositions, UnityEngine::Color32 color, ::Array<UnityEngine::Vector3>* quadUVs) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(quadPositions), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(quadUVs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, quadPositions, color, quadUVs);
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color, UnityEngine::Vector2 uvMin, UnityEngine::Vector2 uvMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uvMin), ::il2cpp_utils::ExtractType(uvMax)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uvMin, uvMax);
}
// Autogenerated method: HMUI.GradientImage.GetAdjustedBorders
UnityEngine::Vector4 HMUI::GradientImage::GetAdjustedBorders(UnityEngine::Vector4 border, UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::GetAdjustedBorders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdjustedBorders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(rect)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(___instance_arg, ___internal__method, border, rect);
}
// Autogenerated method: HMUI.GradientImage.GenerateFilledSprite
void HMUI::GradientImage::GenerateFilledSprite(UnityEngine::UI::VertexHelper* toFill, bool preserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::GenerateFilledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateFilledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(preserveAspect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toFill, preserveAspect);
}
// Autogenerated method: HMUI.GradientImage.RadialCut
bool HMUI::GradientImage::RadialCut(::Array<UnityEngine::Vector3>* xy, ::Array<UnityEngine::Vector3>* uv, float fill, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(fill), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xy, uv, fill, invert, corner);
}
// Autogenerated method: HMUI.GradientImage.RadialCut
void HMUI::GradientImage::RadialCut(::Array<UnityEngine::Vector3>* xy, float cos, float sin, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(cos), ::il2cpp_utils::ExtractType(sin), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xy, cos, sin, invert, corner);
}
// Autogenerated method: HMUI.GradientImage.GetDrawingDimensions
UnityEngine::Vector4 HMUI::GradientImage::GetDrawingDimensions(bool shouldPreserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::GradientImage::GetDrawingDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDrawingDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldPreserveAspect)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(___instance_arg, ___internal__method, shouldPreserveAspect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: HMUI.CurvedCanvasSettingsHelper
#include "HMUI/CurvedCanvasSettingsHelper.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE17564
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 kVec2Zero
UnityEngine::Vector2 HMUI::ImageView::_get_kVec2Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_kVec2Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("HMUI", "ImageView", "kVec2Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 kVec2Zero
void HMUI::ImageView::_set_kVec2Zero(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_kVec2Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec2Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE17574
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 kVec3Zero
UnityEngine::Vector3 HMUI::ImageView::_get_kVec3Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_kVec3Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("HMUI", "ImageView", "kVec3Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 kVec3Zero
void HMUI::ImageView::_set_kVec3Zero(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_kVec3Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec3Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE17584
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 kVec4Zero
UnityEngine::Vector4 HMUI::ImageView::_get_kVec4Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_kVec4Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector4>("HMUI", "ImageView", "kVec4Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 kVec4Zero
void HMUI::ImageView::_set_kVec4Zero(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_kVec4Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec4Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE17594
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_VertScratch
::Array<UnityEngine::Vector2>* HMUI::ImageView::_get_s_VertScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_s_VertScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "ImageView", "s_VertScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_VertScratch
void HMUI::ImageView::_set_s_VertScratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_s_VertScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_VertScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE175A4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UVScratch
::Array<UnityEngine::Vector2>* HMUI::ImageView::_get_s_UVScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_s_UVScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "ImageView", "s_UVScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UVScratch
void HMUI::ImageView::_set_s_UVScratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_s_UVScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_UVScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE175B4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UV1Scratch
::Array<UnityEngine::Vector2>* HMUI::ImageView::_get_s_UV1Scratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_s_UV1Scratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "ImageView", "s_UV1Scratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UV1Scratch
void HMUI::ImageView::_set_s_UV1Scratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_s_UV1Scratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_UV1Scratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE175C4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color[] s_ColorScratch
::Array<UnityEngine::Color>* HMUI::ImageView::_get_s_ColorScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_s_ColorScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Color>*>("HMUI", "ImageView", "s_ColorScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color[] s_ColorScratch
void HMUI::ImageView::_set_s_ColorScratch(::Array<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_s_ColorScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_ColorScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE175D4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Xy
::Array<UnityEngine::Vector3>* HMUI::ImageView::_get_s_Xy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_s_Xy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("HMUI", "ImageView", "s_Xy"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Xy
void HMUI::ImageView::_set_s_Xy(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_s_Xy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_Xy", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE175E4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Uv
::Array<UnityEngine::Vector3>* HMUI::ImageView::_get_s_Uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get_s_Uv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("HMUI", "ImageView", "s_Uv"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Uv
void HMUI::ImageView::_set_s_Uv(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set_s_Uv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_Uv", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _skew
float HMUI::ImageView::_get__skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get__skew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skew"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _skew
void HMUI::ImageView::_set__skew(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set__skew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skew"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _gradient
bool HMUI::ImageView::_get__gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get__gradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _gradient
void HMUI::ImageView::_set__gradient(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set__gradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradient"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color0
UnityEngine::Color HMUI::ImageView::_get__color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get__color0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color0"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _color0
void HMUI::ImageView::_set__color0(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set__color0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color0"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color1
UnityEngine::Color HMUI::ImageView::_get__color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get__color1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color1"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _color1
void HMUI::ImageView::_set__color1(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set__color1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color1"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView/HMUI.GradientDirection _gradientDirection
HMUI::ImageView::GradientDirection HMUI::ImageView::_get__gradientDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get__gradientDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradientDirection"))->offset;
  return *reinterpret_cast<HMUI::ImageView::GradientDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ImageView/HMUI.GradientDirection _gradientDirection
void HMUI::ImageView::_set__gradientDirection(HMUI::ImageView::GradientDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set__gradientDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradientDirection"))->offset;
  *reinterpret_cast<HMUI::ImageView::GradientDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _flipGradientColors
bool HMUI::ImageView::_get__flipGradientColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get__flipGradientColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flipGradientColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _flipGradientColors
void HMUI::ImageView::_set__flipGradientColors(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set__flipGradientColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flipGradientColors"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.CurvedCanvasSettingsHelper _curvedCanvasSettingsHelper
HMUI::CurvedCanvasSettingsHelper* HMUI::ImageView::_get__curvedCanvasSettingsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_get__curvedCanvasSettingsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curvedCanvasSettingsHelper"))->offset;
  return *reinterpret_cast<HMUI::CurvedCanvasSettingsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly HMUI.CurvedCanvasSettingsHelper _curvedCanvasSettingsHelper
void HMUI::ImageView::_set__curvedCanvasSettingsHelper(HMUI::CurvedCanvasSettingsHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::_set__curvedCanvasSettingsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curvedCanvasSettingsHelper"))->offset;
  *reinterpret_cast<HMUI::CurvedCanvasSettingsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ImageView.get_gradient
bool HMUI::ImageView::get_gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::get_gradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.get_skew
float HMUI::ImageView::get_skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::get_skew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.get_color0
UnityEngine::Color HMUI::ImageView::get_color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::get_color0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.set_color0
void HMUI::ImageView::set_color0(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::set_color0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView.get_color1
UnityEngine::Color HMUI::ImageView::get_color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::get_color1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.set_color1
void HMUI::ImageView::set_color1(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::set_color1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView.GenerateSimpleSprite
void HMUI::ImageView::GenerateSimpleSprite(UnityEngine::UI::VertexHelper* vh, bool lPreserveAspect, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GenerateSimpleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSimpleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(lPreserveAspect), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, vh, lPreserveAspect, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.GenerateSlicedSprite
void HMUI::ImageView::GenerateSlicedSprite(UnityEngine::UI::VertexHelper* toFill, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GenerateSlicedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSlicedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toFill, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.GenerateTiledSprite
void HMUI::ImageView::GenerateTiledSprite(UnityEngine::UI::VertexHelper* toFill, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GenerateTiledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTiledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toFill, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color, UnityEngine::Vector2 uvMin, UnityEngine::Vector2 uvMax, float elementWidthScale, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uvMin), ::il2cpp_utils::ExtractType(uvMax), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uvMin, uvMax, elementWidthScale, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color, UnityEngine::Vector2 uv0Min, UnityEngine::Vector2 uv0Max, UnityEngine::Vector2 uv1Min, UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0Min), ::il2cpp_utils::ExtractType(uv0Max), ::il2cpp_utils::ExtractType(uv1Min), ::il2cpp_utils::ExtractType(uv1Max), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(skewFactor), ::il2cpp_utils::ExtractType(skewOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.AddQuadWithHorizontalGradient
void HMUI::ImageView::AddQuadWithHorizontalGradient(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color0, UnityEngine::Color32 color1, UnityEngine::Vector2 uv0Min, UnityEngine::Vector2 uv0Max, UnityEngine::Vector2 uv1Min, UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::AddQuadWithHorizontalGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuadWithHorizontalGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color0), ::il2cpp_utils::ExtractType(color1), ::il2cpp_utils::ExtractType(uv0Min), ::il2cpp_utils::ExtractType(uv0Max), ::il2cpp_utils::ExtractType(uv1Min), ::il2cpp_utils::ExtractType(uv1Max), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(skewFactor), ::il2cpp_utils::ExtractType(skewOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.AddQuadWithVerticalGradient
void HMUI::ImageView::AddQuadWithVerticalGradient(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color0, UnityEngine::Color32 color1, UnityEngine::Vector2 uv0Min, UnityEngine::Vector2 uv0Max, UnityEngine::Vector2 uv1Min, UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::AddQuadWithVerticalGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuadWithVerticalGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color0), ::il2cpp_utils::ExtractType(color1), ::il2cpp_utils::ExtractType(uv0Min), ::il2cpp_utils::ExtractType(uv0Max), ::il2cpp_utils::ExtractType(uv1Min), ::il2cpp_utils::ExtractType(uv1Max), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(skewFactor), ::il2cpp_utils::ExtractType(skewOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.GenerateFilledSprite
void HMUI::ImageView::GenerateFilledSprite(UnityEngine::UI::VertexHelper* toFill, bool preserveAspect, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GenerateFilledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateFilledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(preserveAspect), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toFill, preserveAspect, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.GetNumberOfElements
int HMUI::ImageView::GetNumberOfElements(float curvedUIRadius, float width) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GetNumberOfElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "GetNumberOfElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(width)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curvedUIRadius, width);
}
// Autogenerated method: HMUI.ImageView..cctor
void HMUI::ImageView::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.ImageView.OnEnable
void HMUI::ImageView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.OnPopulateMesh
void HMUI::ImageView::OnPopulateMesh(UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toFill);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, ::Array<UnityEngine::Vector3>* quadPositions, UnityEngine::Color32 color, ::Array<UnityEngine::Vector3>* quadUVs) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(quadPositions), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(quadUVs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, quadPositions, color, quadUVs);
}
// Autogenerated method: HMUI.ImageView.GetAdjustedBorders
UnityEngine::Vector4 HMUI::ImageView::GetAdjustedBorders(UnityEngine::Vector4 border, UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GetAdjustedBorders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "GetAdjustedBorders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, border, rect);
}
// Autogenerated method: HMUI.ImageView.RadialCut
bool HMUI::ImageView::RadialCut(::Array<UnityEngine::Vector3>* xy, ::Array<UnityEngine::Vector3>* uv, float fill, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(fill), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xy, uv, fill, invert, corner);
}
// Autogenerated method: HMUI.ImageView.RadialCut
void HMUI::ImageView::RadialCut(::Array<UnityEngine::Vector3>* xy, float cos, float sin, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(cos), ::il2cpp_utils::ExtractType(sin), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xy, cos, sin, invert, corner);
}
// Autogenerated method: HMUI.ImageView.GetDrawingDimensions
UnityEngine::Vector4 HMUI::ImageView::GetDrawingDimensions(bool shouldPreserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GetDrawingDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDrawingDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldPreserveAspect)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(___instance_arg, ___internal__method, shouldPreserveAspect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ImageView/HMUI.GradientDirection
#include "HMUI/ImageView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ImageView/HMUI.GradientDirection Horizontal
HMUI::ImageView::GradientDirection HMUI::ImageView::GradientDirection::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GradientDirection::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ImageView::GradientDirection>("HMUI", "ImageView/GradientDirection", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ImageView/HMUI.GradientDirection Horizontal
void HMUI::ImageView::GradientDirection::_set_Horizontal(HMUI::ImageView::GradientDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GradientDirection::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView/GradientDirection", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ImageView/HMUI.GradientDirection Vertical
HMUI::ImageView::GradientDirection HMUI::ImageView::GradientDirection::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GradientDirection::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ImageView::GradientDirection>("HMUI", "ImageView/GradientDirection", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ImageView/HMUI.GradientDirection Vertical
void HMUI::ImageView::GradientDirection::_set_Vertical(HMUI::ImageView::GradientDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GradientDirection::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView/GradientDirection", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::ImageView::GradientDirection::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GradientDirection::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::ImageView::GradientDirection::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageView::GradientDirection::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ImageWithHint
#include "HMUI/ImageWithHint.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
UnityEngine::UI::Image* HMUI::ImageWithHint::_get__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageWithHint::_get__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Image _image
void HMUI::ImageWithHint::_set__image(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageWithHint::_set__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _hoverHint
HMUI::HoverHint* HMUI::ImageWithHint::_get__hoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageWithHint::_get__hoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverHint"))->offset;
  return *reinterpret_cast<HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.HoverHint _hoverHint
void HMUI::ImageWithHint::_set__hoverHint(HMUI::HoverHint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageWithHint::_set__hoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverHint"))->offset;
  *reinterpret_cast<HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ImageWithHint.get_sprite
UnityEngine::Sprite* HMUI::ImageWithHint::get_sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageWithHint::get_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ImageWithHint.set_sprite
void HMUI::ImageWithHint::set_sprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageWithHint::set_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageWithHint.set_hintText
void HMUI::ImageWithHint::set_hintText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ImageWithHint::set_hintText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hintText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.InputFieldView/HMUI.InputFieldChanged
#include "HMUI/InputFieldView_InputFieldChanged.hpp"
// Including type: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43
#include "HMUI/InputFieldView_-BlinkingCaretCoroutine-d__43.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBlinkingRate
float HMUI::InputFieldView::_get_kBlinkingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get_kBlinkingRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "InputFieldView", "kBlinkingRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBlinkingRate
void HMUI::InputFieldView::_set_kBlinkingRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set_kBlinkingRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView", "kBlinkingRate", value));
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _textView
TMPro::TextMeshProUGUI* HMUI::InputFieldView::_get__textView() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__textView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textView"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _textView
void HMUI::InputFieldView::_set__textView(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__textView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textView"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _textViewCanvasGroup
UnityEngine::CanvasGroup* HMUI::InputFieldView::_get__textViewCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__textViewCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textViewCanvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.CanvasGroup _textViewCanvasGroup
void HMUI::InputFieldView::_set__textViewCanvasGroup(UnityEngine::CanvasGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__textViewCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textViewCanvasGroup"))->offset;
  *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _blinkingCaret
HMUI::ImageView* HMUI::InputFieldView::_get__blinkingCaret() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__blinkingCaret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blinkingCaret"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ImageView _blinkingCaret
void HMUI::InputFieldView::_set__blinkingCaret(HMUI::ImageView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__blinkingCaret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blinkingCaret"))->offset;
  *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _placeholderText
UnityEngine::GameObject* HMUI::InputFieldView::_get__placeholderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__placeholderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_placeholderText"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _placeholderText
void HMUI::InputFieldView::_set__placeholderText(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__placeholderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_placeholderText"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _clearSearchButton
UnityEngine::UI::Button* HMUI::InputFieldView::_get__clearSearchButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__clearSearchButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearSearchButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _clearSearchButton
void HMUI::InputFieldView::_set__clearSearchButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__clearSearchButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearSearchButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useGlobalKeyboard
bool HMUI::InputFieldView::_get__useGlobalKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__useGlobalKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useGlobalKeyboard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _useGlobalKeyboard
void HMUI::InputFieldView::_set__useGlobalKeyboard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__useGlobalKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useGlobalKeyboard"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _keyboardPositionOffset
UnityEngine::Vector3 HMUI::InputFieldView::_get__keyboardPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__keyboardPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardPositionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _keyboardPositionOffset
void HMUI::InputFieldView::_set__keyboardPositionOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__keyboardPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardPositionOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useUppercase
bool HMUI::InputFieldView::_get__useUppercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__useUppercase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useUppercase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _useUppercase
void HMUI::InputFieldView::_set__useUppercase(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__useUppercase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useUppercase"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _textLengthLimit
int HMUI::InputFieldView::_get__textLengthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__textLengthLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textLengthLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _textLengthLimit
void HMUI::InputFieldView::_set__textLengthLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__textLengthLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textLengthLimit"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _caretOffset
float HMUI::InputFieldView::_get__caretOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__caretOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caretOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _caretOffset
void HMUI::InputFieldView::_set__caretOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__caretOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caretOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.InputFieldView/HMUI.SelectionState> selectionStateDidChangeEvent
System::Action_1<HMUI::InputFieldView::SelectionState>* HMUI::InputFieldView::_get_selectionStateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get_selectionStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionStateDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<HMUI::InputFieldView::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<HMUI.InputFieldView/HMUI.SelectionState> selectionStateDidChangeEvent
void HMUI::InputFieldView::_set_selectionStateDidChangeEvent(System::Action_1<HMUI::InputFieldView::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set_selectionStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionStateDidChangeEvent"))->offset;
  *reinterpret_cast<System::Action_1<HMUI::InputFieldView::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView/HMUI.SelectionState _selectionState
HMUI::InputFieldView::SelectionState HMUI::InputFieldView::_get__selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__selectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionState"))->offset;
  return *reinterpret_cast<HMUI::InputFieldView::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.InputFieldView/HMUI.SelectionState _selectionState
void HMUI::InputFieldView::_set__selectionState(HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__selectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionState"))->offset;
  *reinterpret_cast<HMUI::InputFieldView::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _text
::Il2CppString* HMUI::InputFieldView::_get__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _text
void HMUI::InputFieldView::_set__text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasKeyboardAssigned
bool HMUI::InputFieldView::_get__hasKeyboardAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__hasKeyboardAssigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasKeyboardAssigned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasKeyboardAssigned
void HMUI::InputFieldView::_set__hasKeyboardAssigned(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__hasKeyboardAssigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasKeyboardAssigned"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder* HMUI::InputFieldView::_get__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ButtonBinder _buttonBinder
void HMUI::InputFieldView::_set__buttonBinder(HMUI::ButtonBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView/HMUI.InputFieldChanged _onValueChanged
HMUI::InputFieldView::InputFieldChanged* HMUI::InputFieldView::_get__onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onValueChanged"))->offset;
  return *reinterpret_cast<HMUI::InputFieldView::InputFieldChanged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.InputFieldView/HMUI.InputFieldChanged _onValueChanged
void HMUI::InputFieldView::_set__onValueChanged(HMUI::InputFieldView::InputFieldChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onValueChanged"))->offset;
  *reinterpret_cast<HMUI::InputFieldView::InputFieldChanged**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.YieldInstruction _blinkWaitYieldInstruction
UnityEngine::YieldInstruction* HMUI::InputFieldView::_get__blinkWaitYieldInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_get__blinkWaitYieldInstruction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blinkWaitYieldInstruction"))->offset;
  return *reinterpret_cast<UnityEngine::YieldInstruction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly UnityEngine.YieldInstruction _blinkWaitYieldInstruction
void HMUI::InputFieldView::_set__blinkWaitYieldInstruction(UnityEngine::YieldInstruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::_set__blinkWaitYieldInstruction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blinkWaitYieldInstruction"))->offset;
  *reinterpret_cast<UnityEngine::YieldInstruction**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.InputFieldView.get_selectionState
HMUI::InputFieldView::SelectionState HMUI::InputFieldView::get_selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::get_selectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::InputFieldView::SelectionState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.get_keyboardPositionOffset
UnityEngine::Vector3 HMUI::InputFieldView::get_keyboardPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::get_keyboardPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboardPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.get_onValueChanged
HMUI::InputFieldView::InputFieldChanged* HMUI::InputFieldView::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::InputFieldView::InputFieldChanged*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.set_onValueChanged
void HMUI::InputFieldView::set_onValueChanged(HMUI::InputFieldView::InputFieldChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.get_useGlobalKeyboard
bool HMUI::InputFieldView::get_useGlobalKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::get_useGlobalKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGlobalKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.get_text
::Il2CppString* HMUI::InputFieldView::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.set_text
void HMUI::InputFieldView::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.add_selectionStateDidChangeEvent
void HMUI::InputFieldView::add_selectionStateDidChangeEvent(System::Action_1<HMUI::InputFieldView::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::add_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.remove_selectionStateDidChangeEvent
void HMUI::InputFieldView::remove_selectionStateDidChangeEvent(System::Action_1<HMUI::InputFieldView::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::remove_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.ActivateKeyboard
void HMUI::InputFieldView::ActivateKeyboard(HMUI::UIKeyboard* keyboard) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::ActivateKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboard)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, keyboard);
}
// Autogenerated method: HMUI.InputFieldView.DeactivateKeyboard
void HMUI::InputFieldView::DeactivateKeyboard(HMUI::UIKeyboard* keyboard) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::DeactivateKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboard)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, keyboard);
}
// Autogenerated method: HMUI.InputFieldView.SetText
void HMUI::InputFieldView::SetText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.ClearInput
void HMUI::InputFieldView::ClearInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::ClearInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.KeyboardKeyPressed
void HMUI::InputFieldView::KeyboardKeyPressed(::Il2CppChar letter) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::KeyboardKeyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardKeyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(letter)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, letter);
}
// Autogenerated method: HMUI.InputFieldView.KeyboardDeletePressed
void HMUI::InputFieldView::KeyboardDeletePressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::KeyboardDeletePressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardDeletePressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.BlinkingCaretCoroutine
System::Collections::IEnumerator* HMUI::InputFieldView::BlinkingCaretCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::BlinkingCaretCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkingCaretCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.UpdateCaretPosition
void HMUI::InputFieldView::UpdateCaretPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::UpdateCaretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCaretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.UpdatePlaceholder
void HMUI::InputFieldView::UpdatePlaceholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::UpdatePlaceholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlaceholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.UpdateClearButton
void HMUI::InputFieldView::UpdateClearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::UpdateClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.<Awake>b__34_0
void HMUI::InputFieldView::$Awake$b__34_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::<Awake>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.Awake
void HMUI::InputFieldView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.OnDestroy
void HMUI::InputFieldView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.DoStateTransition
void HMUI::InputFieldView::DoStateTransition(UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.InputFieldView/HMUI.SelectionState
#include "HMUI/InputFieldView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Normal
HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Normal
void HMUI::InputFieldView::SelectionState::_set_Normal(HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Highlighted
HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Highlighted
void HMUI::InputFieldView::SelectionState::_set_Highlighted(HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Pressed
HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Pressed
void HMUI::InputFieldView::SelectionState::_set_Pressed(HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Disabled
HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Disabled
void HMUI::InputFieldView::SelectionState::_set_Disabled(HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Selected
HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Selected
void HMUI::InputFieldView::SelectionState::_set_Selected(HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Selected", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::InputFieldView::SelectionState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::InputFieldView::SelectionState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::SelectionState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.InputFieldView/HMUI.InputFieldChanged
#include "HMUI/InputFieldView_InputFieldChanged.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43
#include "HMUI/InputFieldView_-BlinkingCaretCoroutine-d__43.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.InputFieldView <>4__this
HMUI::InputFieldView* HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.InputFieldView <>4__this
void HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_set_$$4__this(HMUI::InputFieldView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.System.IDisposable.Dispose
void HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.MoveNext
bool HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.System.Collections.IEnumerator.Reset
void HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.InputFieldViewStaticAnimations
#include "HMUI/InputFieldViewStaticAnimations.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _inputFieldView
HMUI::InputFieldView* HMUI::InputFieldViewStaticAnimations::_get__inputFieldView() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_get__inputFieldView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFieldView"))->offset;
  return *reinterpret_cast<HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.InputFieldView _inputFieldView
void HMUI::InputFieldViewStaticAnimations::_set__inputFieldView(HMUI::InputFieldView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_set__inputFieldView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFieldView"))->offset;
  *reinterpret_cast<HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalClip
UnityEngine::AnimationClip* HMUI::InputFieldViewStaticAnimations::_get__normalClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_get__normalClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _normalClip
void HMUI::InputFieldViewStaticAnimations::_set__normalClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_set__normalClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _highlightedClip
UnityEngine::AnimationClip* HMUI::InputFieldViewStaticAnimations::_get__highlightedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_get__highlightedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _highlightedClip
void HMUI::InputFieldViewStaticAnimations::_set__highlightedClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_set__highlightedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _pressedClip
UnityEngine::AnimationClip* HMUI::InputFieldViewStaticAnimations::_get__pressedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_get__pressedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _pressedClip
void HMUI::InputFieldViewStaticAnimations::_set__pressedClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_set__pressedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _disabledClip
UnityEngine::AnimationClip* HMUI::InputFieldViewStaticAnimations::_get__disabledClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_get__disabledClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _disabledClip
void HMUI::InputFieldViewStaticAnimations::_set__disabledClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_set__disabledClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedClip
UnityEngine::AnimationClip* HMUI::InputFieldViewStaticAnimations::_get__selectedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_get__selectedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _selectedClip
void HMUI::InputFieldViewStaticAnimations::_set__selectedClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_set__selectedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didStart
bool HMUI::InputFieldViewStaticAnimations::_get__didStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_get__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _didStart
void HMUI::InputFieldViewStaticAnimations::_set__didStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::_set__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.Awake
void HMUI::InputFieldViewStaticAnimations::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.Start
void HMUI::InputFieldViewStaticAnimations::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.OnEnable
void HMUI::InputFieldViewStaticAnimations::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.OnDestroy
void HMUI::InputFieldViewStaticAnimations::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.HandleInputFieldViewSelectionStateDidChange
void HMUI::InputFieldViewStaticAnimations::HandleInputFieldViewSelectionStateDidChange(HMUI::InputFieldView::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::InputFieldViewStaticAnimations::HandleInputFieldViewSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFieldViewSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: HMUI.ModalView/HMUI.<>c__DisplayClass17_0
#include "HMUI/ModalView_--c__DisplayClass17_0.hpp"
// Including type: HMUI.ModalView/HMUI.<>c__DisplayClass21_0
#include "HMUI/ModalView_--c__DisplayClass21_0.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _presentPanelAnimations
HMUI::PanelAnimationSO* HMUI::ModalView::_get__presentPanelAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__presentPanelAnimations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimations"))->offset;
  return *reinterpret_cast<HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.PanelAnimationSO _presentPanelAnimations
void HMUI::ModalView::_set__presentPanelAnimations(HMUI::PanelAnimationSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__presentPanelAnimations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimations"))->offset;
  *reinterpret_cast<HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
HMUI::PanelAnimationSO* HMUI::ModalView::_get__dismissPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  return *reinterpret_cast<HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
void HMUI::ModalView::_set__dismissPanelAnimation(HMUI::PanelAnimationSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  *reinterpret_cast<HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _animateParentCanvas
bool HMUI::ModalView::_get__animateParentCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__animateParentCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animateParentCanvas"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _animateParentCanvas
void HMUI::ModalView::_set__animateParentCanvas(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__animateParentCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animateParentCanvas"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
Zenject::DiContainer* HMUI::ModalView::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly Zenject.DiContainer _container
void HMUI::ModalView::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  *reinterpret_cast<Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action blockerClickedEvent
System::Action* HMUI::ModalView::_get_blockerClickedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get_blockerClickedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockerClickedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action blockerClickedEvent
void HMUI::ModalView::_set_blockerClickedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set_blockerClickedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockerClickedEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _previousParent
UnityEngine::Transform* HMUI::ModalView::_get__previousParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__previousParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousParent"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _previousParent
void HMUI::ModalView::_set__previousParent(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__previousParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousParent"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isShown
bool HMUI::ModalView::_get__isShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__isShown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isShown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isShown
void HMUI::ModalView::_set__isShown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__isShown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isShown"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _viewIsValid
bool HMUI::ModalView::_get__viewIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__viewIsValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewIsValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _viewIsValid
void HMUI::ModalView::_set__viewIsValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__viewIsValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewIsValid"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _mainCanvas
UnityEngine::Canvas* HMUI::ModalView::_get__mainCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__mainCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCanvas"))->offset;
  return *reinterpret_cast<UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Canvas _mainCanvas
void HMUI::ModalView::_set__mainCanvas(UnityEngine::Canvas* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__mainCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCanvas"))->offset;
  *reinterpret_cast<UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _parentCanvasGroup
UnityEngine::CanvasGroup* HMUI::ModalView::_get__parentCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__parentCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentCanvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.CanvasGroup _parentCanvasGroup
void HMUI::ModalView::_set__parentCanvasGroup(UnityEngine::CanvasGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__parentCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentCanvasGroup"))->offset;
  *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _blockerGO
UnityEngine::GameObject* HMUI::ModalView::_get__blockerGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__blockerGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockerGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _blockerGO
void HMUI::ModalView::_set__blockerGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__blockerGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockerGO"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _test
int HMUI::ModalView::_get__test() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_get__test");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_test"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _test
void HMUI::ModalView::_set__test(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::_set__test");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_test"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ModalView.add_blockerClickedEvent
void HMUI::ModalView::add_blockerClickedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::add_blockerClickedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_blockerClickedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ModalView.remove_blockerClickedEvent
void HMUI::ModalView::remove_blockerClickedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::remove_blockerClickedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_blockerClickedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ModalView.OnDisable
void HMUI::ModalView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ModalView.OnDestroy
void HMUI::ModalView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ModalView.SetupView
void HMUI::ModalView::SetupView(UnityEngine::Transform* screenTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::SetupView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenTransform)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, screenTransform);
}
// Autogenerated method: HMUI.ModalView.Hide
void HMUI::ModalView::Hide(bool animated, System::Action* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(finishedCallback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, animated, finishedCallback);
}
// Autogenerated method: HMUI.ModalView.Show
void HMUI::ModalView::Show(bool animated, bool moveToCenter, System::Action* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(moveToCenter), ::il2cpp_utils::ExtractType(finishedCallback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, animated, moveToCenter, finishedCallback);
}
// Autogenerated method: HMUI.ModalView.CreateBlocker
UnityEngine::GameObject* HMUI::ModalView::CreateBlocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::CreateBlocker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBlocker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ModalView.HandleBlockerButtonClicked
void HMUI::ModalView::HandleBlockerButtonClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::HandleBlockerButtonClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBlockerButtonClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ModalView.HandleParentViewControllerDidDeactivate
void HMUI::ModalView::HandleParentViewControllerDidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::HandleParentViewControllerDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleParentViewControllerDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HMUI.ModalView.GetModalRootTransform
UnityEngine::Transform* HMUI::ModalView::GetModalRootTransform(UnityEngine::Transform* transform, ByRef<UnityEngine::Canvas*> canvas, ByRef<HMUI::ViewController*> viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::GetModalRootTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ModalView", "GetModalRootTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*&>(), ::il2cpp_utils::ExtractIndependentType<HMUI::ViewController*&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, byref(canvas), byref(viewController));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ModalView/HMUI.<>c__DisplayClass17_0
#include "HMUI/ModalView_--c__DisplayClass17_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HMUI.ModalView <>4__this
HMUI::ModalView* HMUI::ModalView::$$c__DisplayClass17_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass17_0::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ModalView <>4__this
void HMUI::ModalView::$$c__DisplayClass17_0::_set_$$4__this(HMUI::ModalView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass17_0::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
System::Action* HMUI::ModalView::$$c__DisplayClass17_0::_get_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass17_0::_get_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Action finishedCallback
void HMUI::ModalView::$$c__DisplayClass17_0::_set_finishedCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass17_0::_set_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ModalView/HMUI.<>c__DisplayClass17_0.<Hide>b__0
void HMUI::ModalView::$$c__DisplayClass17_0::$Hide$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass17_0::<Hide>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Hide>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ModalView/HMUI.<>c__DisplayClass21_0
#include "HMUI/ModalView_--c__DisplayClass21_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HMUI.ModalView <>4__this
HMUI::ModalView* HMUI::ModalView::$$c__DisplayClass21_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass21_0::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ModalView <>4__this
void HMUI::ModalView::$$c__DisplayClass21_0::_set_$$4__this(HMUI::ModalView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass21_0::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean prevAnimateParentCanvas
bool HMUI::ModalView::$$c__DisplayClass21_0::_get_prevAnimateParentCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass21_0::_get_prevAnimateParentCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevAnimateParentCanvas"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean prevAnimateParentCanvas
void HMUI::ModalView::$$c__DisplayClass21_0::_set_prevAnimateParentCanvas(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass21_0::_set_prevAnimateParentCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevAnimateParentCanvas"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ModalView/HMUI.<>c__DisplayClass21_0.<HandleParentViewControllerDidDeactivate>b__0
void HMUI::ModalView::$$c__DisplayClass21_0::$HandleParentViewControllerDidDeactivate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ModalView::$$c__DisplayClass21_0::<HandleParentViewControllerDidDeactivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleParentViewControllerDidDeactivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ItemForFocussedScrolling
#include "HMUI/ItemForFocussedScrolling.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollToTopOnEnable
#include "HMUI/ScrollToTopOnEnable.hpp"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView _scrollView
HMUI::ScrollView* HMUI::ScrollToTopOnEnable::_get__scrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollToTopOnEnable::_get__scrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollView"))->offset;
  return *reinterpret_cast<HMUI::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ScrollView _scrollView
void HMUI::ScrollToTopOnEnable::_set__scrollView(HMUI::ScrollView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollToTopOnEnable::_set__scrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollView"))->offset;
  *reinterpret_cast<HMUI::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ScrollToTopOnEnable.OnEnable
void HMUI::ScrollToTopOnEnable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollToTopOnEnable::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c
#include "HMUI/ScrollView_--c.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass50_0
#include "HMUI/ScrollView_--c__DisplayClass50_0.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass51_0
#include "HMUI/ScrollView_--c__DisplayClass51_0.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass56_0
#include "HMUI/ScrollView_--c__DisplayClass56_0.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass56_1
#include "HMUI/ScrollView_--c__DisplayClass56_1.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.VerticalScrollIndicator
#include "HMUI/VerticalScrollIndicator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.EventSystemListener
#include "HMUI/EventSystemListener.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: HMUI.ItemForFocussedScrolling
#include "HMUI/ItemForFocussedScrolling.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewport
UnityEngine::RectTransform* HMUI::ScrollView::_get__viewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__viewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewport"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _viewport
void HMUI::ScrollView::_set__viewport(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__viewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewport"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentRectTransform
UnityEngine::RectTransform* HMUI::ScrollView::_get__contentRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__contentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _contentRectTransform
void HMUI::ScrollView::_set__contentRectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__contentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRectTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView/HMUI.ScrollViewDirection _scrollViewDirection
HMUI::ScrollView::ScrollViewDirection HMUI::ScrollView::_get__scrollViewDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__scrollViewDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollViewDirection"))->offset;
  return *reinterpret_cast<HMUI::ScrollView::ScrollViewDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ScrollView/HMUI.ScrollViewDirection _scrollViewDirection
void HMUI::ScrollView::_set__scrollViewDirection(HMUI::ScrollView::ScrollViewDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__scrollViewDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollViewDirection"))->offset;
  *reinterpret_cast<HMUI::ScrollView::ScrollViewDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _pageUpButton
UnityEngine::UI::Button* HMUI::ScrollView::_get__pageUpButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__pageUpButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageUpButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _pageUpButton
void HMUI::ScrollView::_set__pageUpButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__pageUpButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageUpButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _pageDownButton
UnityEngine::UI::Button* HMUI::ScrollView::_get__pageDownButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__pageDownButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageDownButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _pageDownButton
void HMUI::ScrollView::_set__pageDownButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__pageDownButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageDownButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.VerticalScrollIndicator _verticalScrollIndicator
HMUI::VerticalScrollIndicator* HMUI::ScrollView::_get__verticalScrollIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__verticalScrollIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalScrollIndicator"))->offset;
  return *reinterpret_cast<HMUI::VerticalScrollIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.VerticalScrollIndicator _verticalScrollIndicator
void HMUI::ScrollView::_set__verticalScrollIndicator(HMUI::VerticalScrollIndicator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__verticalScrollIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalScrollIndicator"))->offset;
  *reinterpret_cast<HMUI::VerticalScrollIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float HMUI::ScrollView::_get__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _smooth
void HMUI::ScrollView::_set__smooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joystickScrollSpeed
float HMUI::ScrollView::_get__joystickScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__joystickScrollSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickScrollSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _joystickScrollSpeed
void HMUI::ScrollView::_set__joystickScrollSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__joystickScrollSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickScrollSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joystickQuickSnapMaxTime
float HMUI::ScrollView::_get__joystickQuickSnapMaxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__joystickQuickSnapMaxTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickQuickSnapMaxTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _joystickQuickSnapMaxTime
void HMUI::ScrollView::_set__joystickQuickSnapMaxTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__joystickQuickSnapMaxTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickQuickSnapMaxTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ScrollView/HMUI.ScrollType _scrollType
HMUI::ScrollView::ScrollType HMUI::ScrollView::_get__scrollType() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__scrollType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollType"))->offset;
  return *reinterpret_cast<HMUI::ScrollView::ScrollType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HMUI.ScrollView/HMUI.ScrollType _scrollType
void HMUI::ScrollView::_set__scrollType(HMUI::ScrollView::ScrollType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__scrollType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollType"))->offset;
  *reinterpret_cast<HMUI::ScrollView::ScrollType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _fixedCellSize
float HMUI::ScrollView::_get__fixedCellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__fixedCellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixedCellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _fixedCellSize
void HMUI::ScrollView::_set__fixedCellSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__fixedCellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixedCellSize"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _scrollItemRelativeThresholdPosition
float HMUI::ScrollView::_get__scrollItemRelativeThresholdPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__scrollItemRelativeThresholdPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollItemRelativeThresholdPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _scrollItemRelativeThresholdPosition
void HMUI::ScrollView::_set__scrollItemRelativeThresholdPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__scrollItemRelativeThresholdPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollItemRelativeThresholdPosition"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _pageStepNormalizedSize
float HMUI::ScrollView::_get__pageStepNormalizedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__pageStepNormalizedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageStepNormalizedSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _pageStepNormalizedSize
void HMUI::ScrollView::_set__pageStepNormalizedSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__pageStepNormalizedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageStepNormalizedSize"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _platformHelper
GlobalNamespace::IVRPlatformHelper* HMUI::ScrollView::_get__platformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__platformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IVRPlatformHelper _platformHelper
void HMUI::ScrollView::_set__platformHelper(GlobalNamespace::IVRPlatformHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__platformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformHelper"))->offset;
  *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> scrollPositionChangedEvent
System::Action_1<float>* HMUI::ScrollView::_get_scrollPositionChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get_scrollPositionChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scrollPositionChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Single> scrollPositionChangedEvent
void HMUI::ScrollView::_set_scrollPositionChangedEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set_scrollPositionChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scrollPositionChangedEvent"))->offset;
  *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder* HMUI::ScrollView::_get__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ButtonBinder _buttonBinder
void HMUI::ScrollView::_set__buttonBinder(HMUI::ButtonBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destinationPos
float HMUI::ScrollView::_get__destinationPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__destinationPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destinationPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _destinationPos
void HMUI::ScrollView::_set__destinationPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__destinationPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destinationPos"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _scrollFocusPositions
::Array<float>* HMUI::ScrollView::_get__scrollFocusPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__scrollFocusPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollFocusPositions"))->offset;
  return *reinterpret_cast<::Array<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single[] _scrollFocusPositions
void HMUI::ScrollView::_set__scrollFocusPositions(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__scrollFocusPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollFocusPositions"))->offset;
  *reinterpret_cast<::Array<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.EventSystemListener _eventSystemListener
HMUI::EventSystemListener* HMUI::ScrollView::_get__eventSystemListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__eventSystemListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventSystemListener"))->offset;
  return *reinterpret_cast<HMUI::EventSystemListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.EventSystemListener _eventSystemListener
void HMUI::ScrollView::_set__eventSystemListener(HMUI::EventSystemListener* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__eventSystemListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventSystemListener"))->offset;
  *reinterpret_cast<HMUI::EventSystemListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView/HMUI.ScrollDirection _lastJoystickScrollDirection
HMUI::ScrollView::ScrollDirection HMUI::ScrollView::_get__lastJoystickScrollDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__lastJoystickScrollDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastJoystickScrollDirection"))->offset;
  return *reinterpret_cast<HMUI::ScrollView::ScrollDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ScrollView/HMUI.ScrollDirection _lastJoystickScrollDirection
void HMUI::ScrollView::_set__lastJoystickScrollDirection(HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__lastJoystickScrollDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastJoystickScrollDirection"))->offset;
  *reinterpret_cast<HMUI::ScrollView::ScrollDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joystickScrollStartTime
float HMUI::ScrollView::_get__joystickScrollStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_get__joystickScrollStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickScrollStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _joystickScrollStartTime
void HMUI::ScrollView::_set__joystickScrollStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::_set__joystickScrollStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickScrollStartTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ScrollView.get_viewportTransform
UnityEngine::RectTransform* HMUI::ScrollView::get_viewportTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::get_viewportTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewportTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_contentTransform
UnityEngine::RectTransform* HMUI::ScrollView::get_contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::get_contentTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_position
float HMUI::ScrollView::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_scrollableSize
float HMUI::ScrollView::get_scrollableSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::get_scrollableSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollableSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_scrollPageSize
float HMUI::ScrollView::get_scrollPageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::get_scrollPageSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollPageSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_contentSize
float HMUI::ScrollView::get_contentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::get_contentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.add_scrollPositionChangedEvent
void HMUI::ScrollView::add_scrollPositionChangedEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::add_scrollPositionChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scrollPositionChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ScrollView.remove_scrollPositionChangedEvent
void HMUI::ScrollView::remove_scrollPositionChangedEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::remove_scrollPositionChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scrollPositionChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ScrollView.Awake
void HMUI::ScrollView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.OnDestroy
void HMUI::ScrollView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.Update
void HMUI::ScrollView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.SetContentSize
void HMUI::ScrollView::SetContentSize(float contentSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::SetContentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentSize)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, contentSize);
}
// Autogenerated method: HMUI.ScrollView.UpdateContentSize
void HMUI::ScrollView::UpdateContentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::UpdateContentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateContentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.ScrollToEnd
void HMUI::ScrollView::ScrollToEnd(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollToEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, animated);
}
// Autogenerated method: HMUI.ScrollView.ScrollToWorldPosition
void HMUI::ScrollView::ScrollToWorldPosition(UnityEngine::Vector3 worldPosition, float pageRelativePosition, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollToWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(pageRelativePosition), ::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, worldPosition, pageRelativePosition, animated);
}
// Autogenerated method: HMUI.ScrollView.ScrollToWorldPositionIfOutsideArea
void HMUI::ScrollView::ScrollToWorldPositionIfOutsideArea(UnityEngine::Vector3 worldPosition, float pageRelativePosition, float relativeBoundaryStart, float relativeBoundaryEnd, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollToWorldPositionIfOutsideArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToWorldPositionIfOutsideArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(pageRelativePosition), ::il2cpp_utils::ExtractType(relativeBoundaryStart), ::il2cpp_utils::ExtractType(relativeBoundaryEnd), ::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, worldPosition, pageRelativePosition, relativeBoundaryStart, relativeBoundaryEnd, animated);
}
// Autogenerated method: HMUI.ScrollView.ScrollTo
void HMUI::ScrollView::ScrollTo(float destinationPos, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationPos), ::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, destinationPos, animated);
}
// Autogenerated method: HMUI.ScrollView.WorldPositionToScrollViewPosition
UnityEngine::Vector2 HMUI::ScrollView::WorldPositionToScrollViewPosition(UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::WorldPositionToScrollViewPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldPositionToScrollViewPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method, worldPosition);
}
// Autogenerated method: HMUI.ScrollView.SetDestinationPos
void HMUI::ScrollView::SetDestinationPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::SetDestinationPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDestinationPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ScrollView.UpdateVerticalScrollIndicator
void HMUI::ScrollView::UpdateVerticalScrollIndicator(float posY) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::UpdateVerticalScrollIndicator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVerticalScrollIndicator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posY)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, posY);
}
// Autogenerated method: HMUI.ScrollView.PageUpButtonPressed
void HMUI::ScrollView::PageUpButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::PageUpButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageUpButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.PageDownButtonPressed
void HMUI::ScrollView::PageDownButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::PageDownButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageDownButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.RefreshButtons
void HMUI::ScrollView::RefreshButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::RefreshButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.HandlePointerDidEnter
void HMUI::ScrollView::HandlePointerDidEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::HandlePointerDidEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerDidEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: HMUI.ScrollView.HandlePointerDidExit
void HMUI::ScrollView::HandlePointerDidExit(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::HandlePointerDidExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerDidExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: HMUI.ScrollView.HandleJoystickWasNotCenteredThisFrame
void HMUI::ScrollView::HandleJoystickWasNotCenteredThisFrame(UnityEngine::Vector2 deltaPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::HandleJoystickWasNotCenteredThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoystickWasNotCenteredThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaPos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, deltaPos);
}
// Autogenerated method: HMUI.ScrollView.HandleJoystickWasCenteredThisFrame
void HMUI::ScrollView::HandleJoystickWasCenteredThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::HandleJoystickWasCenteredThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoystickWasCenteredThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.ResolveScrollDirection
HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ResolveScrollDirection(UnityEngine::Vector2 deltaPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ResolveScrollDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveScrollDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaPos)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ScrollView::ScrollDirection, false>(___instance_arg, ___internal__method, deltaPos);
}
// Autogenerated method: HMUI.ScrollView.<Awake>b__38_0
float HMUI::ScrollView::$Awake$b__38_0(HMUI::ItemForFocussedScrolling* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::<Awake>b__38_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__38_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated method: HMUI.ScrollView.<Awake>b__38_2
float HMUI::ScrollView::$Awake$b__38_2(HMUI::ItemForFocussedScrolling* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::<Awake>b__38_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__38_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.ScrollType
#include "HMUI/ScrollView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollType PageSize
HMUI::ScrollView::ScrollType HMUI::ScrollView::ScrollType::_get_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollType::_get_PageSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollType>("HMUI", "ScrollView/ScrollType", "PageSize"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollType PageSize
void HMUI::ScrollView::ScrollType::_set_PageSize(HMUI::ScrollView::ScrollType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollType::_set_PageSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollType", "PageSize", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollType FixedCellSize
HMUI::ScrollView::ScrollType HMUI::ScrollView::ScrollType::_get_FixedCellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollType::_get_FixedCellSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollType>("HMUI", "ScrollView/ScrollType", "FixedCellSize"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollType FixedCellSize
void HMUI::ScrollView::ScrollType::_set_FixedCellSize(HMUI::ScrollView::ScrollType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollType::_set_FixedCellSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollType", "FixedCellSize", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollType FocusItems
HMUI::ScrollView::ScrollType HMUI::ScrollView::ScrollType::_get_FocusItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollType::_get_FocusItems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollType>("HMUI", "ScrollView/ScrollType", "FocusItems"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollType FocusItems
void HMUI::ScrollView::ScrollType::_set_FocusItems(HMUI::ScrollView::ScrollType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollType::_set_FocusItems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollType", "FocusItems", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::ScrollView::ScrollType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::ScrollView::ScrollType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.ScrollDirection
#include "HMUI/ScrollView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection None
HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "None"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection None
void HMUI::ScrollView::ScrollDirection::_set_None(HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "None", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection Up
HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection Up
void HMUI::ScrollView::ScrollDirection::_set_Up(HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection Down
HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection Down
void HMUI::ScrollView::ScrollDirection::_set_Down(HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection Left
HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection Left
void HMUI::ScrollView::ScrollDirection::_set_Left(HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection Right
HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection Right
void HMUI::ScrollView::ScrollDirection::_set_Right(HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::ScrollView::ScrollDirection::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::ScrollView::ScrollDirection::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollDirection::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.ScrollViewDirection
#include "HMUI/ScrollView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollViewDirection Vertical
HMUI::ScrollView::ScrollViewDirection HMUI::ScrollView::ScrollViewDirection::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollViewDirection::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollViewDirection>("HMUI", "ScrollView/ScrollViewDirection", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollViewDirection Vertical
void HMUI::ScrollView::ScrollViewDirection::_set_Vertical(HMUI::ScrollView::ScrollViewDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollViewDirection::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollViewDirection", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollViewDirection Horizontal
HMUI::ScrollView::ScrollViewDirection HMUI::ScrollView::ScrollViewDirection::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollViewDirection::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ScrollView::ScrollViewDirection>("HMUI", "ScrollView/ScrollViewDirection", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollViewDirection Horizontal
void HMUI::ScrollView::ScrollViewDirection::_set_Horizontal(HMUI::ScrollView::ScrollViewDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollViewDirection::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollViewDirection", "Horizontal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::ScrollView::ScrollViewDirection::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollViewDirection::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::ScrollView::ScrollViewDirection::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::ScrollViewDirection::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c
#include "HMUI/ScrollView_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HMUI.ScrollView/HMUI.<>c <>9
HMUI::ScrollView::$$c* HMUI::ScrollView::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::ScrollView::$$c*>("HMUI", "ScrollView/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HMUI.ScrollView/HMUI.<>c <>9
void HMUI::ScrollView::$$c::_set_$$9(HMUI::ScrollView::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollView/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single,System.Single> <>9__38_1
System::Func_2<float, float>* HMUI::ScrollView::$$c::_get_$$9__38_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::_get_$$9__38_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<float, float>*>("HMUI", "ScrollView/<>c", "<>9__38_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single,System.Single> <>9__38_1
void HMUI::ScrollView::$$c::_set_$$9__38_1(System::Func_2<float, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::_set_$$9__38_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollView/<>c", "<>9__38_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single,System.Single> <>9__38_3
System::Func_2<float, float>* HMUI::ScrollView::$$c::_get_$$9__38_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::_get_$$9__38_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<float, float>*>("HMUI", "ScrollView/<>c", "<>9__38_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single,System.Single> <>9__38_3
void HMUI::ScrollView::$$c::_set_$$9__38_3(System::Func_2<float, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::_set_$$9__38_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollView/<>c", "<>9__38_3", value)));
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c..cctor
void HMUI::ScrollView::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ScrollView/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c.<Awake>b__38_1
float HMUI::ScrollView::$$c::$Awake$b__38_1(float i) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::<Awake>b__38_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__38_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, i);
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c.<Awake>b__38_3
float HMUI::ScrollView::$$c::$Awake$b__38_3(float i) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c::<Awake>b__38_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__38_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass50_0
#include "HMUI/ScrollView_--c__DisplayClass50_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
float HMUI::ScrollView::$$c__DisplayClass50_0::_get_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass50_0::_get_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single threshold
void HMUI::ScrollView::$$c__DisplayClass50_0::_set_threshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass50_0::_set_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c__DisplayClass50_0.<PageUpButtonPressed>b__0
bool HMUI::ScrollView::$$c__DisplayClass50_0::$PageUpButtonPressed$b__0(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass50_0::<PageUpButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PageUpButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass51_0
#include "HMUI/ScrollView_--c__DisplayClass51_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
float HMUI::ScrollView::$$c__DisplayClass51_0::_get_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass51_0::_get_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single threshold
void HMUI::ScrollView::$$c__DisplayClass51_0::_set_threshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass51_0::_set_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c__DisplayClass51_0.<PageDownButtonPressed>b__0
bool HMUI::ScrollView::$$c__DisplayClass51_0::$PageDownButtonPressed$b__0(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass51_0::<PageDownButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PageDownButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass56_0
#include "HMUI/ScrollView_--c__DisplayClass56_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
float HMUI::ScrollView::$$c__DisplayClass56_0::_get_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass56_0::_get_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single threshold
void HMUI::ScrollView::$$c__DisplayClass56_0::_set_threshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass56_0::_set_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c__DisplayClass56_0.<HandleJoystickWasCenteredThisFrame>b__0
bool HMUI::ScrollView::$$c__DisplayClass56_0::$HandleJoystickWasCenteredThisFrame$b__0(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass56_0::<HandleJoystickWasCenteredThisFrame>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleJoystickWasCenteredThisFrame>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass56_1
#include "HMUI/ScrollView_--c__DisplayClass56_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
float HMUI::ScrollView::$$c__DisplayClass56_1::_get_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass56_1::_get_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single threshold
void HMUI::ScrollView::$$c__DisplayClass56_1::_set_threshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass56_1::_set_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c__DisplayClass56_1.<HandleJoystickWasCenteredThisFrame>b__1
bool HMUI::ScrollView::$$c__DisplayClass56_1::$HandleJoystickWasCenteredThisFrame$b__1(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollView::$$c__DisplayClass56_1::<HandleJoystickWasCenteredThisFrame>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleJoystickWasCenteredThisFrame>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ScrollViewItemForVisibilityController
#include "HMUI/ScrollViewItemForVisibilityController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ScrollViewItemForVisibilityController.GetWorldCorners
void HMUI::ScrollViewItemForVisibilityController::GetWorldCorners(::Array<UnityEngine::Vector3>* fourCornersArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemForVisibilityController::GetWorldCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fourCornersArray)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, fourCornersArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ScrollViewItemsVisibilityController
#include "HMUI/ScrollViewItemsVisibilityController.hpp"
// Including type: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c
#include "HMUI/ScrollViewItemsVisibilityController_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.ScrollViewItemForVisibilityController
#include "HMUI/ScrollViewItemForVisibilityController.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewport
UnityEngine::RectTransform* HMUI::ScrollViewItemsVisibilityController::_get__viewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__viewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewport"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _viewport
void HMUI::ScrollViewItemsVisibilityController::_set__viewport(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__viewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewport"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentRectTransform
UnityEngine::RectTransform* HMUI::ScrollViewItemsVisibilityController::_get__contentRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__contentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _contentRectTransform
void HMUI::ScrollViewItemsVisibilityController::_set__contentRectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__contentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRectTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollViewItemForVisibilityController[] _items
::Array<HMUI::ScrollViewItemForVisibilityController*>* HMUI::ScrollViewItemsVisibilityController::_get__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::Array<HMUI::ScrollViewItemForVisibilityController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ScrollViewItemForVisibilityController[] _items
void HMUI::ScrollViewItemsVisibilityController::_set__items(::Array<HMUI::ScrollViewItemForVisibilityController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  *reinterpret_cast<::Array<HMUI::ScrollViewItemForVisibilityController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastContentAnchoredPositionY
float HMUI::ScrollViewItemsVisibilityController::_get__lastContentAnchoredPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__lastContentAnchoredPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastContentAnchoredPositionY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastContentAnchoredPositionY
void HMUI::ScrollViewItemsVisibilityController::_set__lastContentAnchoredPositionY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__lastContentAnchoredPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastContentAnchoredPositionY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _viewportWorldCorners
::Array<UnityEngine::Vector3>* HMUI::ScrollViewItemsVisibilityController::_get__viewportWorldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__viewportWorldCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportWorldCorners"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3[] _viewportWorldCorners
void HMUI::ScrollViewItemsVisibilityController::_set__viewportWorldCorners(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__viewportWorldCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportWorldCorners"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>[] _upperItemsCornes
::Array<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*>* HMUI::ScrollViewItemsVisibilityController::_get__upperItemsCornes() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__upperItemsCornes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upperItemsCornes"))->offset;
  return *reinterpret_cast<::Array<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>[] _upperItemsCornes
void HMUI::ScrollViewItemsVisibilityController::_set__upperItemsCornes(::Array<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__upperItemsCornes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upperItemsCornes"))->offset;
  *reinterpret_cast<::Array<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>[] _lowerItemsCornes
::Array<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*>* HMUI::ScrollViewItemsVisibilityController::_get__lowerItemsCornes() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__lowerItemsCornes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowerItemsCornes"))->offset;
  return *reinterpret_cast<::Array<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>[] _lowerItemsCornes
void HMUI::ScrollViewItemsVisibilityController::_set__lowerItemsCornes(::Array<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__lowerItemsCornes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowerItemsCornes"))->offset;
  *reinterpret_cast<::Array<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lowerLastVisibleIndex
int HMUI::ScrollViewItemsVisibilityController::_get__lowerLastVisibleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__lowerLastVisibleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowerLastVisibleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _lowerLastVisibleIndex
void HMUI::ScrollViewItemsVisibilityController::_set__lowerLastVisibleIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__lowerLastVisibleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowerLastVisibleIndex"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _upperLastVisibleIndex
int HMUI::ScrollViewItemsVisibilityController::_get__upperLastVisibleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__upperLastVisibleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upperLastVisibleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _upperLastVisibleIndex
void HMUI::ScrollViewItemsVisibilityController::_set__upperLastVisibleIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__upperLastVisibleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upperLastVisibleIndex"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _contentMaxY
float HMUI::ScrollViewItemsVisibilityController::_get__contentMaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__contentMaxY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentMaxY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _contentMaxY
void HMUI::ScrollViewItemsVisibilityController::_set__contentMaxY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__contentMaxY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentMaxY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _contentMinY
float HMUI::ScrollViewItemsVisibilityController::_get__contentMinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_get__contentMinY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentMinY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _contentMinY
void HMUI::ScrollViewItemsVisibilityController::_set__contentMinY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::_set__contentMinY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentMinY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController.Start
void HMUI::ScrollViewItemsVisibilityController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController.Update
void HMUI::ScrollViewItemsVisibilityController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController.UpdateVisibilityUpDirection
void HMUI::ScrollViewItemsVisibilityController::UpdateVisibilityUpDirection(float newContentAnchoredPositionY) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::UpdateVisibilityUpDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisibilityUpDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContentAnchoredPositionY)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newContentAnchoredPositionY);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController.UpdateVisibilityDownDirection
void HMUI::ScrollViewItemsVisibilityController::UpdateVisibilityDownDirection(float newContentAnchoredPositionY) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::UpdateVisibilityDownDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisibilityDownDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContentAnchoredPositionY)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newContentAnchoredPositionY);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c
#include "HMUI/ScrollViewItemsVisibilityController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.ScrollViewItemForVisibilityController
#include "HMUI/ScrollViewItemForVisibilityController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HMUI.ScrollViewItemsVisibilityController/HMUI.<>c <>9
HMUI::ScrollViewItemsVisibilityController::$$c* HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<HMUI::ScrollViewItemsVisibilityController::$$c*>("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HMUI.ScrollViewItemsVisibilityController/HMUI.<>c <>9
void HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9(HMUI::ScrollViewItemsVisibilityController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>,System.Single> <>9__11_0
System::Func_2<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*, float>* HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*, float>*>("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>,System.Single> <>9__11_0
void HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9__11_0(System::Func_2<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9__11_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>,System.Single> <>9__11_1
System::Func_2<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*, float>* HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*, float>*>("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>,System.Single> <>9__11_1
void HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9__11_1(System::Func_2<System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9__11_1", value)));
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c..cctor
void HMUI::ScrollViewItemsVisibilityController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ScrollViewItemsVisibilityController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c.<Start>b__11_0
float HMUI::ScrollViewItemsVisibilityController::$$c::$Start$b__11_0(System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::<Start>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c.<Start>b__11_1
float HMUI::ScrollViewItemsVisibilityController::$$c::$Start$b__11_1(System::Tuple_2<HMUI::ScrollViewItemForVisibilityController*, float>* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ScrollViewItemsVisibilityController::$$c::<Start>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SelectableCell
#include "HMUI/SelectableCell.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal _wasPressedSignal
GlobalNamespace::Signal* HMUI::SelectableCell::_get__wasPressedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_get__wasPressedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasPressedSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Signal _wasPressedSignal
void HMUI::SelectableCell::_set__wasPressedSignal(GlobalNamespace::Signal* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_set__wasPressedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasPressedSignal"))->offset;
  *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<HMUI.SelectableCell,HMUI.SelectableCell/HMUI.TransitionType,System.Object> selectionDidChangeEvent
System::Action_3<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType, ::Il2CppObject*>* HMUI::SelectableCell::_get_selectionDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_get_selectionDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_3<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`3<HMUI.SelectableCell,HMUI.SelectableCell/HMUI.TransitionType,System.Object> selectionDidChangeEvent
void HMUI::SelectableCell::_set_selectionDidChangeEvent(System::Action_3<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_set_selectionDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionDidChangeEvent"))->offset;
  *reinterpret_cast<System::Action_3<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<HMUI.SelectableCell,HMUI.SelectableCell/HMUI.TransitionType> highlightDidChangeEvent
System::Action_2<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType>* HMUI::SelectableCell::_get_highlightDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_get_highlightDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highlightDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<HMUI.SelectableCell,HMUI.SelectableCell/HMUI.TransitionType> highlightDidChangeEvent
void HMUI::SelectableCell::_set_highlightDidChangeEvent(System::Action_2<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_set_highlightDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highlightDidChangeEvent"))->offset;
  *reinterpret_cast<System::Action_2<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <highlighted>k__BackingField
bool HMUI::SelectableCell::_get_$highlighted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_get_$highlighted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<highlighted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <highlighted>k__BackingField
void HMUI::SelectableCell::_set_$highlighted$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_set_$highlighted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<highlighted>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <selected>k__BackingField
bool HMUI::SelectableCell::_get_$selected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_get_$selected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selected>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <selected>k__BackingField
void HMUI::SelectableCell::_set_$selected$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::_set_$selected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selected>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.SelectableCell.get_highlighted
bool HMUI::SelectableCell::get_highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::get_highlighted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlighted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCell.set_highlighted
void HMUI::SelectableCell::set_highlighted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::set_highlighted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highlighted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.get_selected
bool HMUI::SelectableCell::get_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::get_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCell.set_selected
void HMUI::SelectableCell::set_selected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::set_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.add_selectionDidChangeEvent
void HMUI::SelectableCell::add_selectionDidChangeEvent(System::Action_3<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::add_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.remove_selectionDidChangeEvent
void HMUI::SelectableCell::remove_selectionDidChangeEvent(System::Action_3<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::remove_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.add_highlightDidChangeEvent
void HMUI::SelectableCell::add_highlightDidChangeEvent(System::Action_2<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::add_highlightDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_highlightDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.remove_highlightDidChangeEvent
void HMUI::SelectableCell::remove_highlightDidChangeEvent(System::Action_2<HMUI::SelectableCell*, HMUI::SelectableCell::TransitionType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::remove_highlightDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_highlightDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.Start
void HMUI::SelectableCell::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCell.SetSelected
void HMUI::SelectableCell::SetSelected(bool value, HMUI::SelectableCell::TransitionType transitionType, ::Il2CppObject* changeOwner, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(changeOwner), ::il2cpp_utils::ExtractType(ignoreCurrentValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, transitionType, changeOwner, ignoreCurrentValue);
}
// Autogenerated method: HMUI.SelectableCell.ClearHighlight
void HMUI::SelectableCell::ClearHighlight(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::ClearHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: HMUI.SelectableCell.SetHighlight
void HMUI::SelectableCell::SetHighlight(bool value, HMUI::SelectableCell::TransitionType transitionType, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::SetHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(ignoreCurrentValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, transitionType, ignoreCurrentValue);
}
// Autogenerated method: HMUI.SelectableCell.InternalToggle
void HMUI::SelectableCell::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::InternalToggle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCell.SelectionDidChange
void HMUI::SelectableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: HMUI.SelectableCell.HighlightDidChange
void HMUI::SelectableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: HMUI.SelectableCell.OnPointerClick
void HMUI::SelectableCell::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: HMUI.SelectableCell.OnSubmit
void HMUI::SelectableCell::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: HMUI.SelectableCell.OnPointerEnter
void HMUI::SelectableCell::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: HMUI.SelectableCell.OnPointerExit
void HMUI::SelectableCell::OnPointerExit(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SelectableCell/HMUI.TransitionType
#include "HMUI/SelectableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.SelectableCell/HMUI.TransitionType Instant
HMUI::SelectableCell::TransitionType HMUI::SelectableCell::TransitionType::_get_Instant() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::TransitionType::_get_Instant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::SelectableCell::TransitionType>("HMUI", "SelectableCell/TransitionType", "Instant"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.SelectableCell/HMUI.TransitionType Instant
void HMUI::SelectableCell::TransitionType::_set_Instant(HMUI::SelectableCell::TransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::TransitionType::_set_Instant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SelectableCell/TransitionType", "Instant", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.SelectableCell/HMUI.TransitionType Animated
HMUI::SelectableCell::TransitionType HMUI::SelectableCell::TransitionType::_get_Animated() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::TransitionType::_get_Animated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::SelectableCell::TransitionType>("HMUI", "SelectableCell/TransitionType", "Animated"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.SelectableCell/HMUI.TransitionType Animated
void HMUI::SelectableCell::TransitionType::_set_Animated(HMUI::SelectableCell::TransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::TransitionType::_set_Animated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SelectableCell/TransitionType", "Animated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::SelectableCell::TransitionType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::TransitionType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::SelectableCell::TransitionType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCell::TransitionType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SelectableCellStaticAnimations
#include "HMUI/SelectableCellStaticAnimations.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SelectableCell _selectableCell
HMUI::SelectableCell* HMUI::SelectableCellStaticAnimations::_get__selectableCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_get__selectableCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectableCell"))->offset;
  return *reinterpret_cast<HMUI::SelectableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.SelectableCell _selectableCell
void HMUI::SelectableCellStaticAnimations::_set__selectableCell(HMUI::SelectableCell* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_set__selectableCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectableCell"))->offset;
  *reinterpret_cast<HMUI::SelectableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalAnimationClip
UnityEngine::AnimationClip* HMUI::SelectableCellStaticAnimations::_get__normalAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_get__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _normalAnimationClip
void HMUI::SelectableCellStaticAnimations::_set__normalAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_set__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _highlightedAnimationClip
UnityEngine::AnimationClip* HMUI::SelectableCellStaticAnimations::_get__highlightedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_get__highlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _highlightedAnimationClip
void HMUI::SelectableCellStaticAnimations::_set__highlightedAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_set__highlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedAnimationClip
UnityEngine::AnimationClip* HMUI::SelectableCellStaticAnimations::_get__selectedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_get__selectedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _selectedAnimationClip
void HMUI::SelectableCellStaticAnimations::_set__selectedAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_set__selectedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedAndHighlightedAnimationClip
UnityEngine::AnimationClip* HMUI::SelectableCellStaticAnimations::_get__selectedAndHighlightedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_get__selectedAndHighlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _selectedAndHighlightedAnimationClip
void HMUI::SelectableCellStaticAnimations::_set__selectedAndHighlightedAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::_set__selectedAndHighlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.Awake
void HMUI::SelectableCellStaticAnimations::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.Start
void HMUI::SelectableCellStaticAnimations::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.OnDestroy
void HMUI::SelectableCellStaticAnimations::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.HandleSelectionDidChange
void HMUI::SelectableCellStaticAnimations::HandleSelectionDidChange(HMUI::SelectableCell* selectableCell, HMUI::SelectableCell::TransitionType transitionType, ::Il2CppObject* changeOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::HandleSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(changeOwner)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, selectableCell, transitionType, changeOwner);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.HandleHighlightDidChange
void HMUI::SelectableCellStaticAnimations::HandleHighlightDidChange(HMUI::SelectableCell* selectableCell, HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::HandleHighlightDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, selectableCell, transitionType);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.RefreshVisuals
void HMUI::SelectableCellStaticAnimations::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SelectableCellStaticAnimations::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SetPropertyUtility
#include "HMUI/SetPropertyUtility.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SetPropertyUtility.SetColor
bool HMUI::SetPropertyUtility::SetColor(ByRef<UnityEngine::Color> currentValue, UnityEngine::Color newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SetPropertyUtility::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "SetPropertyUtility", "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(currentValue), newValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: SimpleTextTableCell
#include "GlobalNamespace/SimpleTextTableCell.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellReuseIdentifier
::Il2CppString* HMUI::SimpleTextDropdown::_get_kCellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_get_kCellReuseIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("HMUI", "SimpleTextDropdown", "kCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellReuseIdentifier
void HMUI::SimpleTextDropdown::_set_kCellReuseIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_set_kCellReuseIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SimpleTextDropdown", "kCellReuseIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI* HMUI::SimpleTextDropdown::_get__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_get__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _text
void HMUI::SimpleTextDropdown::_set__text(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_set__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private SimpleTextTableCell _cellPrefab
GlobalNamespace::SimpleTextTableCell* HMUI::SimpleTextDropdown::_get__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_get__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleTextTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private SimpleTextTableCell _cellPrefab
void HMUI::SimpleTextDropdown::_set__cellPrefab(GlobalNamespace::SimpleTextTableCell* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_set__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::SimpleTextTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellSize
float HMUI::SimpleTextDropdown::_get__cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_get__cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _cellSize
void HMUI::SimpleTextDropdown::_set__cellSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_set__cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellSize"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.String> _texts
System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* HMUI::SimpleTextDropdown::_get__texts() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_get__texts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texts"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IReadOnlyList`1<System.String> _texts
void HMUI::SimpleTextDropdown::_set__texts(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_set__texts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texts"))->offset;
  *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool HMUI::SimpleTextDropdown::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_get__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _initialized
void HMUI::SimpleTextDropdown::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::_set__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.SimpleTextDropdown.LazyInit
void HMUI::SimpleTextDropdown::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SimpleTextDropdown.SetTexts
void HMUI::SimpleTextDropdown::SetTexts(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* texts) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::SetTexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texts)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, texts);
}
// Autogenerated method: HMUI.SimpleTextDropdown.CellSize
float HMUI::SimpleTextDropdown::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SimpleTextDropdown.NumberOfCells
int HMUI::SimpleTextDropdown::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SimpleTextDropdown.CellForIdx
HMUI::TableCell* HMUI::SimpleTextDropdown::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(___instance_arg, ___internal__method, tableView, idx);
}
// Autogenerated method: HMUI.SimpleTextDropdown.HandleDidSelectCellWithIdx
void HMUI::SimpleTextDropdown::HandleDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::HandleDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: HMUI.SimpleTextDropdown.OnDestroy
void HMUI::SimpleTextDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SimpleTextDropdown.Init
void HMUI::SimpleTextDropdown::Init(HMUI::TableView::IDataSource* initTableViewDataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initTableViewDataSource)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, initTableViewDataSource);
}
// Autogenerated method: HMUI.SimpleTextDropdown.SelectCellWithIdx
void HMUI::SimpleTextDropdown::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SimpleTextDropdown::SelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SwitchView
#include "HMUI/SwitchView.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SwitchView/HMUI.AnimationType _animationType
HMUI::SwitchView::AnimationType HMUI::SwitchView::_get__animationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__animationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationType"))->offset;
  return *reinterpret_cast<HMUI::SwitchView::AnimationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.SwitchView/HMUI.AnimationType _animationType
void HMUI::SwitchView::_set__animationType(HMUI::SwitchView::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__animationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationType"))->offset;
  *reinterpret_cast<HMUI::SwitchView::AnimationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalAnimationClip
UnityEngine::AnimationClip* HMUI::SwitchView::_get__normalAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _normalAnimationClip
void HMUI::SwitchView::_set__normalAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _highlightedAnimationClip
UnityEngine::AnimationClip* HMUI::SwitchView::_get__highlightedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__highlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _highlightedAnimationClip
void HMUI::SwitchView::_set__highlightedAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__highlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _pressedAnimationClip
UnityEngine::AnimationClip* HMUI::SwitchView::_get__pressedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__pressedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _pressedAnimationClip
void HMUI::SwitchView::_set__pressedAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__pressedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _disabledAnimationClip
UnityEngine::AnimationClip* HMUI::SwitchView::_get__disabledAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__disabledAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _disabledAnimationClip
void HMUI::SwitchView::_set__disabledAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__disabledAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _onAnimationClip
UnityEngine::AnimationClip* HMUI::SwitchView::_get__onAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__onAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _onAnimationClip
void HMUI::SwitchView::_set__onAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__onAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _offAnimationClip
UnityEngine::AnimationClip* HMUI::SwitchView::_get__offAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__offAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _offAnimationClip
void HMUI::SwitchView::_set__offAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__offAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedAnimationClip
UnityEngine::AnimationClip* HMUI::SwitchView::_get__selectedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__selectedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _selectedAnimationClip
void HMUI::SwitchView::_set__selectedAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__selectedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedAndHighlightedAnimationClip
UnityEngine::AnimationClip* HMUI::SwitchView::_get__selectedAndHighlightedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__selectedAndHighlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _selectedAndHighlightedAnimationClip
void HMUI::SwitchView::_set__selectedAndHighlightedAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__selectedAndHighlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleWithCallbacks _toggle
HMUI::ToggleWithCallbacks* HMUI::SwitchView::_get__toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_get__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  return *reinterpret_cast<HMUI::ToggleWithCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ToggleWithCallbacks _toggle
void HMUI::SwitchView::_set__toggle(HMUI::ToggleWithCallbacks* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::_set__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  *reinterpret_cast<HMUI::ToggleWithCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.SwitchView.Awake
void HMUI::SwitchView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SwitchView.Start
void HMUI::SwitchView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SwitchView.OnDestroy
void HMUI::SwitchView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SwitchView.HandleOnValueChanged
void HMUI::SwitchView::HandleOnValueChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::HandleOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SwitchView.HandleStateDidChange
void HMUI::SwitchView::HandleStateDidChange(HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::HandleStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SwitchView.RefreshVisuals
void HMUI::SwitchView::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SwitchView/HMUI.AnimationType
#include "HMUI/SwitchView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.SwitchView/HMUI.AnimationType OnOff
HMUI::SwitchView::AnimationType HMUI::SwitchView::AnimationType::_get_OnOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::AnimationType::_get_OnOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::SwitchView::AnimationType>("HMUI", "SwitchView/AnimationType", "OnOff"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.SwitchView/HMUI.AnimationType OnOff
void HMUI::SwitchView::AnimationType::_set_OnOff(HMUI::SwitchView::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::AnimationType::_set_OnOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SwitchView/AnimationType", "OnOff", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.SwitchView/HMUI.AnimationType SelectedState
HMUI::SwitchView::AnimationType HMUI::SwitchView::AnimationType::_get_SelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::AnimationType::_get_SelectedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::SwitchView::AnimationType>("HMUI", "SwitchView/AnimationType", "SelectedState"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.SwitchView/HMUI.AnimationType SelectedState
void HMUI::SwitchView::AnimationType::_set_SelectedState(HMUI::SwitchView::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::AnimationType::_set_SelectedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SwitchView/AnimationType", "SelectedState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::SwitchView::AnimationType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::AnimationType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::SwitchView::AnimationType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SwitchView::AnimationType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableViewSelectionType
#include "HMUI/TableViewSelectionType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.TableViewSelectionType None
HMUI::TableViewSelectionType HMUI::TableViewSelectionType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableViewSelectionType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::TableViewSelectionType>("HMUI", "TableViewSelectionType", "None"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableViewSelectionType None
void HMUI::TableViewSelectionType::_set_None(HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableViewSelectionType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableViewSelectionType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableViewSelectionType Single
HMUI::TableViewSelectionType HMUI::TableViewSelectionType::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableViewSelectionType::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::TableViewSelectionType>("HMUI", "TableViewSelectionType", "Single"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableViewSelectionType Single
void HMUI::TableViewSelectionType::_set_Single(HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableViewSelectionType::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableViewSelectionType", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableViewSelectionType Multiple
HMUI::TableViewSelectionType HMUI::TableViewSelectionType::_get_Multiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableViewSelectionType::_get_Multiple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::TableViewSelectionType>("HMUI", "TableViewSelectionType", "Multiple"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableViewSelectionType Multiple
void HMUI::TableViewSelectionType::_set_Multiple(HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableViewSelectionType::_set_Multiple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableViewSelectionType", "Multiple", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::TableViewSelectionType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableViewSelectionType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::TableViewSelectionType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableViewSelectionType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ITableCellOwner
#include "HMUI/ITableCellOwner.hpp"
// Including type: HMUI.TableViewSelectionType
#include "HMUI/TableViewSelectionType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ITableCellOwner.get_selectionType
HMUI::TableViewSelectionType HMUI::ITableCellOwner::get_selectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ITableCellOwner::get_selectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableViewSelectionType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ITableCellOwner.get_canSelectSelectedCell
bool HMUI::ITableCellOwner::get_canSelectSelectedCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ITableCellOwner::get_canSelectSelectedCell");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSelectSelectedCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ITableCellOwner.get_numberOfCells
int HMUI::ITableCellOwner::get_numberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ITableCellOwner::get_numberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SectionTableView
#include "HMUI/SectionTableView.hpp"
// Including type: HMUI.SectionTableView/HMUI.IDataSource
#include "HMUI/SectionTableView_IDataSource.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: HMUI.TableView/HMUI.ScrollPositionType
#include "HMUI/TableView_ScrollPositionType.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _unfoldSectionsByDefault
bool HMUI::SectionTableView::_get__unfoldSectionsByDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_get__unfoldSectionsByDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unfoldSectionsByDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _unfoldSectionsByDefault
void HMUI::SectionTableView::_set__unfoldSectionsByDefault(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_set__unfoldSectionsByDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unfoldSectionsByDefault"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<HMUI.SectionTableView,System.Int32,System.Int32> didSelectRowInSectionEvent
System::Action_3<HMUI::SectionTableView*, int, int>* HMUI::SectionTableView::_get_didSelectRowInSectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_get_didSelectRowInSectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectRowInSectionEvent"))->offset;
  return *reinterpret_cast<System::Action_3<HMUI::SectionTableView*, int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`3<HMUI.SectionTableView,System.Int32,System.Int32> didSelectRowInSectionEvent
void HMUI::SectionTableView::_set_didSelectRowInSectionEvent(System::Action_3<HMUI::SectionTableView*, int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_set_didSelectRowInSectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectRowInSectionEvent"))->offset;
  *reinterpret_cast<System::Action_3<HMUI::SectionTableView*, int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<HMUI.SectionTableView,System.Int32> didSelectHeaderEvent
System::Action_2<HMUI::SectionTableView*, int>* HMUI::SectionTableView::_get_didSelectHeaderEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_get_didSelectHeaderEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectHeaderEvent"))->offset;
  return *reinterpret_cast<System::Action_2<HMUI::SectionTableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<HMUI.SectionTableView,System.Int32> didSelectHeaderEvent
void HMUI::SectionTableView::_set_didSelectHeaderEvent(System::Action_2<HMUI::SectionTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_set_didSelectHeaderEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectHeaderEvent"))->offset;
  *reinterpret_cast<System::Action_2<HMUI::SectionTableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.SectionTableView/HMUI.IDataSource _dataSource
HMUI::SectionTableView::IDataSource* HMUI::SectionTableView::_get__dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_get__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  return *reinterpret_cast<HMUI::SectionTableView::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.SectionTableView/HMUI.IDataSource _dataSource
void HMUI::SectionTableView::_set__dataSource(HMUI::SectionTableView::IDataSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_set__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  *reinterpret_cast<HMUI::SectionTableView::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.SectionTableView/HMUI.Section[] _sections
::Array<HMUI::SectionTableView::Section>* HMUI::SectionTableView::_get__sections() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_get__sections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sections"))->offset;
  return *reinterpret_cast<::Array<HMUI::SectionTableView::Section>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.SectionTableView/HMUI.Section[] _sections
void HMUI::SectionTableView::_set__sections(::Array<HMUI::SectionTableView::Section>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::_set__sections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sections"))->offset;
  *reinterpret_cast<::Array<HMUI::SectionTableView::Section>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.SectionTableView.get_dataSource
HMUI::SectionTableView::IDataSource* HMUI::SectionTableView::get_dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::get_dataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::SectionTableView::IDataSource*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.set_dataSource
void HMUI::SectionTableView::set_dataSource(HMUI::SectionTableView::IDataSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::set_dataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.add_didSelectRowInSectionEvent
void HMUI::SectionTableView::add_didSelectRowInSectionEvent(System::Action_3<HMUI::SectionTableView*, int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::add_didSelectRowInSectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectRowInSectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.remove_didSelectRowInSectionEvent
void HMUI::SectionTableView::remove_didSelectRowInSectionEvent(System::Action_3<HMUI::SectionTableView*, int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::remove_didSelectRowInSectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectRowInSectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.add_didSelectHeaderEvent
void HMUI::SectionTableView::add_didSelectHeaderEvent(System::Action_2<HMUI::SectionTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::add_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.remove_didSelectHeaderEvent
void HMUI::SectionTableView::remove_didSelectHeaderEvent(System::Action_2<HMUI::SectionTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::remove_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.IsSectionUnfolded
bool HMUI::SectionTableView::IsSectionUnfolded(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::IsSectionUnfolded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSectionUnfolded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.CellSize
float HMUI::SectionTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.NumberOfCells
int HMUI::SectionTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.CellForIdx
HMUI::TableCell* HMUI::SectionTableView::CellForIdx(HMUI::TableView* tableView, int baseRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(baseRow)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(___instance_arg, ___internal__method, tableView, baseRow);
}
// Autogenerated method: HMUI.SectionTableView.ReloadData
void HMUI::SectionTableView::ReloadData(bool resetFoldState) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::ReloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resetFoldState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, resetFoldState);
}
// Autogenerated method: HMUI.SectionTableView.UnfoldAllSections
void HMUI::SectionTableView::UnfoldAllSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::UnfoldAllSections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnfoldAllSections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.FoldAll
void HMUI::SectionTableView::FoldAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::FoldAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FoldAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.UnfoldSection
void HMUI::SectionTableView::UnfoldSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::UnfoldSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnfoldSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.FoldSection
void HMUI::SectionTableView::FoldSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::FoldSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FoldSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.ScrollToRow
void HMUI::SectionTableView::ScrollToRow(int section, int row, HMUI::TableView::ScrollPositionType scrollPositionType, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::ScrollToRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(scrollPositionType), ::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, section, row, scrollPositionType, animated);
}
// Autogenerated method: HMUI.SectionTableView.SectionAndRowForBaseRow
void HMUI::SectionTableView::SectionAndRowForBaseRow(int baseRow, ByRef<int> section, ByRef<int> row, ByRef<bool> isSectionHeader) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::SectionAndRowForBaseRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SectionAndRowForBaseRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseRow), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, baseRow, byref(section), byref(row), byref(isSectionHeader));
}
// Autogenerated method: HMUI.SectionTableView.ReloadData
void HMUI::SectionTableView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::ReloadData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.DidSelectCellWithIdx
void HMUI::SectionTableView::DidSelectCellWithIdx(int baseRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::DidSelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseRow)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, baseRow);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SectionTableView/HMUI.IDataSource
#include "HMUI/SectionTableView_IDataSource.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.RowHeight
float HMUI::SectionTableView::IDataSource::RowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::IDataSource::RowHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RowHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.NumberOfSections
int HMUI::SectionTableView::IDataSource::NumberOfSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::IDataSource::NumberOfSections");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfSections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.NumberOfRowsInSection
int HMUI::SectionTableView::IDataSource::NumberOfRowsInSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::IDataSource::NumberOfRowsInSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfRowsInSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.CellForSectionHeader
HMUI::TableCell* HMUI::SectionTableView::IDataSource::CellForSectionHeader(int section, bool unfolded) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::IDataSource::CellForSectionHeader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForSectionHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section), ::il2cpp_utils::ExtractType(unfolded)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(___instance_arg, ___internal__method, section, unfolded);
}
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.CellForRowInSection
HMUI::TableCell* HMUI::SectionTableView::IDataSource::CellForRowInSection(int section, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::SectionTableView::IDataSource::CellForRowInSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForRowInSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section), ::il2cpp_utils::ExtractType(row)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(___instance_arg, ___internal__method, section, row);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: HMUI.ITableCellOwner
#include "HMUI/ITableCellOwner.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <idx>k__BackingField
int HMUI::TableCell::_get_$idx$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::_get_$idx$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<idx>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <idx>k__BackingField
void HMUI::TableCell::_set_$idx$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::_set_$idx$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<idx>k__BackingField"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _reuseIdentifier
::Il2CppString* HMUI::TableCell::_get__reuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::_get__reuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reuseIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _reuseIdentifier
void HMUI::TableCell::_set__reuseIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::_set__reuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reuseIdentifier"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ITableCellOwner _tableCellOwner
HMUI::ITableCellOwner* HMUI::TableCell::_get__tableCellOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::_get__tableCellOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableCellOwner"))->offset;
  return *reinterpret_cast<HMUI::ITableCellOwner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ITableCellOwner _tableCellOwner
void HMUI::TableCell::_set__tableCellOwner(HMUI::ITableCellOwner* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::_set__tableCellOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableCellOwner"))->offset;
  *reinterpret_cast<HMUI::ITableCellOwner**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.TableCell.get_reuseIdentifier
::Il2CppString* HMUI::TableCell::get_reuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::get_reuseIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reuseIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.set_reuseIdentifier
void HMUI::TableCell::set_reuseIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::set_reuseIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reuseIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableCell.get_idx
int HMUI::TableCell::get_idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::get_idx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_idx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.set_idx
void HMUI::TableCell::set_idx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::set_idx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_idx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableCell.get_tableCellOwner
HMUI::ITableCellOwner* HMUI::TableCell::get_tableCellOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::get_tableCellOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tableCellOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ITableCellOwner*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.TableViewSetup
void HMUI::TableCell::TableViewSetup(HMUI::ITableCellOwner* tableCellOwner, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::TableViewSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TableViewSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableCellOwner), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, tableCellOwner, idx);
}
// Autogenerated method: HMUI.TableCell.MoveIdx
void HMUI::TableCell::MoveIdx(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::MoveIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, offset);
}
// Autogenerated method: HMUI.TableCell.__WasPreparedForReuse
void HMUI::TableCell::__WasPreparedForReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::__WasPreparedForReuse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__WasPreparedForReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.WasPreparedForReuse
void HMUI::TableCell::WasPreparedForReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::WasPreparedForReuse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WasPreparedForReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.InternalToggle
void HMUI::TableCell::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableCell::InternalToggle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.TableView/HMUI.ScrollPositionType
#include "HMUI/TableView_ScrollPositionType.hpp"
// Including type: HMUI.TableView/HMUI.CellsGroup
#include "HMUI/TableView_CellsGroup.hpp"
// Including type: HMUI.TableView/HMUI.IDataSource
#include "HMUI/TableView_IDataSource.hpp"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.RectTransform/UnityEngine.Axis
#include "UnityEngine/RectTransform_Axis.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView _scrollView
HMUI::ScrollView* HMUI::TableView::_get__scrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__scrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollView"))->offset;
  return *reinterpret_cast<HMUI::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ScrollView _scrollView
void HMUI::TableView::_set__scrollView(HMUI::ScrollView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__scrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollView"))->offset;
  *reinterpret_cast<HMUI::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _scrollToTopOnEnable
bool HMUI::TableView::_get__scrollToTopOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__scrollToTopOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollToTopOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _scrollToTopOnEnable
void HMUI::TableView::_set__scrollToTopOnEnable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__scrollToTopOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollToTopOnEnable"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _alignToCenter
bool HMUI::TableView::_get__alignToCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__alignToCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alignToCenter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _alignToCenter
void HMUI::TableView::_set__alignToCenter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__alignToCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alignToCenter"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView/HMUI.TableType _tableType
HMUI::TableView::TableType HMUI::TableView::_get__tableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__tableType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableType"))->offset;
  return *reinterpret_cast<HMUI::TableView::TableType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.TableView/HMUI.TableType _tableType
void HMUI::TableView::_set__tableType(HMUI::TableView::TableType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__tableType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableType"))->offset;
  *reinterpret_cast<HMUI::TableView::TableType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableViewSelectionType _selectionType
HMUI::TableViewSelectionType HMUI::TableView::_get__selectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__selectionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionType"))->offset;
  return *reinterpret_cast<HMUI::TableViewSelectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.TableViewSelectionType _selectionType
void HMUI::TableView::_set__selectionType(HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__selectionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionType"))->offset;
  *reinterpret_cast<HMUI::TableViewSelectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canSelectSelectedCell
bool HMUI::TableView::_get__canSelectSelectedCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__canSelectSelectedCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canSelectSelectedCell"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _canSelectSelectedCell
void HMUI::TableView::_set__canSelectSelectedCell(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__canSelectSelectedCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canSelectSelectedCell"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView/HMUI.CellsGroup[] _preallocatedCells
::Array<HMUI::TableView::CellsGroup*>* HMUI::TableView::_get__preallocatedCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__preallocatedCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preallocatedCells"))->offset;
  return *reinterpret_cast<::Array<HMUI::TableView::CellsGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.TableView/HMUI.CellsGroup[] _preallocatedCells
void HMUI::TableView::_set__preallocatedCells(::Array<HMUI::TableView::CellsGroup*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__preallocatedCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preallocatedCells"))->offset;
  *reinterpret_cast<::Array<HMUI::TableView::CellsGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<HMUI.TableView,System.Int32> didSelectCellWithIdxEvent
System::Action_2<HMUI::TableView*, int>* HMUI::TableView::_get_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<System::Action_2<HMUI::TableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<HMUI.TableView,System.Int32> didSelectCellWithIdxEvent
void HMUI::TableView::_set_didSelectCellWithIdxEvent(System::Action_2<HMUI::TableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  *reinterpret_cast<System::Action_2<HMUI::TableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.TableView> didReloadDataEvent
System::Action_1<HMUI::TableView*>* HMUI::TableView::_get_didReloadDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get_didReloadDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didReloadDataEvent"))->offset;
  return *reinterpret_cast<System::Action_1<HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<HMUI.TableView> didReloadDataEvent
void HMUI::TableView::_set_didReloadDataEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set_didReloadDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didReloadDataEvent"))->offset;
  *reinterpret_cast<System::Action_1<HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.TableView> didInsertCellsEvent
System::Action_1<HMUI::TableView*>* HMUI::TableView::_get_didInsertCellsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get_didInsertCellsEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInsertCellsEvent"))->offset;
  return *reinterpret_cast<System::Action_1<HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<HMUI.TableView> didInsertCellsEvent
void HMUI::TableView::_set_didInsertCellsEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set_didInsertCellsEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInsertCellsEvent"))->offset;
  *reinterpret_cast<System::Action_1<HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.TableView> didDeleteCellsEvent
System::Action_1<HMUI::TableView*>* HMUI::TableView::_get_didDeleteCellsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get_didDeleteCellsEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDeleteCellsEvent"))->offset;
  return *reinterpret_cast<System::Action_1<HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<HMUI.TableView> didDeleteCellsEvent
void HMUI::TableView::_set_didDeleteCellsEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set_didDeleteCellsEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDeleteCellsEvent"))->offset;
  *reinterpret_cast<System::Action_1<HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.TableView> didChangeRectSizeEvent
System::Action_1<HMUI::TableView*>* HMUI::TableView::_get_didChangeRectSizeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get_didChangeRectSizeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeRectSizeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<HMUI.TableView> didChangeRectSizeEvent
void HMUI::TableView::_set_didChangeRectSizeEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set_didChangeRectSizeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeRectSizeEvent"))->offset;
  *reinterpret_cast<System::Action_1<HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentTransform
UnityEngine::RectTransform* HMUI::TableView::_get__contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__contentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _contentTransform
void HMUI::TableView::_set__contentTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__contentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewportTransform
UnityEngine::RectTransform* HMUI::TableView::_get__viewportTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__viewportTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _viewportTransform
void HMUI::TableView::_set__viewportTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__viewportTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected HMUI.TableView/HMUI.IDataSource _dataSource
HMUI::TableView::IDataSource* HMUI::TableView::_get__dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  return *reinterpret_cast<HMUI::TableView::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected HMUI.TableView/HMUI.IDataSource _dataSource
void HMUI::TableView::_set__dataSource(HMUI::TableView::IDataSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  *reinterpret_cast<HMUI::TableView::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfCells
int HMUI::TableView::_get__numberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__numberOfCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfCells"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _numberOfCells
void HMUI::TableView::_set__numberOfCells(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__numberOfCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfCells"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellSize
float HMUI::TableView::_get__cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _cellSize
void HMUI::TableView::_set__cellSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellSize"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<HMUI.TableCell> _visibleCells
System::Collections::Generic::List_1<HMUI::TableCell*>* HMUI::TableView::_get__visibleCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__visibleCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visibleCells"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<HMUI::TableCell*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<HMUI.TableCell> _visibleCells
void HMUI::TableView::_set__visibleCells(System::Collections::Generic::List_1<HMUI::TableCell*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__visibleCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visibleCells"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<HMUI::TableCell*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<HMUI.TableCell>> _reusableCells
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<HMUI::TableCell*>*>* HMUI::TableView::_get__reusableCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__reusableCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reusableCells"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<HMUI::TableCell*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<HMUI.TableCell>> _reusableCells
void HMUI::TableView::_set__reusableCells(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<HMUI::TableCell*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__reusableCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reusableCells"))->offset;
  *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::Generic::List_1<HMUI::TableCell*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _selectedCellIdxs
System::Collections::Generic::HashSet_1<int>* HMUI::TableView::_get__selectedCellIdxs() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__selectedCellIdxs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedCellIdxs"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.HashSet`1<System.Int32> _selectedCellIdxs
void HMUI::TableView::_set__selectedCellIdxs(System::Collections::Generic::HashSet_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__selectedCellIdxs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedCellIdxs"))->offset;
  *reinterpret_cast<System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevMinIdx
int HMUI::TableView::_get__prevMinIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__prevMinIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMinIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevMinIdx
void HMUI::TableView::_set__prevMinIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__prevMinIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMinIdx"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevMaxIdx
int HMUI::TableView::_get__prevMaxIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__prevMaxIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMaxIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevMaxIdx
void HMUI::TableView::_set__prevMaxIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__prevMaxIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMaxIdx"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
bool HMUI::TableView::_get__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isInitialized
void HMUI::TableView::_set__isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _refreshCellsOnEnable
bool HMUI::TableView::_get__refreshCellsOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_get__refreshCellsOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshCellsOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _refreshCellsOnEnable
void HMUI::TableView::_set__refreshCellsOnEnable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::_set__refreshCellsOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshCellsOnEnable"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.TableView.get_selectionType
HMUI::TableViewSelectionType HMUI::TableView::get_selectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_selectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableViewSelectionType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.set_selectionType
void HMUI::TableView::set_selectionType(HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::set_selectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.get_canSelectSelectedCell
bool HMUI::TableView::get_canSelectSelectedCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_canSelectSelectedCell");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSelectSelectedCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_dataSource
HMUI::TableView::IDataSource* HMUI::TableView::get_dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_dataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableView::IDataSource*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_visibleCells
System::Collections::Generic::IEnumerable_1<HMUI::TableCell*>* HMUI::TableView::get_visibleCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_visibleCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_visibleCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<HMUI::TableCell*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_viewportTransform
UnityEngine::RectTransform* HMUI::TableView::get_viewportTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_viewportTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewportTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_contentTransform
UnityEngine::RectTransform* HMUI::TableView::get_contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_contentTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_numberOfCells
int HMUI::TableView::get_numberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_numberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_cellSize
float HMUI::TableView::get_cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_cellSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_tableType
HMUI::TableView::TableType HMUI::TableView::get_tableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_tableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableView::TableType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_scrollView
HMUI::ScrollView* HMUI::TableView::get_scrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::get_scrollView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ScrollView*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.add_didSelectCellWithIdxEvent
void HMUI::TableView::add_didSelectCellWithIdxEvent(System::Action_2<HMUI::TableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didSelectCellWithIdxEvent
void HMUI::TableView::remove_didSelectCellWithIdxEvent(System::Action_2<HMUI::TableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.add_didReloadDataEvent
void HMUI::TableView::add_didReloadDataEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::add_didReloadDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReloadDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didReloadDataEvent
void HMUI::TableView::remove_didReloadDataEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::remove_didReloadDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReloadDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.add_didInsertCellsEvent
void HMUI::TableView::add_didInsertCellsEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::add_didInsertCellsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInsertCellsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didInsertCellsEvent
void HMUI::TableView::remove_didInsertCellsEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::remove_didInsertCellsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInsertCellsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.add_didDeleteCellsEvent
void HMUI::TableView::add_didDeleteCellsEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::add_didDeleteCellsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDeleteCellsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didDeleteCellsEvent
void HMUI::TableView::remove_didDeleteCellsEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::remove_didDeleteCellsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDeleteCellsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.add_didChangeRectSizeEvent
void HMUI::TableView::add_didChangeRectSizeEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::add_didChangeRectSizeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeRectSizeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didChangeRectSizeEvent
void HMUI::TableView::remove_didChangeRectSizeEvent(System::Action_1<HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::remove_didChangeRectSizeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeRectSizeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.SetDataSource
void HMUI::TableView::SetDataSource(HMUI::TableView::IDataSource* newDataSource, bool reloadData) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::SetDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDataSource), ::il2cpp_utils::ExtractType(reloadData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newDataSource, reloadData);
}
// Autogenerated method: HMUI.TableView.Awake
void HMUI::TableView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.OnDestroy
void HMUI::TableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.OnEnable
void HMUI::TableView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.LazyInit
void HMUI::TableView::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.Hide
void HMUI::TableView::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.Show
void HMUI::TableView::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.RefreshContentSize
void HMUI::TableView::RefreshContentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::RefreshContentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.RefreshCellsContent
void HMUI::TableView::RefreshCellsContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::RefreshCellsContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCellsContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.GetVisibleCellsIdRange
System::Tuple_2<int, int>* HMUI::TableView::GetVisibleCellsIdRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::GetVisibleCellsIdRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVisibleCellsIdRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Tuple_2<int, int>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.RefreshCells
void HMUI::TableView::RefreshCells(bool forcedVisualsRefresh, bool forcedContentRefresh) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::RefreshCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forcedVisualsRefresh), ::il2cpp_utils::ExtractType(forcedContentRefresh)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, forcedVisualsRefresh, forcedContentRefresh);
}
// Autogenerated method: HMUI.TableView.LayoutCellForIdx
void HMUI::TableView::LayoutCellForIdx(HMUI::TableCell* cell, int idx, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::LayoutCellForIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutCellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cell), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(offset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cell, idx, offset);
}
// Autogenerated method: HMUI.TableView.AddCellToReusableCells
void HMUI::TableView::AddCellToReusableCells(HMUI::TableCell* cell) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::AddCellToReusableCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCellToReusableCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cell)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cell);
}
// Autogenerated method: HMUI.TableView.HandleScrollRectValueChanged
void HMUI::TableView::HandleScrollRectValueChanged(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::HandleScrollRectValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScrollRectValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, f);
}
// Autogenerated method: HMUI.TableView.HandleCellSelectionDidChange
void HMUI::TableView::HandleCellSelectionDidChange(HMUI::SelectableCell* selectableCell, HMUI::SelectableCell::TransitionType transitionType, ::Il2CppObject* changeOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::HandleCellSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellSelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(changeOwner)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, selectableCell, transitionType, changeOwner);
}
// Autogenerated method: HMUI.TableView.DidSelectCellWithIdx
void HMUI::TableView::DidSelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::DidSelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: HMUI.TableView.ReloadDataKeepingPosition
void HMUI::TableView::ReloadDataKeepingPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ReloadDataKeepingPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadDataKeepingPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.ReloadData
void HMUI::TableView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ReloadData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.InsertCells
void HMUI::TableView::InsertCells(int idx, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::InsertCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx, count);
}
// Autogenerated method: HMUI.TableView.DeleteCells
void HMUI::TableView::DeleteCells(int idx, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::DeleteCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx, count);
}
// Autogenerated method: HMUI.TableView.DequeueReusableCellForIdentifier
HMUI::TableCell* HMUI::TableView::DequeueReusableCellForIdentifier(::Il2CppString* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::DequeueReusableCellForIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DequeueReusableCellForIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(___instance_arg, ___internal__method, identifier);
}
// Autogenerated method: HMUI.TableView.SelectCellWithIdx
void HMUI::TableView::SelectCellWithIdx(int idx, bool callbackTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::SelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(callbackTable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx, callbackTable);
}
// Autogenerated method: HMUI.TableView.ClearSelection
void HMUI::TableView::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.ClearHighlights
void HMUI::TableView::ClearHighlights() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ClearHighlights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHighlights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView.ScrollToCellWithIdx
void HMUI::TableView::ScrollToCellWithIdx(int idx, HMUI::TableView::ScrollPositionType scrollPositionType, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollToCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(scrollPositionType), ::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx, scrollPositionType, animated);
}
// Autogenerated method: HMUI.TableView.ChangeRectSize
void HMUI::TableView::ChangeRectSize(UnityEngine::RectTransform::Axis axis, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ChangeRectSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeRectSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(size)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, axis, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableView/HMUI.TableType
#include "HMUI/TableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.TableType Vertical
HMUI::TableView::TableType HMUI::TableView::TableType::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::TableType::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::TableView::TableType>("HMUI", "TableView/TableType", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.TableType Vertical
void HMUI::TableView::TableType::_set_Vertical(HMUI::TableView::TableType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::TableType::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/TableType", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.TableType Horizontal
HMUI::TableView::TableType HMUI::TableView::TableType::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::TableType::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::TableView::TableType>("HMUI", "TableView/TableType", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.TableType Horizontal
void HMUI::TableView::TableType::_set_Horizontal(HMUI::TableView::TableType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::TableType::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/TableType", "Horizontal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::TableView::TableType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::TableType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::TableView::TableType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::TableType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableView/HMUI.ScrollPositionType
#include "HMUI/TableView_ScrollPositionType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.ScrollPositionType Beginning
HMUI::TableView::ScrollPositionType HMUI::TableView::ScrollPositionType::_get_Beginning() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollPositionType::_get_Beginning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::TableView::ScrollPositionType>("HMUI", "TableView/ScrollPositionType", "Beginning"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.ScrollPositionType Beginning
void HMUI::TableView::ScrollPositionType::_set_Beginning(HMUI::TableView::ScrollPositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollPositionType::_set_Beginning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/ScrollPositionType", "Beginning", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.ScrollPositionType Center
HMUI::TableView::ScrollPositionType HMUI::TableView::ScrollPositionType::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollPositionType::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::TableView::ScrollPositionType>("HMUI", "TableView/ScrollPositionType", "Center"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.ScrollPositionType Center
void HMUI::TableView::ScrollPositionType::_set_Center(HMUI::TableView::ScrollPositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollPositionType::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/ScrollPositionType", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.ScrollPositionType End
HMUI::TableView::ScrollPositionType HMUI::TableView::ScrollPositionType::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollPositionType::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::TableView::ScrollPositionType>("HMUI", "TableView/ScrollPositionType", "End"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.ScrollPositionType End
void HMUI::TableView::ScrollPositionType::_set_End(HMUI::TableView::ScrollPositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollPositionType::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/ScrollPositionType", "End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::TableView::ScrollPositionType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollPositionType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::TableView::ScrollPositionType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::ScrollPositionType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TableView/HMUI.CellsGroup
#include "HMUI/TableView_CellsGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _reuseIdentifier
::Il2CppString* HMUI::TableView::CellsGroup::_get__reuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::CellsGroup::_get__reuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reuseIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _reuseIdentifier
void HMUI::TableView::CellsGroup::_set__reuseIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::CellsGroup::_set__reuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reuseIdentifier"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<HMUI.TableCell> _cells
System::Collections::Generic::List_1<HMUI::TableCell*>* HMUI::TableView::CellsGroup::_get__cells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::CellsGroup::_get__cells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cells"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<HMUI::TableCell*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<HMUI.TableCell> _cells
void HMUI::TableView::CellsGroup::_set__cells(System::Collections::Generic::List_1<HMUI::TableCell*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::CellsGroup::_set__cells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cells"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<HMUI::TableCell*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.TableView/HMUI.CellsGroup.get_reuseIdentifier
::Il2CppString* HMUI::TableView::CellsGroup::get_reuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::CellsGroup::get_reuseIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reuseIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView/HMUI.CellsGroup.get_cells
System::Collections::Generic::List_1<HMUI::TableCell*>* HMUI::TableView::CellsGroup::get_cells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::CellsGroup::get_cells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<HMUI::TableCell*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableView/HMUI.IDataSource
#include "HMUI/TableView_IDataSource.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.TableView/HMUI.IDataSource.CellSize
float HMUI::TableView::IDataSource::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::IDataSource::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView/HMUI.IDataSource.NumberOfCells
int HMUI::TableView::IDataSource::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::IDataSource::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.TableView/HMUI.IDataSource.CellForIdx
HMUI::TableCell* HMUI::TableView::IDataSource::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TableView::IDataSource::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(___instance_arg, ___internal__method, tableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI* HMUI::TextPageScrollView::_get__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TextPageScrollView::_get__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _text
void HMUI::TextPageScrollView::_set__text(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TextPageScrollView::_set__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.TextPageScrollView.SetText
void HMUI::TextPageScrollView::SetText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::TextPageScrollView::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ToggleWithCallbacks
#include "HMUI/ToggleWithCallbacks.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.ToggleWithCallbacks/HMUI.SelectionState> stateDidChangeEvent
System::Action_1<HMUI::ToggleWithCallbacks::SelectionState>* HMUI::ToggleWithCallbacks::_get_stateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::_get_stateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<HMUI::ToggleWithCallbacks::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<HMUI.ToggleWithCallbacks/HMUI.SelectionState> stateDidChangeEvent
void HMUI::ToggleWithCallbacks::_set_stateDidChangeEvent(System::Action_1<HMUI::ToggleWithCallbacks::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::_set_stateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateDidChangeEvent"))->offset;
  *reinterpret_cast<System::Action_1<HMUI::ToggleWithCallbacks::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.ToggleWithCallbacks.get_selectionState
HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::get_selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::get_selectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ToggleWithCallbacks::SelectionState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.ToggleWithCallbacks.add_stateDidChangeEvent
void HMUI::ToggleWithCallbacks::add_stateDidChangeEvent(System::Action_1<HMUI::ToggleWithCallbacks::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::add_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ToggleWithCallbacks.remove_stateDidChangeEvent
void HMUI::ToggleWithCallbacks::remove_stateDidChangeEvent(System::Action_1<HMUI::ToggleWithCallbacks::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::remove_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.ToggleWithCallbacks.DoStateTransition
void HMUI::ToggleWithCallbacks::DoStateTransition(UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ToggleWithCallbacks/HMUI.SelectionState
#include "HMUI/ToggleWithCallbacks.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Normal
HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Normal
void HMUI::ToggleWithCallbacks::SelectionState::_set_Normal(HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Highlighted
HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Highlighted
void HMUI::ToggleWithCallbacks::SelectionState::_set_Highlighted(HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Pressed
HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Pressed
void HMUI::ToggleWithCallbacks::SelectionState::_set_Pressed(HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Selected
HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Selected
void HMUI::ToggleWithCallbacks::SelectionState::_set_Selected(HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Disabled
HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Disabled
void HMUI::ToggleWithCallbacks::SelectionState::_set_Disabled(HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int HMUI::ToggleWithCallbacks::SelectionState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void HMUI::ToggleWithCallbacks::SelectionState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::ToggleWithCallbacks::SelectionState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.VerticalScrollIndicator
#include "HMUI/VerticalScrollIndicator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _handle
UnityEngine::RectTransform* HMUI::VerticalScrollIndicator::_get__handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_get__handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handle"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _handle
void HMUI::VerticalScrollIndicator::_set__handle(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_set__handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handle"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalAnimationClip
UnityEngine::AnimationClip* HMUI::VerticalScrollIndicator::_get__normalAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_get__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _normalAnimationClip
void HMUI::VerticalScrollIndicator::_set__normalAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_set__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _disabledAnimationClip
UnityEngine::AnimationClip* HMUI::VerticalScrollIndicator::_get__disabledAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_get__disabledAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAnimationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationClip _disabledAnimationClip
void HMUI::VerticalScrollIndicator::_set__disabledAnimationClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_set__disabledAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAnimationClip"))->offset;
  *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _padding
float HMUI::VerticalScrollIndicator::_get__padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_get__padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _padding
void HMUI::VerticalScrollIndicator::_set__padding(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_set__padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_padding"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _progress
float HMUI::VerticalScrollIndicator::_get__progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_get__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _progress
void HMUI::VerticalScrollIndicator::_set__progress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_set__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _normalizedPageHeight
float HMUI::VerticalScrollIndicator::_get__normalizedPageHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_get__normalizedPageHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalizedPageHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _normalizedPageHeight
void HMUI::VerticalScrollIndicator::_set__normalizedPageHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::_set__normalizedPageHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalizedPageHeight"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HMUI.VerticalScrollIndicator.get_progress
float HMUI::VerticalScrollIndicator::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::get_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.set_progress
void HMUI::VerticalScrollIndicator::set_progress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::set_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.get_normalizedPageHeight
float HMUI::VerticalScrollIndicator::get_normalizedPageHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::get_normalizedPageHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalizedPageHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.set_normalizedPageHeight
void HMUI::VerticalScrollIndicator::set_normalizedPageHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::set_normalizedPageHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedPageHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.set_disabled
void HMUI::VerticalScrollIndicator::set_disabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::set_disabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.OnEnable
void HMUI::VerticalScrollIndicator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.RefreshHandle
void HMUI::VerticalScrollIndicator::RefreshHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("HMUI::VerticalScrollIndicator::RefreshHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Il2CppInspector.DLL.AddressAttribute
#include "Il2CppInspector/DLL/AddressAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String RVA
::Il2CppString* Il2CppInspector::DLL::AddressAttribute::_get_RVA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AddressAttribute::_get_RVA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RVA"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String RVA
void Il2CppInspector::DLL::AddressAttribute::_set_RVA(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AddressAttribute::_set_RVA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RVA"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::Il2CppString* Il2CppInspector::DLL::AddressAttribute::_get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AddressAttribute::_get_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Offset
void Il2CppInspector::DLL::AddressAttribute::_set_Offset(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AddressAttribute::_set_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String VA
::Il2CppString* Il2CppInspector::DLL::AddressAttribute::_get_VA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AddressAttribute::_get_VA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VA"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String VA
void Il2CppInspector::DLL::AddressAttribute::_set_VA(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AddressAttribute::_set_VA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VA"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String Slot
::Il2CppString* Il2CppInspector::DLL::AddressAttribute::_get_Slot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AddressAttribute::_get_Slot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Slot"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Slot
void Il2CppInspector::DLL::AddressAttribute::_set_Slot(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AddressAttribute::_set_Slot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Slot"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Il2CppInspector.DLL.FieldOffsetAttribute
#include "Il2CppInspector/DLL/FieldOffsetAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::Il2CppString* Il2CppInspector::DLL::FieldOffsetAttribute::_get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::FieldOffsetAttribute::_get_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Offset
void Il2CppInspector::DLL::FieldOffsetAttribute::_set_Offset(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::FieldOffsetAttribute::_set_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Il2CppInspector.DLL.StaticFieldOffsetAttribute
#include "Il2CppInspector/DLL/StaticFieldOffsetAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::Il2CppString* Il2CppInspector::DLL::StaticFieldOffsetAttribute::_get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::StaticFieldOffsetAttribute::_get_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Offset
void Il2CppInspector::DLL::StaticFieldOffsetAttribute::_set_Offset(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::StaticFieldOffsetAttribute::_set_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Il2CppInspector.DLL.AttributeAttribute
#include "Il2CppInspector/DLL/AttributeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
::Il2CppString* Il2CppInspector::DLL::AttributeAttribute::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AttributeAttribute::_get_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Name
void Il2CppInspector::DLL::AttributeAttribute::_set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AttributeAttribute::_set_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String RVA
::Il2CppString* Il2CppInspector::DLL::AttributeAttribute::_get_RVA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AttributeAttribute::_get_RVA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RVA"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String RVA
void Il2CppInspector::DLL::AttributeAttribute::_set_RVA(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AttributeAttribute::_set_RVA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RVA"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::Il2CppString* Il2CppInspector::DLL::AttributeAttribute::_get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AttributeAttribute::_get_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Offset
void Il2CppInspector::DLL::AttributeAttribute::_set_Offset(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::AttributeAttribute::_set_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Il2CppInspector.DLL.MetadataOffsetAttribute
#include "Il2CppInspector/DLL/MetadataOffsetAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::Il2CppString* Il2CppInspector::DLL::MetadataOffsetAttribute::_get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::MetadataOffsetAttribute::_get_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Offset
void Il2CppInspector::DLL::MetadataOffsetAttribute::_set_Offset(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::MetadataOffsetAttribute::_set_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Il2CppInspector.DLL.MetadataPreviewAttribute
#include "Il2CppInspector/DLL/MetadataPreviewAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Data
::Il2CppString* Il2CppInspector::DLL::MetadataPreviewAttribute::_get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::MetadataPreviewAttribute::_get_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Data
void Il2CppInspector::DLL::MetadataPreviewAttribute::_set_Data(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::MetadataPreviewAttribute::_set_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Il2CppInspector.DLL.TokenAttribute
#include "Il2CppInspector/DLL/TokenAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Token
::Il2CppString* Il2CppInspector::DLL::TokenAttribute::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::TokenAttribute::_get_Token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Token"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String Token
void Il2CppInspector::DLL::TokenAttribute::_set_Token(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Il2CppInspector::DLL::TokenAttribute::_set_Token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Token"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.BaseChannel
#include "LiteNetLib/BaseChannel.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LiteNetLib.BaseChannel Next
LiteNetLib::BaseChannel* LiteNetLib::BaseChannel::_get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::_get_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<LiteNetLib::BaseChannel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public LiteNetLib.BaseChannel Next
void LiteNetLib::BaseChannel::_set_Next(LiteNetLib::BaseChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::_set_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  *reinterpret_cast<LiteNetLib::BaseChannel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected readonly LiteNetLib.NetPeer Peer
LiteNetLib::NetPeer* LiteNetLib::BaseChannel::_get_Peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::_get_Peer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Peer"))->offset;
  return *reinterpret_cast<LiteNetLib::NetPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected readonly LiteNetLib.NetPeer Peer
void LiteNetLib::BaseChannel::_set_Peer(LiteNetLib::NetPeer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::_set_Peer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Peer"))->offset;
  *reinterpret_cast<LiteNetLib::NetPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Collections.Generic.Queue`1<LiteNetLib.NetPacket> OutgoingQueue
System::Collections::Generic::Queue_1<LiteNetLib::NetPacket*>* LiteNetLib::BaseChannel::_get_OutgoingQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::_get_OutgoingQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutgoingQueue"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Queue_1<LiteNetLib::NetPacket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected readonly System.Collections.Generic.Queue`1<LiteNetLib.NetPacket> OutgoingQueue
void LiteNetLib::BaseChannel::_set_OutgoingQueue(System::Collections::Generic::Queue_1<LiteNetLib::NetPacket*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::_set_OutgoingQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutgoingQueue"))->offset;
  *reinterpret_cast<System::Collections::Generic::Queue_1<LiteNetLib::NetPacket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LiteNetLib.BaseChannel.get_PacketsInQueue
int LiteNetLib::BaseChannel::get_PacketsInQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::get_PacketsInQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PacketsInQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.BaseChannel.AddToQueue
void LiteNetLib::BaseChannel::AddToQueue(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::AddToQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet);
}
// Autogenerated method: LiteNetLib.BaseChannel.SendNextPackets
void LiteNetLib::BaseChannel::SendNextPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::SendNextPackets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNextPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.BaseChannel.ProcessPacket
bool LiteNetLib::BaseChannel::ProcessPacket(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::BaseChannel::ProcessPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.ConnectionRequestResult
#include "LiteNetLib/ConnectionRequestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLib.ConnectionRequestResult None
LiteNetLib::ConnectionRequestResult LiteNetLib::ConnectionRequestResult::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::ConnectionRequestResult>("LiteNetLib", "ConnectionRequestResult", "None"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.ConnectionRequestResult None
void LiteNetLib::ConnectionRequestResult::_set_None(LiteNetLib::ConnectionRequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "ConnectionRequestResult", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.ConnectionRequestResult Accept
LiteNetLib::ConnectionRequestResult LiteNetLib::ConnectionRequestResult::_get_Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_get_Accept");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::ConnectionRequestResult>("LiteNetLib", "ConnectionRequestResult", "Accept"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.ConnectionRequestResult Accept
void LiteNetLib::ConnectionRequestResult::_set_Accept(LiteNetLib::ConnectionRequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_set_Accept");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "ConnectionRequestResult", "Accept", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.ConnectionRequestResult Reject
LiteNetLib::ConnectionRequestResult LiteNetLib::ConnectionRequestResult::_get_Reject() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_get_Reject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::ConnectionRequestResult>("LiteNetLib", "ConnectionRequestResult", "Reject"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.ConnectionRequestResult Reject
void LiteNetLib::ConnectionRequestResult::_set_Reject(LiteNetLib::ConnectionRequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_set_Reject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "ConnectionRequestResult", "Reject", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.ConnectionRequestResult RejectForce
LiteNetLib::ConnectionRequestResult LiteNetLib::ConnectionRequestResult::_get_RejectForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_get_RejectForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::ConnectionRequestResult>("LiteNetLib", "ConnectionRequestResult", "RejectForce"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.ConnectionRequestResult RejectForce
void LiteNetLib::ConnectionRequestResult::_set_RejectForce(LiteNetLib::ConnectionRequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_set_RejectForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "ConnectionRequestResult", "RejectForce", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int LiteNetLib::ConnectionRequestResult::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void LiteNetLib::ConnectionRequestResult::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequestResult::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NetConnectRequestPacket
#include "LiteNetLib/NetConnectRequestPacket.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.NetManager _listener
LiteNetLib::NetManager* LiteNetLib::ConnectionRequest::_get__listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_get__listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listener"))->offset;
  return *reinterpret_cast<LiteNetLib::NetManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly LiteNetLib.NetManager _listener
void LiteNetLib::ConnectionRequest::_set__listener(LiteNetLib::NetManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_set__listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listener"))->offset;
  *reinterpret_cast<LiteNetLib::NetManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _used
int LiteNetLib::ConnectionRequest::_get__used() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_get__used");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_used"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _used
void LiteNetLib::ConnectionRequest::_set__used(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_set__used");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_used"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly LiteNetLib.Utils.NetDataReader Data
LiteNetLib::Utils::NetDataReader* LiteNetLib::ConnectionRequest::_get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_get_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly LiteNetLib.Utils.NetDataReader Data
void LiteNetLib::ConnectionRequest::_set_Data(LiteNetLib::Utils::NetDataReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_set_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  *reinterpret_cast<LiteNetLib::Utils::NetDataReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.ConnectionRequestResult <Result>k__BackingField
LiteNetLib::ConnectionRequestResult LiteNetLib::ConnectionRequest::_get_$Result$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_get_$Result$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Result>k__BackingField"))->offset;
  return *reinterpret_cast<LiteNetLib::ConnectionRequestResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.ConnectionRequestResult <Result>k__BackingField
void LiteNetLib::ConnectionRequest::_set_$Result$k__BackingField(LiteNetLib::ConnectionRequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_set_$Result$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Result>k__BackingField"))->offset;
  *reinterpret_cast<LiteNetLib::ConnectionRequestResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: System.Int64 ConnectionTime
int64_t LiteNetLib::ConnectionRequest::_get_ConnectionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_get_ConnectionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: System.Int64 ConnectionTime
void LiteNetLib::ConnectionRequest::_set_ConnectionTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_set_ConnectionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionTime"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: System.Byte ConnectionNumber
uint8_t LiteNetLib::ConnectionRequest::_get_ConnectionNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_get_ConnectionNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionNumber"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: System.Byte ConnectionNumber
void LiteNetLib::ConnectionRequest::_set_ConnectionNumber(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_set_ConnectionNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionNumber"))->offset;
  *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.IPEndPoint RemoteEndPoint
System::Net::IPEndPoint* LiteNetLib::ConnectionRequest::_get_RemoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_get_RemoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Net.IPEndPoint RemoteEndPoint
void LiteNetLib::ConnectionRequest::_set_RemoteEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::_set_RemoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LiteNetLib.ConnectionRequest.get_Result
LiteNetLib::ConnectionRequestResult LiteNetLib::ConnectionRequest::get_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::get_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::ConnectionRequestResult, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.set_Result
void LiteNetLib::ConnectionRequest::set_Result(LiteNetLib::ConnectionRequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::set_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.TryActivate
bool LiteNetLib::ConnectionRequest::TryActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::TryActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.UpdateRequest
void LiteNetLib::ConnectionRequest::UpdateRequest(LiteNetLib::NetConnectRequestPacket* connRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::UpdateRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connRequest)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connRequest);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.AcceptIfKey
LiteNetLib::NetPeer* LiteNetLib::ConnectionRequest::AcceptIfKey(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::AcceptIfKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptIfKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::NetPeer*, false>(___instance_arg, ___internal__method, key);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.Accept
LiteNetLib::NetPeer* LiteNetLib::ConnectionRequest::Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::NetPeer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.Reject
void LiteNetLib::ConnectionRequest::Reject(::Array<uint8_t>* rejectData, int start, int length, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::Reject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rejectData), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(force)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rejectData, start, length, force);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.Reject
void LiteNetLib::ConnectionRequest::Reject(::Array<uint8_t>* rejectData, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::Reject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rejectData), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rejectData, start, length);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.RejectForce
void LiteNetLib::ConnectionRequest::RejectForce(::Array<uint8_t>* rejectData, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::RejectForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RejectForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rejectData), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rejectData, start, length);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.RejectForce
void LiteNetLib::ConnectionRequest::RejectForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::RejectForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RejectForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.RejectForce
void LiteNetLib::ConnectionRequest::RejectForce(::Array<uint8_t>* rejectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::RejectForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RejectForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rejectData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rejectData);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.RejectForce
void LiteNetLib::ConnectionRequest::RejectForce(LiteNetLib::Utils::NetDataWriter* rejectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::RejectForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RejectForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rejectData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rejectData);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.Reject
void LiteNetLib::ConnectionRequest::Reject() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::Reject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.Reject
void LiteNetLib::ConnectionRequest::Reject(::Array<uint8_t>* rejectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::Reject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rejectData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rejectData);
}
// Autogenerated method: LiteNetLib.ConnectionRequest.Reject
void LiteNetLib::ConnectionRequest::Reject(LiteNetLib::Utils::NetDataWriter* rejectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::ConnectionRequest::Reject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rejectData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rejectData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLib.UnconnectedMessageType BasicMessage
LiteNetLib::UnconnectedMessageType LiteNetLib::UnconnectedMessageType::_get_BasicMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::UnconnectedMessageType::_get_BasicMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::UnconnectedMessageType>("LiteNetLib", "UnconnectedMessageType", "BasicMessage"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.UnconnectedMessageType BasicMessage
void LiteNetLib::UnconnectedMessageType::_set_BasicMessage(LiteNetLib::UnconnectedMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::UnconnectedMessageType::_set_BasicMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "UnconnectedMessageType", "BasicMessage", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.UnconnectedMessageType Broadcast
LiteNetLib::UnconnectedMessageType LiteNetLib::UnconnectedMessageType::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::UnconnectedMessageType::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::UnconnectedMessageType>("LiteNetLib", "UnconnectedMessageType", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.UnconnectedMessageType Broadcast
void LiteNetLib::UnconnectedMessageType::_set_Broadcast(LiteNetLib::UnconnectedMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::UnconnectedMessageType::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "UnconnectedMessageType", "Broadcast", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int LiteNetLib::UnconnectedMessageType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::UnconnectedMessageType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void LiteNetLib::UnconnectedMessageType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::UnconnectedMessageType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.DisconnectReason
#include "LiteNetLib/DisconnectReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason ConnectionFailed
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason ConnectionFailed
void LiteNetLib::DisconnectReason::_set_ConnectionFailed(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "ConnectionFailed", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason Timeout
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason Timeout
void LiteNetLib::DisconnectReason::_set_Timeout(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason HostUnreachable
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_HostUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_HostUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "HostUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason HostUnreachable
void LiteNetLib::DisconnectReason::_set_HostUnreachable(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_HostUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "HostUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason NetworkUnreachable
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_NetworkUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_NetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "NetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason NetworkUnreachable
void LiteNetLib::DisconnectReason::_set_NetworkUnreachable(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_NetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "NetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason RemoteConnectionClose
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_RemoteConnectionClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_RemoteConnectionClose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "RemoteConnectionClose"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason RemoteConnectionClose
void LiteNetLib::DisconnectReason::_set_RemoteConnectionClose(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_RemoteConnectionClose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "RemoteConnectionClose", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason DisconnectPeerCalled
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_DisconnectPeerCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_DisconnectPeerCalled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "DisconnectPeerCalled"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason DisconnectPeerCalled
void LiteNetLib::DisconnectReason::_set_DisconnectPeerCalled(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_DisconnectPeerCalled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "DisconnectPeerCalled", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason ConnectionRejected
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_ConnectionRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_ConnectionRejected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "ConnectionRejected"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason ConnectionRejected
void LiteNetLib::DisconnectReason::_set_ConnectionRejected(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_ConnectionRejected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "ConnectionRejected", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason InvalidProtocol
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_InvalidProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_InvalidProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "InvalidProtocol"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason InvalidProtocol
void LiteNetLib::DisconnectReason::_set_InvalidProtocol(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_InvalidProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "InvalidProtocol", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason UnknownHost
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_UnknownHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_UnknownHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "UnknownHost"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason UnknownHost
void LiteNetLib::DisconnectReason::_set_UnknownHost(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_UnknownHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "UnknownHost", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason Reconnect
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_Reconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_Reconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "Reconnect"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason Reconnect
void LiteNetLib::DisconnectReason::_set_Reconnect(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_Reconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "Reconnect", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.DisconnectReason PeerToPeerConnection
LiteNetLib::DisconnectReason LiteNetLib::DisconnectReason::_get_PeerToPeerConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_PeerToPeerConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::DisconnectReason>("LiteNetLib", "DisconnectReason", "PeerToPeerConnection"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.DisconnectReason PeerToPeerConnection
void LiteNetLib::DisconnectReason::_set_PeerToPeerConnection(LiteNetLib::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_PeerToPeerConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "DisconnectReason", "PeerToPeerConnection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int LiteNetLib::DisconnectReason::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void LiteNetLib::DisconnectReason::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::DisconnectReason::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.INetEventListener
#include "LiteNetLib/INetEventListener.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.INetEventListener.OnPeerConnected
void LiteNetLib::INetEventListener::OnPeerConnected(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::INetEventListener::OnPeerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPeerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer);
}
// Autogenerated method: LiteNetLib.INetEventListener.OnPeerDisconnected
void LiteNetLib::INetEventListener::OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::INetEventListener::OnPeerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LiteNetLib.INetEventListener.OnNetworkError
void LiteNetLib::INetEventListener::OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketError) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::INetEventListener::OnNetworkError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketError)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, socketError);
}
// Autogenerated method: LiteNetLib.INetEventListener.OnNetworkReceive
void LiteNetLib::INetEventListener::OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::INetEventListener::OnNetworkReceive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNetworkReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void LiteNetLib::INetEventListener::OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::INetEventListener::OnNetworkReceiveUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void LiteNetLib::INetEventListener::OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::INetEventListener::OnNetworkLatencyUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latency)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, latency);
}
// Autogenerated method: LiteNetLib.INetEventListener.OnConnectionRequest
void LiteNetLib::INetEventListener::OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::INetEventListener::OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.IDeliveryEventListener
#include "LiteNetLib/IDeliveryEventListener.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.IDeliveryEventListener.OnMessageDelivered
void LiteNetLib::IDeliveryEventListener::OnMessageDelivered(LiteNetLib::NetPeer* peer, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::IDeliveryEventListener::OnMessageDelivered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMessageDelivered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(userData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, userData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener
#include "LiteNetLib/EventBasedNetListener.hpp"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerConnected
#include "LiteNetLib/EventBasedNetListener_OnPeerConnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerDisconnected
#include "LiteNetLib/EventBasedNetListener_OnPeerDisconnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkError
#include "LiteNetLib/EventBasedNetListener_OnNetworkError.hpp"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceive
#include "LiteNetLib/EventBasedNetListener_OnNetworkReceive.hpp"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceiveUnconnected
#include "LiteNetLib/EventBasedNetListener_OnNetworkReceiveUnconnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkLatencyUpdate
#include "LiteNetLib/EventBasedNetListener_OnNetworkLatencyUpdate.hpp"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnConnectionRequest
#include "LiteNetLib/EventBasedNetListener_OnConnectionRequest.hpp"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnDeliveryEvent
#include "LiteNetLib/EventBasedNetListener_OnDeliveryEvent.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerConnected PeerConnectedEvent
LiteNetLib::EventBasedNetListener::OnPeerConnected* LiteNetLib::EventBasedNetListener::_get_PeerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_get_PeerConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PeerConnectedEvent"))->offset;
  return *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnPeerConnected**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerConnected PeerConnectedEvent
void LiteNetLib::EventBasedNetListener::_set_PeerConnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerConnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_set_PeerConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PeerConnectedEvent"))->offset;
  *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnPeerConnected**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerDisconnected PeerDisconnectedEvent
LiteNetLib::EventBasedNetListener::OnPeerDisconnected* LiteNetLib::EventBasedNetListener::_get_PeerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_get_PeerDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PeerDisconnectedEvent"))->offset;
  return *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnPeerDisconnected**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerDisconnected PeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::_set_PeerDisconnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerDisconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_set_PeerDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PeerDisconnectedEvent"))->offset;
  *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnPeerDisconnected**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkError NetworkErrorEvent
LiteNetLib::EventBasedNetListener::OnNetworkError* LiteNetLib::EventBasedNetListener::_get_NetworkErrorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_get_NetworkErrorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkErrorEvent"))->offset;
  return *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnNetworkError**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkError NetworkErrorEvent
void LiteNetLib::EventBasedNetListener::_set_NetworkErrorEvent(LiteNetLib::EventBasedNetListener::OnNetworkError* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_set_NetworkErrorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkErrorEvent"))->offset;
  *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnNetworkError**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceive NetworkReceiveEvent
LiteNetLib::EventBasedNetListener::OnNetworkReceive* LiteNetLib::EventBasedNetListener::_get_NetworkReceiveEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_get_NetworkReceiveEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkReceiveEvent"))->offset;
  return *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnNetworkReceive**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceive NetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::_set_NetworkReceiveEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceive* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_set_NetworkReceiveEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkReceiveEvent"))->offset;
  *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnNetworkReceive**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceiveUnconnected NetworkReceiveUnconnectedEvent
LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected* LiteNetLib::EventBasedNetListener::_get_NetworkReceiveUnconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_get_NetworkReceiveUnconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkReceiveUnconnectedEvent"))->offset;
  return *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceiveUnconnected NetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::_set_NetworkReceiveUnconnectedEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_set_NetworkReceiveUnconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkReceiveUnconnectedEvent"))->offset;
  *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkLatencyUpdate NetworkLatencyUpdateEvent
LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate* LiteNetLib::EventBasedNetListener::_get_NetworkLatencyUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_get_NetworkLatencyUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkLatencyUpdateEvent"))->offset;
  return *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkLatencyUpdate NetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::_set_NetworkLatencyUpdateEvent(LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_set_NetworkLatencyUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkLatencyUpdateEvent"))->offset;
  *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnConnectionRequest ConnectionRequestEvent
LiteNetLib::EventBasedNetListener::OnConnectionRequest* LiteNetLib::EventBasedNetListener::_get_ConnectionRequestEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_get_ConnectionRequestEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionRequestEvent"))->offset;
  return *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnConnectionRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnConnectionRequest ConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::_set_ConnectionRequestEvent(LiteNetLib::EventBasedNetListener::OnConnectionRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_set_ConnectionRequestEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionRequestEvent"))->offset;
  *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnConnectionRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnDeliveryEvent DeliveryEvent
LiteNetLib::EventBasedNetListener::OnDeliveryEvent* LiteNetLib::EventBasedNetListener::_get_DeliveryEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_get_DeliveryEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeliveryEvent"))->offset;
  return *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnDeliveryEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.EventBasedNetListener/LiteNetLib.OnDeliveryEvent DeliveryEvent
void LiteNetLib::EventBasedNetListener::_set_DeliveryEvent(LiteNetLib::EventBasedNetListener::OnDeliveryEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::_set_DeliveryEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeliveryEvent"))->offset;
  *reinterpret_cast<LiteNetLib::EventBasedNetListener::OnDeliveryEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_PeerConnectedEvent
void LiteNetLib::EventBasedNetListener::add_PeerConnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerConnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::add_PeerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PeerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_PeerConnectedEvent
void LiteNetLib::EventBasedNetListener::remove_PeerConnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerConnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::remove_PeerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PeerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_PeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::add_PeerDisconnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerDisconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::add_PeerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PeerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_PeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::remove_PeerDisconnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerDisconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::remove_PeerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PeerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkErrorEvent
void LiteNetLib::EventBasedNetListener::add_NetworkErrorEvent(LiteNetLib::EventBasedNetListener::OnNetworkError* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::add_NetworkErrorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_NetworkErrorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkErrorEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkErrorEvent(LiteNetLib::EventBasedNetListener::OnNetworkError* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::remove_NetworkErrorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_NetworkErrorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::add_NetworkReceiveEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceive* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::add_NetworkReceiveEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_NetworkReceiveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkReceiveEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceive* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::remove_NetworkReceiveEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_NetworkReceiveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::add_NetworkReceiveUnconnectedEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::add_NetworkReceiveUnconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_NetworkReceiveUnconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkReceiveUnconnectedEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::remove_NetworkReceiveUnconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_NetworkReceiveUnconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::add_NetworkLatencyUpdateEvent(LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::add_NetworkLatencyUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_NetworkLatencyUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkLatencyUpdateEvent(LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::remove_NetworkLatencyUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_NetworkLatencyUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_ConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::add_ConnectionRequestEvent(LiteNetLib::EventBasedNetListener::OnConnectionRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::add_ConnectionRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ConnectionRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_ConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::remove_ConnectionRequestEvent(LiteNetLib::EventBasedNetListener::OnConnectionRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::remove_ConnectionRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ConnectionRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_DeliveryEvent
void LiteNetLib::EventBasedNetListener::add_DeliveryEvent(LiteNetLib::EventBasedNetListener::OnDeliveryEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::add_DeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_DeliveryEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_DeliveryEvent
void LiteNetLib::EventBasedNetListener::remove_DeliveryEvent(LiteNetLib::EventBasedNetListener::OnDeliveryEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::remove_DeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_DeliveryEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearPeerConnectedEvent
void LiteNetLib::EventBasedNetListener::ClearPeerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::ClearPeerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPeerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearPeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::ClearPeerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::ClearPeerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPeerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkErrorEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkErrorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::ClearNetworkErrorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearNetworkErrorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkReceiveEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::ClearNetworkReceiveEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearNetworkReceiveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkReceiveUnconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::ClearNetworkReceiveUnconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearNetworkReceiveUnconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkLatencyUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::ClearNetworkLatencyUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearNetworkLatencyUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::ClearConnectionRequestEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::ClearConnectionRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearConnectionRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearDeliveryEvent
void LiteNetLib::EventBasedNetListener::ClearDeliveryEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::ClearDeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDeliveryEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnPeerConnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnPeerConnected(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::LiteNetLib.INetEventListener.OnPeerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnPeerDisconnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::LiteNetLib.INetEventListener.OnPeerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkError
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketErrorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::LiteNetLib.INetEventListener.OnNetworkError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketErrorCode)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, socketErrorCode);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkReceive
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::LiteNetLib.INetEventListener.OnNetworkReceive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latency)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, latency);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnConnectionRequest
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::LiteNetLib.INetEventListener.OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.IDeliveryEventListener.OnMessageDelivered
void LiteNetLib::EventBasedNetListener::LiteNetLib_IDeliveryEventListener_OnMessageDelivered(LiteNetLib::NetPeer* peer, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::LiteNetLib.IDeliveryEventListener.OnMessageDelivered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.IDeliveryEventListener.OnMessageDelivered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(userData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, userData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerConnected
#include "LiteNetLib/EventBasedNetListener_OnPeerConnected.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerConnected.Invoke
void LiteNetLib::EventBasedNetListener::OnPeerConnected::Invoke(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnPeerConnected::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerConnected.BeginInvoke
System::IAsyncResult* LiteNetLib::EventBasedNetListener::OnPeerConnected::BeginInvoke(LiteNetLib::NetPeer* peer, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnPeerConnected::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, peer, callback, object);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerConnected.EndInvoke
void LiteNetLib::EventBasedNetListener::OnPeerConnected::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnPeerConnected::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerDisconnected
#include "LiteNetLib/EventBasedNetListener_OnPeerDisconnected.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerDisconnected.Invoke
void LiteNetLib::EventBasedNetListener::OnPeerDisconnected::Invoke(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnPeerDisconnected::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerDisconnected.BeginInvoke
System::IAsyncResult* LiteNetLib::EventBasedNetListener::OnPeerDisconnected::BeginInvoke(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnPeerDisconnected::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, peer, disconnectInfo, callback, object);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnPeerDisconnected.EndInvoke
void LiteNetLib::EventBasedNetListener::OnPeerDisconnected::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnPeerDisconnected::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkError
#include "LiteNetLib/EventBasedNetListener_OnNetworkError.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkError.Invoke
void LiteNetLib::EventBasedNetListener::OnNetworkError::Invoke(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketError) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkError::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketError)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, socketError);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkError.BeginInvoke
System::IAsyncResult* LiteNetLib::EventBasedNetListener::OnNetworkError::BeginInvoke(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkError::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, endPoint, socketError, callback, object);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkError.EndInvoke
void LiteNetLib::EventBasedNetListener::OnNetworkError::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkError::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceive
#include "LiteNetLib/EventBasedNetListener_OnNetworkReceive.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceive.Invoke
void LiteNetLib::EventBasedNetListener::OnNetworkReceive::Invoke(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkReceive::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceive.BeginInvoke
System::IAsyncResult* LiteNetLib::EventBasedNetListener::OnNetworkReceive::BeginInvoke(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkReceive::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, peer, reader, deliveryMethod, callback, object);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceive.EndInvoke
void LiteNetLib::EventBasedNetListener::OnNetworkReceive::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkReceive::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceiveUnconnected
#include "LiteNetLib/EventBasedNetListener_OnNetworkReceiveUnconnected.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceiveUnconnected.Invoke
void LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected::Invoke(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceiveUnconnected.BeginInvoke
System::IAsyncResult* LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected::BeginInvoke(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, remoteEndPoint, reader, messageType, callback, object);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkReceiveUnconnected.EndInvoke
void LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkLatencyUpdate
#include "LiteNetLib/EventBasedNetListener_OnNetworkLatencyUpdate.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkLatencyUpdate.Invoke
void LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate::Invoke(LiteNetLib::NetPeer* peer, int latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latency)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, latency);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkLatencyUpdate.BeginInvoke
System::IAsyncResult* LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate::BeginInvoke(LiteNetLib::NetPeer* peer, int latency, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latency), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, peer, latency, callback, object);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/LiteNetLib.OnNetworkLatencyUpdate.EndInvoke
void LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
