// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.PrimalityTests
#include "Mono/Math/Prime/PrimalityTests.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTests.GetSPPRounds
int Mono::Math::Prime::PrimalityTests::GetSPPRounds(Mono::Math::BigInteger* bi, Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math::Prime").WithContext("PrimalityTests").WithContext("GetSPPRounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", il2cpp_utils::NoArgClass<int>(), "GetSPPRounds", {}, ::il2cpp_utils::ExtractTypes(bi, confidence)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.RabinMillerTest
bool Mono::Math::Prime::PrimalityTests::RabinMillerTest(Mono::Math::BigInteger* n, Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math::Prime").WithContext("PrimalityTests").WithContext("RabinMillerTest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", il2cpp_utils::NoArgClass<bool>(), "RabinMillerTest", {}, ::il2cpp_utils::ExtractTypes(n, confidence)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, confidence);
}
