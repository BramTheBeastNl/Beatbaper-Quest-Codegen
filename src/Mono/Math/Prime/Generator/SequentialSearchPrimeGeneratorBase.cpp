// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase
#include "Mono/Math/Prime/Generator/SequentialSearchPrimeGeneratorBase.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateSearchBase
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase(int bits, ::Il2CppObject* context) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Math::BigInteger*>(this, "GenerateSearchBase", bits, context));
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits, ::Il2CppObject* context) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Math::BigInteger*>(this, "GenerateNewPrime", bits, context));
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.IsPrimeAcceptable
bool Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable(Mono::Math::BigInteger* bi, ::Il2CppObject* context) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsPrimeAcceptable", bi, context));
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Math::BigInteger*>(this, "GenerateNewPrime", bits));
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase..ctor
Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<SequentialSearchPrimeGeneratorBase*>());
}
