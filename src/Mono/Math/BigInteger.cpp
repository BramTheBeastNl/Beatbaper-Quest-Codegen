// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger_Sign.hpp"
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] smallPrimes
::Array<uint>* Mono::Math::BigInteger::_get_smallPrimes() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("_get_smallPrimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Mono.Math", "BigInteger", "smallPrimes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] smallPrimes
void Mono::Math::BigInteger::_set_smallPrimes(::Array<uint>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("_set_smallPrimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "smallPrimes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::_get_rng() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RandomNumberGenerator*>("Mono.Math", "BigInteger", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Math::BigInteger::_set_rng(System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "rng", value));
}
// Autogenerated method: Mono.Math.BigInteger..ctor
Mono::Math::BigInteger* Mono::Math::BigInteger::New_ctor(Mono::Math::BigInteger::Sign sign, uint len) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BigInteger*>(sign, len));
}
// Autogenerated method: Mono.Math.BigInteger..ctor
Mono::Math::BigInteger* Mono::Math::BigInteger::New_ctor(Mono::Math::BigInteger* bi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BigInteger*>(bi));
}
// Autogenerated method: Mono.Math.BigInteger..ctor
Mono::Math::BigInteger* Mono::Math::BigInteger::New_ctor(Mono::Math::BigInteger* bi, uint len) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BigInteger*>(bi, len));
}
// Autogenerated method: Mono.Math.BigInteger..ctor
Mono::Math::BigInteger* Mono::Math::BigInteger::New_ctor(::Array<uint8_t>* inData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BigInteger*>(inData));
}
// Autogenerated method: Mono.Math.BigInteger..ctor
Mono::Math::BigInteger* Mono::Math::BigInteger::New_ctor(uint ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BigInteger*>(ui));
}
// Autogenerated method: Mono.Math.BigInteger.get_Rng
System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("get_Rng");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<System::Security::Cryptography::RandomNumberGenerator*>(), "get_Rng", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits, System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "GenerateRandom", {}, ::il2cpp_utils::ExtractTypes(bits, rng)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits, rng);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "GenerateRandom", {}, ::il2cpp_utils::ExtractTypes(bits)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.BitCount
int Mono::Math::BigInteger::BitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("BitCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "BitCount", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger::TestBit(int bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("TestBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "TestBit", {}, ::il2cpp_utils::ExtractTypes(bitNum)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("SetBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetBit", {}, ::il2cpp_utils::ExtractTypes(bitNum)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("SetBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetBit", {}, ::il2cpp_utils::ExtractTypes(bitNum, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitNum, value);
}
// Autogenerated method: Mono.Math.BigInteger.LowestSetBit
int Mono::Math::BigInteger::LowestSetBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("LowestSetBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "LowestSetBit", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetBytes
::Array<uint8_t>* Mono::Math::BigInteger::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("GetBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "GetBytes", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString(uint radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToString", {}, ::il2cpp_utils::ExtractTypes(radix)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, radix);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString(uint radix, ::Il2CppString* characterSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToString", {}, ::il2cpp_utils::ExtractTypes(radix, characterSet)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, radix, characterSet);
}
// Autogenerated method: Mono.Math.BigInteger.Normalize
void Mono::Math::BigInteger::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("Normalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Normalize", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ModInverse
Mono::Math::BigInteger* Mono::Math::BigInteger::ModInverse(Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("ModInverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "ModInverse", {}, ::il2cpp_utils::ExtractTypes(modulus)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, modulus);
}
// Autogenerated method: Mono.Math.BigInteger.GeneratePseudoPrime
Mono::Math::BigInteger* Mono::Math::BigInteger::GeneratePseudoPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("GeneratePseudoPrime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "GeneratePseudoPrime", {}, ::il2cpp_utils::ExtractTypes(bits)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Incr2
void Mono::Math::BigInteger::Incr2() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("Incr2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Incr2", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger..cctor
void Mono::Math::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetHashCode
int Mono::Math::BigInteger::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetHashCode", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToString", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Equals
bool Mono::Math::BigInteger::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: Mono.Math.BigInteger.op_Subtraction
Mono::Math::BigInteger* Mono::Math::operator-(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "op_Subtraction", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
uint Mono::Math::operator%(Mono::Math::BigInteger& bi, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Modulus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<uint>(), "op_Modulus", {}, ::il2cpp_utils::ExtractTypes(&bi, ui)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
Mono::Math::BigInteger* Mono::Math::operator%(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Modulus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "op_Modulus", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Division
Mono::Math::BigInteger* Mono::Math::operator/(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Division");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "op_Division", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
Mono::Math::BigInteger* Mono::Math::operator*(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "op_Multiply", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LeftShift
Mono::Math::BigInteger* Mono::Math::operator<<(Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_LeftShift");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "op_LeftShift", {}, ::il2cpp_utils::ExtractTypes(&bi1, shiftVal)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_RightShift
Mono::Math::BigInteger* Mono::Math::operator>>(Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_RightShift");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "op_RightShift", {}, ::il2cpp_utils::ExtractTypes(&bi1, shiftVal)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<bool>(), "op_Equality", {}, ::il2cpp_utils::ExtractTypes(&bi1, ui)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<bool>(), "op_Inequality", {}, ::il2cpp_utils::ExtractTypes(&bi1, ui)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<bool>(), "op_Equality", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<bool>(), "op_Inequality", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThan
bool Mono::Math::operator >(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<bool>(), "op_GreaterThan", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThan
bool Mono::Math::operator <(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_LessThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<bool>(), "op_LessThan", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThanOrEqual
bool Mono::Math::operator >=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<bool>(), "op_GreaterThanOrEqual", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThanOrEqual
bool Mono::Math::operator <=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("BigInteger").WithContext("op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", il2cpp_utils::NoArgClass<bool>(), "op_LessThanOrEqual", {}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
