// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/ModulusRing..ctor
Mono::Math::BigInteger::ModulusRing* Mono::Math::BigInteger::ModulusRing::New_ctor(Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("ModulusRing").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BigInteger::ModulusRing*>(modulus));
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.BarrettReduction
void Mono::Math::BigInteger::ModulusRing::BarrettReduction(Mono::Math::BigInteger* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("ModulusRing").WithContext("BarrettReduction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "BarrettReduction", {}, ::il2cpp_utils::ExtractTypes(x)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Multiply
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Multiply(Mono::Math::BigInteger* a, Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("ModulusRing").WithContext("Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "Multiply", {}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Difference
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Difference(Mono::Math::BigInteger* a, Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("ModulusRing").WithContext("Difference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "Difference", {}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(Mono::Math::BigInteger* a, Mono::Math::BigInteger* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("ModulusRing").WithContext("Pow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "Pow", {}, ::il2cpp_utils::ExtractTypes(a, k)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, k);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(uint b, Mono::Math::BigInteger* exp) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("ModulusRing").WithContext("Pow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Mono::Math::BigInteger*>(), "Pow", {}, ::il2cpp_utils::ExtractTypes(b, exp)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, b, exp);
}
