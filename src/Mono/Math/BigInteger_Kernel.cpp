// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger_Sign.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/Kernel.Subtract
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::Subtract(Mono::Math::BigInteger* big, Mono::Math::BigInteger* small) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Math::BigInteger*>("Mono.Math", "BigInteger/Kernel", "Subtract", big, small));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MinusEq
void Mono::Math::BigInteger::Kernel::MinusEq(Mono::Math::BigInteger* big, Mono::Math::BigInteger* small) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Mono.Math", "BigInteger/Kernel", "MinusEq", big, small));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.PlusEq
void Mono::Math::BigInteger::Kernel::PlusEq(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Mono.Math", "BigInteger/Kernel", "PlusEq", bi1, bi2));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Compare
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Kernel::Compare(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Kernel", "Compare", bi1, bi2));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.SingleByteDivideInPlace
uint Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace(Mono::Math::BigInteger* n, uint d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Mono.Math", "BigInteger/Kernel", "SingleByteDivideInPlace", n, d));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordMod
uint Mono::Math::BigInteger::Kernel::DwordMod(Mono::Math::BigInteger* n, uint d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Mono.Math", "BigInteger/Kernel", "DwordMod", n, d));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordDivMod
::Array<Mono::Math::BigInteger*>* Mono::Math::BigInteger::Kernel::DwordDivMod(Mono::Math::BigInteger* n, uint d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<Mono::Math::BigInteger*>*>("Mono.Math", "BigInteger/Kernel", "DwordDivMod", n, d));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.multiByteDivide
::Array<Mono::Math::BigInteger*>* Mono::Math::BigInteger::Kernel::multiByteDivide(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<Mono::Math::BigInteger*>*>("Mono.Math", "BigInteger/Kernel", "multiByteDivide", bi1, bi2));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.LeftShift
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::LeftShift(Mono::Math::BigInteger* bi, int n) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Math::BigInteger*>("Mono.Math", "BigInteger/Kernel", "LeftShift", bi, n));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.RightShift
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::RightShift(Mono::Math::BigInteger* bi, int n) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Math::BigInteger*>("Mono.Math", "BigInteger/Kernel", "RightShift", bi, n));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Multiply
void Mono::Math::BigInteger::Kernel::Multiply(::Array<uint>* x, uint xOffset, uint xLen, ::Array<uint>* y, uint yOffset, uint yLen, ::Array<uint>* d, uint dOffset) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Mono.Math", "BigInteger/Kernel", "Multiply", x, xOffset, xLen, y, yOffset, yLen, d, dOffset));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MultiplyMod2p32pmod
void Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod(::Array<uint>* x, int xOffset, int xLen, ::Array<uint>* y, int yOffest, int yLen, ::Array<uint>* d, int dOffset, int mod) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Mono.Math", "BigInteger/Kernel", "MultiplyMod2p32pmod", x, xOffset, xLen, y, yOffest, yLen, d, dOffset, mod));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
uint Mono::Math::BigInteger::Kernel::modInverse(Mono::Math::BigInteger* bi, uint modulus) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Mono.Math", "BigInteger/Kernel", "modInverse", bi, modulus));
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::modInverse(Mono::Math::BigInteger* bi, Mono::Math::BigInteger* modulus) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Math::BigInteger*>("Mono.Math", "BigInteger/Kernel", "modInverse", bi, modulus));
}
