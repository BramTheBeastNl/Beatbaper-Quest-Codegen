// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Negative
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Negative() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("Sign").WithContext("_get_Negative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Negative"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Negative
void Mono::Math::BigInteger::Sign::_set_Negative(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("Sign").WithContext("_set_Negative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Negative", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Zero
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Zero() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("Sign").WithContext("_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Zero
void Mono::Math::BigInteger::Sign::_set_Zero(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("Sign").WithContext("_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Positive
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Positive() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("Sign").WithContext("_get_Positive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Positive"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Positive
void Mono::Math::BigInteger::Sign::_set_Positive(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Math").WithContext("Sign").WithContext("_set_Positive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Positive", value));
}
