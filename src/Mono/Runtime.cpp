// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Runtime
#include "Mono/Runtime.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Runtime.mono_runtime_install_handlers
void Mono::Runtime::mono_runtime_install_handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono").WithContext("Runtime").WithContext("mono_runtime_install_handlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "mono_runtime_install_handlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.InstallSignalHandlers
void Mono::Runtime::InstallSignalHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono").WithContext("Runtime").WithContext("InstallSignalHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "InstallSignalHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.mono_runtime_cleanup_handlers
void Mono::Runtime::mono_runtime_cleanup_handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono").WithContext("Runtime").WithContext("mono_runtime_cleanup_handlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "mono_runtime_cleanup_handlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.RemoveSignalHandlers
void Mono::Runtime::RemoveSignalHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono").WithContext("Runtime").WithContext("RemoveSignalHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "RemoveSignalHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.GetDisplayName
::Il2CppString* Mono::Runtime::GetDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono").WithContext("Runtime").WithContext("GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "GetDisplayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.GetNativeStackTrace
::Il2CppString* Mono::Runtime::GetNativeStackTrace(System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono").WithContext("Runtime").WithContext("GetNativeStackTrace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "GetNativeStackTrace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exception)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Mono.Runtime.SetGCAllowSynchronousMajor
bool Mono::Runtime::SetGCAllowSynchronousMajor(bool flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono").WithContext("Runtime").WithContext("SetGCAllowSynchronousMajor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "SetGCAllowSynchronousMajor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flag)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flag);
}
