// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.PKCS12
#include "Mono/Security/X509/PKCS12.hpp"
// Including type: Mono.Security.X509.PKCS12/DeriveBytes
#include "Mono/Security/X509/PKCS12_DeriveBytes.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Mono.Security.PKCS7/EncryptedData
#include "Mono/Security/PKCS7_EncryptedData.hpp"
// Including type: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_PrivateKeyInfo.hpp"
// Including type: Mono.Security.PKCS7/ContentInfo
#include "Mono/Security/PKCS7_ContentInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 password_max_length
int Mono::Security::X509::PKCS12::_get_password_max_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("_get_password_max_length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.X509", "PKCS12", "password_max_length"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 password_max_length
void Mono::Security::X509::PKCS12::_set_password_max_length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("_set_password_max_length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12", "password_max_length", value));
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decode
void Mono::Security::X509::PKCS12::Decode(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("Decode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.set_Password
void Mono::Security::X509::PKCS12::set_Password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("set_Password");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_IterationCount
int Mono::Security::X509::PKCS12::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.set_IterationCount
void Mono::Security::X509::PKCS12::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_Keys
System::Collections::ArrayList* Mono::Security::X509::PKCS12::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("get_Keys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_Certificates
Mono::Security::X509::X509CertificateCollection* Mono::Security::X509::PKCS12::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("get_Certificates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_RNG
System::Security::Cryptography::RandomNumberGenerator* Mono::Security::X509::PKCS12::get_RNG() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("get_RNG");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RNG", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Compare
bool Mono::Security::X509::PKCS12::Compare(::Array<uint8_t>* expected, ::Array<uint8_t>* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(expected, actual)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, expected, actual);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetSymmetricAlgorithm
System::Security::Cryptography::SymmetricAlgorithm* Mono::Security::X509::PKCS12::GetSymmetricAlgorithm(::Il2CppString* algorithmOid, ::Array<uint8_t>* salt, int iterationCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("GetSymmetricAlgorithm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSymmetricAlgorithm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(algorithmOid, salt, iterationCount)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::SymmetricAlgorithm*, false>(this, ___internal__method, algorithmOid, salt, iterationCount);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decrypt
::Array<uint8_t>* Mono::Security::X509::PKCS12::Decrypt(::Il2CppString* algorithmOid, ::Array<uint8_t>* salt, int iterationCount, ::Array<uint8_t>* encryptedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("Decrypt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(algorithmOid, salt, iterationCount, encryptedData)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, algorithmOid, salt, iterationCount, encryptedData);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decrypt
::Array<uint8_t>* Mono::Security::X509::PKCS12::Decrypt(Mono::Security::PKCS7::EncryptedData* ed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("Decrypt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ed)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, ed);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Encrypt
::Array<uint8_t>* Mono::Security::X509::PKCS12::Encrypt(::Il2CppString* algorithmOid, ::Array<uint8_t>* salt, int iterationCount, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("Encrypt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(algorithmOid, salt, iterationCount, data)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, algorithmOid, salt, iterationCount, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetExistingParameters
System::Security::Cryptography::DSAParameters Mono::Security::X509::PKCS12::GetExistingParameters(bool& found) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("GetExistingParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetExistingParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(found)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, found);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddPrivateKey
void Mono::Security::X509::PKCS12::AddPrivateKey(Mono::Security::Cryptography::PKCS8::PrivateKeyInfo* pki) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("AddPrivateKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddPrivateKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pki)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pki);
}
// Autogenerated method: Mono.Security.X509.PKCS12.ReadSafeBag
void Mono::Security::X509::PKCS12::ReadSafeBag(Mono::Security::ASN1* safeBag) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("ReadSafeBag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadSafeBag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeBag)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, safeBag);
}
// Autogenerated method: Mono.Security.X509.PKCS12.CertificateSafeBag
Mono::Security::ASN1* Mono::Security::X509::PKCS12::CertificateSafeBag(Mono::Security::X509::X509Certificate* x509, System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("CertificateSafeBag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CertificateSafeBag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x509, attributes)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method, x509, attributes);
}
// Autogenerated method: Mono.Security.X509.PKCS12.MAC
::Array<uint8_t>* Mono::Security::X509::PKCS12::MAC(::Array<uint8_t>* password, ::Array<uint8_t>* salt, int iterations, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("MAC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MAC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(password, salt, iterations, data)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, password, salt, iterations, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetBytes
::Array<uint8_t>* Mono::Security::X509::PKCS12::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("GetBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.EncryptedContentInfo
Mono::Security::PKCS7::ContentInfo* Mono::Security::X509::PKCS12::EncryptedContentInfo(Mono::Security::ASN1* safeBags, ::Il2CppString* algorithmOid) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("EncryptedContentInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EncryptedContentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeBags, algorithmOid)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::PKCS7::ContentInfo*, false>(this, ___internal__method, safeBags, algorithmOid);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddCertificate
void Mono::Security::X509::PKCS12::AddCertificate(Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("AddCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cert)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddCertificate
void Mono::Security::X509::PKCS12::AddCertificate(Mono::Security::X509::X509Certificate* cert, System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("AddCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cert, attributes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cert, attributes);
}
// Autogenerated method: Mono.Security.X509.PKCS12.RemoveCertificate
void Mono::Security::X509::PKCS12::RemoveCertificate(Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("RemoveCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cert)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.X509.PKCS12.RemoveCertificate
void Mono::Security::X509::PKCS12::RemoveCertificate(Mono::Security::X509::X509Certificate* cert, System::Collections::IDictionary* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("RemoveCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cert, attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cert, attrs);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_MaximumPasswordLength
int Mono::Security::X509::PKCS12::get_MaximumPasswordLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("get_MaximumPasswordLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12", "get_MaximumPasswordLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12..cctor
void Mono::Security::X509::PKCS12::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Finalize
void Mono::Security::X509::PKCS12::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Clone
::Il2CppObject* Mono::Security::X509::PKCS12::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("PKCS12").WithContext("Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* Mono::Security::X509::PKCS12::System_ICloneable_Clone() {
  return Mono::Security::X509::PKCS12::Clone();
}
