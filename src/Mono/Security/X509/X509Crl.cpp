// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Crl
#include "Mono/Security/X509/X509Crl.hpp"
// Including type: Mono.Security.X509.X509Crl/X509CrlEntry
#include "Mono/Security/X509/X509Crl_X509CrlEntry.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509Crl..ctor
Mono::Security::X509::X509Crl* Mono::Security::X509::X509Crl::New_ctor(::Array<uint8_t>* crl) {
  return THROW_UNLESS(il2cpp_utils::New<X509Crl*>(crl));
}
// Autogenerated method: Mono.Security.X509.X509Crl.Parse
void Mono::Security::X509::X509Crl::Parse(::Array<uint8_t>* crl) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Parse", crl));
}
// Autogenerated method: Mono.Security.X509.X509Crl.get_Extensions
Mono::Security::X509::X509ExtensionCollection* Mono::Security::X509::X509Crl::get_Extensions() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::X509::X509ExtensionCollection*>(this, "get_Extensions"));
}
// Autogenerated method: Mono.Security.X509.X509Crl.get_Hash
::Array<uint8_t>* Mono::Security::X509::X509Crl::get_Hash() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "get_Hash"));
}
// Autogenerated method: Mono.Security.X509.X509Crl.get_IssuerName
::Il2CppString* Mono::Security::X509::X509Crl::get_IssuerName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_IssuerName"));
}
// Autogenerated method: Mono.Security.X509.X509Crl.get_NextUpdate
System::DateTime Mono::Security::X509::X509Crl::get_NextUpdate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "get_NextUpdate"));
}
// Autogenerated method: Mono.Security.X509.X509Crl.Compare
bool Mono::Security::X509::X509Crl::Compare(::Array<uint8_t>* array1, ::Array<uint8_t>* array2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Compare", array1, array2));
}
// Autogenerated method: Mono.Security.X509.X509Crl.GetCrlEntry
Mono::Security::X509::X509Crl::X509CrlEntry* Mono::Security::X509::X509Crl::GetCrlEntry(Mono::Security::X509::X509Certificate* x509) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::X509::X509Crl::X509CrlEntry*>(this, "GetCrlEntry", x509));
}
// Autogenerated method: Mono.Security.X509.X509Crl.GetCrlEntry
Mono::Security::X509::X509Crl::X509CrlEntry* Mono::Security::X509::X509Crl::GetCrlEntry(::Array<uint8_t>* serialNumber) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::X509::X509Crl::X509CrlEntry*>(this, "GetCrlEntry", serialNumber));
}
// Autogenerated method: Mono.Security.X509.X509Crl.VerifySignature
bool Mono::Security::X509::X509Crl::VerifySignature(System::Security::Cryptography::DSA* dsa) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "VerifySignature", dsa));
}
// Autogenerated method: Mono.Security.X509.X509Crl.VerifySignature
bool Mono::Security::X509::X509Crl::VerifySignature(System::Security::Cryptography::RSA* rsa) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "VerifySignature", rsa));
}
// Autogenerated method: Mono.Security.X509.X509Crl.VerifySignature
bool Mono::Security::X509::X509Crl::VerifySignature(System::Security::Cryptography::AsymmetricAlgorithm* aa) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "VerifySignature", aa));
}
