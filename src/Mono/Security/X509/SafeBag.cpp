// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.SafeBag
#include "Mono/Security/X509/SafeBag.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.SafeBag..ctor
Mono::Security::X509::SafeBag* Mono::Security::X509::SafeBag::New_ctor(::Il2CppString* bagOID, Mono::Security::ASN1* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("SafeBag").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SafeBag*>(bagOID, asn1));
}
// Autogenerated method: Mono.Security.X509.SafeBag.get_BagOID
::Il2CppString* Mono::Security::X509::SafeBag::get_BagOID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("SafeBag").WithContext("get_BagOID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_BagOID", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.SafeBag.get_ASN1
Mono::Security::ASN1* Mono::Security::X509::SafeBag::get_ASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::X509").WithContext("SafeBag").WithContext("get_ASN1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Mono::Security::ASN1*>(), "get_ASN1", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method);
}
