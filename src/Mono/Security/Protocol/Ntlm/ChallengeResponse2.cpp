// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Ntlm.ChallengeResponse2
#include "Mono/Security/Protocol/Ntlm/ChallengeResponse2.hpp"
// Including type: Mono.Security.Protocol.Ntlm.Type2Message
#include "Mono/Security/Protocol/Ntlm/Type2Message.hpp"
// Including type: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
#include "Mono/Security/Protocol/Ntlm/NtlmAuthLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] magic
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_magic() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("_get_magic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "magic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] magic
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_magic(::Array<uint8_t>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("_set_magic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "magic", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] nullEncMagic
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_nullEncMagic() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("_get_nullEncMagic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "nullEncMagic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] nullEncMagic
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_nullEncMagic(::Array<uint8_t>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("_set_nullEncMagic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "nullEncMagic", value));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_LM
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_LM(::Il2CppString* password, ::Array<uint8_t>* challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("Compute_LM");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_LM", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(password, challenge)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, challenge);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLM_Password
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM_Password(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("Compute_NTLM_Password");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLM_Password", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(password)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLM
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM(::Il2CppString* password, ::Array<uint8_t>* challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("Compute_NTLM");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLM", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(password, challenge)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, challenge);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLMv2_Session
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2_Session(::Il2CppString* password, ::Array<uint8_t>* challenge, ::Array<uint8_t>*& lm, ::Array<uint8_t>*& ntlm) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("Compute_NTLMv2_Session");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLMv2_Session", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(password, challenge, lm, ntlm)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, challenge, lm, ntlm);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLMv2
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2(Mono::Security::Protocol::Ntlm::Type2Message* type2, ::Il2CppString* username, ::Il2CppString* password, ::Il2CppString* domain) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("Compute_NTLMv2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLMv2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type2, username, password, domain)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type2, username, password, domain);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute(Mono::Security::Protocol::Ntlm::Type2Message* type2, Mono::Security::Protocol::Ntlm::NtlmAuthLevel level, ::Il2CppString* username, ::Il2CppString* password, ::Il2CppString* domain, ::Array<uint8_t>*& lm, ::Array<uint8_t>*& ntlm) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("Compute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type2, level, username, password, domain, lm, ntlm)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type2, level, username, password, domain, lm, ntlm);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.GetResponse
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::GetResponse(::Array<uint8_t>* challenge, ::Array<uint8_t>* pwd) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("GetResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "GetResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(challenge, pwd)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challenge, pwd);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.PrepareDESKey
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::PrepareDESKey(::Array<uint8_t>* key56bits, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("PrepareDESKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "PrepareDESKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key56bits, position)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key56bits, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.PasswordToKey
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::PasswordToKey(::Il2CppString* password, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext("PasswordToKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "PasswordToKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(password, position)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2..cctor
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse2").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
