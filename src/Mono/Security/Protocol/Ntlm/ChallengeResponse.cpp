// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Ntlm.ChallengeResponse
#include "Mono/Security/Protocol/Ntlm/ChallengeResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] magic
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_magic() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("_get_magic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "magic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] magic
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_magic(::Array<uint8_t>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("_set_magic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "magic", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] nullEncMagic
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_nullEncMagic() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("_get_nullEncMagic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "nullEncMagic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] nullEncMagic
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_nullEncMagic(::Array<uint8_t>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("_set_nullEncMagic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "nullEncMagic", value));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse..ctor
Mono::Security::Protocol::Ntlm::ChallengeResponse* Mono::Security::Protocol::Ntlm::ChallengeResponse::New_ctor(::Il2CppString* password, ::Array<uint8_t>* challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ChallengeResponse*>(password, challenge));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.set_Password
void Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("set_Password");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_Password", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.set_Challenge
void Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Challenge(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("set_Challenge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_Challenge", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.get_LM
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::get_LM() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("get_LM");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "get_LM", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.get_NT
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::get_NT() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("get_NT");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "get_NT", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Dispose
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.GetResponse
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::GetResponse(::Array<uint8_t>* pwd) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("GetResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "GetResponse", {}, ::il2cpp_utils::ExtractTypes(pwd)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, pwd);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.PrepareDESKey
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::PrepareDESKey(::Array<uint8_t>* key56bits, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("PrepareDESKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "PrepareDESKey", {}, ::il2cpp_utils::ExtractTypes(key56bits, position)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, key56bits, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.PasswordToKey
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::PasswordToKey(::Il2CppString* password, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("PasswordToKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "PasswordToKey", {}, ::il2cpp_utils::ExtractTypes(password, position)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, password, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse..cctor
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse..ctor
Mono::Security::Protocol::Ntlm::ChallengeResponse* Mono::Security::Protocol::Ntlm::ChallengeResponse::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ChallengeResponse*>());
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Finalize
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Finalize", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Dispose
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Security::Protocol::Ntlm").WithContext("ChallengeResponse").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void Mono::Security::Protocol::Ntlm::ChallengeResponse::System_IDisposable_Dispose() {
  Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose();
}
