// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.MonoSslPolicyErrors None
Mono::Security::Interface::MonoSslPolicyErrors Mono::Security::Interface::MonoSslPolicyErrors::_get_None() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Interface").WithContext("MonoSslPolicyErrors").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoSslPolicyErrors>("Mono.Security.Interface", "MonoSslPolicyErrors", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.MonoSslPolicyErrors None
void Mono::Security::Interface::MonoSslPolicyErrors::_set_None(Mono::Security::Interface::MonoSslPolicyErrors value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Interface").WithContext("MonoSslPolicyErrors").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoSslPolicyErrors", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateNotAvailable
Mono::Security::Interface::MonoSslPolicyErrors Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateNotAvailable() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Interface").WithContext("MonoSslPolicyErrors").WithContext("_get_RemoteCertificateNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoSslPolicyErrors>("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateNotAvailable
void Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateNotAvailable(Mono::Security::Interface::MonoSslPolicyErrors value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Interface").WithContext("MonoSslPolicyErrors").WithContext("_set_RemoteCertificateNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateNameMismatch
Mono::Security::Interface::MonoSslPolicyErrors Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateNameMismatch() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Interface").WithContext("MonoSslPolicyErrors").WithContext("_get_RemoteCertificateNameMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoSslPolicyErrors>("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateNameMismatch"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateNameMismatch
void Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateNameMismatch(Mono::Security::Interface::MonoSslPolicyErrors value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Interface").WithContext("MonoSslPolicyErrors").WithContext("_set_RemoteCertificateNameMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateNameMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateChainErrors
Mono::Security::Interface::MonoSslPolicyErrors Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateChainErrors() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Interface").WithContext("MonoSslPolicyErrors").WithContext("_get_RemoteCertificateChainErrors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoSslPolicyErrors>("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateChainErrors"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateChainErrors
void Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateChainErrors(Mono::Security::Interface::MonoSslPolicyErrors value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Security::Interface").WithContext("MonoSslPolicyErrors").WithContext("_set_RemoteCertificateChainErrors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateChainErrors", value));
}
