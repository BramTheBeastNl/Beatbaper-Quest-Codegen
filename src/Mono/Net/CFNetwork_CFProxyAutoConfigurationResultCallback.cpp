// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback..ctor
Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback* Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  return THROW_UNLESS(il2cpp_utils::New<CFNetwork::CFProxyAutoConfigurationResultCallback*>(object, method));
}
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.Invoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::Invoke(System::IntPtr client, System::IntPtr proxyList, System::IntPtr error) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Invoke", client, proxyList, error));
}
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.BeginInvoke
System::IAsyncResult* Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::BeginInvoke(System::IntPtr client, System::IntPtr proxyList, System::IntPtr error, System::AsyncCallback* callback, ::Il2CppObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", client, proxyList, error, callback, object));
}
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.EndInvoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::EndInvoke(System::IAsyncResult* result) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndInvoke", result));
}
