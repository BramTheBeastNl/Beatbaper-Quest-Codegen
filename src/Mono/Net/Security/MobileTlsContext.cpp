// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.MobileTlsContext..ctor
Mono::Net::Security::MobileTlsContext* Mono::Net::Security::MobileTlsContext::New_ctor(Mono::Net::Security::MobileAuthenticatedStream* parent, bool serverMode, ::Il2CppString* targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  return THROW_UNLESS(il2cpp_utils::New<MobileTlsContext*>(parent, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Parent
Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::MobileTlsContext::get_Parent() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Net::Security::MobileAuthenticatedStream*>(this, "get_Parent"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileTlsContext::get_Settings() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::Interface::MonoTlsSettings*>(this, "get_Settings"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsAuthenticated
bool Mono::Net::Security::MobileTlsContext::get_IsAuthenticated() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsAuthenticated"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsServer
bool Mono::Net::Security::MobileTlsContext::get_IsServer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsServer"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_TargetHost
::Il2CppString* Mono::Net::Security::MobileTlsContext::get_TargetHost() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_TargetHost"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ServerName
::Il2CppString* Mono::Net::Security::MobileTlsContext::get_ServerName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_ServerName"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ClientCertificates
System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Net::Security::MobileTlsContext::get_ClientCertificates() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(this, "get_ClientCertificates"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.StartHandshake
void Mono::Net::Security::MobileTlsContext::StartHandshake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartHandshake"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ProcessHandshake
bool Mono::Net::Security::MobileTlsContext::ProcessHandshake() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ProcessHandshake"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.FinishHandshake
void Mono::Net::Security::MobileTlsContext::FinishHandshake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FinishHandshake"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalServerCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalServerCertificate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate*>(this, "get_LocalServerCertificate"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalClientCertificate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate*>(this, "get_LocalClientCertificate"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Read
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Read(::Array<uint8_t>* buffer, int offset, int count) {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::ValueTuple_2<int, bool>>(this, "Read", buffer, offset, count)));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Write
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Write(::Array<uint8_t>* buffer, int offset, int count) {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::ValueTuple_2<int, bool>>(this, "Write", buffer, offset, count)));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Shutdown
void Mono::Net::Security::MobileTlsContext::Shutdown() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Shutdown"));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ValidateCertificate", leaf, chain));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ValidateCertificate", certificates));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.SelectClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::SelectClientCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::Array<::Il2CppString*>* acceptableIssuers) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate*>(this, "SelectClientCertificate", serverCertificate, acceptableIssuers));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose(bool disposing) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose", disposing));
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
}
void Mono::Net::Security::MobileTlsContext::System_IDisposable_Dispose() {
  Mono::Net::Security::MobileTlsContext::Dispose();
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Finalize
void Mono::Net::Security::MobileTlsContext::Finalize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Finalize"));
}
