// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 uniqueNameInteger
int Mono::Net::Security::MobileAuthenticatedStream::_get_uniqueNameInteger() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("_get_uniqueNameInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 uniqueNameInteger
void Mono::Net::Security::MobileAuthenticatedStream::_set_uniqueNameInteger(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("_set_uniqueNameInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 nextId
int Mono::Net::Security::MobileAuthenticatedStream::_get_nextId() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("_get_nextId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "nextId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 nextId
void Mono::Net::Security::MobileAuthenticatedStream::_set_nextId(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("_set_nextId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "nextId", value));
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileAuthenticatedStream::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_Settings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Provider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MobileAuthenticatedStream::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_Provider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CheckThrow
void Mono::Net::Security::MobileAuthenticatedStream::CheckThrow(bool authSuccessCheck, bool shutdownCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("CheckThrow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckThrow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(authSuccessCheck, shutdownCheck)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, authSuccessCheck, shutdownCheck);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetSSPIException
System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetSSPIException(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("GetSSPIException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetSSPIException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetIOException
System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetIOException(System::Exception* e, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("GetIOException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetIOException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e, message)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, message);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetException
System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::MobileAuthenticatedStream::SetException(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("SetException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e)));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessAuthentication
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::ProcessAuthentication(bool runSynchronously, bool serverMode, ::Il2CppString* targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool clientCertRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ProcessAuthentication");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessAuthentication", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(runSynchronously, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, clientCertRequired)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, runSynchronously, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, clientCertRequired);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CreateContext
Mono::Net::Security::MobileTlsContext* Mono::Net::Security::MobileAuthenticatedStream::CreateContext(bool serverMode, ::Il2CppString* targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("CreateContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.StartOperation
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::StartOperation(Mono::Net::Security::MobileAuthenticatedStream::OperationType type, Mono::Net::Security::AsyncProtocolRequest* asyncRequest, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("StartOperation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, asyncRequest, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, type, asyncRequest, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
int Mono::Net::Security::MobileAuthenticatedStream::InternalRead(::Array<uint8_t>* buffer, int offset, int size, bool& outWantMore) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InternalRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, size, outWantMore)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, outWantMore);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::InternalRead(Mono::Net::Security::AsyncProtocolRequest* asyncRequest, Mono::Net::Security::BufferOffsetSize* internalBuffer, ::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InternalRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncRequest, internalBuffer, buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InternalWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(Mono::Net::Security::AsyncProtocolRequest* asyncRequest, Mono::Net::Security::BufferOffsetSize2* internalBuffer, ::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InternalWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncRequest, internalBuffer, buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerRead
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::InnerRead(bool sync, int requestedSize, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InnerRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sync, requestedSize, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, sync, requestedSize, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerWrite
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::InnerWrite(bool sync, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InnerWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InnerWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sync, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, sync, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessHandshake
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::MobileAuthenticatedStream::ProcessHandshake(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ProcessHandshake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(status)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessRead
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessRead(Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ProcessRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userBuffer)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessWrite
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessWrite(Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ProcessWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userBuffer)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.<InnerWrite>b__67_0
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$b__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("<InnerWrite>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerWrite>b__67_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsClient
void Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClient(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("AuthenticateAsClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AuthenticateAsClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsServer
void Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("AuthenticateAsServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AuthenticateAsServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_AuthenticatedStream
System::Net::Security::AuthenticatedStream* Mono::Net::Security::MobileAuthenticatedStream::get_AuthenticatedStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_AuthenticatedStream");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AuthenticatedStream", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Security::AuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginRead
System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("BeginRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, asyncCallback, asyncState)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndRead
int Mono::Net::Security::MobileAuthenticatedStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("EndRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginWrite
System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("BeginWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, asyncCallback, asyncState)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndWrite
void Mono::Net::Security::MobileAuthenticatedStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("EndWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Read
int Mono::Net::Security::MobileAuthenticatedStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Write
void Mono::Net::Security::MobileAuthenticatedStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ReadAsync
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::ReadAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ReadAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.WriteAsync
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::WriteAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("WriteAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_IsAuthenticated
bool Mono::Net::Security::MobileAuthenticatedStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_IsAuthenticated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Dispose
void Mono::Net::Security::MobileAuthenticatedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Flush
void Mono::Net::Security::MobileAuthenticatedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_InternalLocalCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileAuthenticatedStream::get_InternalLocalCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_InternalLocalCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InternalLocalCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Seek
int64_t Mono::Net::Security::MobileAuthenticatedStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, origin)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetLength
void Mono::Net::Security::MobileAuthenticatedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanRead
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_CanRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanWrite
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_CanWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanSeek
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_CanSeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Length
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Position
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.set_Position
void Mono::Net::Security::MobileAuthenticatedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("set_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_ReadTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_ReadTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_WriteTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_WriteTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream..cctor
void Mono::Net::Security::MobileAuthenticatedStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
