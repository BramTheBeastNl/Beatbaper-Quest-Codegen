// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.SystemCertificateValidator
#include "Mono/Net/Security/SystemCertificateValidator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean is_macosx
bool Mono::Net::Security::SystemCertificateValidator::_get_is_macosx() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("_get_is_macosx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "SystemCertificateValidator", "is_macosx"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean is_macosx
void Mono::Net::Security::SystemCertificateValidator::_set_is_macosx(bool value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("_set_is_macosx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "is_macosx", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
System::Security::Cryptography::X509Certificates::X509KeyUsageFlags Mono::Net::Security::SystemCertificateValidator::_get_s_flags() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("_get_s_flags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("Mono.Net.Security", "SystemCertificateValidator", "s_flags"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
void Mono::Net::Security::SystemCertificateValidator::_set_s_flags(System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("_set_s_flags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "s_flags", value));
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator..cctor
void Mono::Net::Security::SystemCertificateValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.CreateX509Chain
System::Security::Cryptography::X509Certificates::X509Chain* Mono::Net::Security::SystemCertificateValidator::CreateX509Chain(System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("CreateX509Chain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", il2cpp_utils::NoArgClass<System::Security::Cryptography::X509Certificates::X509Chain*>(), "CreateX509Chain", {}, ::il2cpp_utils::ExtractTypes(certs)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Chain*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certs);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.NeedsChain
bool Mono::Net::Security::SystemCertificateValidator::NeedsChain(Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("NeedsChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", il2cpp_utils::NoArgClass<bool>(), "NeedsChain", {}, ::il2cpp_utils::ExtractTypes(settings)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, settings);
}
