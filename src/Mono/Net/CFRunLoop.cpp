// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopAddSource
void Mono::Net::CFRunLoop::CFRunLoopAddSource(System::IntPtr rl, System::IntPtr source, System::IntPtr mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Mono.Net", "CFRunLoop", "CFRunLoopAddSource", rl, source, mode));
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRemoveSource
void Mono::Net::CFRunLoop::CFRunLoopRemoveSource(System::IntPtr rl, System::IntPtr source, System::IntPtr mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Mono.Net", "CFRunLoop", "CFRunLoopRemoveSource", rl, source, mode));
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRunInMode
int Mono::Net::CFRunLoop::CFRunLoopRunInMode(System::IntPtr mode, double seconds, bool returnAfterSourceHandled) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Mono.Net", "CFRunLoop", "CFRunLoopRunInMode", mode, seconds, returnAfterSourceHandled));
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopGetCurrent
System::IntPtr Mono::Net::CFRunLoop::CFRunLoopGetCurrent() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>("Mono.Net", "CFRunLoop", "CFRunLoopGetCurrent"));
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopStop
void Mono::Net::CFRunLoop::CFRunLoopStop(System::IntPtr rl) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Mono.Net", "CFRunLoop", "CFRunLoopStop", rl));
}
// Autogenerated method: Mono.Net.CFRunLoop.get_CurrentRunLoop
Mono::Net::CFRunLoop* Mono::Net::CFRunLoop::get_CurrentRunLoop() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Net::CFRunLoop*>("Mono.Net", "CFRunLoop", "get_CurrentRunLoop"));
}
// Autogenerated method: Mono.Net.CFRunLoop.AddSource
void Mono::Net::CFRunLoop::AddSource(System::IntPtr source, Mono::Net::CFString* mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddSource", source, mode));
}
// Autogenerated method: Mono.Net.CFRunLoop.RemoveSource
void Mono::Net::CFRunLoop::RemoveSource(System::IntPtr source, Mono::Net::CFString* mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveSource", source, mode));
}
// Autogenerated method: Mono.Net.CFRunLoop.RunInMode
int Mono::Net::CFRunLoop::RunInMode(Mono::Net::CFString* mode, double seconds, bool returnAfterSourceHandled) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "RunInMode", mode, seconds, returnAfterSourceHandled));
}
// Autogenerated method: Mono.Net.CFRunLoop.Stop
void Mono::Net::CFRunLoop::Stop() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Stop"));
}
// Autogenerated method: Mono.Net.CFRunLoop..ctor
Mono::Net::CFRunLoop* Mono::Net::CFRunLoop::New_ctor(System::IntPtr handle, bool own) {
  return THROW_UNLESS(il2cpp_utils::New<CFRunLoop*>(handle, own));
}
