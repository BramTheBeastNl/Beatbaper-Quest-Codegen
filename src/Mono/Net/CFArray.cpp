// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
System::IntPtr Mono::Net::CFArray::_get_kCFTypeArrayCallbacks() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFArray", "kCFTypeArrayCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
void Mono::Net::CFArray::_set_kCFTypeArrayCallbacks(System::IntPtr value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFArray", "kCFTypeArrayCallbacks", value));
}
// Autogenerated method: Mono.Net.CFArray..cctor
void Mono::Net::CFArray::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Mono.Net", "CFArray", ".cctor"));
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetCount
System::IntPtr Mono::Net::CFArray::CFArrayGetCount(System::IntPtr handle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>("Mono.Net", "CFArray", "CFArrayGetCount", handle));
}
// Autogenerated method: Mono.Net.CFArray.get_Count
int Mono::Net::CFArray::get_Count() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_Count"));
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetValueAtIndex
System::IntPtr Mono::Net::CFArray::CFArrayGetValueAtIndex(System::IntPtr handle, System::IntPtr index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>("Mono.Net", "CFArray", "CFArrayGetValueAtIndex", handle, index));
}
// Autogenerated method: Mono.Net.CFArray.get_Item
System::IntPtr Mono::Net::CFArray::get_Item(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>(this, "get_Item", index));
}
// Autogenerated method: Mono.Net.CFArray..ctor
Mono::Net::CFArray* Mono::Net::CFArray::New_ctor(System::IntPtr handle, bool own) {
  return THROW_UNLESS(il2cpp_utils::New<CFArray*>(handle, own));
}
