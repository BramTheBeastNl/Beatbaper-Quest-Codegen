// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTlsStream
#include "Mono/Unity/UnityTlsStream.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsStream..ctor
Mono::Unity::UnityTlsStream* Mono::Unity::UnityTlsStream::New_ctor(System::IO::Stream* innerStream, bool leaveInnerStreamOpen, System::Net::Security::SslStream* owner, Mono::Security::Interface::MonoTlsSettings* settings, Mono::Security::Interface::MonoTlsProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsStream").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<UnityTlsStream*>(innerStream, leaveInnerStreamOpen, owner, settings, provider));
}
// Autogenerated method: Mono.Unity.UnityTlsStream.CreateContext
Mono::Net::Security::MobileTlsContext* Mono::Unity::UnityTlsStream::CreateContext(bool serverMode, ::Il2CppString* targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsStream").WithContext("CreateContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Mono::Net::Security::MobileTlsContext*>(), "CreateContext", {}, ::il2cpp_utils::ExtractTypes(serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
