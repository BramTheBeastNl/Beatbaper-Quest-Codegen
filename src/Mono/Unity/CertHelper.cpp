// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.CertHelper
#include "Mono/Unity/CertHelper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.CertHelper.AddCertificatesToNativeChain
void Mono::Unity::CertHelper::AddCertificatesToNativeChain(Mono::Unity::UnityTls::unitytls_x509list* nativeCertificateChain, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("CertHelper").WithContext("AddCertificatesToNativeChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", il2cpp_utils::NoArgClass<void>(), "AddCertificatesToNativeChain", {}, ::il2cpp_utils::ExtractTypes(nativeCertificateChain, certificates, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nativeCertificateChain, certificates, errorState);
}
// Autogenerated method: Mono.Unity.CertHelper.AddCertificateToNativeChain
void Mono::Unity::CertHelper::AddCertificateToNativeChain(Mono::Unity::UnityTls::unitytls_x509list* nativeCertificateChain, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("CertHelper").WithContext("AddCertificateToNativeChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", il2cpp_utils::NoArgClass<void>(), "AddCertificateToNativeChain", {}, ::il2cpp_utils::ExtractTypes(nativeCertificateChain, certificate, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nativeCertificateChain, certificate, errorState);
}
// Autogenerated method: Mono.Unity.CertHelper.NativeChainToManagedCollection
System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Unity::CertHelper::NativeChainToManagedCollection(Mono::Unity::UnityTls::unitytls_x509list_ref nativeCertificateChain, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("CertHelper").WithContext("NativeChainToManagedCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", il2cpp_utils::NoArgClass<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(), "NativeChainToManagedCollection", {}, ::il2cpp_utils::ExtractTypes(nativeCertificateChain, errorState)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nativeCertificateChain, errorState);
}
