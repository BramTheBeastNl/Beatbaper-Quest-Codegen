// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.TypeExtensions/<GetParentTypes>d__28
#include "ModestTree/TypeExtensions_-GetParentTypes-d__28.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.TypeExtensions/<GetParentTypes>d__28.System.IDisposable.Dispose
void ModestTree::TypeExtensions::$GetParentTypes$d__28::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$GetParentTypes$d__28::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.TypeExtensions/<GetParentTypes>d__28.MoveNext
bool ModestTree::TypeExtensions::$GetParentTypes$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$GetParentTypes$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.TypeExtensions/<GetParentTypes>d__28.<>m__Finally1
void ModestTree::TypeExtensions::$GetParentTypes$d__28::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$GetParentTypes$d__28::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.TypeExtensions/<GetParentTypes>d__28.System.Collections.Generic.IEnumerator<System.Type>.get_Current
System::Type* ModestTree::TypeExtensions::$GetParentTypes$d__28::System_Collections_Generic_IEnumerator$System_Type$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$GetParentTypes$d__28::System.Collections.Generic.IEnumerator<System.Type>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Type>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.TypeExtensions/<GetParentTypes>d__28.System.Collections.IEnumerator.Reset
void ModestTree::TypeExtensions::$GetParentTypes$d__28::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$GetParentTypes$d__28::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.TypeExtensions/<GetParentTypes>d__28.System.Collections.IEnumerator.get_Current
::Il2CppObject* ModestTree::TypeExtensions::$GetParentTypes$d__28::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$GetParentTypes$d__28::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.TypeExtensions/<GetParentTypes>d__28.System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Type*>* ModestTree::TypeExtensions::$GetParentTypes$d__28::System_Collections_Generic_IEnumerable$System_Type$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$GetParentTypes$d__28::System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.TypeExtensions/<GetParentTypes>d__28.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* ModestTree::TypeExtensions::$GetParentTypes$d__28::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$GetParentTypes$d__28::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.TypeExtensions/<>c__DisplayClass35_0
#include "ModestTree/TypeExtensions_--c__DisplayClass35_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.TypeExtensions/<>c__DisplayClass35_0.<AllAttributes>b__0
bool ModestTree::TypeExtensions::$$c__DisplayClass35_0::$AllAttributes$b__0(System::Attribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$$c__DisplayClass35_0::<AllAttributes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllAttributes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModestTree.TypeExtensions/<>c__DisplayClass35_1
#include "ModestTree/TypeExtensions_--c__DisplayClass35_1.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.TypeExtensions/<>c__DisplayClass35_1.<AllAttributes>b__1
bool ModestTree::TypeExtensions::$$c__DisplayClass35_1::$AllAttributes$b__1(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$$c__DisplayClass35_1::<AllAttributes>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllAttributes>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.TypeExtensions/<>c__DisplayClass39_0
#include "ModestTree/TypeExtensions_--c__DisplayClass39_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.TypeExtensions/<>c__DisplayClass39_0.<AllAttributes>b__0
bool ModestTree::TypeExtensions::$$c__DisplayClass39_0::$AllAttributes$b__0(System::Attribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$$c__DisplayClass39_0::<AllAttributes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllAttributes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModestTree.TypeExtensions/<>c__DisplayClass39_1
#include "ModestTree/TypeExtensions_--c__DisplayClass39_1.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.TypeExtensions/<>c__DisplayClass39_1.<AllAttributes>b__1
bool ModestTree::TypeExtensions::$$c__DisplayClass39_1::$AllAttributes$b__1(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeExtensions::$$c__DisplayClass39_1::<AllAttributes>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllAttributes>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.TypeStringFormatter
#include "ModestTree/TypeStringFormatter.hpp"
// Including type: ModestTree.TypeStringFormatter/<>c
#include "ModestTree/TypeStringFormatter_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.String> _prettyNameCache
System::Collections::Generic::Dictionary_2<System::Type*, ::Il2CppString*>* ModestTree::TypeStringFormatter::_get__prettyNameCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::_get__prettyNameCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, ::Il2CppString*>*>("ModestTree", "TypeStringFormatter", "_prettyNameCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.String> _prettyNameCache
void ModestTree::TypeStringFormatter::_set__prettyNameCache(System::Collections::Generic::Dictionary_2<System::Type*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::_set__prettyNameCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ModestTree", "TypeStringFormatter", "_prettyNameCache", value));
}
// Autogenerated method: ModestTree.TypeStringFormatter.PrettyName
::Il2CppString* ModestTree::TypeStringFormatter::PrettyName(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::PrettyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "TypeStringFormatter", "PrettyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: ModestTree.TypeStringFormatter.PrettyNameInternal
::Il2CppString* ModestTree::TypeStringFormatter::PrettyNameInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::PrettyNameInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "TypeStringFormatter", "PrettyNameInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: ModestTree.TypeStringFormatter.GetCSharpTypeName
::Il2CppString* ModestTree::TypeStringFormatter::GetCSharpTypeName(::Il2CppString* typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::GetCSharpTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "TypeStringFormatter", "GetCSharpTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: ModestTree.TypeStringFormatter..cctor
void ModestTree::TypeStringFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "TypeStringFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.TypeStringFormatter/<>c
#include "ModestTree/TypeStringFormatter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ModestTree.TypeStringFormatter/<>c <>9
ModestTree::TypeStringFormatter::$$c* ModestTree::TypeStringFormatter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<ModestTree::TypeStringFormatter::$$c*>("ModestTree", "TypeStringFormatter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ModestTree.TypeStringFormatter/<>c <>9
void ModestTree::TypeStringFormatter::$$c::_set_$$9(ModestTree::TypeStringFormatter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree", "TypeStringFormatter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.String> <>9__2_0
System::Func_2<System::Type*, ::Il2CppString*>* ModestTree::TypeStringFormatter::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, ::Il2CppString*>*>("ModestTree", "TypeStringFormatter/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.String> <>9__2_0
void ModestTree::TypeStringFormatter::$$c::_set_$$9__2_0(System::Func_2<System::Type*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree", "TypeStringFormatter/<>c", "<>9__2_0", value)));
}
// Autogenerated method: ModestTree.TypeStringFormatter/<>c..cctor
void ModestTree::TypeStringFormatter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "TypeStringFormatter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.TypeStringFormatter/<>c.<PrettyNameInternal>b__2_0
::Il2CppString* ModestTree::TypeStringFormatter::$$c::$PrettyNameInternal$b__2_0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::TypeStringFormatter::$$c::<PrettyNameInternal>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PrettyNameInternal>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.ReflectionUtil
#include "ModestTree/ReflectionUtil.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action`5
#include "System/Action_5.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.ReflectionUtil.CreateArray
System::Array* ModestTree::ReflectionUtil::CreateArray(System::Type* elementType, System::Collections::Generic::List_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::ReflectionUtil::CreateArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "ReflectionUtil", "CreateArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(instances)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, instances);
}
// Autogenerated method: ModestTree.ReflectionUtil.CreateGenericList
System::Collections::IList* ModestTree::ReflectionUtil::CreateGenericList(System::Type* elementType, System::Collections::Generic::List_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::ReflectionUtil::CreateGenericList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "ReflectionUtil", "CreateGenericList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(instances)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, instances);
}
// Autogenerated method: ModestTree.ReflectionUtil.ToDebugString
::Il2CppString* ModestTree::ReflectionUtil::ToDebugString(System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::ReflectionUtil::ToDebugString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "ReflectionUtil", "ToDebugString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method);
}
// Autogenerated method: ModestTree.ReflectionUtil.ToDebugString
::Il2CppString* ModestTree::ReflectionUtil::ToDebugString(System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::ReflectionUtil::ToDebugString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree", "ReflectionUtil", "ToDebugString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModestTree.Util.PreserveAttribute
#include "ModestTree/Util/PreserveAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModestTree.Util.ValuePair
#include "ModestTree/Util/ValuePair.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: ModestTree.Util.ValuePair`3
#include "ModestTree/Util/ValuePair_3.hpp"
// Including type: ModestTree.Util.ValuePair`4
#include "ModestTree/Util/ValuePair_4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModestTree.Util.UnityUtil
#include "ModestTree/Util/UnityUtil.hpp"
// Including type: ModestTree.Util.UnityUtil/<get_AllScenes>d__1
#include "ModestTree/Util/UnityUtil_-get_AllScenes-d__1.hpp"
// Including type: ModestTree.Util.UnityUtil/<>c
#include "ModestTree/Util/UnityUtil_--c.hpp"
// Including type: ModestTree.Util.UnityUtil/<GetParents>d__16
#include "ModestTree/Util/UnityUtil_-GetParents-d__16.hpp"
// Including type: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17
#include "ModestTree/Util/UnityUtil_-GetParentsAndSelf-d__17.hpp"
// Including type: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20
#include "ModestTree/Util/UnityUtil_-GetDirectChildrenAndSelf-d__20.hpp"
// Including type: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21
#include "ModestTree/Util/UnityUtil_-GetDirectChildren-d__21.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.Util.UnityUtil.get_AllScenes
System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>* ModestTree::Util::UnityUtil::get_AllScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::get_AllScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "get_AllScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil.get_AllLoadedScenes
System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>* ModestTree::Util::UnityUtil::get_AllLoadedScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::get_AllLoadedScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "get_AllLoadedScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil.get_IsAltKeyDown
bool ModestTree::Util::UnityUtil::get_IsAltKeyDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::get_IsAltKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "get_IsAltKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil.get_IsControlKeyDown
bool ModestTree::Util::UnityUtil::get_IsControlKeyDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::get_IsControlKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "get_IsControlKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil.get_IsShiftKeyDown
bool ModestTree::Util::UnityUtil::get_IsShiftKeyDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::get_IsShiftKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "get_IsShiftKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil.get_WasShiftKeyJustPressed
bool ModestTree::Util::UnityUtil::get_WasShiftKeyJustPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::get_WasShiftKeyJustPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "get_WasShiftKeyJustPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil.get_WasAltKeyJustPressed
bool ModestTree::Util::UnityUtil::get_WasAltKeyJustPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::get_WasAltKeyJustPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "get_WasAltKeyJustPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetDepthLevel
int ModestTree::Util::UnityUtil::GetDepthLevel(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetDepthLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetDepthLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetRootParentOrSelf
UnityEngine::GameObject* ModestTree::Util::UnityUtil::GetRootParentOrSelf(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetRootParentOrSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetRootParentOrSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetParents
System::Collections::Generic::IEnumerable_1<UnityEngine::Transform*>* ModestTree::Util::UnityUtil::GetParents(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetParents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetParents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Transform*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetParentsAndSelf
System::Collections::Generic::IEnumerable_1<UnityEngine::Transform*>* ModestTree::Util::UnityUtil::GetParentsAndSelf(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetParentsAndSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetParentsAndSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Transform*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetComponentsInChildrenTopDown
System::Collections::Generic::IEnumerable_1<UnityEngine::Component*>* ModestTree::Util::UnityUtil::GetComponentsInChildrenTopDown(UnityEngine::GameObject* gameObject, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetComponentsInChildrenTopDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetComponentsInChildrenTopDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Component*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameObject, includeInactive);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetComponentsInChildrenBottomUp
System::Collections::Generic::IEnumerable_1<UnityEngine::Component*>* ModestTree::Util::UnityUtil::GetComponentsInChildrenBottomUp(UnityEngine::GameObject* gameObject, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetComponentsInChildrenBottomUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetComponentsInChildrenBottomUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Component*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameObject, includeInactive);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetDirectChildrenAndSelf
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* ModestTree::Util::UnityUtil::GetDirectChildrenAndSelf(UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetDirectChildrenAndSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetDirectChildrenAndSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetDirectChildren
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* ModestTree::Util::UnityUtil::GetDirectChildren(UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetDirectChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetDirectChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetAllGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* ModestTree::Util::UnityUtil::GetAllGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetAllGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetAllGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil.GetAllRootGameObjects
System::Collections::Generic::List_1<UnityEngine::GameObject*>* ModestTree::Util::UnityUtil::GetAllRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::GetAllRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil", "GetAllRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::GameObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.Util.UnityUtil/<get_AllScenes>d__1
#include "ModestTree/Util/UnityUtil_-get_AllScenes-d__1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.Util.UnityUtil/<get_AllScenes>d__1.System.IDisposable.Dispose
void ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<get_AllScenes>d__1.MoveNext
bool ModestTree::Util::UnityUtil::$get_AllScenes$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$get_AllScenes$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<get_AllScenes>d__1.System.Collections.Generic.IEnumerator<UnityEngine.SceneManagement.Scene>.get_Current
UnityEngine::SceneManagement::Scene ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System_Collections_Generic_IEnumerator$UnityEngine_SceneManagement_Scene$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System.Collections.Generic.IEnumerator<UnityEngine.SceneManagement.Scene>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.SceneManagement.Scene>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SceneManagement::Scene, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<get_AllScenes>d__1.System.Collections.IEnumerator.Reset
void ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<get_AllScenes>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<get_AllScenes>d__1.System.Collections.Generic.IEnumerable<UnityEngine.SceneManagement.Scene>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene>* ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System_Collections_Generic_IEnumerable$UnityEngine_SceneManagement_Scene$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System.Collections.Generic.IEnumerable<UnityEngine.SceneManagement.Scene>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.SceneManagement.Scene>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene>*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<get_AllScenes>d__1.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$get_AllScenes$d__1::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModestTree.Util.UnityUtil/<>c
#include "ModestTree/Util/UnityUtil_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ModestTree.Util.UnityUtil/<>c <>9
ModestTree::Util::UnityUtil::$$c* ModestTree::Util::UnityUtil::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<ModestTree::Util::UnityUtil::$$c*>("ModestTree.Util", "UnityUtil/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ModestTree.Util.UnityUtil/<>c <>9
void ModestTree::Util::UnityUtil::$$c::_set_$$9(ModestTree::Util::UnityUtil::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree.Util", "UnityUtil/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Boolean> <>9__3_0
System::Func_2<UnityEngine::SceneManagement::Scene, bool>* ModestTree::Util::UnityUtil::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::SceneManagement::Scene, bool>*>("ModestTree.Util", "UnityUtil/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Boolean> <>9__3_0
void ModestTree::Util::UnityUtil::$$c::_set_$$9__3_0(System::Func_2<UnityEngine::SceneManagement::Scene, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree.Util", "UnityUtil/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Transform,UnityEngine.GameObject> <>9__15_0
System::Func_2<UnityEngine::Transform*, UnityEngine::GameObject*>* ModestTree::Util::UnityUtil::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::Transform*, UnityEngine::GameObject*>*>("ModestTree.Util", "UnityUtil/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Transform,UnityEngine.GameObject> <>9__15_0
void ModestTree::Util::UnityUtil::$$c::_set_$$9__15_0(System::Func_2<UnityEngine::Transform*, UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree.Util", "UnityUtil/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Component,System.Int32> <>9__18_0
System::Func_2<UnityEngine::Component*, int>* ModestTree::Util::UnityUtil::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::Component*, int>*>("ModestTree.Util", "UnityUtil/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Component,System.Int32> <>9__18_0
void ModestTree::Util::UnityUtil::$$c::_set_$$9__18_0(System::Func_2<UnityEngine::Component*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree.Util", "UnityUtil/<>c", "<>9__18_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Component,System.Int32> <>9__19_0
System::Func_2<UnityEngine::Component*, int>* ModestTree::Util::UnityUtil::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::Component*, int>*>("ModestTree.Util", "UnityUtil/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Component,System.Int32> <>9__19_0
void ModestTree::Util::UnityUtil::$$c::_set_$$9__19_0(System::Func_2<UnityEngine::Component*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree.Util", "UnityUtil/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Transform,UnityEngine.GameObject> <>9__22_0
System::Func_2<UnityEngine::Transform*, UnityEngine::GameObject*>* ModestTree::Util::UnityUtil::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::Transform*, UnityEngine::GameObject*>*>("ModestTree.Util", "UnityUtil/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Transform,UnityEngine.GameObject> <>9__22_0
void ModestTree::Util::UnityUtil::$$c::_set_$$9__22_0(System::Func_2<UnityEngine::Transform*, UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree.Util", "UnityUtil/<>c", "<>9__22_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__23_0
System::Func_2<UnityEngine::GameObject*, bool>* ModestTree::Util::UnityUtil::$$c::_get_$$9__23_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_get_$$9__23_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::GameObject*, bool>*>("ModestTree.Util", "UnityUtil/<>c", "<>9__23_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__23_0
void ModestTree::Util::UnityUtil::$$c::_set_$$9__23_0(System::Func_2<UnityEngine::GameObject*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::_set_$$9__23_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ModestTree.Util", "UnityUtil/<>c", "<>9__23_0", value)));
}
// Autogenerated method: ModestTree.Util.UnityUtil/<>c..cctor
void ModestTree::Util::UnityUtil::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ModestTree.Util", "UnityUtil/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<>c.<get_AllLoadedScenes>b__3_0
bool ModestTree::Util::UnityUtil::$$c::$get_AllLoadedScenes$b__3_0(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::<get_AllLoadedScenes>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_AllLoadedScenes>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, scene);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<>c.<GetRootParentOrSelf>b__15_0
UnityEngine::GameObject* ModestTree::Util::UnityUtil::$$c::$GetRootParentOrSelf$b__15_0(UnityEngine::Transform* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::<GetRootParentOrSelf>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetRootParentOrSelf>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, x);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<>c.<GetComponentsInChildrenTopDown>b__18_0
int ModestTree::Util::UnityUtil::$$c::$GetComponentsInChildrenTopDown$b__18_0(UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::<GetComponentsInChildrenTopDown>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetComponentsInChildrenTopDown>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<>c.<GetComponentsInChildrenBottomUp>b__19_0
int ModestTree::Util::UnityUtil::$$c::$GetComponentsInChildrenBottomUp$b__19_0(UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::<GetComponentsInChildrenBottomUp>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetComponentsInChildrenBottomUp>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<>c.<GetAllGameObjects>b__22_0
UnityEngine::GameObject* ModestTree::Util::UnityUtil::$$c::$GetAllGameObjects$b__22_0(UnityEngine::Transform* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::<GetAllGameObjects>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllGameObjects>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, x);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<>c.<GetAllRootGameObjects>b__23_0
bool ModestTree::Util::UnityUtil::$$c::$GetAllRootGameObjects$b__23_0(UnityEngine::GameObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$$c::<GetAllRootGameObjects>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllRootGameObjects>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.Util.UnityUtil/<GetParents>d__16
#include "ModestTree/Util/UnityUtil_-GetParents-d__16.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParents>d__16.System.IDisposable.Dispose
void ModestTree::Util::UnityUtil::$GetParents$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParents$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParents>d__16.MoveNext
bool ModestTree::Util::UnityUtil::$GetParents$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParents$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParents>d__16.<>m__Finally1
void ModestTree::Util::UnityUtil::$GetParents$d__16::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParents$d__16::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParents>d__16.System.Collections.Generic.IEnumerator<UnityEngine.Transform>.get_Current
UnityEngine::Transform* ModestTree::Util::UnityUtil::$GetParents$d__16::System_Collections_Generic_IEnumerator$UnityEngine_Transform$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParents$d__16::System.Collections.Generic.IEnumerator<UnityEngine.Transform>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Transform>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParents>d__16.System.Collections.IEnumerator.Reset
void ModestTree::Util::UnityUtil::$GetParents$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParents$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParents>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* ModestTree::Util::UnityUtil::$GetParents$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParents$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParents>d__16.System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Transform*>* ModestTree::Util::UnityUtil::$GetParents$d__16::System_Collections_Generic_IEnumerable$UnityEngine_Transform$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParents$d__16::System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParents>d__16.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* ModestTree::Util::UnityUtil::$GetParents$d__16::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParents$d__16::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17
#include "ModestTree/Util/UnityUtil_-GetParentsAndSelf-d__17.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17.System.IDisposable.Dispose
void ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17.MoveNext
bool ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17.<>m__Finally1
void ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17.System.Collections.Generic.IEnumerator<UnityEngine.Transform>.get_Current
UnityEngine::Transform* ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System_Collections_Generic_IEnumerator$UnityEngine_Transform$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System.Collections.Generic.IEnumerator<UnityEngine.Transform>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Transform>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17.System.Collections.IEnumerator.Reset
void ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17.System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Transform*>* ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System_Collections_Generic_IEnumerable$UnityEngine_Transform$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetParentsAndSelf>d__17.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetParentsAndSelf$d__17::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20
#include "ModestTree/Util/UnityUtil_-GetDirectChildrenAndSelf-d__20.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20.System.IDisposable.Dispose
void ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20.MoveNext
bool ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20.<>m__Finally1
void ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20.System.Collections.Generic.IEnumerator<UnityEngine.GameObject>.get_Current
UnityEngine::GameObject* ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System_Collections_Generic_IEnumerator$UnityEngine_GameObject$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System.Collections.Generic.IEnumerator<UnityEngine.GameObject>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.GameObject>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20.System.Collections.IEnumerator.Reset
void ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20.System.Collections.IEnumerator.get_Current
::Il2CppObject* ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20.System.Collections.Generic.IEnumerable<UnityEngine.GameObject>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::GameObject*>* ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System_Collections_Generic_IEnumerable$UnityEngine_GameObject$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System.Collections.Generic.IEnumerable<UnityEngine.GameObject>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.GameObject>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildrenAndSelf>d__20.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildrenAndSelf$d__20::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21
#include "ModestTree/Util/UnityUtil_-GetDirectChildren-d__21.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21.System.IDisposable.Dispose
void ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21.MoveNext
bool ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21.<>m__Finally1
void ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21.System.Collections.Generic.IEnumerator<UnityEngine.GameObject>.get_Current
UnityEngine::GameObject* ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System_Collections_Generic_IEnumerator$UnityEngine_GameObject$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System.Collections.Generic.IEnumerator<UnityEngine.GameObject>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.GameObject>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21.System.Collections.IEnumerator.Reset
void ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21.System.Collections.Generic.IEnumerable<UnityEngine.GameObject>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::GameObject*>* ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System_Collections_Generic_IEnumerable$UnityEngine_GameObject$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System.Collections.Generic.IEnumerable<UnityEngine.GameObject>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.GameObject>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: ModestTree.Util.UnityUtil/<GetDirectChildren>d__21.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("ModestTree::Util::UnityUtil::$GetDirectChildren$d__21::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScopeTypes
#include "Zenject/ScopeTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ScopeTypes Unset
Zenject::ScopeTypes Zenject::ScopeTypes::_get_Unset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopeTypes::_get_Unset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ScopeTypes>("Zenject", "ScopeTypes", "Unset"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ScopeTypes Unset
void Zenject::ScopeTypes::_set_Unset(Zenject::ScopeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopeTypes::_set_Unset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ScopeTypes", "Unset", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ScopeTypes Transient
Zenject::ScopeTypes Zenject::ScopeTypes::_get_Transient() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopeTypes::_get_Transient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ScopeTypes>("Zenject", "ScopeTypes", "Transient"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ScopeTypes Transient
void Zenject::ScopeTypes::_set_Transient(Zenject::ScopeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopeTypes::_set_Transient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ScopeTypes", "Transient", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ScopeTypes Singleton
Zenject::ScopeTypes Zenject::ScopeTypes::_get_Singleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopeTypes::_get_Singleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ScopeTypes>("Zenject", "ScopeTypes", "Singleton"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ScopeTypes Singleton
void Zenject::ScopeTypes::_set_Singleton(Zenject::ScopeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopeTypes::_set_Singleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ScopeTypes", "Singleton", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ToChoices
#include "Zenject/ToChoices.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ToChoices Self
Zenject::ToChoices Zenject::ToChoices::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ToChoices::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ToChoices>("Zenject", "ToChoices", "Self"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ToChoices Self
void Zenject::ToChoices::_set_Self(Zenject::ToChoices value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ToChoices::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ToChoices", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ToChoices Concrete
Zenject::ToChoices Zenject::ToChoices::_get_Concrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ToChoices::_get_Concrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ToChoices>("Zenject", "ToChoices", "Concrete"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ToChoices Concrete
void Zenject::ToChoices::_set_Concrete(Zenject::ToChoices value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ToChoices::_set_Concrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ToChoices", "Concrete", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InvalidBindResponses
#include "Zenject/InvalidBindResponses.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.InvalidBindResponses Assert
Zenject::InvalidBindResponses Zenject::InvalidBindResponses::_get_Assert() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InvalidBindResponses::_get_Assert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::InvalidBindResponses>("Zenject", "InvalidBindResponses", "Assert"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.InvalidBindResponses Assert
void Zenject::InvalidBindResponses::_set_Assert(Zenject::InvalidBindResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InvalidBindResponses::_set_Assert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InvalidBindResponses", "Assert", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.InvalidBindResponses Skip
Zenject::InvalidBindResponses Zenject::InvalidBindResponses::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InvalidBindResponses::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::InvalidBindResponses>("Zenject", "InvalidBindResponses", "Skip"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.InvalidBindResponses Skip
void Zenject::InvalidBindResponses::_set_Skip(Zenject::InvalidBindResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InvalidBindResponses::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InvalidBindResponses", "Skip", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods None
Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "None"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods None
void Zenject::BindingInheritanceMethods::_set_None(Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods CopyIntoAll
Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_CopyIntoAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_get_CopyIntoAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "CopyIntoAll"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods CopyIntoAll
void Zenject::BindingInheritanceMethods::_set_CopyIntoAll(Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_set_CopyIntoAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "CopyIntoAll", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods CopyDirectOnly
Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_CopyDirectOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_get_CopyDirectOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "CopyDirectOnly"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods CopyDirectOnly
void Zenject::BindingInheritanceMethods::_set_CopyDirectOnly(Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_set_CopyDirectOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "CopyDirectOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods MoveIntoAll
Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_MoveIntoAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_get_MoveIntoAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "MoveIntoAll"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods MoveIntoAll
void Zenject::BindingInheritanceMethods::_set_MoveIntoAll(Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_set_MoveIntoAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "MoveIntoAll", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods MoveDirectOnly
Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_MoveDirectOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_get_MoveDirectOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "MoveDirectOnly"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods MoveDirectOnly
void Zenject::BindingInheritanceMethods::_set_MoveDirectOnly(Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingInheritanceMethods::_set_MoveDirectOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "MoveDirectOnly", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindInfo.Dispose
void Zenject::BindInfo::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindInfo::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindInfo.SetContextInfo
void Zenject::BindInfo::SetContextInfo(::Il2CppString* contextInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindInfo::SetContextInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contextInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, contextInfo);
}
// Autogenerated method: Zenject.BindInfo.Reset
void Zenject::BindInfo::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindInfo::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindStatement.get_BindingInheritanceMethod
Zenject::BindingInheritanceMethods Zenject::BindStatement::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::get_BindingInheritanceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.get_HasFinalizer
bool Zenject::BindStatement::get_HasFinalizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::get_HasFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.SetFinalizer
void Zenject::BindStatement::SetFinalizer(Zenject::IBindingFinalizer* bindingFinalizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::SetFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingFinalizer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindingFinalizer);
}
// Autogenerated method: Zenject.BindStatement.AssertHasFinalizer
void Zenject::BindStatement::AssertHasFinalizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::AssertHasFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertHasFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.AddDisposable
void Zenject::BindStatement::AddDisposable(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::AddDisposable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDisposable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.BindStatement.SpawnBindInfo
Zenject::BindInfo* Zenject::BindStatement::SpawnBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::SpawnBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.FinalizeBinding
void Zenject::BindStatement::FinalizeBinding(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::FinalizeBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.BindStatement.Reset
void Zenject::BindStatement::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.Dispose
void Zenject::BindStatement::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindStatement::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryBindInfo
#include "Zenject/FactoryBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.FactoryBindInfo.get_FactoryType
System::Type* Zenject::FactoryBindInfo::get_FactoryType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactoryBindInfo::get_FactoryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FactoryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryBindInfo.set_FactoryType
void Zenject::FactoryBindInfo::set_FactoryType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactoryBindInfo::set_FactoryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FactoryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FactoryBindInfo.get_ProviderFunc
System::Func_2<Zenject::DiContainer*, Zenject::IProvider*>* Zenject::FactoryBindInfo::get_ProviderFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactoryBindInfo::get_ProviderFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Func_2<Zenject::DiContainer*, Zenject::IProvider*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryBindInfo.set_ProviderFunc
void Zenject::FactoryBindInfo::set_ProviderFunc(System::Func_2<Zenject::DiContainer*, Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactoryBindInfo::set_ProviderFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProviderFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FactoryBindInfo.get_Arguments
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::FactoryBindInfo::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactoryBindInfo::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryBindInfo.set_Arguments
void Zenject::FactoryBindInfo::set_Arguments(System::Collections::Generic::List_1<Zenject::TypeValuePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactoryBindInfo::set_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.GameObjectCreationParameters Default
Zenject::GameObjectCreationParameters* Zenject::GameObjectCreationParameters::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::GameObjectCreationParameters*>("Zenject", "GameObjectCreationParameters", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.GameObjectCreationParameters Default
void Zenject::GameObjectCreationParameters::_set_Default(Zenject::GameObjectCreationParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "GameObjectCreationParameters", "Default", value));
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_Name
::Il2CppString* Zenject::GameObjectCreationParameters::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_Name
void Zenject::GameObjectCreationParameters::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_GroupName
::Il2CppString* Zenject::GameObjectCreationParameters::get_GroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::get_GroupName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_GroupName
void Zenject::GameObjectCreationParameters::set_GroupName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::set_GroupName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_ParentTransform
UnityEngine::Transform* Zenject::GameObjectCreationParameters::get_ParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::get_ParentTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_ParentTransform
void Zenject::GameObjectCreationParameters::set_ParentTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::set_ParentTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_ParentTransformGetter
System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>* Zenject::GameObjectCreationParameters::get_ParentTransformGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::get_ParentTransformGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentTransformGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_ParentTransformGetter
void Zenject::GameObjectCreationParameters::set_ParentTransformGetter(System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::set_ParentTransformGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentTransformGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_Position
System::Nullable_1<UnityEngine::Vector3> Zenject::GameObjectCreationParameters::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_Position
void Zenject::GameObjectCreationParameters::set_Position(System::Nullable_1<UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_Rotation
System::Nullable_1<UnityEngine::Quaternion> Zenject::GameObjectCreationParameters::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<UnityEngine::Quaternion>, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_Rotation
void Zenject::GameObjectCreationParameters::set_Rotation(System::Nullable_1<UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.Equals
bool Zenject::GameObjectCreationParameters::Equals(Zenject::GameObjectCreationParameters* that) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(that)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, that);
}
// Autogenerated method: Zenject.GameObjectCreationParameters..cctor
void Zenject::GameObjectCreationParameters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GameObjectCreationParameters", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.GetHashCode
int Zenject::GameObjectCreationParameters::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.Equals
bool Zenject::GameObjectCreationParameters::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.op_Equality
bool Zenject::operator ==(Zenject::GameObjectCreationParameters* left, Zenject::GameObjectCreationParameters& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GameObjectCreationParameters", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.op_Inequality
bool Zenject::operator !=(Zenject::GameObjectCreationParameters* left, Zenject::GameObjectCreationParameters& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GameObjectCreationParameters", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolExpandMethods
#include "Zenject/PoolExpandMethods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.PoolExpandMethods OneAtATime
Zenject::PoolExpandMethods Zenject::PoolExpandMethods::_get_OneAtATime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolExpandMethods::_get_OneAtATime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::PoolExpandMethods>("Zenject", "PoolExpandMethods", "OneAtATime"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.PoolExpandMethods OneAtATime
void Zenject::PoolExpandMethods::_set_OneAtATime(Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolExpandMethods::_set_OneAtATime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "PoolExpandMethods", "OneAtATime", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.PoolExpandMethods Double
Zenject::PoolExpandMethods Zenject::PoolExpandMethods::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolExpandMethods::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::PoolExpandMethods>("Zenject", "PoolExpandMethods", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.PoolExpandMethods Double
void Zenject::PoolExpandMethods::_set_Double(Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolExpandMethods::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "PoolExpandMethods", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.PoolExpandMethods Disabled
Zenject::PoolExpandMethods Zenject::PoolExpandMethods::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolExpandMethods::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::PoolExpandMethods>("Zenject", "PoolExpandMethods", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.PoolExpandMethods Disabled
void Zenject::PoolExpandMethods::_set_Disabled(Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolExpandMethods::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "PoolExpandMethods", "Disabled", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MemoryPoolBindInfo
#include "Zenject/MemoryPoolBindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.MemoryPoolBindInfo.get_ExpandMethod
Zenject::PoolExpandMethods Zenject::MemoryPoolBindInfo::get_ExpandMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolBindInfo::get_ExpandMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpandMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::PoolExpandMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.set_ExpandMethod
void Zenject::MemoryPoolBindInfo::set_ExpandMethod(Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolBindInfo::set_ExpandMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpandMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.get_InitialSize
int Zenject::MemoryPoolBindInfo::get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolBindInfo::get_InitialSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitialSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.set_InitialSize
void Zenject::MemoryPoolBindInfo::set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolBindInfo::set_InitialSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InitialSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.get_MaxSize
int Zenject::MemoryPoolBindInfo::get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolBindInfo::get_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.set_MaxSize
void Zenject::MemoryPoolBindInfo::set_MaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolBindInfo::set_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ArgConditionCopyNonLazyBinder.WithArguments
Zenject::InstantiateCallbackConditionCopyNonLazyBinder* Zenject::ArgConditionCopyNonLazyBinder::WithArguments(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ArgConditionCopyNonLazyBinder::WithArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InstantiateCallbackConditionCopyNonLazyBinder*, false>(this, ___internal__method, args);
}
// Autogenerated method: Zenject.ArgConditionCopyNonLazyBinder.WithArgumentsExplicit
Zenject::InstantiateCallbackConditionCopyNonLazyBinder* Zenject::ArgConditionCopyNonLazyBinder::WithArgumentsExplicit(System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ArgConditionCopyNonLazyBinder::WithArgumentsExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithArgumentsExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InstantiateCallbackConditionCopyNonLazyBinder*, false>(this, ___internal__method, extraArgs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConcreteBinderNonGeneric
#include "Zenject/ConcreteBinderNonGeneric.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConventionSelectTypesBinder
#include "Zenject/ConventionSelectTypesBinder.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.ToSelf
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::ToSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConcreteBinderNonGeneric::ToSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(::Array<System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConcreteBinderNonGeneric::To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, concreteTypes);
}
// Creating initializer_list -> params proxy for: Zenject.FromBinderNonGeneric To(params System.Type[] concreteTypes)
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(std::initializer_list<System::Type*> concreteTypes) {
  return Zenject::ConcreteBinderNonGeneric::To(::Array<System::Type*>::New(concreteTypes));
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(System::Collections::Generic::IEnumerable_1<System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConcreteBinderNonGeneric::To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, concreteTypes);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(System::Action_1<Zenject::ConventionSelectTypesBinder*>* generator) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConcreteBinderNonGeneric::To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(generator)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, generator);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.<ToSelf>b__1_0
Zenject::IProvider* Zenject::ConcreteBinderNonGeneric::$ToSelf$b__1_0(Zenject::DiContainer* container, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConcreteBinderNonGeneric::<ToSelf>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToSelf>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConcreteIdBinderNonGeneric
#include "Zenject/ConcreteIdBinderNonGeneric.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConcreteIdBinderNonGeneric.WithId
Zenject::ConcreteBinderNonGeneric* Zenject::ConcreteIdBinderNonGeneric::WithId(::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConcreteIdBinderNonGeneric::WithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteBinderNonGeneric*, false>(this, ___internal__method, identifier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConcreteIdArgConditionCopyNonLazyBinder.WithConcreteId
Zenject::ArgConditionCopyNonLazyBinder* Zenject::ConcreteIdArgConditionCopyNonLazyBinder::WithConcreteId(::Il2CppObject* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConcreteIdArgConditionCopyNonLazyBinder::WithConcreteId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithConcreteId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConditionCopyNonLazyBinder
#include "Zenject/ConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass2_0
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass2_0.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass3_0
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass3_0.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass3_1
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass3_1.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/<>c__4`1
#include "Zenject/ConditionCopyNonLazyBinder_--c__4_1.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/<>c__5`1
#include "Zenject/ConditionCopyNonLazyBinder_--c__5_1.hpp"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder.When
Zenject::CopyNonLazyBinder* Zenject::ConditionCopyNonLazyBinder::When(Zenject::BindingCondition* condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConditionCopyNonLazyBinder::When");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "When", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, condition);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder.WhenInjectedIntoInstance
Zenject::CopyNonLazyBinder* Zenject::ConditionCopyNonLazyBinder::WhenInjectedIntoInstance(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConditionCopyNonLazyBinder::WhenInjectedIntoInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenInjectedIntoInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder.WhenInjectedInto
Zenject::CopyNonLazyBinder* Zenject::ConditionCopyNonLazyBinder::WhenInjectedInto(::Array<System::Type*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConditionCopyNonLazyBinder::WhenInjectedInto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenInjectedInto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, targets);
}
// Creating initializer_list -> params proxy for: Zenject.CopyNonLazyBinder WhenInjectedInto(params System.Type[] targets)
Zenject::CopyNonLazyBinder* Zenject::ConditionCopyNonLazyBinder::WhenInjectedInto(std::initializer_list<System::Type*> targets) {
  return Zenject::ConditionCopyNonLazyBinder::WhenInjectedInto(::Array<System::Type*>::New(targets));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass2_0
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass2_0.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass2_0.<WhenInjectedIntoInstance>b__0
bool Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::$WhenInjectedIntoInstance$b__0(Zenject::InjectContext* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::<WhenInjectedIntoInstance>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WhenInjectedIntoInstance>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass3_0
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass3_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass3_0.<WhenInjectedInto>b__0
bool Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::$WhenInjectedInto$b__0(Zenject::InjectContext* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::<WhenInjectedInto>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WhenInjectedInto>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass3_1
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass3_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/<>c__DisplayClass3_1.<WhenInjectedInto>b__1
bool Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::$WhenInjectedInto$b__1(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::<WhenInjectedInto>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WhenInjectedInto>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionAssemblySelectionBinder
#include "Zenject/ConventionAssemblySelectionBinder.hpp"
// Including type: Zenject.ConventionAssemblySelectionBinder/<>c
#include "Zenject/ConventionAssemblySelectionBinder_--c.hpp"
// Including type: Zenject.ConventionAssemblySelectionBinder/<>c__DisplayClass12_0
#include "Zenject/ConventionAssemblySelectionBinder_--c__DisplayClass12_0.hpp"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.get_BindInfo
Zenject::ConventionBindInfo* Zenject::ConventionAssemblySelectionBinder::get_BindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::get_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionBindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.set_BindInfo
void Zenject::ConventionAssemblySelectionBinder::set_BindInfo(Zenject::ConventionBindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::set_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAllAssemblies
void Zenject::ConventionAssemblySelectionBinder::FromAllAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::FromAllAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAllAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssembliesContaining
void Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining(::Array<System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssembliesContaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, types);
}
// Creating initializer_list -> params proxy for: System.Void FromAssembliesContaining(params System.Type[] types)
void Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining(std::initializer_list<System::Type*> types) {
  Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining(::Array<System::Type*>::New(types));
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssembliesContaining
void Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssembliesContaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, types);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromThisAssembly
void Zenject::ConventionAssemblySelectionBinder::FromThisAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::FromThisAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromThisAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssembly
void Zenject::ConventionAssemblySelectionBinder::FromAssembly(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::FromAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssemblies
void Zenject::ConventionAssemblySelectionBinder::FromAssemblies(::Array<System::Reflection::Assembly*>* assemblies) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::FromAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblies)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, assemblies);
}
// Creating initializer_list -> params proxy for: System.Void FromAssemblies(params System.Reflection.Assembly[] assemblies)
void Zenject::ConventionAssemblySelectionBinder::FromAssemblies(std::initializer_list<System::Reflection::Assembly*> assemblies) {
  Zenject::ConventionAssemblySelectionBinder::FromAssemblies(::Array<System::Reflection::Assembly*>::New(assemblies));
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssemblies
void Zenject::ConventionAssemblySelectionBinder::FromAssemblies(System::Collections::Generic::IEnumerable_1<System::Reflection::Assembly*>* assemblies) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::FromAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblies)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, assemblies);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssembliesWhere
void Zenject::ConventionAssemblySelectionBinder::FromAssembliesWhere(System::Func_2<System::Reflection::Assembly*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::FromAssembliesWhere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssembliesWhere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, predicate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionAssemblySelectionBinder/<>c
#include "Zenject/ConventionAssemblySelectionBinder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.ConventionAssemblySelectionBinder/<>c <>9
Zenject::ConventionAssemblySelectionBinder::$$c* Zenject::ConventionAssemblySelectionBinder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::ConventionAssemblySelectionBinder::$$c*>("Zenject", "ConventionAssemblySelectionBinder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.ConventionAssemblySelectionBinder/<>c <>9
void Zenject::ConventionAssemblySelectionBinder::$$c::_set_$$9(Zenject::ConventionAssemblySelectionBinder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionAssemblySelectionBinder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Reflection.Assembly> <>9__8_0
System::Func_2<System::Type*, System::Reflection::Assembly*>* Zenject::ConventionAssemblySelectionBinder::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, System::Reflection::Assembly*>*>("Zenject", "ConventionAssemblySelectionBinder/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Reflection.Assembly> <>9__8_0
void Zenject::ConventionAssemblySelectionBinder::$$c::_set_$$9__8_0(System::Func_2<System::Type*, System::Reflection::Assembly*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionAssemblySelectionBinder/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/<>c..cctor
void Zenject::ConventionAssemblySelectionBinder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionAssemblySelectionBinder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/<>c.<FromAssembliesContaining>b__8_0
System::Reflection::Assembly* Zenject::ConventionAssemblySelectionBinder::$$c::$FromAssembliesContaining$b__8_0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::$$c::<FromAssembliesContaining>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromAssembliesContaining>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionAssemblySelectionBinder/<>c__DisplayClass12_0
#include "Zenject/ConventionAssemblySelectionBinder_--c__DisplayClass12_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/<>c__DisplayClass12_0.<FromAssemblies>b__0
bool Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::$FromAssemblies$b__0(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::<FromAssemblies>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromAssemblies>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, assembly);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
// Including type: Zenject.ConventionBindInfo/<>c__DisplayClass6_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass6_0.hpp"
// Including type: Zenject.ConventionBindInfo/<>c__DisplayClass7_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass7_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Reflection.Assembly,System.Type[]> _assemblyTypeCache
System::Collections::Generic::Dictionary_2<System::Reflection::Assembly*, ::Array<System::Type*>*>* Zenject::ConventionBindInfo::_get__assemblyTypeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::_get__assemblyTypeCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Reflection::Assembly*, ::Array<System::Type*>*>*>("Zenject", "ConventionBindInfo", "_assemblyTypeCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Reflection.Assembly,System.Type[]> _assemblyTypeCache
void Zenject::ConventionBindInfo::_set__assemblyTypeCache(System::Collections::Generic::Dictionary_2<System::Reflection::Assembly*, ::Array<System::Type*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::_set__assemblyTypeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ConventionBindInfo", "_assemblyTypeCache", value));
}
// Autogenerated method: Zenject.ConventionBindInfo.AddAssemblyFilter
void Zenject::ConventionBindInfo::AddAssemblyFilter(System::Func_2<System::Reflection::Assembly*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::AddAssemblyFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAssemblyFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionBindInfo.AddTypeFilter
void Zenject::ConventionBindInfo::AddTypeFilter(System::Func_2<System::Type*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::AddTypeFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTypeFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionBindInfo.GetAllAssemblies
System::Collections::Generic::IEnumerable_1<System::Reflection::Assembly*>* Zenject::ConventionBindInfo::GetAllAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::GetAllAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Reflection::Assembly*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo.ShouldIncludeAssembly
bool Zenject::ConventionBindInfo::ShouldIncludeAssembly(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::ShouldIncludeAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldIncludeAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionBindInfo.ShouldIncludeType
bool Zenject::ConventionBindInfo::ShouldIncludeType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::ShouldIncludeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldIncludeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.ConventionBindInfo.GetTypes
::Array<System::Type*>* Zenject::ConventionBindInfo::GetTypes(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::GetTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionBindInfo.ResolveTypes
System::Collections::Generic::List_1<System::Type*>* Zenject::ConventionBindInfo::ResolveTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::ResolveTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo..cctor
void Zenject::ConventionBindInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionBindInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo.<ResolveTypes>b__9_0
System::Collections::Generic::IEnumerable_1<System::Type*>* Zenject::ConventionBindInfo::$ResolveTypes$b__9_0(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::<ResolveTypes>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveTypes>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Type*>*, false>(this, ___internal__method, assembly);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionBindInfo/<>c__DisplayClass6_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass6_0.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionBindInfo/<>c__DisplayClass6_0.<ShouldIncludeAssembly>b__0
bool Zenject::ConventionBindInfo::$$c__DisplayClass6_0::$ShouldIncludeAssembly$b__0(System::Func_2<System::Reflection::Assembly*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::$$c__DisplayClass6_0::<ShouldIncludeAssembly>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShouldIncludeAssembly>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, predicate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionBindInfo/<>c__DisplayClass7_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass7_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionBindInfo/<>c__DisplayClass7_0.<ShouldIncludeType>b__0
bool Zenject::ConventionBindInfo::$$c__DisplayClass7_0::$ShouldIncludeType$b__0(System::Func_2<System::Type*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionBindInfo::$$c__DisplayClass7_0::<ShouldIncludeType>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShouldIncludeType>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, predicate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder
#include "Zenject/ConventionFilterTypesBinder.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass2_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass2_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass4_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass4_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass6_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass6_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass8_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass8_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass9_0`1
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass9_0_1.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass13_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass13_1
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_1.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass14_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass14_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass15_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass15_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass18_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass18_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder.DerivingFromOrEqual
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::DerivingFromOrEqual(System::Type* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::DerivingFromOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DerivingFromOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, parentType);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.DerivingFrom
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::DerivingFrom(System::Type* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::DerivingFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DerivingFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, parentType);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithAttribute
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithAttribute(System::Type* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::WithAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithoutAttribute
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithoutAttribute(System::Type* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::WithoutAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithoutAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.Where
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::Where(System::Func_2<System::Type*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::Where");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Where", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespace
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespace(::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::InNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, ns);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespaces
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespaces(::Array<::Il2CppString*>* namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::InNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaces)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, namespaces);
}
// Creating initializer_list -> params proxy for: Zenject.ConventionFilterTypesBinder InNamespaces(params System.String[] namespaces)
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespaces(std::initializer_list<::Il2CppString*> namespaces) {
  return Zenject::ConventionFilterTypesBinder::InNamespaces(::Array<::Il2CppString*>::New(namespaces));
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespaces
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespaces(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::InNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaces)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, namespaces);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithSuffix
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithSuffix(::Il2CppString* suffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::WithSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suffix)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, suffix);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithPrefix
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithPrefix(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::WithPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, prefix);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, pattern);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(::Il2CppString* pattern, System::Text::RegularExpressions::RegexOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, pattern, options);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(System::Text::RegularExpressions::Regex* regex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, regex);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.IsInNamespace
bool Zenject::ConventionFilterTypesBinder::IsInNamespace(System::Type* type, ::Il2CppString* requiredNs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::IsInNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder", "IsInNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(requiredNs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, requiredNs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass2_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass2_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass2_0.<DerivingFromOrEqual>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::$DerivingFromOrEqual$b__0(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::<DerivingFromOrEqual>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DerivingFromOrEqual>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass4_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass4_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass4_0.<DerivingFrom>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::$DerivingFrom$b__0(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::<DerivingFrom>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DerivingFrom>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass6_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass6_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass6_0.<WithAttribute>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::$WithAttribute$b__0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::<WithAttribute>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WithAttribute>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass8_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass8_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass8_0.<WithoutAttribute>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::$WithoutAttribute$b__0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::<WithoutAttribute>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WithoutAttribute>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass13_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass13_0.<InNamespaces>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::$InNamespaces$b__0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::<InNamespaces>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InNamespaces>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass13_1
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass13_1.<InNamespaces>b__1
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::$InNamespaces$b__1(::Il2CppString* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::<InNamespaces>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InNamespaces>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass14_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass14_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass14_0.<WithSuffix>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::$WithSuffix$b__0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::<WithSuffix>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WithSuffix>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass15_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass15_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass15_0.<WithPrefix>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::$WithPrefix$b__0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::<WithPrefix>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WithPrefix>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass18_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass18_0.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass18_0.<MatchingRegex>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::$MatchingRegex$b__0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::<MatchingRegex>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MatchingRegex>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionSelectTypesBinder
#include "Zenject/ConventionSelectTypesBinder.hpp"
// Including type: Zenject.ConventionSelectTypesBinder/<>c
#include "Zenject/ConventionSelectTypesBinder_--c.hpp"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
// Including type: Zenject.ConventionFilterTypesBinder
#include "Zenject/ConventionFilterTypesBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionSelectTypesBinder.CreateNextBinder
Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::CreateNextBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::CreateNextBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNextBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllTypes
Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::AllTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllClasses
Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllClasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::AllClasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllClasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllNonAbstractClasses
Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllNonAbstractClasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::AllNonAbstractClasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllNonAbstractClasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllAbstractClasses
Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllAbstractClasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::AllAbstractClasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllAbstractClasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllInterfaces
Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::AllInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionSelectTypesBinder/<>c
#include "Zenject/ConventionSelectTypesBinder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.ConventionSelectTypesBinder/<>c <>9
Zenject::ConventionSelectTypesBinder::$$c* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::ConventionSelectTypesBinder::$$c*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.ConventionSelectTypesBinder/<>c <>9
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9(Zenject::ConventionSelectTypesBinder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__4_0
System::Func_2<System::Type*, bool>* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__4_0
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__4_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__5_0
System::Func_2<System::Type*, bool>* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__5_0
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__5_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__5_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__6_0
System::Func_2<System::Type*, bool>* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__6_0
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__6_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__7_0
System::Func_2<System::Type*, bool>* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__7_0
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__7_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__7_0", value)));
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/<>c..cctor
void Zenject::ConventionSelectTypesBinder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionSelectTypesBinder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/<>c.<AllClasses>b__4_0
bool Zenject::ConventionSelectTypesBinder::$$c::$AllClasses$b__4_0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::<AllClasses>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllClasses>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/<>c.<AllNonAbstractClasses>b__5_0
bool Zenject::ConventionSelectTypesBinder::$$c::$AllNonAbstractClasses$b__5_0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::<AllNonAbstractClasses>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllNonAbstractClasses>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/<>c.<AllAbstractClasses>b__6_0
bool Zenject::ConventionSelectTypesBinder::$$c::$AllAbstractClasses$b__6_0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::<AllAbstractClasses>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllAbstractClasses>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/<>c.<AllInterfaces>b__7_0
bool Zenject::ConventionSelectTypesBinder::$$c::$AllInterfaces$b__7_0(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ConventionSelectTypesBinder::$$c::<AllInterfaces>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllInterfaces>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.CopyNonLazyBinder
#include "Zenject/CopyNonLazyBinder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.CopyNonLazyBinder.AddSecondaryCopyBindInfo
void Zenject::CopyNonLazyBinder::AddSecondaryCopyBindInfo(Zenject::BindInfo* bindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CopyNonLazyBinder::AddSecondaryCopyBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSecondaryCopyBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindInfo);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.CopyIntoAllSubContainers
Zenject::NonLazyBinder* Zenject::CopyNonLazyBinder::CopyIntoAllSubContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CopyNonLazyBinder::CopyIntoAllSubContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIntoAllSubContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.CopyIntoDirectSubContainers
Zenject::NonLazyBinder* Zenject::CopyNonLazyBinder::CopyIntoDirectSubContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CopyNonLazyBinder::CopyIntoDirectSubContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIntoDirectSubContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.MoveIntoAllSubContainers
Zenject::NonLazyBinder* Zenject::CopyNonLazyBinder::MoveIntoAllSubContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CopyNonLazyBinder::MoveIntoAllSubContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveIntoAllSubContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.MoveIntoDirectSubContainers
Zenject::NonLazyBinder* Zenject::CopyNonLazyBinder::MoveIntoDirectSubContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CopyNonLazyBinder::MoveIntoDirectSubContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveIntoDirectSubContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.SetInheritanceMethod
void Zenject::CopyNonLazyBinder::SetInheritanceMethod(Zenject::BindingInheritanceMethods method) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CopyNonLazyBinder::SetInheritanceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.get_SubContainerCreatorBindInfo
Zenject::SubContainerCreatorBindInfo* Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::get_SubContainerCreatorBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::get_SubContainerCreatorBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubContainerCreatorBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SubContainerCreatorBindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.set_SubContainerCreatorBindInfo
void Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::set_SubContainerCreatorBindInfo(Zenject::SubContainerCreatorBindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::set_SubContainerCreatorBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SubContainerCreatorBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.WithDefaultGameObjectParent
Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::WithDefaultGameObjectParent(::Il2CppString* defaultParentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::WithDefaultGameObjectParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithDefaultGameObjectParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultParentName)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, defaultParentName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder0Extensions
#include "Zenject/FactoryFromBinder0Extensions.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/<>c__DisplayClass0_0`2
#include "Zenject/FactoryFromBinder0Extensions_--c__DisplayClass0_0_2.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/<>c__1`1
#include "Zenject/FactoryFromBinder0Extensions_--c__1_1.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/<>c__3`1
#include "Zenject/FactoryFromBinder0Extensions_--c__3_1.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/<>c__5`2
#include "Zenject/FactoryFromBinder0Extensions_--c__5_2.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/<>c__DisplayClass6_0`1
#include "Zenject/FactoryFromBinder0Extensions_--c__DisplayClass6_0_1.hpp"
// Including type: Zenject.IPoolable`1
#include "Zenject/IPoolable_1.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPool`2
#include "Zenject/MemoryPool_2.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`1
#include "Zenject/FactoryFromBinder_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`1
#include "Zenject/IFactory_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder1Extensions
#include "Zenject/FactoryFromBinder1Extensions.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/<>c__DisplayClass0_0`2
#include "Zenject/FactoryFromBinder1Extensions_--c__DisplayClass0_0_2.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/<>c__1`2
#include "Zenject/FactoryFromBinder1Extensions_--c__1_2.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/<>c__3`2
#include "Zenject/FactoryFromBinder1Extensions_--c__3_2.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/<>c__5`3
#include "Zenject/FactoryFromBinder1Extensions_--c__5_3.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/<>c__DisplayClass6_0`3
#include "Zenject/FactoryFromBinder1Extensions_--c__DisplayClass6_0_3.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`2
#include "Zenject/FactoryFromBinder_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`2
#include "Zenject/IFactory_2.hpp"
// Including type: Zenject.IPoolable`2
#include "Zenject/IPoolable_2.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.MemoryPool`3
#include "Zenject/MemoryPool_3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
