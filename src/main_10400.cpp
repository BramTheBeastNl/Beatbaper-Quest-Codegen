// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectUtil
#include "Zenject/InjectUtil.hpp"
// Including type: Zenject.InjectUtil/<>c
#include "Zenject/InjectUtil_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InjectUtil.CreateArgList
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::InjectUtil::CreateArgList(System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InjectUtil").WithContext("CreateArgList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "InjectUtil", "CreateArgList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: Zenject.InjectUtil.PopValueWithType
bool Zenject::InjectUtil::PopValueWithType(System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgMap, System::Type* injectedFieldType, ::Il2CppObject*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InjectUtil").WithContext("PopValueWithType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "InjectUtil", "PopValueWithType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(extraArgMap, injectedFieldType, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, extraArgMap, injectedFieldType, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectUtil/<>c
#include "Zenject/InjectUtil_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.InjectUtil/<>c <>9
Zenject::InjectUtil::$$c* Zenject::InjectUtil::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InjectUtil::$$c*>("Zenject", "InjectUtil/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.InjectUtil/<>c <>9
void Zenject::InjectUtil::$$c::_set_$$9(Zenject::InjectUtil::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InjectUtil/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,Zenject.TypeValuePair> <>9__0_0
System::Func_2<::Il2CppObject*, Zenject::TypeValuePair>* Zenject::InjectUtil::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, Zenject::TypeValuePair>*>("Zenject", "InjectUtil/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,Zenject.TypeValuePair> <>9__0_0
void Zenject::InjectUtil::$$c::_set_$$9__0_0(System::Func_2<::Il2CppObject*, Zenject::TypeValuePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InjectUtil/<>c", "<>9__0_0", value)));
}
// Autogenerated method: Zenject.InjectUtil/<>c..cctor
void Zenject::InjectUtil::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.InjectUtil/<>c.<CreateArgList>b__0_0
Zenject::TypeValuePair Zenject::InjectUtil::$$c::$CreateArgList$b__0_0(::Il2CppObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<CreateArgList>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateArgList>b__0_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::TypeValuePair, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Context
#include "Zenject/Context.hpp"
// Including type: Zenject.Context/<>c
#include "Zenject/Context_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.ScriptableObjectInstaller
#include "Zenject/ScriptableObjectInstaller.hpp"
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
// Including type: Zenject.InstallerBase
#include "Zenject/InstallerBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.ZenjectBinding
#include "Zenject/ZenjectBinding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.Context.get_Installers
System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* Zenject::Context::get_Installers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("get_Installers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Installers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_Installers
void Zenject::Context::set_Installers(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("set_Installers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Installers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_InstallerPrefabs
System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* Zenject::Context::get_InstallerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("get_InstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InstallerPrefabs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_InstallerPrefabs
void Zenject::Context::set_InstallerPrefabs(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("set_InstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_InstallerPrefabs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_ScriptableObjectInstallers
System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* Zenject::Context::get_ScriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("get_ScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_ScriptableObjectInstallers
void Zenject::Context::set_ScriptableObjectInstallers(System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("set_ScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_NormalInstallerTypes
System::Collections::Generic::IEnumerable_1<System::Type*>* Zenject::Context::get_NormalInstallerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("get_NormalInstallerTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NormalInstallerTypes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_NormalInstallerTypes
void Zenject::Context::set_NormalInstallerTypes(System::Collections::Generic::IEnumerable_1<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("set_NormalInstallerTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_NormalInstallerTypes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_NormalInstallers
System::Collections::Generic::IEnumerable_1<Zenject::InstallerBase*>* Zenject::Context::get_NormalInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("get_NormalInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NormalInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::InstallerBase*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_NormalInstallers
void Zenject::Context::set_NormalInstallers(System::Collections::Generic::IEnumerable_1<Zenject::InstallerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("set_NormalInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_NormalInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_Container
Zenject::DiContainer* Zenject::Context::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::Context::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.AddNormalInstallerType
void Zenject::Context::AddNormalInstallerType(System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("AddNormalInstallerType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddNormalInstallerType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(installerType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.Context.AddNormalInstaller
void Zenject::Context::AddNormalInstaller(Zenject::InstallerBase* installer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("AddNormalInstaller");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddNormalInstaller", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(installer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, installer);
}
// Autogenerated method: Zenject.Context.CheckInstallerPrefabTypes
void Zenject::Context::CheckInstallerPrefabTypes(System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installerPrefabs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("CheckInstallerPrefabTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckInstallerPrefabTypes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(installers, installerPrefabs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, installers, installerPrefabs);
}
// Autogenerated method: Zenject.Context.InstallInstallers
void Zenject::Context::InstallInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("InstallInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.InstallInstallers
void Zenject::Context::InstallInstallers(System::Collections::Generic::List_1<Zenject::InstallerBase*>* normalInstallers, System::Collections::Generic::List_1<System::Type*>* normalInstallerTypes, System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* scriptableObjectInstallers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installerPrefabs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("InstallInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(normalInstallers, normalInstallerTypes, scriptableObjectInstallers, installers, installerPrefabs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, normalInstallers, normalInstallerTypes, scriptableObjectInstallers, installers, installerPrefabs);
}
// Autogenerated method: Zenject.Context.InstallSceneBindings
void Zenject::Context::InstallSceneBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("InstallSceneBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallSceneBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectableMonoBehaviours)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.Context.InstallZenjectBinding
void Zenject::Context::InstallZenjectBinding(Zenject::ZenjectBinding* binding) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("InstallZenjectBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallZenjectBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(binding)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, binding);
}
// Autogenerated method: Zenject.Context.GetInjectableMonoBehaviours
void Zenject::Context::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("Context").WithContext("GetInjectableMonoBehaviours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(components)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, components);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Context/<>c
#include "Zenject/Context_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.Context/<>c <>9
Zenject::Context::$$c* Zenject::Context::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::Context::$$c*>("Zenject", "Context/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.Context/<>c <>9
void Zenject::Context::$$c::_set_$$9(Zenject::Context::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "Context/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__16_0
System::Func_2<System::Type*, bool>* Zenject::Context::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "Context/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__16_0
void Zenject::Context::$$c::_set_$$9__16_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "Context/<>c", "<>9__16_0", value)));
}
// Autogenerated method: Zenject.Context/<>c..cctor
void Zenject::Context::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "Context/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Context/<>c.<set_NormalInstallerTypes>b__16_0
bool Zenject::Context::$$c::$set_NormalInstallerTypes$b__16_0(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<set_NormalInstallerTypes>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_NormalInstallerTypes>b__16_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Zenject.MonoKernel
#include "Zenject/MonoKernel.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GameObjectContext.add_PreInstall
void Zenject::GameObjectContext::add_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PreInstall
void Zenject::GameObjectContext::remove_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PostInstall
void Zenject::GameObjectContext::add_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PostInstall
void Zenject::GameObjectContext::remove_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PreResolve
void Zenject::GameObjectContext::add_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PreResolve
void Zenject::GameObjectContext::remove_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PostResolve
void Zenject::GameObjectContext::add_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PostResolve
void Zenject::GameObjectContext::remove_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.Construct
void Zenject::GameObjectContext::Construct(Zenject::DiContainer* parentContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentContainer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentContainer);
}
// Autogenerated method: Zenject.GameObjectContext.InstallBindings
void Zenject::GameObjectContext::InstallBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectableMonoBehaviours)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.GameObjectContext.get_Container
Zenject::DiContainer* Zenject::GameObjectContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::GameObjectContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.RunInternal
void Zenject::GameObjectContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("RunInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.GetInjectableMonoBehaviours
void Zenject::GameObjectContext::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GameObjectContext").WithContext("GetInjectableMonoBehaviours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(monoBehaviours)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ProjectContext
#include "Zenject/ProjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String ProjectContextResourcePath
::Il2CppString* Zenject::ProjectContext::_get_ProjectContextResourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("_get_ProjectContextResourcePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "ProjectContext", "ProjectContextResourcePath"));
}
// Autogenerated static field setter
// Set static field: static public System.String ProjectContextResourcePath
void Zenject::ProjectContext::_set_ProjectContextResourcePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("_set_ProjectContextResourcePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "ProjectContextResourcePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ProjectContextResourcePathOld
::Il2CppString* Zenject::ProjectContext::_get_ProjectContextResourcePathOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("_get_ProjectContextResourcePathOld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "ProjectContext", "ProjectContextResourcePathOld"));
}
// Autogenerated static field setter
// Set static field: static public System.String ProjectContextResourcePathOld
void Zenject::ProjectContext::_set_ProjectContextResourcePathOld(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("_set_ProjectContextResourcePathOld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "ProjectContextResourcePathOld", value));
}
// Autogenerated static field getter
// Get static field: static private Zenject.ProjectContext _instance
Zenject::ProjectContext* Zenject::ProjectContext::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ProjectContext*>("Zenject", "ProjectContext", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Zenject.ProjectContext _instance
void Zenject::ProjectContext::_set__instance(Zenject::ProjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "_instance", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD94644
// Autogenerated static field getter
// Get static field: static private System.Boolean <ValidateOnNextRun>k__BackingField
bool Zenject::ProjectContext::_get_$ValidateOnNextRun$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("_get_$ValidateOnNextRun$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("Zenject", "ProjectContext", "<ValidateOnNextRun>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <ValidateOnNextRun>k__BackingField
void Zenject::ProjectContext::_set_$ValidateOnNextRun$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("_set_$ValidateOnNextRun$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "<ValidateOnNextRun>k__BackingField", value));
}
// Autogenerated method: Zenject.ProjectContext.add_PreInstall
void Zenject::ProjectContext::add_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PreInstall
void Zenject::ProjectContext::remove_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PostInstall
void Zenject::ProjectContext::add_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PostInstall
void Zenject::ProjectContext::remove_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PreResolve
void Zenject::ProjectContext::add_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PreResolve
void Zenject::ProjectContext::remove_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PostResolve
void Zenject::ProjectContext::add_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PostResolve
void Zenject::ProjectContext::remove_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.get_HasInstance
bool Zenject::ProjectContext::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_HasInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.get_Instance
Zenject::ProjectContext* Zenject::ProjectContext::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("get_Instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_Instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ProjectContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.get_ValidateOnNextRun
bool Zenject::ProjectContext::get_ValidateOnNextRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("get_ValidateOnNextRun");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_ValidateOnNextRun", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.set_ValidateOnNextRun
void Zenject::ProjectContext::set_ValidateOnNextRun(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("set_ValidateOnNextRun");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "set_ValidateOnNextRun", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.TryGetPrefab
UnityEngine::GameObject* Zenject::ProjectContext::TryGetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("TryGetPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "TryGetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.InstantiateAndInitialize
void Zenject::ProjectContext::InstantiateAndInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("InstantiateAndInitialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "InstantiateAndInitialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.get_ParentNewObjectsUnderContext
bool Zenject::ProjectContext::get_ParentNewObjectsUnderContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("get_ParentNewObjectsUnderContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ParentNewObjectsUnderContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.set_ParentNewObjectsUnderContext
void Zenject::ProjectContext::set_ParentNewObjectsUnderContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("set_ParentNewObjectsUnderContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ParentNewObjectsUnderContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.EnsureIsInitialized
void Zenject::ProjectContext::EnsureIsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("EnsureIsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureIsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.Awake
void Zenject::ProjectContext::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.Initialize
void Zenject::ProjectContext::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.InstallBindings
void Zenject::ProjectContext::InstallBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectableMonoBehaviours)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.ProjectContext.get_Container
Zenject::DiContainer* Zenject::ProjectContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::ProjectContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.GetInjectableMonoBehaviours
void Zenject::ProjectContext::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProjectContext").WithContext("GetInjectableMonoBehaviours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(monoBehaviours)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.RunnableContext
#include "Zenject/RunnableContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _staticAutoRun
bool Zenject::RunnableContext::_get__staticAutoRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RunnableContext").WithContext("_get__staticAutoRun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Zenject", "RunnableContext", "_staticAutoRun"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _staticAutoRun
void Zenject::RunnableContext::_set__staticAutoRun(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RunnableContext").WithContext("_set__staticAutoRun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "RunnableContext", "_staticAutoRun", value));
}
// Autogenerated method: Zenject.RunnableContext.get_Initialized
bool Zenject::RunnableContext::get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RunnableContext").WithContext("get_Initialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Initialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.set_Initialized
void Zenject::RunnableContext::set_Initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RunnableContext").WithContext("set_Initialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Initialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.RunnableContext.Initialize
void Zenject::RunnableContext::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RunnableContext").WithContext("Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.Run
void Zenject::RunnableContext::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RunnableContext").WithContext("Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.RunInternal
void Zenject::RunnableContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RunnableContext").WithContext("RunInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext..cctor
void Zenject::RunnableContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RunnableContext").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "RunnableContext", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
// Including type: Zenject.SceneContext/<>c__DisplayClass48_0
#include "Zenject/SceneContext_--c__DisplayClass48_0.hpp"
// Including type: Zenject.SceneContext/<>c
#include "Zenject/SceneContext_--c.hpp"
// Including type: Zenject.SceneContext/<>c__DisplayClass50_0
#include "Zenject/SceneContext_--c__DisplayClass50_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsEarlyInstallMethod
System::Action_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsEarlyInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("_get_ExtraBindingsEarlyInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsEarlyInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsEarlyInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsEarlyInstallMethod(System::Action_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("_set_ExtraBindingsEarlyInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsEarlyInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsInstallMethod
System::Action_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("_get_ExtraBindingsInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsInstallMethod(System::Action_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("_set_ExtraBindingsInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsLateInstallMethod
System::Action_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsLateInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("_get_ExtraBindingsLateInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsLateInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsLateInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsLateInstallMethod(System::Action_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("_set_ExtraBindingsLateInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsLateInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> ParentContainers
System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ParentContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("_get_ParentContainers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ParentContainers"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> ParentContainers
void Zenject::SceneContext::_set_ParentContainers(System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("_set_ParentContainers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ParentContainers", value));
}
// Autogenerated method: Zenject.SceneContext.add_PreInstall
void Zenject::SceneContext::add_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PreInstall
void Zenject::SceneContext::remove_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PostInstall
void Zenject::SceneContext::add_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PostInstall
void Zenject::SceneContext::remove_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PreResolve
void Zenject::SceneContext::add_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PreResolve
void Zenject::SceneContext::remove_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PostResolve
void Zenject::SceneContext::add_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PostResolve
void Zenject::SceneContext::remove_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.get_HasResolved
bool Zenject::SceneContext::get_HasResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("get_HasResolved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasResolved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_HasInstalled
bool Zenject::SceneContext::get_HasInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("get_HasInstalled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasInstalled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_IsValidating
bool Zenject::SceneContext::get_IsValidating() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("get_IsValidating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsValidating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_ContractNames
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* Zenject::SceneContext::get_ContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("get_ContractNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ContractNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ContractNames
void Zenject::SceneContext::set_ContractNames(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("set_ContractNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ContractNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.get_ParentContractNames
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* Zenject::SceneContext::get_ParentContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("get_ParentContractNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ParentContractNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ParentContractNames
void Zenject::SceneContext::set_ParentContractNames(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("set_ParentContractNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ParentContractNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.get_ParentNewObjectsUnderSceneContext
bool Zenject::SceneContext::get_ParentNewObjectsUnderSceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("get_ParentNewObjectsUnderSceneContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ParentNewObjectsUnderSceneContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ParentNewObjectsUnderSceneContext
void Zenject::SceneContext::set_ParentNewObjectsUnderSceneContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("set_ParentNewObjectsUnderSceneContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ParentNewObjectsUnderSceneContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.Awake
void Zenject::SceneContext::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Validate
void Zenject::SceneContext::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("Validate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetParentContainers
System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>* Zenject::SceneContext::GetParentContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("GetParentContainers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParentContainers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.LookupDecoratorContexts
System::Collections::Generic::List_1<Zenject::SceneDecoratorContext*>* Zenject::SceneContext::LookupDecoratorContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("LookupDecoratorContexts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LookupDecoratorContexts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::SceneDecoratorContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Install
void Zenject::SceneContext::Install() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("Install");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Install", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Resolve
void Zenject::SceneContext::Resolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("Resolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.InstallBindings
void Zenject::SceneContext::InstallBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectableMonoBehaviours)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.SceneContext.Create
Zenject::SceneContext* Zenject::SceneContext::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "SceneContext", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.<LookupDecoratorContexts>b__49_2
bool Zenject::SceneContext::$LookupDecoratorContexts$b__49_2(Zenject::SceneDecoratorContext* decoratorContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("<LookupDecoratorContexts>b__49_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__49_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(decoratorContext))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, decoratorContext);
}
// Autogenerated method: Zenject.SceneContext.get_Container
Zenject::DiContainer* Zenject::SceneContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.RunInternal
void Zenject::SceneContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("RunInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::SceneContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetInjectableMonoBehaviours
void Zenject::SceneContext::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneContext").WithContext("GetInjectableMonoBehaviours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(monoBehaviours)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContext/<>c__DisplayClass48_0
#include "Zenject/SceneContext_--c__DisplayClass48_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SceneContext/<>c__DisplayClass48_0.<GetParentContainers>b__2
bool Zenject::SceneContext::$$c__DisplayClass48_0::$GetParentContainers$b__2(Zenject::SceneContext* sceneContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass48_0").WithContext("<GetParentContainers>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneContext))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sceneContext);
}
// Autogenerated method: Zenject.SceneContext/<>c__DisplayClass48_0.<GetParentContainers>b__4
bool Zenject::SceneContext::$$c__DisplayClass48_0::$GetParentContainers$b__4(::Il2CppString* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass48_0").WithContext("<GetParentContainers>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneContext/<>c
#include "Zenject/SceneContext_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.SceneContext/<>c <>9
Zenject::SceneContext::$$c* Zenject::SceneContext::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SceneContext::$$c*>("Zenject", "SceneContext/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.SceneContext/<>c <>9
void Zenject::SceneContext::$$c::_set_$$9(Zenject::SceneContext::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__48_0
System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>* Zenject::SceneContext::$$c::_get_$$9__48_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__48_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>*>("Zenject", "SceneContext/<>c", "<>9__48_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__48_0
void Zenject::SceneContext::$$c::_set_$$9__48_0(System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__48_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__48_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneContext>> <>9__48_1
System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>* Zenject::SceneContext::$$c::_get_$$9__48_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__48_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>*>("Zenject", "SceneContext/<>c", "<>9__48_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneContext>> <>9__48_1
void Zenject::SceneContext::$$c::_set_$$9__48_1(System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__48_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__48_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.SceneContext,Zenject.DiContainer> <>9__48_3
System::Func_2<Zenject::SceneContext*, Zenject::DiContainer*>* Zenject::SceneContext::$$c::_get_$$9__48_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__48_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::SceneContext*, Zenject::DiContainer*>*>("Zenject", "SceneContext/<>c", "<>9__48_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.SceneContext,Zenject.DiContainer> <>9__48_3
void Zenject::SceneContext::$$c::_set_$$9__48_3(System::Func_2<Zenject::SceneContext*, Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__48_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__48_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__49_0
System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>* Zenject::SceneContext::$$c::_get_$$9__49_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__49_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>*>("Zenject", "SceneContext/<>c", "<>9__49_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__49_0
void Zenject::SceneContext::$$c::_set_$$9__49_0(System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__49_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__49_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneDecoratorContext>> <>9__49_1
System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>*>* Zenject::SceneContext::$$c::_get_$$9__49_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__49_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>*>*>("Zenject", "SceneContext/<>c", "<>9__49_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneDecoratorContext>> <>9__49_1
void Zenject::SceneContext::$$c::_set_$$9__49_1(System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__49_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__49_1", value)));
}
// Autogenerated method: Zenject.SceneContext/<>c..cctor
void Zenject::SceneContext::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.SceneContext/<>c.<GetParentContainers>b__48_0
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::SceneContext::$$c::$GetParentContainers$b__48_0(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<GetParentContainers>b__48_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__48_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scene))));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContext/<>c.<GetParentContainers>b__48_1
System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>* Zenject::SceneContext::$$c::$GetParentContainers$b__48_1(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<GetParentContainers>b__48_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__48_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root))));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*, false>(this, ___internal__method, root);
}
// Autogenerated method: Zenject.SceneContext/<>c.<GetParentContainers>b__48_3
Zenject::DiContainer* Zenject::SceneContext::$$c::$GetParentContainers$b__48_3(Zenject::SceneContext* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<GetParentContainers>b__48_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__48_3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.SceneContext/<>c.<LookupDecoratorContexts>b__49_0
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::SceneContext::$$c::$LookupDecoratorContexts$b__49_0(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<LookupDecoratorContexts>b__49_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__49_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scene))));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContext/<>c.<LookupDecoratorContexts>b__49_1
System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>* Zenject::SceneContext::$$c::$LookupDecoratorContexts$b__49_1(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<LookupDecoratorContexts>b__49_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__49_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root))));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>*, false>(this, ___internal__method, root);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneContext/<>c__DisplayClass50_0
#include "Zenject/SceneContext_--c__DisplayClass50_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SceneContext/<>c__DisplayClass50_0.<Install>b__0
bool Zenject::SceneContext::$$c__DisplayClass50_0::$Install$b__0(Zenject::DiContainer* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass50_0").WithContext("<Install>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Install>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
// Including type: Zenject.ScriptableObjectInstaller
#include "Zenject/ScriptableObjectInstaller.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateInstallers
System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* Zenject::SceneDecoratorContext::get_LateInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("get_LateInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LateInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateInstallers
void Zenject::SceneDecoratorContext::set_LateInstallers(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("set_LateInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_LateInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateInstallerPrefabs
System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* Zenject::SceneDecoratorContext::get_LateInstallerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("get_LateInstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LateInstallerPrefabs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateInstallerPrefabs
void Zenject::SceneDecoratorContext::set_LateInstallerPrefabs(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("set_LateInstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_LateInstallerPrefabs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateScriptableObjectInstallers
System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* Zenject::SceneDecoratorContext::get_LateScriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("get_LateScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LateScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateScriptableObjectInstallers
void Zenject::SceneDecoratorContext::set_LateScriptableObjectInstallers(System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("set_LateScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_LateScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_DecoratedContractName
::Il2CppString* Zenject::SceneDecoratorContext::get_DecoratedContractName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("get_DecoratedContractName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DecoratedContractName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.Initialize
void Zenject::SceneDecoratorContext::Initialize(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallDecoratorSceneBindings
void Zenject::SceneDecoratorContext::InstallDecoratorSceneBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("InstallDecoratorSceneBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallDecoratorSceneBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallDecoratorInstallers
void Zenject::SceneDecoratorContext::InstallDecoratorInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("InstallDecoratorInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallDecoratorInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallLateDecoratorInstallers
void Zenject::SceneDecoratorContext::InstallLateDecoratorInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("InstallLateDecoratorInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallLateDecoratorInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_Container
Zenject::DiContainer* Zenject::SceneDecoratorContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::SceneDecoratorContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.GetInjectableMonoBehaviours
void Zenject::SceneDecoratorContext::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SceneDecoratorContext").WithContext("GetInjectableMonoBehaviours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(monoBehaviours)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.StaticContext
#include "Zenject/StaticContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::StaticContext::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("StaticContext").WithContext("_get__container");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>("Zenject", "StaticContext", "_container"));
}
// Autogenerated static field setter
// Set static field: static private Zenject.DiContainer _container
void Zenject::StaticContext::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("StaticContext").WithContext("_set__container");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "StaticContext", "_container", value));
}
// Autogenerated method: Zenject.StaticContext.Clear
void Zenject::StaticContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("StaticContext").WithContext("Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "StaticContext", "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.StaticContext.get_HasContainer
bool Zenject::StaticContext::get_HasContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("StaticContext").WithContext("get_HasContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "StaticContext", "get_HasContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.StaticContext.get_Container
Zenject::DiContainer* Zenject::StaticContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("StaticContext").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "StaticContext", "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IInstaller
#include "Zenject/IInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IInstaller.InstallBindings
void Zenject::IInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstaller").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IInstaller.get_IsEnabled
bool Zenject::IInstaller::Zenject_IInstaller_get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstaller").WithContext("get_IsEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Installer
#include "Zenject/Installer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InstallerBase
#include "Zenject/InstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InstallerBase.get_Container
Zenject::DiContainer* Zenject::InstallerBase::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstallerBase").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstallerBase.get_IsEnabled
bool Zenject::InstallerBase::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstallerBase").WithContext("get_IsEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool Zenject::InstallerBase::Zenject_IInstaller_get_IsEnabled() {
  return Zenject::InstallerBase::get_IsEnabled();
}
// Autogenerated method: Zenject.InstallerBase.InstallBindings
void Zenject::InstallerBase::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstallerBase").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MonoInstallerUtil
#include "Zenject/MonoInstallerUtil.hpp"
// Including type: Zenject.MonoInstallerBase
#include "Zenject/MonoInstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MonoInstallerBase
#include "Zenject/MonoInstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.MonoInstallerBase.get_Container
Zenject::DiContainer* Zenject::MonoInstallerBase::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MonoInstallerBase").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoInstallerBase.set_Container
void Zenject::MonoInstallerBase::set_Container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MonoInstallerBase").WithContext("set_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.MonoInstallerBase.Start
void Zenject::MonoInstallerBase::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MonoInstallerBase").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoInstallerBase.get_IsEnabled
bool Zenject::MonoInstallerBase::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MonoInstallerBase").WithContext("get_IsEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool Zenject::MonoInstallerBase::Zenject_IInstaller_get_IsEnabled() {
  return Zenject::MonoInstallerBase::get_IsEnabled();
}
// Autogenerated method: Zenject.MonoInstallerBase.InstallBindings
void Zenject::MonoInstallerBase::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MonoInstallerBase").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScriptableObjectInstaller
#include "Zenject/ScriptableObjectInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectInstallerUtil
#include "Zenject/ScriptableObjectInstallerUtil.hpp"
// Including type: Zenject.ScriptableObjectInstallerBase
#include "Zenject/ScriptableObjectInstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScriptableObjectInstallerBase
#include "Zenject/ScriptableObjectInstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectInstallerBase.get_Container
Zenject::DiContainer* Zenject::ScriptableObjectInstallerBase::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectInstallerBase").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectInstallerBase.Zenject.IInstaller.get_IsEnabled
bool Zenject::ScriptableObjectInstallerBase::Zenject_IInstaller_get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectInstallerBase").WithContext("Zenject.IInstaller.get_IsEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Zenject.IInstaller.get_IsEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectInstallerBase.InstallBindings
void Zenject::ScriptableObjectInstallerBase::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectInstallerBase").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenjectBinding
#include "Zenject/ZenjectBinding.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.Context
#include "Zenject/Context.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenjectBinding.get_UseSceneContext
bool Zenject::ZenjectBinding::get_UseSceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectBinding").WithContext("get_UseSceneContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UseSceneContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.get_IfNotBound
bool Zenject::ZenjectBinding::get_IfNotBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectBinding").WithContext("get_IfNotBound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IfNotBound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.get_Context
Zenject::Context* Zenject::ZenjectBinding::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectBinding").WithContext("get_Context");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Context*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.set_Context
void Zenject::ZenjectBinding::set_Context(Zenject::Context* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectBinding").WithContext("set_Context");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Context", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ZenjectBinding.get_Components
::Array<UnityEngine::Component*>* Zenject::ZenjectBinding::get_Components() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectBinding").WithContext("get_Components");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Components", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Component*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.get_Identifier
::Il2CppString* Zenject::ZenjectBinding::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectBinding").WithContext("get_Identifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.get_BindType
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::get_BindType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectBinding").WithContext("get_BindType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BindType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenjectBinding::BindTypes, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.Start
void Zenject::ZenjectBinding::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectBinding").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectBinding/BindTypes
#include "Zenject/ZenjectBinding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectBinding/BindTypes Self
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::BindTypes::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindTypes").WithContext("_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>("Zenject", "ZenjectBinding/BindTypes", "Self"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectBinding/BindTypes Self
void Zenject::ZenjectBinding::BindTypes::_set_Self(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindTypes").WithContext("_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectBinding/BindTypes", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectBinding/BindTypes AllInterfaces
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::BindTypes::_get_AllInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindTypes").WithContext("_get_AllInterfaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>("Zenject", "ZenjectBinding/BindTypes", "AllInterfaces"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectBinding/BindTypes AllInterfaces
void Zenject::ZenjectBinding::BindTypes::_set_AllInterfaces(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindTypes").WithContext("_set_AllInterfaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectBinding/BindTypes", "AllInterfaces", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectBinding/BindTypes AllInterfacesAndSelf
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::BindTypes::_get_AllInterfacesAndSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindTypes").WithContext("_get_AllInterfacesAndSelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>("Zenject", "ZenjectBinding/BindTypes", "AllInterfacesAndSelf"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectBinding/BindTypes AllInterfacesAndSelf
void Zenject::ZenjectBinding::BindTypes::_set_AllInterfacesAndSelf(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindTypes").WithContext("_set_AllInterfacesAndSelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectBinding/BindTypes", "AllInterfacesAndSelf", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectBinding/BindTypes BaseType
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::BindTypes::_get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindTypes").WithContext("_get_BaseType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>("Zenject", "ZenjectBinding/BindTypes", "BaseType"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectBinding/BindTypes BaseType
void Zenject::ZenjectBinding::BindTypes::_set_BaseType(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindTypes").WithContext("_set_BaseType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectBinding/BindTypes", "BaseType", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectManagersInstaller
#include "Zenject/ZenjectManagersInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenjectManagersInstaller.InstallBindings
void Zenject::ZenjectManagersInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectManagersInstaller").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindingId
#include "Zenject/BindingId.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindingId.get_Type
System::Type* Zenject::BindingId::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("get_Type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(*this, ___internal__method);
}
// Autogenerated method: Zenject.BindingId.set_Type
void Zenject::BindingId::set_Type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("set_Type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: Zenject.BindingId.get_Identifier
::Il2CppObject* Zenject::BindingId::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("get_Identifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Identifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated method: Zenject.BindingId.set_Identifier
void Zenject::BindingId::set_Identifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("set_Identifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Identifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: Zenject.BindingId.ToString
::Il2CppString* Zenject::BindingId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: Zenject.BindingId.GetHashCode
int Zenject::BindingId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Zenject.BindingId.Equals
bool Zenject::BindingId::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: Zenject.BindingId.Equals
bool Zenject::BindingId::Equals(Zenject::BindingId that) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(that)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, that);
}
// Autogenerated method: Zenject.BindingId.op_Equality
bool Zenject::operator ==(const Zenject::BindingId& left, const Zenject::BindingId& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "BindingId", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: Zenject.BindingId.op_Inequality
bool Zenject::operator !=(const Zenject::BindingId& left, const Zenject::BindingId& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingId").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "BindingId", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindingCondition.Invoke
bool Zenject::BindingCondition::Invoke(Zenject::InjectContext* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingCondition").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Zenject.BindingCondition.BeginInvoke
System::IAsyncResult* Zenject::BindingCondition::BeginInvoke(Zenject::InjectContext* c, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingCondition").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, c, callback, object);
}
// Autogenerated method: Zenject.BindingCondition.EndInvoke
bool Zenject::BindingCondition::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindingCondition").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.DiContainer/ProviderInfo
#include "Zenject/DiContainer_ProviderInfo.hpp"
// Including type: Zenject.DiContainer/<>c
#include "Zenject/DiContainer_--c.hpp"
// Including type: Zenject.DiContainer/<>c__DisplayClass86_0
#include "Zenject/DiContainer_--c__DisplayClass86_0.hpp"
// Including type: Zenject.DiContainer/<GetDependencyContracts>d__96
#include "Zenject/DiContainer_-GetDependencyContracts-d__96.hpp"
// Including type: Zenject.DiContainer/<>c__DisplayClass178_0
#include "Zenject/DiContainer_--c__DisplayClass178_0.hpp"
// Including type: Zenject.DiContainer/<>c__DisplayClass203_0`1
#include "Zenject/DiContainer_--c__DisplayClass203_0_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.Internal.IDecoratorProvider
#include "Zenject/Internal/IDecoratorProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Zenject.Internal.LookupId
#include "Zenject/Internal/LookupId.hpp"
// Including type: Zenject.LazyInstanceInjector
#include "Zenject/LazyInstanceInjector.hpp"
// Including type: Zenject.Internal.SingletonMarkRegistry
#include "Zenject/Internal/SingletonMarkRegistry.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: Zenject.IValidatable
#include "Zenject/IValidatable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
// Including type: Zenject.InjectSources
#include "Zenject/InjectSources.hpp"
// Including type: Zenject.Installer
#include "Zenject/Installer.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: Zenject.DecoratorToChoiceFromBinder`1
#include "Zenject/DecoratorToChoiceFromBinder_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.ConcreteBinderNonGeneric
#include "Zenject/ConcreteBinderNonGeneric.hpp"
// Including type: Zenject.ConcreteIdBinderGeneric`1
#include "Zenject/ConcreteIdBinderGeneric_1.hpp"
// Including type: Zenject.ConcreteIdBinderNonGeneric
#include "Zenject/ConcreteIdBinderNonGeneric.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConventionSelectTypesBinder
#include "Zenject/ConventionSelectTypesBinder.hpp"
// Including type: Zenject.FromBinderNonGeneric
#include "Zenject/FromBinderNonGeneric.hpp"
// Including type: Zenject.IdScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/IdScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.IFactory
#include "Zenject/IFactory.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`1
#include "Zenject/FactoryToChoiceIdBinder_1.hpp"
// Including type: Zenject.PlaceholderFactory`1
#include "Zenject/PlaceholderFactory_1.hpp"
// Including type: Zenject.MemoryPoolIdInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolIdInitialSizeMaxSizeBinder_1.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`2
#include "Zenject/FactoryToChoiceIdBinder_2.hpp"
// Including type: Zenject.PlaceholderFactory`2
#include "Zenject/PlaceholderFactory_2.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`3
#include "Zenject/FactoryToChoiceIdBinder_3.hpp"
// Including type: Zenject.PlaceholderFactory`3
#include "Zenject/PlaceholderFactory_3.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`4
#include "Zenject/FactoryToChoiceIdBinder_4.hpp"
// Including type: Zenject.PlaceholderFactory`4
#include "Zenject/PlaceholderFactory_4.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`5
#include "Zenject/FactoryToChoiceIdBinder_5.hpp"
// Including type: Zenject.PlaceholderFactory`5
#include "Zenject/PlaceholderFactory_5.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`6
#include "Zenject/FactoryToChoiceIdBinder_6.hpp"
// Including type: Zenject.PlaceholderFactory`6
#include "Zenject/PlaceholderFactory_6.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`7
#include "Zenject/FactoryToChoiceIdBinder_7.hpp"
// Including type: Zenject.PlaceholderFactory`7
#include "Zenject/PlaceholderFactory_7.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`11
#include "Zenject/FactoryToChoiceIdBinder_11.hpp"
// Including type: Zenject.PlaceholderFactory`11
#include "Zenject/PlaceholderFactory_11.hpp"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
// Including type: Zenject.CopyNonLazyBinder
#include "Zenject/CopyNonLazyBinder.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
// Including type: Zenject.ILateTickable
#include "Zenject/ILateTickable.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DiContainer.get_Settings
Zenject::ZenjectSettings* Zenject::DiContainer::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_Settings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenjectSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.set_Settings
void Zenject::DiContainer::set_Settings(Zenject::ZenjectSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("set_Settings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Settings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DiContainer.get_SingletonMarkRegistry
Zenject::Internal::SingletonMarkRegistry* Zenject::DiContainer::get_SingletonMarkRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_SingletonMarkRegistry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SingletonMarkRegistry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::SingletonMarkRegistry*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_AllProviders
System::Collections::Generic::IEnumerable_1<Zenject::IProvider*>* Zenject::DiContainer::get_AllProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_AllProviders");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllProviders", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::IProvider*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.InstallDefaultBindings
void Zenject::DiContainer::InstallDefaultBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstallDefaultBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallDefaultBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.CreateLazyBinding
::Il2CppObject* Zenject::DiContainer::CreateLazyBinding(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CreateLazyBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateLazyBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.QueueForValidate
void Zenject::DiContainer::QueueForValidate(Zenject::IValidatable* validatable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("QueueForValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "QueueForValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(validatable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, validatable);
}
// Autogenerated method: Zenject.DiContainer.ShouldInheritBinding
bool Zenject::DiContainer::ShouldInheritBinding(Zenject::BindStatement* binding, Zenject::DiContainer* ancestorContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ShouldInheritBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldInheritBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(binding, ancestorContainer)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, binding, ancestorContainer);
}
// Autogenerated method: Zenject.DiContainer.get_ContextTransform
UnityEngine::Transform* Zenject::DiContainer::get_ContextTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_ContextTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ContextTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_AssertOnNewGameObjects
bool Zenject::DiContainer::get_AssertOnNewGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_AssertOnNewGameObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AssertOnNewGameObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.set_AssertOnNewGameObjects
void Zenject::DiContainer::set_AssertOnNewGameObjects(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("set_AssertOnNewGameObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_AssertOnNewGameObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DiContainer.get_InheritedDefaultParent
UnityEngine::Transform* Zenject::DiContainer::get_InheritedDefaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_InheritedDefaultParent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InheritedDefaultParent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_DefaultParent
UnityEngine::Transform* Zenject::DiContainer::get_DefaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_DefaultParent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultParent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.set_DefaultParent
void Zenject::DiContainer::set_DefaultParent(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("set_DefaultParent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_DefaultParent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DiContainer.get_ParentContainers
::Array<Zenject::DiContainer*>* Zenject::DiContainer::get_ParentContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_ParentContainers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ParentContainers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_AncestorContainers
::Array<Zenject::DiContainer*>* Zenject::DiContainer::get_AncestorContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_AncestorContainers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AncestorContainers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_ChecksForCircularDependencies
bool Zenject::DiContainer::get_ChecksForCircularDependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_ChecksForCircularDependencies");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ChecksForCircularDependencies", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_IsValidating
bool Zenject::DiContainer::get_IsValidating() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_IsValidating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsValidating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_IsInstalling
bool Zenject::DiContainer::get_IsInstalling() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_IsInstalling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsInstalling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.set_IsInstalling
void Zenject::DiContainer::set_IsInstalling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("set_IsInstalling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsInstalling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DiContainer.get_AllContracts
System::Collections::Generic::IEnumerable_1<Zenject::BindingId>* Zenject::DiContainer::get_AllContracts() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("get_AllContracts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllContracts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::BindingId>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.ResolveRoots
void Zenject::DiContainer::ResolveRoots() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveRoots");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveRoots", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.ResolveDependencyRoots
void Zenject::DiContainer::ResolveDependencyRoots() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveDependencyRoots");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveDependencyRoots", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.ValidateFullResolve
void Zenject::DiContainer::ValidateFullResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ValidateFullResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateFullResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.FlushValidationQueue
void Zenject::DiContainer::FlushValidationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("FlushValidationQueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FlushValidationQueue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.CreateSubContainer
Zenject::DiContainer* Zenject::DiContainer::CreateSubContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.QueueForInject
void Zenject::DiContainer::QueueForInject(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("QueueForInject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "QueueForInject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.DiContainer.CreateSubContainer
Zenject::DiContainer* Zenject::DiContainer::CreateSubContainer(bool isValidating) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isValidating)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, isValidating);
}
// Autogenerated method: Zenject.DiContainer.RegisterProvider
void Zenject::DiContainer::RegisterProvider(Zenject::BindingId bindingId, Zenject::BindingCondition* condition, Zenject::IProvider* provider, bool nonLazy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("RegisterProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingId, condition, provider, nonLazy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindingId, condition, provider, nonLazy);
}
// Autogenerated method: Zenject.DiContainer.GetProviderMatches
void Zenject::DiContainer::GetProviderMatches(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetProviderMatches");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProviderMatches", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, buffer);
}
// Autogenerated method: Zenject.DiContainer.TryGetUniqueProvider
Zenject::DiContainer::ProviderInfo* Zenject::DiContainer::TryGetUniqueProvider(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("TryGetUniqueProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetUniqueProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer::ProviderInfo*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.FlattenInheritanceChain
System::Collections::Generic::List_1<Zenject::DiContainer*>* Zenject::DiContainer::FlattenInheritanceChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("FlattenInheritanceChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FlattenInheritanceChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.GetLocalProviders
void Zenject::DiContainer::GetLocalProviders(Zenject::BindingId bindingId, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetLocalProviders");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLocalProviders", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingId, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindingId, buffer);
}
// Autogenerated method: Zenject.DiContainer.GetProvidersForContract
void Zenject::DiContainer::GetProvidersForContract(Zenject::BindingId bindingId, Zenject::InjectSources sourceType, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetProvidersForContract");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProvidersForContract", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingId, sourceType, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindingId, sourceType, buffer);
}
// Autogenerated method: Zenject.DiContainer.ResolveAll
System::Collections::IList* Zenject::DiContainer::ResolveAll(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.ResolveAll
void Zenject::DiContainer::ResolveAll(Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, buffer);
}
// Autogenerated method: Zenject.DiContainer.CheckForInstallWarning
void Zenject::DiContainer::CheckForInstallWarning(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CheckForInstallWarning");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForInstallWarning", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.ResolveType
System::Type* Zenject::DiContainer::ResolveType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.DiContainer.ResolveType
System::Type* Zenject::DiContainer::ResolveType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.ResolveTypeAll
System::Collections::Generic::List_1<System::Type*>* Zenject::DiContainer::ResolveTypeAll(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveTypeAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveTypeAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Type*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.DiContainer.ResolveTypeAll
System::Collections::Generic::List_1<System::Type*>* Zenject::DiContainer::ResolveTypeAll(System::Type* type, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveTypeAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveTypeAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, identifier)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Type*>*, false>(this, ___internal__method, type, identifier);
}
// Autogenerated method: Zenject.DiContainer.ResolveTypeAll
System::Collections::Generic::List_1<System::Type*>* Zenject::DiContainer::ResolveTypeAll(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveTypeAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveTypeAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Type*>*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.Resolve
::Il2CppObject* Zenject::DiContainer::Resolve(Zenject::BindingId id) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Resolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, id);
}
// Autogenerated method: Zenject.DiContainer.Resolve
::Il2CppObject* Zenject::DiContainer::Resolve(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Resolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.SafeGetInstances
void Zenject::DiContainer::SafeGetInstances(Zenject::DiContainer::ProviderInfo* providerInfo, Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("SafeGetInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SafeGetInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(providerInfo, context, instances)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, providerInfo, context, instances);
}
// Autogenerated method: Zenject.DiContainer.GetDecoratedInstances
void Zenject::DiContainer::GetDecoratedInstances(Zenject::IProvider* provider, Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetDecoratedInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDecoratedInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, context, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, provider, context, buffer);
}
// Autogenerated method: Zenject.DiContainer.TryGetDecoratorProvider
Zenject::Internal::IDecoratorProvider* Zenject::DiContainer::TryGetDecoratorProvider(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("TryGetDecoratorProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetDecoratorProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::IDecoratorProvider*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.GetContainerHeirarchyDistance
int Zenject::DiContainer::GetContainerHeirarchyDistance(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetContainerHeirarchyDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetContainerHeirarchyDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.DiContainer.GetContainerHeirarchyDistance
System::Nullable_1<int> Zenject::DiContainer::GetContainerHeirarchyDistance(Zenject::DiContainer* container, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetContainerHeirarchyDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetContainerHeirarchyDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container, depth)));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, container, depth);
}
// Autogenerated method: Zenject.DiContainer.GetDependencyContracts
System::Collections::Generic::IEnumerable_1<System::Type*>* Zenject::DiContainer::GetDependencyContracts(System::Type* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetDependencyContracts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDependencyContracts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contract)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Type*>*, false>(this, ___internal__method, contract);
}
// Autogenerated method: Zenject.DiContainer.InstantiateInternal
::Il2CppObject* Zenject::DiContainer::InstantiateInternal(System::Type* concreteType, bool autoInject, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, autoInject, extraArgs, context, concreteIdentifier)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, autoInject, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.InjectExplicit
void Zenject::DiContainer::InjectExplicit(::Il2CppObject* injectable, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InjectExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InjectExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectable, extraArgs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InjectExplicit
void Zenject::DiContainer::InjectExplicit(::Il2CppObject* injectable, System::Type* injectableType, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InjectExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InjectExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectable, injectableType, extraArgs, context, concreteIdentifier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, injectableType, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.CallInjectMethodsTopDown
void Zenject::DiContainer::CallInjectMethodsTopDown(::Il2CppObject* injectable, System::Type* injectableType, Zenject::InjectTypeInfo* typeInfo, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier, bool isDryRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CallInjectMethodsTopDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CallInjectMethodsTopDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectable, injectableType, typeInfo, extraArgs, context, concreteIdentifier, isDryRun)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, injectableType, typeInfo, extraArgs, context, concreteIdentifier, isDryRun);
}
// Autogenerated method: Zenject.DiContainer.InjectMembersTopDown
void Zenject::DiContainer::InjectMembersTopDown(::Il2CppObject* injectable, System::Type* injectableType, Zenject::InjectTypeInfo* typeInfo, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier, bool isDryRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InjectMembersTopDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InjectMembersTopDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectable, injectableType, typeInfo, extraArgs, context, concreteIdentifier, isDryRun)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, injectableType, typeInfo, extraArgs, context, concreteIdentifier, isDryRun);
}
// Autogenerated method: Zenject.DiContainer.InjectExplicitInternal
void Zenject::DiContainer::InjectExplicitInternal(::Il2CppObject* injectable, System::Type* injectableType, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InjectExplicitInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InjectExplicitInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectable, injectableType, extraArgs, context, concreteIdentifier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, injectableType, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.CreateAndParentPrefabResource
UnityEngine::GameObject* Zenject::DiContainer::CreateAndParentPrefabResource(::Il2CppString* resourcePath, Zenject::GameObjectCreationParameters* gameObjectBindInfo, Zenject::InjectContext* context, bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CreateAndParentPrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateAndParentPrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, gameObjectBindInfo, context, shouldMakeActive)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, gameObjectBindInfo, context, shouldMakeActive);
}
// Autogenerated method: Zenject.DiContainer.GetPrefabAsGameObject
UnityEngine::GameObject* Zenject::DiContainer::GetPrefabAsGameObject(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetPrefabAsGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefabAsGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.DiContainer.CreateAndParentPrefab
UnityEngine::GameObject* Zenject::DiContainer::CreateAndParentPrefab(UnityEngine::Object* prefab, Zenject::GameObjectCreationParameters* gameObjectBindInfo, Zenject::InjectContext* context, bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CreateAndParentPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateAndParentPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, gameObjectBindInfo, context, shouldMakeActive)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, gameObjectBindInfo, context, shouldMakeActive);
}
// Autogenerated method: Zenject.DiContainer.CreateEmptyGameObject
UnityEngine::GameObject* Zenject::DiContainer::CreateEmptyGameObject(Zenject::GameObjectCreationParameters* gameObjectBindInfo, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CreateEmptyGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateEmptyGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObjectBindInfo, context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, gameObjectBindInfo, context);
}
// Autogenerated method: Zenject.DiContainer.GetTransformGroup
UnityEngine::Transform* Zenject::DiContainer::GetTransformGroup(Zenject::GameObjectCreationParameters* gameObjectBindInfo, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("GetTransformGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTransformGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObjectBindInfo, context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, gameObjectBindInfo, context);
}
// Autogenerated method: Zenject.DiContainer.CreateTransformGroup
UnityEngine::GameObject* Zenject::DiContainer::CreateTransformGroup(::Il2CppString* groupName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CreateTransformGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTransformGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(groupName)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, groupName);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefab
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefab(UnityEngine::Object* prefab, Zenject::GameObjectCreationParameters* gameObjectBindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, gameObjectBindInfo)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, gameObjectBindInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefabResource(::Il2CppString* resourcePath, Zenject::GameObjectCreationParameters* creationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, creationInfo)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, creationInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponent
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponent(System::Type* concreteType, UnityEngine::Object* prefab, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs, Zenject::GameObjectCreationParameters* creationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabForComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, prefab, extraArgs, creationInfo)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, prefab, extraArgs, creationInfo);
}
// Autogenerated method: Zenject.DiContainer.InjectGameObject
void Zenject::DiContainer::InjectGameObject(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InjectGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InjectGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Zenject.DiContainer.InjectGameObjectForComponent
::Il2CppObject* Zenject::DiContainer::InjectGameObjectForComponent(UnityEngine::GameObject* gameObject, System::Type* componentType, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InjectGameObjectForComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InjectGameObjectForComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject, componentType, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, gameObject, componentType, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InjectGameObjectForComponentExplicit
UnityEngine::Component* Zenject::DiContainer::InjectGameObjectForComponentExplicit(UnityEngine::GameObject* gameObject, System::Type* componentType, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InjectGameObjectForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InjectGameObjectForComponentExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject, componentType, extraArgs, context, concreteIdentifier)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, gameObject, componentType, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.Inject
void Zenject::DiContainer::Inject(::Il2CppObject* injectable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Inject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Inject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable);
}
// Autogenerated method: Zenject.DiContainer.Inject
void Zenject::DiContainer::Inject(::Il2CppObject* injectable, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Inject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Inject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectable, extraArgs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.Resolve
::Il2CppObject* Zenject::DiContainer::Resolve(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Resolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.ResolveId
::Il2CppObject* Zenject::DiContainer::ResolveId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, identifier)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.TryResolve
::Il2CppObject* Zenject::DiContainer::TryResolve(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("TryResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.TryResolveId
::Il2CppObject* Zenject::DiContainer::TryResolveId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("TryResolveId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryResolveId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, identifier)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.ResolveAll
System::Collections::IList* Zenject::DiContainer::ResolveAll(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.ResolveIdAll
System::Collections::IList* Zenject::DiContainer::ResolveIdAll(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("ResolveIdAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveIdAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, identifier)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.UnbindAll
void Zenject::DiContainer::UnbindAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("UnbindAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnbindAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.Unbind
bool Zenject::DiContainer::Unbind(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Unbind");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Unbind", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.UnbindId
bool Zenject::DiContainer::UnbindId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("UnbindId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnbindId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, identifier)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.UnbindInterfacesTo
void Zenject::DiContainer::UnbindInterfacesTo(System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("UnbindInterfacesTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnbindInterfacesTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, concreteType);
}
// Autogenerated method: Zenject.DiContainer.Unbind
bool Zenject::DiContainer::Unbind(System::Type* contractType, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Unbind");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Unbind", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, concreteType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, concreteType);
}
// Autogenerated method: Zenject.DiContainer.UnbindId
bool Zenject::DiContainer::UnbindId(System::Type* contractType, System::Type* concreteType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("UnbindId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnbindId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, concreteType, identifier)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, concreteType, identifier);
}
// Autogenerated method: Zenject.DiContainer.HasBinding
bool Zenject::DiContainer::HasBinding(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("HasBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.HasBindingId
bool Zenject::DiContainer::HasBindingId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("HasBindingId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasBindingId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, identifier)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.HasBindingId
bool Zenject::DiContainer::HasBindingId(System::Type* contractType, ::Il2CppObject* identifier, Zenject::InjectSources sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("HasBindingId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasBindingId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, identifier, sourceType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, identifier, sourceType);
}
// Autogenerated method: Zenject.DiContainer.HasBinding
bool Zenject::DiContainer::HasBinding(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("HasBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.FlushBindings
void Zenject::DiContainer::FlushBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("FlushBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FlushBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.FinalizeBinding
void Zenject::DiContainer::FinalizeBinding(Zenject::BindStatement* binding) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("FinalizeBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(binding)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, binding);
}
// Autogenerated method: Zenject.DiContainer.StartBinding
Zenject::BindStatement* Zenject::DiContainer::StartBinding(bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("StartBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flush)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindStatement*, false>(this, ___internal__method, flush);
}
// Autogenerated method: Zenject.DiContainer.Rebind
Zenject::ConcreteBinderNonGeneric* Zenject::DiContainer::Rebind(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Rebind");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Rebind", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteBinderNonGeneric*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.RebindId
Zenject::ConcreteBinderNonGeneric* Zenject::DiContainer::RebindId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("RebindId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RebindId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, identifier)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteBinderNonGeneric*, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.Bind
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::Bind(::Array<System::Type*>* contractTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Bind");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractTypes)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteIdBinderNonGeneric*, false>(this, ___internal__method, contractTypes);
}
// Creating initializer_list -> params proxy for: Zenject.ConcreteIdBinderNonGeneric Bind(params System.Type[] contractTypes)
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::Bind(std::initializer_list<System::Type*> contractTypes) {
  return Zenject::DiContainer::Bind(::Array<System::Type*>::New(contractTypes));
}
// Autogenerated method: Zenject.DiContainer.Bind
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::Bind(System::Collections::Generic::IEnumerable_1<System::Type*>* contractTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Bind");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractTypes)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteIdBinderNonGeneric*, false>(this, ___internal__method, contractTypes);
}
// Autogenerated method: Zenject.DiContainer.BindInternal
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::BindInternal(Zenject::BindInfo* bindInfo, Zenject::BindStatement* bindingFinalizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindInfo, bindingFinalizer)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteIdBinderNonGeneric*, false>(this, ___internal__method, bindInfo, bindingFinalizer);
}
// Autogenerated method: Zenject.DiContainer.Bind
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::Bind(System::Action_1<Zenject::ConventionSelectTypesBinder*>* generator) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Bind");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(generator)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteIdBinderNonGeneric*, false>(this, ___internal__method, generator);
}
// Autogenerated method: Zenject.DiContainer.BindInterfacesTo
Zenject::FromBinderNonGeneric* Zenject::DiContainer::BindInterfacesTo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindInterfacesTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindInterfacesTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.DiContainer.BindInterfacesAndSelfTo
Zenject::FromBinderNonGeneric* Zenject::DiContainer::BindInterfacesAndSelfTo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindInterfacesAndSelfTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindInterfacesAndSelfTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.DiContainer.BindInstances
void Zenject::DiContainer::BindInstances(::Array<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instances)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instances);
}
// Creating initializer_list -> params proxy for: System.Void BindInstances(params System.Object[] instances)
void Zenject::DiContainer::BindInstances(std::initializer_list<::Il2CppObject*> instances) {
  Zenject::DiContainer::BindInstances(::Array<::Il2CppObject*>::New(instances));
}
// Autogenerated method: Zenject.DiContainer.InstantiateExplicit
::Il2CppObject* Zenject::DiContainer::InstantiateExplicit(System::Type* concreteType, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiateExplicit
::Il2CppObject* Zenject::DiContainer::InstantiateExplicit(System::Type* concreteType, bool autoInject, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, autoInject, extraArgs, context, concreteIdentifier)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, autoInject, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.InstantiateComponentExplicit
UnityEngine::Component* Zenject::DiContainer::InstantiateComponentExplicit(System::Type* componentType, UnityEngine::GameObject* gameObject, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateComponentExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, gameObject, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiateScriptableObjectResourceExplicit
::Il2CppObject* Zenject::DiContainer::InstantiateScriptableObjectResourceExplicit(System::Type* scriptableObjectType, ::Il2CppString* resourcePath, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateScriptableObjectResourceExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResourceExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scriptableObjectType, resourcePath, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResourceForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabResourceForComponentExplicit(System::Type* componentType, ::Il2CppString* resourcePath, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::GameObjectCreationParameters* creationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabResourceForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResourceForComponentExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, resourcePath, extraArgs, creationInfo)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, resourcePath, extraArgs, creationInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResourceForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabResourceForComponentExplicit(System::Type* componentType, ::Il2CppString* resourcePath, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier, Zenject::GameObjectCreationParameters* creationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabResourceForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResourceForComponentExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, resourcePath, extraArgs, context, concreteIdentifier, creationInfo)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, resourcePath, extraArgs, context, concreteIdentifier, creationInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponentExplicit(System::Type* componentType, UnityEngine::Object* prefab, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponentExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, prefab, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, prefab, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponentExplicit(System::Type* componentType, UnityEngine::Object* prefab, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::GameObjectCreationParameters* gameObjectBindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponentExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, prefab, extraArgs, gameObjectBindInfo)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, prefab, extraArgs, gameObjectBindInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponentExplicit(System::Type* componentType, UnityEngine::Object* prefab, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier, Zenject::GameObjectCreationParameters* gameObjectBindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponentExplicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, prefab, extraArgs, context, concreteIdentifier, gameObjectBindInfo)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, prefab, extraArgs, context, concreteIdentifier, gameObjectBindInfo);
}
// Autogenerated method: Zenject.DiContainer.BindExecutionOrder
void Zenject::DiContainer::BindExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindExecutionOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, order)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindTickableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindTickableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindTickableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindTickableExecutionOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, order)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindInitializableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindInitializableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindInitializableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindInitializableExecutionOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, order)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindDisposableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindDisposableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindDisposableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindDisposableExecutionOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, order)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindLateDisposableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindLateDisposableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindLateDisposableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindLateDisposableExecutionOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, order)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindFixedTickableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindFixedTickableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindFixedTickableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindFixedTickableExecutionOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, order)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindLateTickableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindLateTickableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindLateTickableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindLateTickableExecutionOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, order)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindPoolableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindPoolableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("BindPoolableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindPoolableExecutionOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, order)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.CreateEmptyGameObject
UnityEngine::GameObject* Zenject::DiContainer::CreateEmptyGameObject(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("CreateEmptyGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateEmptyGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: Zenject.DiContainer.Instantiate
::Il2CppObject* Zenject::DiContainer::Instantiate(System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Instantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType);
}
// Autogenerated method: Zenject.DiContainer.Instantiate
::Il2CppObject* Zenject::DiContainer::Instantiate(System::Type* concreteType, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("Instantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiateComponent
UnityEngine::Component* Zenject::DiContainer::InstantiateComponent(System::Type* componentType, UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, gameObject)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject);
}
// Autogenerated method: Zenject.DiContainer.InstantiateComponent
UnityEngine::Component* Zenject::DiContainer::InstantiateComponent(System::Type* componentType, UnityEngine::GameObject* gameObject, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, gameObject, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefab
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefab(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefab
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefab(UnityEngine::Object* prefab, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, parentTransform);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefab
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefab(UnityEngine::Object* prefab, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, position, rotation, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, position, rotation, parentTransform);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefabResource(::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefabResource(::Il2CppString* resourcePath, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, parentTransform);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefabResource(::Il2CppString* resourcePath, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, position, rotation, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, position, rotation, parentTransform);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponent
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponent(System::Type* concreteType, UnityEngine::Object* prefab, UnityEngine::Transform* parentTransform, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabForComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, prefab, parentTransform, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, prefab, parentTransform, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResourceForComponent
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabResourceForComponent(System::Type* concreteType, ::Il2CppString* resourcePath, UnityEngine::Transform* parentTransform, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiatePrefabResourceForComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResourceForComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, resourcePath, parentTransform, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, resourcePath, parentTransform, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiateScriptableObjectResource
::Il2CppObject* Zenject::DiContainer::InstantiateScriptableObjectResource(System::Type* scriptableObjectType, ::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateScriptableObjectResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scriptableObjectType, resourcePath)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath);
}
// Autogenerated method: Zenject.DiContainer.InstantiateScriptableObjectResource
::Il2CppObject* Zenject::DiContainer::InstantiateScriptableObjectResource(System::Type* scriptableObjectType, ::Il2CppString* resourcePath, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DiContainer").WithContext("InstantiateScriptableObjectResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scriptableObjectType, resourcePath, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath, extraArgs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DiContainer/ProviderInfo
#include "Zenject/DiContainer_ProviderInfo.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DiContainer/<>c
#include "Zenject/DiContainer_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer/ProviderInfo
#include "Zenject/DiContainer_ProviderInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.DiContainer/<>c <>9
Zenject::DiContainer::$$c* Zenject::DiContainer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::DiContainer::$$c*>("Zenject", "DiContainer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.DiContainer/<>c <>9
void Zenject::DiContainer::$$c::_set_$$9(Zenject::DiContainer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DiContainer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.List`1<Zenject.DiContainer/ProviderInfo>,System.Collections.Generic.IEnumerable`1<Zenject.DiContainer/ProviderInfo>> <>9__33_0
System::Func_2<System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>*, System::Collections::Generic::IEnumerable_1<Zenject::DiContainer::ProviderInfo*>*>* Zenject::DiContainer::$$c::_get_$$9__33_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__33_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>*, System::Collections::Generic::IEnumerable_1<Zenject::DiContainer::ProviderInfo*>*>*>("Zenject", "DiContainer/<>c", "<>9__33_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.List`1<Zenject.DiContainer/ProviderInfo>,System.Collections.Generic.IEnumerable`1<Zenject.DiContainer/ProviderInfo>> <>9__33_0
void Zenject::DiContainer::$$c::_set_$$9__33_0(System::Func_2<System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>*, System::Collections::Generic::IEnumerable_1<Zenject::DiContainer::ProviderInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__33_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DiContainer/<>c", "<>9__33_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.DiContainer/ProviderInfo,Zenject.IProvider> <>9__33_1
System::Func_2<Zenject::DiContainer::ProviderInfo*, Zenject::IProvider*>* Zenject::DiContainer::$$c::_get_$$9__33_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__33_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DiContainer::ProviderInfo*, Zenject::IProvider*>*>("Zenject", "DiContainer/<>c", "<>9__33_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.DiContainer/ProviderInfo,Zenject.IProvider> <>9__33_1
void Zenject::DiContainer::$$c::_set_$$9__33_1(System::Func_2<Zenject::DiContainer::ProviderInfo*, Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__33_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DiContainer/<>c", "<>9__33_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__86_1
System::Func_2<System::Type*, bool>* Zenject::DiContainer::$$c::_get_$$9__86_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__86_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "DiContainer/<>c", "<>9__86_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__86_1
void Zenject::DiContainer::$$c::_set_$$9__86_1(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__86_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DiContainer/<>c", "<>9__86_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.TypeValuePair,System.String> <>9__97_0
System::Func_2<Zenject::TypeValuePair, ::Il2CppString*>* Zenject::DiContainer::$$c::_get_$$9__97_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__97_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::TypeValuePair, ::Il2CppString*>*>("Zenject", "DiContainer/<>c", "<>9__97_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.TypeValuePair,System.String> <>9__97_0
void Zenject::DiContainer::$$c::_set_$$9__97_0(System::Func_2<Zenject::TypeValuePair, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__97_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DiContainer/<>c", "<>9__97_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.TypeValuePair,System.String> <>9__102_0
System::Func_2<Zenject::TypeValuePair, ::Il2CppString*>* Zenject::DiContainer::$$c::_get_$$9__102_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__102_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::TypeValuePair, ::Il2CppString*>*>("Zenject", "DiContainer/<>c", "<>9__102_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.TypeValuePair,System.String> <>9__102_0
void Zenject::DiContainer::$$c::_set_$$9__102_0(System::Func_2<Zenject::TypeValuePair, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__102_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DiContainer/<>c", "<>9__102_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__197_0
System::Func_2<System::Type*, bool>* Zenject::DiContainer::$$c::_get_$$9__197_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__197_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "DiContainer/<>c", "<>9__197_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__197_0
void Zenject::DiContainer::$$c::_set_$$9__197_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__197_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DiContainer/<>c", "<>9__197_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__198_0
System::Func_2<System::Type*, bool>* Zenject::DiContainer::$$c::_get_$$9__198_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__198_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "DiContainer/<>c", "<>9__198_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__198_0
void Zenject::DiContainer::$$c::_set_$$9__198_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__198_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DiContainer/<>c", "<>9__198_0", value)));
}
// Autogenerated method: Zenject.DiContainer/<>c..cctor
void Zenject::DiContainer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "DiContainer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.DiContainer/<>c.<get_AllProviders>b__33_0
System::Collections::Generic::IEnumerable_1<Zenject::DiContainer::ProviderInfo*>* Zenject::DiContainer::$$c::$get_AllProviders$b__33_0(System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<get_AllProviders>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_AllProviders>b__33_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::DiContainer::ProviderInfo*>*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DiContainer/<>c.<get_AllProviders>b__33_1
Zenject::IProvider* Zenject::DiContainer::$$c::$get_AllProviders$b__33_1(Zenject::DiContainer::ProviderInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<get_AllProviders>b__33_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_AllProviders>b__33_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DiContainer/<>c.<ResolveTypeAll>b__86_1
bool Zenject::DiContainer::$$c::$ResolveTypeAll$b__86_1(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<ResolveTypeAll>b__86_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveTypeAll>b__86_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DiContainer/<>c.<InstantiateInternal>b__97_0
::Il2CppString* Zenject::DiContainer::$$c::$InstantiateInternal$b__97_0(Zenject::TypeValuePair x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<InstantiateInternal>b__97_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InstantiateInternal>b__97_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DiContainer/<>c.<InjectExplicitInternal>b__102_0
::Il2CppString* Zenject::DiContainer::$$c::$InjectExplicitInternal$b__102_0(Zenject::TypeValuePair x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<InjectExplicitInternal>b__102_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectExplicitInternal>b__102_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DiContainer/<>c.<BindInternal>b__197_0
bool Zenject::DiContainer::$$c::$BindInternal$b__197_0(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<BindInternal>b__197_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BindInternal>b__197_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DiContainer/<>c.<Bind>b__198_0
bool Zenject::DiContainer::$$c::$Bind$b__198_0(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<Bind>b__198_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Bind>b__198_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DiContainer/<>c__DisplayClass86_0
#include "Zenject/DiContainer_--c__DisplayClass86_0.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer/ProviderInfo
#include "Zenject/DiContainer_ProviderInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DiContainer/<>c__DisplayClass86_0.<ResolveTypeAll>b__0
System::Type* Zenject::DiContainer::$$c__DisplayClass86_0::$ResolveTypeAll$b__0(Zenject::DiContainer::ProviderInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass86_0").WithContext("<ResolveTypeAll>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveTypeAll>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DiContainer/<GetDependencyContracts>d__96
#include "Zenject/DiContainer_-GetDependencyContracts-d__96.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DiContainer/<GetDependencyContracts>d__96.<>m__Finally1
void Zenject::DiContainer::$GetDependencyContracts$d__96::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$GetDependencyContracts$d__96").WithContext("<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer/<GetDependencyContracts>d__96.System.IDisposable.Dispose
void Zenject::DiContainer::$GetDependencyContracts$d__96::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$GetDependencyContracts$d__96").WithContext("System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer/<GetDependencyContracts>d__96.MoveNext
bool Zenject::DiContainer::$GetDependencyContracts$d__96::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$GetDependencyContracts$d__96").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool Zenject::DiContainer::$GetDependencyContracts$d__96::System_Collections_IEnumerator_MoveNext() {
  return Zenject::DiContainer::$GetDependencyContracts$d__96::MoveNext();
}
// Autogenerated method: Zenject.DiContainer/<GetDependencyContracts>d__96.System.Collections.Generic.IEnumerator<System.Type>.get_Current
System::Type* Zenject::DiContainer::$GetDependencyContracts$d__96::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$GetDependencyContracts$d__96").WithContext("System.Collections.Generic.IEnumerator<System.Type>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Type>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer/<GetDependencyContracts>d__96.System.Collections.IEnumerator.Reset
void Zenject::DiContainer::$GetDependencyContracts$d__96::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$GetDependencyContracts$d__96").WithContext("System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer/<GetDependencyContracts>d__96.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::DiContainer::$GetDependencyContracts$d__96::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$GetDependencyContracts$d__96").WithContext("System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer/<GetDependencyContracts>d__96.System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Type*>* Zenject::DiContainer::$GetDependencyContracts$d__96::System_Collections_Generic_IEnumerable_1_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$GetDependencyContracts$d__96").WithContext("System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer/<GetDependencyContracts>d__96.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* Zenject::DiContainer::$GetDependencyContracts$d__96::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$GetDependencyContracts$d__96").WithContext("System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DiContainer/<>c__DisplayClass178_0
#include "Zenject/DiContainer_--c__DisplayClass178_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer/ProviderInfo
#include "Zenject/DiContainer_ProviderInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DiContainer/<>c__DisplayClass178_0.<UnbindId>b__0
bool Zenject::DiContainer::$$c__DisplayClass178_0::$UnbindId$b__0(Zenject::DiContainer::ProviderInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass178_0").WithContext("<UnbindId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnbindId>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IInstantiator
#include "Zenject/IInstantiator.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IInstantiator.Instantiate
::Il2CppObject* Zenject::IInstantiator::Instantiate(System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("Instantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType);
}
// Autogenerated method: Zenject.IInstantiator.Instantiate
::Il2CppObject* Zenject::IInstantiator::Instantiate(System::Type* concreteType, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("Instantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.InstantiateComponent
UnityEngine::Component* Zenject::IInstantiator::InstantiateComponent(System::Type* componentType, UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiateComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, gameObject)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject);
}
// Autogenerated method: Zenject.IInstantiator.InstantiateComponent
UnityEngine::Component* Zenject::IInstantiator::InstantiateComponent(System::Type* componentType, UnityEngine::GameObject* gameObject, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiateComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, gameObject, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefab
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefab(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefab
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefab(UnityEngine::Object* prefab, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, parentTransform);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefab
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefab(UnityEngine::Object* prefab, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, position, rotation, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, position, rotation, parentTransform);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefabResource(::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiatePrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefabResource(::Il2CppString* resourcePath, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiatePrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, parentTransform);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefabResource(::Il2CppString* resourcePath, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiatePrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, position, rotation, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, position, rotation, parentTransform);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabForComponent
::Il2CppObject* Zenject::IInstantiator::InstantiatePrefabForComponent(System::Type* concreteType, UnityEngine::Object* prefab, UnityEngine::Transform* parentTransform, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiatePrefabForComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, prefab, parentTransform, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, prefab, parentTransform, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabResourceForComponent
::Il2CppObject* Zenject::IInstantiator::InstantiatePrefabResourceForComponent(System::Type* concreteType, ::Il2CppString* resourcePath, UnityEngine::Transform* parentTransform, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiatePrefabResourceForComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResourceForComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, resourcePath, parentTransform, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, resourcePath, parentTransform, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.InstantiateScriptableObjectResource
::Il2CppObject* Zenject::IInstantiator::InstantiateScriptableObjectResource(System::Type* scriptableObjectType, ::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiateScriptableObjectResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scriptableObjectType, resourcePath)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath);
}
// Autogenerated method: Zenject.IInstantiator.InstantiateScriptableObjectResource
::Il2CppObject* Zenject::IInstantiator::InstantiateScriptableObjectResource(System::Type* scriptableObjectType, ::Il2CppString* resourcePath, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("InstantiateScriptableObjectResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scriptableObjectType, resourcePath, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.CreateEmptyGameObject
UnityEngine::GameObject* Zenject::IInstantiator::CreateEmptyGameObject(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IInstantiator").WithContext("CreateEmptyGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateEmptyGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.LazyInstanceInjector
#include "Zenject/LazyInstanceInjector.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.LazyInstanceInjector.get_Instances
System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::LazyInstanceInjector::get_Instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("LazyInstanceInjector").WithContext("get_Instances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Instances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.LazyInstanceInjector.AddInstance
void Zenject::LazyInstanceInjector::AddInstance(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("LazyInstanceInjector").WithContext("AddInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.LazyInstanceInjector.AddInstances
void Zenject::LazyInstanceInjector::AddInstances(System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("LazyInstanceInjector").WithContext("AddInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instances)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instances);
}
// Autogenerated method: Zenject.LazyInstanceInjector.LazyInject
void Zenject::LazyInstanceInjector::LazyInject(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("LazyInstanceInjector").WithContext("LazyInject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyInject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.LazyInstanceInjector.LazyInjectAll
void Zenject::LazyInstanceInjector::LazyInjectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("LazyInstanceInjector").WithContext("LazyInjectAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyInjectAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ValidationErrorResponses
#include "Zenject/ValidationErrorResponses.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ValidationErrorResponses Log
Zenject::ValidationErrorResponses Zenject::ValidationErrorResponses::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ValidationErrorResponses").WithContext("_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ValidationErrorResponses>("Zenject", "ValidationErrorResponses", "Log"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ValidationErrorResponses Log
void Zenject::ValidationErrorResponses::_set_Log(Zenject::ValidationErrorResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ValidationErrorResponses").WithContext("_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ValidationErrorResponses", "Log", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ValidationErrorResponses Throw
Zenject::ValidationErrorResponses Zenject::ValidationErrorResponses::_get_Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ValidationErrorResponses").WithContext("_get_Throw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ValidationErrorResponses>("Zenject", "ValidationErrorResponses", "Throw"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ValidationErrorResponses Throw
void Zenject::ValidationErrorResponses::_set_Throw(Zenject::ValidationErrorResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ValidationErrorResponses").WithContext("_set_Throw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ValidationErrorResponses", "Throw", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.RootResolveMethods
#include "Zenject/RootResolveMethods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.RootResolveMethods NonLazyOnly
Zenject::RootResolveMethods Zenject::RootResolveMethods::_get_NonLazyOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RootResolveMethods").WithContext("_get_NonLazyOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::RootResolveMethods>("Zenject", "RootResolveMethods", "NonLazyOnly"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.RootResolveMethods NonLazyOnly
void Zenject::RootResolveMethods::_set_NonLazyOnly(Zenject::RootResolveMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RootResolveMethods").WithContext("_set_NonLazyOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "RootResolveMethods", "NonLazyOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.RootResolveMethods All
Zenject::RootResolveMethods Zenject::RootResolveMethods::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RootResolveMethods").WithContext("_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::RootResolveMethods>("Zenject", "RootResolveMethods", "All"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.RootResolveMethods All
void Zenject::RootResolveMethods::_set_All(Zenject::RootResolveMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("RootResolveMethods").WithContext("_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "RootResolveMethods", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SignalDefaultSyncModes
#include "Zenject/SignalDefaultSyncModes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.SignalDefaultSyncModes Synchronous
Zenject::SignalDefaultSyncModes Zenject::SignalDefaultSyncModes::_get_Synchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalDefaultSyncModes").WithContext("_get_Synchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalDefaultSyncModes>("Zenject", "SignalDefaultSyncModes", "Synchronous"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalDefaultSyncModes Synchronous
void Zenject::SignalDefaultSyncModes::_set_Synchronous(Zenject::SignalDefaultSyncModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalDefaultSyncModes").WithContext("_set_Synchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalDefaultSyncModes", "Synchronous", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.SignalDefaultSyncModes Asynchronous
Zenject::SignalDefaultSyncModes Zenject::SignalDefaultSyncModes::_get_Asynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalDefaultSyncModes").WithContext("_get_Asynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalDefaultSyncModes>("Zenject", "SignalDefaultSyncModes", "Asynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalDefaultSyncModes Asynchronous
void Zenject::SignalDefaultSyncModes::_set_Asynchronous(Zenject::SignalDefaultSyncModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalDefaultSyncModes").WithContext("_set_Asynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalDefaultSyncModes", "Asynchronous", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SignalMissingHandlerResponses
#include "Zenject/SignalMissingHandlerResponses.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.SignalMissingHandlerResponses Ignore
Zenject::SignalMissingHandlerResponses Zenject::SignalMissingHandlerResponses::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalMissingHandlerResponses").WithContext("_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalMissingHandlerResponses>("Zenject", "SignalMissingHandlerResponses", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalMissingHandlerResponses Ignore
void Zenject::SignalMissingHandlerResponses::_set_Ignore(Zenject::SignalMissingHandlerResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalMissingHandlerResponses").WithContext("_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalMissingHandlerResponses", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.SignalMissingHandlerResponses Throw
Zenject::SignalMissingHandlerResponses Zenject::SignalMissingHandlerResponses::_get_Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalMissingHandlerResponses").WithContext("_get_Throw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalMissingHandlerResponses>("Zenject", "SignalMissingHandlerResponses", "Throw"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalMissingHandlerResponses Throw
void Zenject::SignalMissingHandlerResponses::_set_Throw(Zenject::SignalMissingHandlerResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalMissingHandlerResponses").WithContext("_set_Throw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalMissingHandlerResponses", "Throw", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.SignalMissingHandlerResponses Warn
Zenject::SignalMissingHandlerResponses Zenject::SignalMissingHandlerResponses::_get_Warn() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalMissingHandlerResponses").WithContext("_get_Warn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalMissingHandlerResponses>("Zenject", "SignalMissingHandlerResponses", "Warn"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalMissingHandlerResponses Warn
void Zenject::SignalMissingHandlerResponses::_set_Warn(Zenject::SignalMissingHandlerResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalMissingHandlerResponses").WithContext("_set_Warn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalMissingHandlerResponses", "Warn", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: Zenject.ZenjectSettings/SignalSettings
#include "Zenject/ZenjectSettings_SignalSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectSettings Default
Zenject::ZenjectSettings* Zenject::ZenjectSettings::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectSettings*>("Zenject", "ZenjectSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectSettings Default
void Zenject::ZenjectSettings::_set_Default(Zenject::ZenjectSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectSettings", "Default", value));
}
// Autogenerated method: Zenject.ZenjectSettings.get_Signals
Zenject::ZenjectSettings::SignalSettings* Zenject::ZenjectSettings::get_Signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_Signals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Signals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenjectSettings::SignalSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_ValidationErrorResponse
Zenject::ValidationErrorResponses Zenject::ZenjectSettings::get_ValidationErrorResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_ValidationErrorResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ValidationErrorResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ValidationErrorResponses, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_ValidationRootResolveMethod
Zenject::RootResolveMethods Zenject::ZenjectSettings::get_ValidationRootResolveMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_ValidationRootResolveMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ValidationRootResolveMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::RootResolveMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_DisplayWarningWhenResolvingDuringInstall
bool Zenject::ZenjectSettings::get_DisplayWarningWhenResolvingDuringInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_DisplayWarningWhenResolvingDuringInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DisplayWarningWhenResolvingDuringInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_EnsureDeterministicDestructionOrderOnApplicationQuit
bool Zenject::ZenjectSettings::get_EnsureDeterministicDestructionOrderOnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_EnsureDeterministicDestructionOrderOnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_EnsureDeterministicDestructionOrderOnApplicationQuit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings..cctor
void Zenject::ZenjectSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ZenjectSettings", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectSettings/SignalSettings
#include "Zenject/ZenjectSettings_SignalSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectSettings/SignalSettings Default
Zenject::ZenjectSettings::SignalSettings* Zenject::ZenjectSettings::SignalSettings::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectSettings::SignalSettings*>("Zenject", "ZenjectSettings/SignalSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectSettings/SignalSettings Default
void Zenject::ZenjectSettings::SignalSettings::_set_Default(Zenject::ZenjectSettings::SignalSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectSettings/SignalSettings", "Default", value));
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_DefaultAsyncTickPriority
int Zenject::ZenjectSettings::SignalSettings::get_DefaultAsyncTickPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("get_DefaultAsyncTickPriority");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultAsyncTickPriority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_DefaultSyncMode
Zenject::SignalDefaultSyncModes Zenject::ZenjectSettings::SignalSettings::get_DefaultSyncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("get_DefaultSyncMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultSyncMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SignalDefaultSyncModes, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_MissingHandlerDefaultResponse
Zenject::SignalMissingHandlerResponses Zenject::ZenjectSettings::SignalSettings::get_MissingHandlerDefaultResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("get_MissingHandlerDefaultResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MissingHandlerDefaultResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SignalMissingHandlerResponses, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_RequireStrictUnsubscribe
bool Zenject::ZenjectSettings::SignalSettings::get_RequireStrictUnsubscribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("get_RequireStrictUnsubscribe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RequireStrictUnsubscribe", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings..cctor
void Zenject::ZenjectSettings::SignalSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ZenjectSettings/SignalSettings", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NoTransitionContext
#include "Zenject/NoTransitionContext.hpp"
// Including type: Zenject.NoTransitionInstaller
#include "Zenject/NoTransitionInstaller.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NoTransitionContext.get_installMethod
System::Action_1<Zenject::DiContainer*>* Zenject::NoTransitionContext::get_installMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("NoTransitionContext").WithContext("get_installMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_installMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Action_1<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.NoTransitionContext.Awake
void Zenject::NoTransitionContext::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("NoTransitionContext").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NoTransitionInstaller
#include "Zenject/NoTransitionInstaller.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NoTransitionInstaller.InstallBindings
void Zenject::NoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("NoTransitionInstaller").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.CachedOpenTypeProvider
#include "Zenject/CachedOpenTypeProvider.hpp"
// Including type: Zenject.CachedOpenTypeProvider/<>c
#include "Zenject/CachedOpenTypeProvider_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.CachedProvider
#include "Zenject/CachedProvider.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.CachedOpenTypeProvider.get_NumInstances
int Zenject::CachedOpenTypeProvider::get_NumInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedOpenTypeProvider").WithContext("get_NumInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.ClearCache
void Zenject::CachedOpenTypeProvider::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedOpenTypeProvider").WithContext("ClearCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.get_IsCached
bool Zenject::CachedOpenTypeProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedOpenTypeProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.get_TypeVariesBasedOnMemberType
bool Zenject::CachedOpenTypeProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedOpenTypeProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.GetInstanceType
System::Type* Zenject::CachedOpenTypeProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedOpenTypeProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.GetAllInstancesWithInjectSplit
void Zenject::CachedOpenTypeProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedOpenTypeProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.CachedOpenTypeProvider/<>c
#include "Zenject/CachedOpenTypeProvider_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.CachedProvider
#include "Zenject/CachedProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.CachedOpenTypeProvider/<>c <>9
Zenject::CachedOpenTypeProvider::$$c* Zenject::CachedOpenTypeProvider::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::CachedOpenTypeProvider::$$c*>("Zenject", "CachedOpenTypeProvider/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.CachedOpenTypeProvider/<>c <>9
void Zenject::CachedOpenTypeProvider::$$c::_set_$$9(Zenject::CachedOpenTypeProvider::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "CachedOpenTypeProvider/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.CachedProvider,System.Int32> <>9__8_0
System::Func_2<Zenject::CachedProvider*, int>* Zenject::CachedOpenTypeProvider::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::CachedProvider*, int>*>("Zenject", "CachedOpenTypeProvider/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.CachedProvider,System.Int32> <>9__8_0
void Zenject::CachedOpenTypeProvider::$$c::_set_$$9__8_0(System::Func_2<Zenject::CachedProvider*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "CachedOpenTypeProvider/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Zenject.CachedOpenTypeProvider/<>c..cctor
void Zenject::CachedOpenTypeProvider::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "CachedOpenTypeProvider/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider/<>c.<get_NumInstances>b__8_0
int Zenject::CachedOpenTypeProvider::$$c::$get_NumInstances$b__8_0(Zenject::CachedProvider* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<get_NumInstances>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_NumInstances>b__8_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.CachedProvider
#include "Zenject/CachedProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.CachedProvider.get_NumInstances
int Zenject::CachedProvider::get_NumInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedProvider").WithContext("get_NumInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedProvider.ClearCache
void Zenject::CachedProvider::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedProvider").WithContext("ClearCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedProvider.get_IsCached
bool Zenject::CachedProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedProvider.get_TypeVariesBasedOnMemberType
bool Zenject::CachedProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedProvider.GetInstanceType
System::Type* Zenject::CachedProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.CachedProvider.GetAllInstancesWithInjectSplit
void Zenject::CachedProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("CachedProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToCurrentGameObjectComponentProvider
#include "Zenject/AddToCurrentGameObjectComponentProvider.hpp"
// Including type: Zenject.AddToCurrentGameObjectComponentProvider/<>c__DisplayClass15_0
#include "Zenject/AddToCurrentGameObjectComponentProvider_--c__DisplayClass15_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_Container
Zenject::DiContainer* Zenject::AddToCurrentGameObjectComponentProvider::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_ComponentType
System::Type* Zenject::AddToCurrentGameObjectComponentProvider::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("get_ComponentType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ComponentType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_IsCached
bool Zenject::AddToCurrentGameObjectComponentProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::AddToCurrentGameObjectComponentProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.GetInstanceType
System::Type* Zenject::AddToCurrentGameObjectComponentProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::AddToCurrentGameObjectComponentProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToCurrentGameObjectComponentProvider/<>c__DisplayClass15_0
#include "Zenject/AddToCurrentGameObjectComponentProvider_--c__DisplayClass15_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider/<>c__DisplayClass15_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::AddToCurrentGameObjectComponentProvider::$$c__DisplayClass15_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass15_0").WithContext("<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToExistingGameObjectComponentProvider
#include "Zenject/AddToExistingGameObjectComponentProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProvider.get_ShouldToggleActive
bool Zenject::AddToExistingGameObjectComponentProvider::get_ShouldToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToExistingGameObjectComponentProvider").WithContext("get_ShouldToggleActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldToggleActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProvider.GetGameObject
UnityEngine::GameObject* Zenject::AddToExistingGameObjectComponentProvider::GetGameObject(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToExistingGameObjectComponentProvider").WithContext("GetGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToExistingGameObjectComponentProviderGetter
#include "Zenject/AddToExistingGameObjectComponentProviderGetter.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProviderGetter.get_ShouldToggleActive
bool Zenject::AddToExistingGameObjectComponentProviderGetter::get_ShouldToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToExistingGameObjectComponentProviderGetter").WithContext("get_ShouldToggleActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldToggleActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProviderGetter.GetGameObject
UnityEngine::GameObject* Zenject::AddToExistingGameObjectComponentProviderGetter::GetGameObject(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToExistingGameObjectComponentProviderGetter").WithContext("GetGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToGameObjectComponentProviderBase
#include "Zenject/AddToGameObjectComponentProviderBase.hpp"
// Including type: Zenject.AddToGameObjectComponentProviderBase/<>c__DisplayClass17_0
#include "Zenject/AddToGameObjectComponentProviderBase_--c__DisplayClass17_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_Container
Zenject::DiContainer* Zenject::AddToGameObjectComponentProviderBase::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToGameObjectComponentProviderBase").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_ComponentType
System::Type* Zenject::AddToGameObjectComponentProviderBase::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToGameObjectComponentProviderBase").WithContext("get_ComponentType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ComponentType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_ShouldToggleActive
bool Zenject::AddToGameObjectComponentProviderBase::get_ShouldToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToGameObjectComponentProviderBase").WithContext("get_ShouldToggleActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldToggleActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetGameObject
UnityEngine::GameObject* Zenject::AddToGameObjectComponentProviderBase::GetGameObject(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToGameObjectComponentProviderBase").WithContext("GetGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_IsCached
bool Zenject::AddToGameObjectComponentProviderBase::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToGameObjectComponentProviderBase").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_TypeVariesBasedOnMemberType
bool Zenject::AddToGameObjectComponentProviderBase::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToGameObjectComponentProviderBase").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetInstanceType
System::Type* Zenject::AddToGameObjectComponentProviderBase::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToGameObjectComponentProviderBase").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetAllInstancesWithInjectSplit
void Zenject::AddToGameObjectComponentProviderBase::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToGameObjectComponentProviderBase").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToGameObjectComponentProviderBase/<>c__DisplayClass17_0
#include "Zenject/AddToGameObjectComponentProviderBase_--c__DisplayClass17_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase/<>c__DisplayClass17_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::AddToGameObjectComponentProviderBase::$$c__DisplayClass17_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass17_0").WithContext("<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToNewGameObjectComponentProvider
#include "Zenject/AddToNewGameObjectComponentProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToNewGameObjectComponentProvider.get_ShouldToggleActive
bool Zenject::AddToNewGameObjectComponentProvider::get_ShouldToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToNewGameObjectComponentProvider").WithContext("get_ShouldToggleActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldToggleActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToNewGameObjectComponentProvider.GetGameObject
UnityEngine::GameObject* Zenject::AddToNewGameObjectComponentProvider::GetGameObject(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToNewGameObjectComponentProvider").WithContext("GetGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GetFromGameObjectComponentProvider
#include "Zenject/GetFromGameObjectComponentProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GetFromGameObjectComponentProvider.get_IsCached
bool Zenject::GetFromGameObjectComponentProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromGameObjectComponentProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromGameObjectComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::GetFromGameObjectComponentProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromGameObjectComponentProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromGameObjectComponentProvider.GetInstanceType
System::Type* Zenject::GetFromGameObjectComponentProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromGameObjectComponentProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.GetFromGameObjectComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::GetFromGameObjectComponentProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromGameObjectComponentProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GetFromGameObjectGetterComponentProvider
#include "Zenject/GetFromGameObjectGetterComponentProvider.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GetFromGameObjectGetterComponentProvider.get_IsCached
bool Zenject::GetFromGameObjectGetterComponentProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromGameObjectGetterComponentProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromGameObjectGetterComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::GetFromGameObjectGetterComponentProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromGameObjectGetterComponentProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromGameObjectGetterComponentProvider.GetInstanceType
System::Type* Zenject::GetFromGameObjectGetterComponentProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromGameObjectGetterComponentProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.GetFromGameObjectGetterComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::GetFromGameObjectGetterComponentProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromGameObjectGetterComponentProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GetFromPrefabComponentProvider
#include "Zenject/GetFromPrefabComponentProvider.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GetFromPrefabComponentProvider.get_IsCached
bool Zenject::GetFromPrefabComponentProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromPrefabComponentProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromPrefabComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::GetFromPrefabComponentProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromPrefabComponentProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromPrefabComponentProvider.GetInstanceType
System::Type* Zenject::GetFromPrefabComponentProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromPrefabComponentProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.GetFromPrefabComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::GetFromPrefabComponentProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GetFromPrefabComponentProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InstantiateOnPrefabComponentProvider
#include "Zenject/InstantiateOnPrefabComponentProvider.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InstantiateOnPrefabComponentProvider.get_IsCached
bool Zenject::InstantiateOnPrefabComponentProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstantiateOnPrefabComponentProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstantiateOnPrefabComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::InstantiateOnPrefabComponentProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstantiateOnPrefabComponentProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstantiateOnPrefabComponentProvider.GetInstanceType
System::Type* Zenject::InstantiateOnPrefabComponentProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstantiateOnPrefabComponentProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.InstantiateOnPrefabComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::InstantiateOnPrefabComponentProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstantiateOnPrefabComponentProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.EmptyGameObjectProvider
#include "Zenject/EmptyGameObjectProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.EmptyGameObjectProvider.get_IsCached
bool Zenject::EmptyGameObjectProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("EmptyGameObjectProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.EmptyGameObjectProvider.get_TypeVariesBasedOnMemberType
bool Zenject::EmptyGameObjectProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("EmptyGameObjectProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.EmptyGameObjectProvider.GetInstanceType
System::Type* Zenject::EmptyGameObjectProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("EmptyGameObjectProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.EmptyGameObjectProvider.GetAllInstancesWithInjectSplit
void Zenject::EmptyGameObjectProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("EmptyGameObjectProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabGameObjectProvider
#include "Zenject/PrefabGameObjectProvider.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabGameObjectProvider.get_IsCached
bool Zenject::PrefabGameObjectProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabGameObjectProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabGameObjectProvider.get_TypeVariesBasedOnMemberType
bool Zenject::PrefabGameObjectProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabGameObjectProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabGameObjectProvider.GetInstanceType
System::Type* Zenject::PrefabGameObjectProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabGameObjectProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.PrefabGameObjectProvider.GetAllInstancesWithInjectSplit
void Zenject::PrefabGameObjectProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabGameObjectProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IProvider.get_TypeVariesBasedOnMemberType
bool Zenject::IProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IProvider.get_IsCached
bool Zenject::IProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IProvider.GetInstanceType
System::Type* Zenject::IProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.IProvider.GetAllInstancesWithInjectSplit
void Zenject::IProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, instances)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, instances);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IProviderExtensions
#include "Zenject/IProviderExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<Zenject.TypeValuePair> EmptyArgList
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::IProviderExtensions::_get_EmptyArgList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("_get_EmptyArgList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::TypeValuePair>*>("Zenject", "IProviderExtensions", "EmptyArgList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<Zenject.TypeValuePair> EmptyArgList
void Zenject::IProviderExtensions::_set_EmptyArgList(System::Collections::Generic::List_1<Zenject::TypeValuePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("_set_EmptyArgList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "IProviderExtensions", "EmptyArgList", value));
}
// Autogenerated method: Zenject.IProviderExtensions.GetAllInstancesWithInjectSplit
void Zenject::IProviderExtensions::GetAllInstancesWithInjectSplit(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, injectAction, buffer);
}
// Autogenerated method: Zenject.IProviderExtensions.GetAllInstances
void Zenject::IProviderExtensions::GetAllInstances(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("GetAllInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetAllInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, buffer);
}
// Autogenerated method: Zenject.IProviderExtensions.GetAllInstances
void Zenject::IProviderExtensions::GetAllInstances(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("GetAllInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetAllInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, args, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, args, buffer);
}
// Autogenerated method: Zenject.IProviderExtensions.TryGetInstance
::Il2CppObject* Zenject::IProviderExtensions::TryGetInstance(Zenject::IProvider* creator, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("TryGetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "TryGetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context);
}
// Autogenerated method: Zenject.IProviderExtensions.TryGetInstance
::Il2CppObject* Zenject::IProviderExtensions::TryGetInstance(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("TryGetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "TryGetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, args);
}
// Autogenerated method: Zenject.IProviderExtensions.GetInstance
::Il2CppObject* Zenject::IProviderExtensions::GetInstance(Zenject::IProvider* creator, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("GetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context);
}
// Autogenerated method: Zenject.IProviderExtensions.GetInstance
::Il2CppObject* Zenject::IProviderExtensions::GetInstance(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext("GetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, args);
}
// Autogenerated method: Zenject.IProviderExtensions..cctor
void Zenject::IProviderExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IProviderExtensions").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InstanceProvider
#include "Zenject/InstanceProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InstanceProvider.<GetAllInstancesWithInjectSplit>b__9_0
void Zenject::InstanceProvider::$GetAllInstancesWithInjectSplit$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstanceProvider").WithContext("<GetAllInstancesWithInjectSplit>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__9_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstanceProvider.get_IsCached
bool Zenject::InstanceProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstanceProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstanceProvider.get_TypeVariesBasedOnMemberType
bool Zenject::InstanceProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstanceProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstanceProvider.GetInstanceType
System::Type* Zenject::InstanceProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstanceProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.InstanceProvider.GetAllInstancesWithInjectSplit
void Zenject::InstanceProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InstanceProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MethodMultipleProviderUntyped
#include "Zenject/MethodMultipleProviderUntyped.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.MethodMultipleProviderUntyped.get_IsCached
bool Zenject::MethodMultipleProviderUntyped::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MethodMultipleProviderUntyped").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MethodMultipleProviderUntyped.get_TypeVariesBasedOnMemberType
bool Zenject::MethodMultipleProviderUntyped::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MethodMultipleProviderUntyped").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MethodMultipleProviderUntyped.GetInstanceType
System::Type* Zenject::MethodMultipleProviderUntyped::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MethodMultipleProviderUntyped").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.MethodMultipleProviderUntyped.GetAllInstancesWithInjectSplit
void Zenject::MethodMultipleProviderUntyped::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MethodMultipleProviderUntyped").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MethodProviderUntyped
#include "Zenject/MethodProviderUntyped.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.MethodProviderUntyped.get_IsCached
bool Zenject::MethodProviderUntyped::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MethodProviderUntyped").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MethodProviderUntyped.get_TypeVariesBasedOnMemberType
bool Zenject::MethodProviderUntyped::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MethodProviderUntyped").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MethodProviderUntyped.GetInstanceType
System::Type* Zenject::MethodProviderUntyped::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MethodProviderUntyped").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.MethodProviderUntyped.GetAllInstancesWithInjectSplit
void Zenject::MethodProviderUntyped::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("MethodProviderUntyped").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IPrefabInstantiator.get_ArgumentTarget
System::Type* Zenject::IPrefabInstantiator::get_ArgumentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IPrefabInstantiator").WithContext("get_ArgumentTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ArgumentTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IPrefabInstantiator.get_ExtraArguments
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::IPrefabInstantiator::get_ExtraArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IPrefabInstantiator").WithContext("get_ExtraArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExtraArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IPrefabInstantiator.get_GameObjectCreationParameters
Zenject::GameObjectCreationParameters* Zenject::IPrefabInstantiator::get_GameObjectCreationParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IPrefabInstantiator").WithContext("get_GameObjectCreationParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GameObjectCreationParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::GameObjectCreationParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IPrefabInstantiator.Instantiate
UnityEngine::GameObject* Zenject::IPrefabInstantiator::Instantiate(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IPrefabInstantiator").WithContext("Instantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context, args, injectAction);
}
// Autogenerated method: Zenject.IPrefabInstantiator.GetPrefab
UnityEngine::Object* Zenject::IPrefabInstantiator::GetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IPrefabInstantiator").WithContext("GetPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabInstantiator
#include "Zenject/PrefabInstantiator.hpp"
// Including type: Zenject.PrefabInstantiator/<>c__DisplayClass15_0
#include "Zenject/PrefabInstantiator_--c__DisplayClass15_0.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabInstantiator.get_GameObjectCreationParameters
Zenject::GameObjectCreationParameters* Zenject::PrefabInstantiator::get_GameObjectCreationParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiator").WithContext("get_GameObjectCreationParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GameObjectCreationParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::GameObjectCreationParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiator.get_ArgumentTarget
System::Type* Zenject::PrefabInstantiator::get_ArgumentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiator").WithContext("get_ArgumentTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ArgumentTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiator.get_ExtraArguments
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::PrefabInstantiator::get_ExtraArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiator").WithContext("get_ExtraArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExtraArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiator.GetPrefab
UnityEngine::Object* Zenject::PrefabInstantiator::GetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiator").WithContext("GetPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiator.Instantiate
UnityEngine::GameObject* Zenject::PrefabInstantiator::Instantiate(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiator").WithContext("Instantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context, args, injectAction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabInstantiator/<>c__DisplayClass15_0
#include "Zenject/PrefabInstantiator_--c__DisplayClass15_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabInstantiator/<>c__DisplayClass15_0.<Instantiate>b__0
void Zenject::PrefabInstantiator::$$c__DisplayClass15_0::$Instantiate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass15_0").WithContext("<Instantiate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Instantiate>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabInstantiatorCached.get_ExtraArguments
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::PrefabInstantiatorCached::get_ExtraArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiatorCached").WithContext("get_ExtraArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExtraArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiatorCached.get_ArgumentTarget
System::Type* Zenject::PrefabInstantiatorCached::get_ArgumentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiatorCached").WithContext("get_ArgumentTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ArgumentTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiatorCached.get_GameObjectCreationParameters
Zenject::GameObjectCreationParameters* Zenject::PrefabInstantiatorCached::get_GameObjectCreationParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiatorCached").WithContext("get_GameObjectCreationParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GameObjectCreationParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::GameObjectCreationParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiatorCached.GetPrefab
UnityEngine::Object* Zenject::PrefabInstantiatorCached::GetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiatorCached").WithContext("GetPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiatorCached.Instantiate
UnityEngine::GameObject* Zenject::PrefabInstantiatorCached::Instantiate(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabInstantiatorCached").WithContext("Instantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context, args, injectAction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IPrefabProvider.GetPrefab
UnityEngine::Object* Zenject::IPrefabProvider::GetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IPrefabProvider").WithContext("GetPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabProvider
#include "Zenject/PrefabProvider.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabProvider.GetPrefab
UnityEngine::Object* Zenject::PrefabProvider::GetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabProvider").WithContext("GetPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabProviderResource
#include "Zenject/PrefabProviderResource.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabProviderResource.GetPrefab
UnityEngine::Object* Zenject::PrefabProviderResource::GetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PrefabProviderResource").WithContext("GetPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProviderUtil
#include "Zenject/ProviderUtil.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ProviderUtil.GetTypeToInstantiate
System::Type* Zenject::ProviderUtil::GetTypeToInstantiate(System::Type* contractType, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ProviderUtil").WithContext("GetTypeToInstantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProviderUtil", "GetTypeToInstantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, concreteType)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, contractType, concreteType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ResolveProvider
#include "Zenject/ResolveProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ResolveProvider.GetSubContext
Zenject::InjectContext* Zenject::ResolveProvider::GetSubContext(Zenject::InjectContext* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResolveProvider").WithContext("GetSubContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSubContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method, parent);
}
// Autogenerated method: Zenject.ResolveProvider.get_IsCached
bool Zenject::ResolveProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResolveProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ResolveProvider.get_TypeVariesBasedOnMemberType
bool Zenject::ResolveProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResolveProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ResolveProvider.GetInstanceType
System::Type* Zenject::ResolveProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResolveProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.ResolveProvider.GetAllInstancesWithInjectSplit
void Zenject::ResolveProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResolveProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ResourceProvider
#include "Zenject/ResourceProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ResourceProvider.get_IsCached
bool Zenject::ResourceProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResourceProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ResourceProvider.get_TypeVariesBasedOnMemberType
bool Zenject::ResourceProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResourceProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ResourceProvider.GetInstanceType
System::Type* Zenject::ResourceProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResourceProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.ResourceProvider.GetAllInstancesWithInjectSplit
void Zenject::ResourceProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ResourceProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectInstanceProvider
#include "Zenject/ScriptableObjectInstanceProvider.hpp"
// Including type: Zenject.ScriptableObjectInstanceProvider/<>c__DisplayClass13_0
#include "Zenject/ScriptableObjectInstanceProvider_--c__DisplayClass13_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider.get_IsCached
bool Zenject::ScriptableObjectInstanceProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectInstanceProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider.get_TypeVariesBasedOnMemberType
bool Zenject::ScriptableObjectInstanceProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectInstanceProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider.GetInstanceType
System::Type* Zenject::ScriptableObjectInstanceProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectInstanceProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider.GetAllInstancesWithInjectSplit
void Zenject::ScriptableObjectInstanceProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectInstanceProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectInstanceProvider/<>c__DisplayClass13_0
#include "Zenject/ScriptableObjectInstanceProvider_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider/<>c__DisplayClass13_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::ScriptableObjectInstanceProvider::$$c__DisplayClass13_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass13_0").WithContext("<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectResourceProvider
#include "Zenject/ScriptableObjectResourceProvider.hpp"
// Including type: Zenject.ScriptableObjectResourceProvider/<>c__DisplayClass13_0
#include "Zenject/ScriptableObjectResourceProvider_--c__DisplayClass13_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectResourceProvider.get_IsCached
bool Zenject::ScriptableObjectResourceProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectResourceProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectResourceProvider.get_TypeVariesBasedOnMemberType
bool Zenject::ScriptableObjectResourceProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectResourceProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectResourceProvider.GetInstanceType
System::Type* Zenject::ScriptableObjectResourceProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectResourceProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.ScriptableObjectResourceProvider.GetAllInstancesWithInjectSplit
void Zenject::ScriptableObjectResourceProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ScriptableObjectResourceProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectResourceProvider/<>c__DisplayClass13_0
#include "Zenject/ScriptableObjectResourceProvider_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectResourceProvider/<>c__DisplayClass13_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::ScriptableObjectResourceProvider::$$c__DisplayClass13_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass13_0").WithContext("<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ISubContainerCreator.CreateSubContainer
Zenject::DiContainer* Zenject::ISubContainerCreator::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ISubContainerCreator").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.get_DefaultParentName
::Il2CppString* Zenject::SubContainerCreatorBindInfo::get_DefaultParentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorBindInfo").WithContext("get_DefaultParentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultParentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.set_DefaultParentName
void Zenject::SubContainerCreatorBindInfo::set_DefaultParentName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorBindInfo").WithContext("set_DefaultParentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_DefaultParentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.get_CreateKernel
bool Zenject::SubContainerCreatorBindInfo::get_CreateKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorBindInfo").WithContext("get_CreateKernel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CreateKernel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.set_CreateKernel
void Zenject::SubContainerCreatorBindInfo::set_CreateKernel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorBindInfo").WithContext("set_CreateKernel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_CreateKernel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.get_KernelType
System::Type* Zenject::SubContainerCreatorBindInfo::get_KernelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorBindInfo").WithContext("get_KernelType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_KernelType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.set_KernelType
void Zenject::SubContainerCreatorBindInfo::set_KernelType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorBindInfo").WithContext("set_KernelType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_KernelType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByInstaller
#include "Zenject/SubContainerCreatorByInstaller.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByInstaller.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByInstaller::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByInstaller").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByInstance
#include "Zenject/SubContainerCreatorByInstance.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByInstance.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByInstance::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByInstance").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByInstanceGetter
#include "Zenject/SubContainerCreatorByInstanceGetter.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByInstanceGetter.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByInstanceGetter::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByInstanceGetter").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByMethodBase
#include "Zenject/SubContainerCreatorByMethodBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByMethodBase.CreateEmptySubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethodBase::CreateEmptySubContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByMethodBase").WithContext("CreateEmptySubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateEmptySubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorByMethodBase.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethodBase::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByMethodBase").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByMethod
#include "Zenject/SubContainerCreatorByMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByMethod.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethod::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByMethod").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectDynamicContext
#include "Zenject/SubContainerCreatorByNewGameObjectDynamicContext.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorByNewGameObjectDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewGameObjectDynamicContext").WithContext("CreateGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shouldMakeActive)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller.hpp"
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectInstaller.AddInstallers
void Zenject::SubContainerCreatorByNewGameObjectInstaller::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewGameObjectInstaller").WithContext("AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0.<AddInstallers>b__0
void Zenject::SubContainerCreatorByNewGameObjectInstaller::$$c__DisplayClass3_0::$AddInstallers$b__0(Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass3_0").WithContext("<AddInstallers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddInstallers>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(subContainer))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectMethod
#include "Zenject/SubContainerCreatorByNewGameObjectMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectMethod.AddInstallers
void Zenject::SubContainerCreatorByNewGameObjectMethod::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewGameObjectMethod").WithContext("AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefab
#include "Zenject/SubContainerCreatorByNewPrefab.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefab.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefab::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewPrefab").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, parentContext)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabDynamicContext
#include "Zenject/SubContainerCreatorByNewPrefabDynamicContext.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorByNewPrefabDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewPrefabDynamicContext").WithContext("CreateGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shouldMakeActive)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller
#include "Zenject/SubContainerCreatorByNewPrefabInstaller.hpp"
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewPrefabInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabInstaller.AddInstallers
void Zenject::SubContainerCreatorByNewPrefabInstaller::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewPrefabInstaller").WithContext("AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewPrefabInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0.<AddInstallers>b__0
void Zenject::SubContainerCreatorByNewPrefabInstaller::$$c__DisplayClass3_0::$AddInstallers$b__0(Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass3_0").WithContext("<AddInstallers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddInstallers>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(subContainer))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabMethod
#include "Zenject/SubContainerCreatorByNewPrefabMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabMethod.AddInstallers
void Zenject::SubContainerCreatorByNewPrefabMethod::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewPrefabMethod").WithContext("AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams
#include "Zenject/SubContainerCreatorByNewPrefabWithParams.hpp"
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0
#include "Zenject/SubContainerCreatorByNewPrefabWithParams_--c__DisplayClass7_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.get_Container
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewPrefabWithParams").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.CreateTempContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::CreateTempContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewPrefabWithParams").WithContext("CreateTempContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTempContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorByNewPrefabWithParams").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, parentContext)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0
#include "Zenject/SubContainerCreatorByNewPrefabWithParams_--c__DisplayClass7_0.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0.<CreateTempContainer>b__0
bool Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::$CreateTempContainer$b__0(Zenject::InjectableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass7_0").WithContext("<CreateTempContainer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTempContainer>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0.<CreateTempContainer>b__1
int Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::$CreateTempContainer$b__1(Zenject::InjectableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass7_0").WithContext("<CreateTempContainer>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTempContainer>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorCached.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorCached::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorCached").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorDynamicContext
#include "Zenject/SubContainerCreatorDynamicContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.get_Container
Zenject::DiContainer* Zenject::SubContainerCreatorDynamicContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorDynamicContext").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.AddInstallers
void Zenject::SubContainerCreatorDynamicContext::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorDynamicContext").WithContext("AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorDynamicContext").WithContext("CreateGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shouldMakeActive)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorDynamicContext::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorDynamicContext").WithContext("CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, parentContext)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorUtil
#include "Zenject/SubContainerCreatorUtil.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorUtil.ApplyBindSettings
void Zenject::SubContainerCreatorUtil::ApplyBindSettings(Zenject::SubContainerCreatorBindInfo* subContainerBindInfo, Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerCreatorUtil").WithContext("ApplyBindSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "SubContainerCreatorUtil", "ApplyBindSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(subContainerBindInfo, subContainer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, subContainerBindInfo, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerDependencyProvider
#include "Zenject/SubContainerDependencyProvider.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerDependencyProvider.CreateSubContext
Zenject::InjectContext* Zenject::SubContainerDependencyProvider::CreateSubContext(Zenject::InjectContext* parent, Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerDependencyProvider").WithContext("CreateSubContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent, subContainer)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method, parent, subContainer);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.get_IsCached
bool Zenject::SubContainerDependencyProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerDependencyProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.get_TypeVariesBasedOnMemberType
bool Zenject::SubContainerDependencyProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerDependencyProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.GetInstanceType
System::Type* Zenject::SubContainerDependencyProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerDependencyProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.GetAllInstancesWithInjectSplit
void Zenject::SubContainerDependencyProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerDependencyProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TransientProvider
#include "Zenject/TransientProvider.hpp"
// Including type: Zenject.TransientProvider/<>c__DisplayClass11_0
#include "Zenject/TransientProvider_--c__DisplayClass11_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TransientProvider.GetTypeToCreate
System::Type* Zenject::TransientProvider::GetTypeToCreate(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("TransientProvider").WithContext("GetTypeToCreate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTypeToCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.TransientProvider.get_IsCached
bool Zenject::TransientProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("TransientProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TransientProvider.get_TypeVariesBasedOnMemberType
bool Zenject::TransientProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("TransientProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TransientProvider.GetInstanceType
System::Type* Zenject::TransientProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("TransientProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.TransientProvider.GetAllInstancesWithInjectSplit
void Zenject::TransientProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("TransientProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TransientProvider/<>c__DisplayClass11_0
#include "Zenject/TransientProvider_--c__DisplayClass11_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TransientProvider/<>c__DisplayClass11_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::TransientProvider::$$c__DisplayClass11_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass11_0").WithContext("<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorIkHandlerManager
#include "Zenject/AnimatorIkHandlerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IAnimatorIkHandler
#include "Zenject/IAnimatorIkHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorIkHandlerManager.Construct
void Zenject::AnimatorIkHandlerManager::Construct(System::Collections::Generic::List_1<Zenject::IAnimatorIkHandler*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AnimatorIkHandlerManager").WithContext("Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handlers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handlers);
}
// Autogenerated method: Zenject.AnimatorIkHandlerManager.OnAnimatorIk
void Zenject::AnimatorIkHandlerManager::OnAnimatorIk() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AnimatorIkHandlerManager").WithContext("OnAnimatorIk");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAnimatorIk", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorInstaller
#include "Zenject/AnimatorInstaller.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorInstaller.InstallBindings
void Zenject::AnimatorInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AnimatorInstaller").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorMoveHandlerManager
#include "Zenject/AnimatorMoveHandlerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IAnimatorMoveHandler
#include "Zenject/IAnimatorMoveHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorMoveHandlerManager.Construct
void Zenject::AnimatorMoveHandlerManager::Construct(System::Collections::Generic::List_1<Zenject::IAnimatorMoveHandler*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AnimatorMoveHandlerManager").WithContext("Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handlers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handlers);
}
// Autogenerated method: Zenject.AnimatorMoveHandlerManager.OnAnimatorMove
void Zenject::AnimatorMoveHandlerManager::OnAnimatorMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AnimatorMoveHandlerManager").WithContext("OnAnimatorMove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAnimatorMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IAnimatorIkHandler
#include "Zenject/IAnimatorIkHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IAnimatorIkHandler.OnAnimatorIk
void Zenject::IAnimatorIkHandler::OnAnimatorIk() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IAnimatorIkHandler").WithContext("OnAnimatorIk");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAnimatorIk", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IAnimatorMoveHandler
#include "Zenject/IAnimatorMoveHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IAnimatorMoveHandler.OnAnimatorMove
void Zenject::IAnimatorMoveHandler::OnAnimatorMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IAnimatorMoveHandler").WithContext("OnAnimatorMove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAnimatorMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_0
#include "Zenject/DisposableManager_--c__DisplayClass4_0.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_1
#include "Zenject/DisposableManager_--c__DisplayClass4_1.hpp"
// Including type: Zenject.DisposableManager/<>c
#include "Zenject/DisposableManager_--c.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass9_0
#include "Zenject/DisposableManager_--c__DisplayClass9_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager.Add
void Zenject::DisposableManager::Add(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DisposableManager").WithContext("Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.Add
void Zenject::DisposableManager::Add(System::IDisposable* disposable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DisposableManager").WithContext("Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable, priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable, priority);
}
// Autogenerated method: Zenject.DisposableManager.AddLate
void Zenject::DisposableManager::AddLate(Zenject::ILateDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DisposableManager").WithContext("AddLate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.AddLate
void Zenject::DisposableManager::AddLate(Zenject::ILateDisposable* disposable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DisposableManager").WithContext("AddLate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable, priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable, priority);
}
// Autogenerated method: Zenject.DisposableManager.Remove
void Zenject::DisposableManager::Remove(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DisposableManager").WithContext("Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.LateDispose
void Zenject::DisposableManager::LateDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DisposableManager").WithContext("LateDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DisposableManager.Dispose
void Zenject::DisposableManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("DisposableManager").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void Zenject::DisposableManager::System_IDisposable_Dispose() {
  Zenject::DisposableManager::Dispose();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/DisposableInfo
#include "Zenject/DisposableManager.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_0
#include "Zenject/DisposableManager_--c__DisplayClass4_0.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass4_0.<.ctor>b__0
bool Zenject::DisposableManager::$$c__DisplayClass4_0::$_ctor$b__0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass4_0").WithContext("<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_1
#include "Zenject/DisposableManager_--c__DisplayClass4_1.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass4_1.<.ctor>b__2
bool Zenject::DisposableManager::$$c__DisplayClass4_1::$_ctor$b__2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass4_1").WithContext("<.ctor>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c
#include "Zenject/DisposableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.DisposableManager/<>c <>9
Zenject::DisposableManager::$$c* Zenject::DisposableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::DisposableManager::$$c*>("Zenject", "DisposableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.DisposableManager/<>c <>9
void Zenject::DisposableManager::$$c::_set_$$9(Zenject::DisposableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_1
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* Zenject::DisposableManager::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>*>("Zenject", "DisposableManager/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_1
void Zenject::DisposableManager::$$c::_set_$$9__4_1(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__4_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_3
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* Zenject::DisposableManager::$$c::_get_$$9__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__4_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>*>("Zenject", "DisposableManager/<>c", "<>9__4_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_3
void Zenject::DisposableManager::$$c::_set_$$9__4_3(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__4_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__4_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.DisposableManager/LateDisposableInfo,System.Int32> <>9__10_0
System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>* Zenject::DisposableManager::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>*>("Zenject", "DisposableManager/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.DisposableManager/LateDisposableInfo,System.Int32> <>9__10_0
void Zenject::DisposableManager::$$c::_set_$$9__10_0(System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.DisposableManager/DisposableInfo,System.Int32> <>9__11_0
System::Func_2<Zenject::DisposableManager::DisposableInfo, int>* Zenject::DisposableManager::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DisposableManager::DisposableInfo, int>*>("Zenject", "DisposableManager/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.DisposableManager/DisposableInfo,System.Int32> <>9__11_0
void Zenject::DisposableManager::$$c::_set_$$9__11_0(System::Func_2<Zenject::DisposableManager::DisposableInfo, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__11_0", value)));
}
// Autogenerated method: Zenject.DisposableManager/<>c..cctor
void Zenject::DisposableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "DisposableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<.ctor>b__4_1
System::Nullable_1<int> Zenject::DisposableManager::$$c::$_ctor$b__4_1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<.ctor>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<.ctor>b__4_3
System::Nullable_1<int> Zenject::DisposableManager::$$c::$_ctor$b__4_3(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<.ctor>b__4_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<LateDispose>b__10_0
int Zenject::DisposableManager::$$c::$LateDispose$b__10_0(Zenject::DisposableManager::LateDisposableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<LateDispose>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LateDispose>b__10_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<Dispose>b__11_0
int Zenject::DisposableManager::$$c::$Dispose$b__11_0(Zenject::DisposableManager::DisposableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c").WithContext("<Dispose>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Dispose>b__11_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass9_0
#include "Zenject/DisposableManager_--c__DisplayClass9_0.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: Zenject.DisposableManager/DisposableInfo
#include "Zenject/DisposableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass9_0.<Remove>b__0
bool Zenject::DisposableManager::$$c__DisplayClass9_0::$Remove$b__0(Zenject::DisposableManager::DisposableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass9_0").WithContext("<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager
#include "Zenject/GuiRenderableManager.hpp"
// Including type: Zenject.GuiRenderableManager/RenderableInfo
#include "Zenject/GuiRenderableManager_RenderableInfo.hpp"
// Including type: Zenject.GuiRenderableManager/<>c__DisplayClass1_0
#include "Zenject/GuiRenderableManager_--c__DisplayClass1_0.hpp"
// Including type: Zenject.GuiRenderableManager/<>c
#include "Zenject/GuiRenderableManager_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GuiRenderableManager.OnGui
void Zenject::GuiRenderableManager::OnGui() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("GuiRenderableManager").WithContext("OnGui");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnGui", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager/RenderableInfo
#include "Zenject/GuiRenderableManager_RenderableInfo.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager/<>c__DisplayClass1_0
#include "Zenject/GuiRenderableManager_--c__DisplayClass1_0.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GuiRenderableManager/<>c__DisplayClass1_0.<.ctor>b__1
bool Zenject::GuiRenderableManager::$$c__DisplayClass1_0::$_ctor$b__1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("$$c__DisplayClass1_0").WithContext("<.ctor>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
