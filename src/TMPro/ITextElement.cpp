// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ITextElement
#include "TMPro/ITextElement.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.ITextElement.get_sharedMaterial
UnityEngine::Material* TMPro::ITextElement::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("ITextElement").WithContext("get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ITextElement.Rebuild
void TMPro::ITextElement::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("ITextElement").WithContext("Rebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(update)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.ITextElement.GetInstanceID
int TMPro::ITextElement::GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("ITextElement").WithContext("GetInstanceID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
