// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextureMappingOptions
#include "TMPro/TextureMappingOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Character
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Character() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TextureMappingOptions").WithContext("_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Character
void TMPro::TextureMappingOptions::_set_Character(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TextureMappingOptions").WithContext("_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Line
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Line() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TextureMappingOptions").WithContext("_get_Line");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Line"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Line
void TMPro::TextureMappingOptions::_set_Line(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TextureMappingOptions").WithContext("_set_Line");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Line", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Paragraph
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Paragraph() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TextureMappingOptions").WithContext("_get_Paragraph");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Paragraph"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Paragraph
void TMPro::TextureMappingOptions::_set_Paragraph(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TextureMappingOptions").WithContext("_set_Paragraph");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Paragraph", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions MatchAspect
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_MatchAspect() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TextureMappingOptions").WithContext("_get_MatchAspect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "MatchAspect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions MatchAspect
void TMPro::TextureMappingOptions::_set_MatchAspect(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TextureMappingOptions").WithContext("_set_MatchAspect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "MatchAspect", value));
}
