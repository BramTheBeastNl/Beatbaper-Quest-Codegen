// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextUtilities
#include "TMPro/TMP_TextUtilities.hpp"
// Including type: TMPro.TMP_TextUtilities/LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] m_rectWorldCorners
::Array<UnityEngine::Vector3>* TMPro::TMP_TextUtilities::_get_m_rectWorldCorners() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("_get_m_rectWorldCorners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("TMPro", "TMP_TextUtilities", "m_rectWorldCorners"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] m_rectWorldCorners
void TMPro::TMP_TextUtilities::_set_m_rectWorldCorners(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("_set_m_rectWorldCorners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "m_rectWorldCorners", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringL
::Il2CppString* TMPro::TMP_TextUtilities::_get_k_lookupStringL() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("_get_k_lookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextUtilities", "k_lookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringL
void TMPro::TMP_TextUtilities::_set_k_lookupStringL(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("_set_k_lookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringU
::Il2CppString* TMPro::TMP_TextUtilities::_get_k_lookupStringU() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("_get_k_lookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextUtilities", "k_lookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringU
void TMPro::TMP_TextUtilities::_set_k_lookupStringU(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("_set_k_lookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(TMPro::TMP_Text* textComponent, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textComponent, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(TMPro::TMP_Text* textComponent, UnityEngine::Vector3 position, UnityEngine::Camera* camera, TMPro::CaretPosition& cursor) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textComponent, position, camera, cursor)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, position, camera, cursor);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLine
int TMPro::TMP_TextUtilities::FindNearestLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindNearestLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacterOnLine
int TMPro::TMP_TextUtilities::FindNearestCharacterOnLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, int line, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindNearestCharacterOnLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacterOnLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, line, camera, visibleOnly)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, line, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.IsIntersectingRectTransform
bool TMPro::TMP_TextUtilities::IsIntersectingRectTransform(UnityEngine::RectTransform* rectTransform, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("IsIntersectingRectTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IsIntersectingRectTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rectTransform, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rectTransform, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingCharacter
int TMPro::TMP_TextUtilities::FindIntersectingCharacter(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindIntersectingCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera, visibleOnly)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacter
int TMPro::TMP_TextUtilities::FindNearestCharacter(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindNearestCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera, visibleOnly)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingWord
int TMPro::TMP_TextUtilities::FindIntersectingWord(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindIntersectingWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestWord
int TMPro::TMP_TextUtilities::FindNearestWord(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindNearestWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLine
int TMPro::TMP_TextUtilities::FindIntersectingLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindIntersectingLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLink
int TMPro::TMP_TextUtilities::FindIntersectingLink(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindIntersectingLink");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLink", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLink
int TMPro::TMP_TextUtilities::FindNearestLink(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("FindNearestLink");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLink", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.PointIntersectRectangle
bool TMPro::TMP_TextUtilities::PointIntersectRectangle(UnityEngine::Vector3 m, UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3 c, UnityEngine::Vector3 d) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("PointIntersectRectangle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "PointIntersectRectangle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(m, a, b, c, d)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, m, a, b, c, d);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ScreenPointToWorldPointInRectangle
bool TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle(UnityEngine::Transform* transform, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, UnityEngine::Vector3& worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("ScreenPointToWorldPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, screenPoint, cam, worldPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, screenPoint, cam, worldPoint);
}
// Autogenerated method: TMPro.TMP_TextUtilities.IntersectLinePlane
bool TMPro::TMP_TextUtilities::IntersectLinePlane(TMPro::TMP_TextUtilities::LineSegment line, UnityEngine::Vector3 point, UnityEngine::Vector3 normal, UnityEngine::Vector3& intersectingPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("IntersectLinePlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IntersectLinePlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(line, point, normal, intersectingPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, line, point, normal, intersectingPoint);
}
// Autogenerated method: TMPro.TMP_TextUtilities.DistanceToLine
float TMPro::TMP_TextUtilities::DistanceToLine(UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("DistanceToLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "DistanceToLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, point)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, point);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToLowerFast
::Il2CppChar TMPro::TMP_TextUtilities::ToLowerFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("ToLowerFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToLowerFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToUpperFast
::Il2CppChar TMPro::TMP_TextUtilities::ToUpperFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("ToUpperFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToUpperFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCode
int TMPro::TMP_TextUtilities::GetSimpleHashCode(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("GetSimpleHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCodeLowercase
uint TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("GetSimpleHashCodeLowercase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCodeLowercase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.HexToInt
int TMPro::TMP_TextUtilities::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("HexToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "HexToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_TextUtilities.StringHexToInt
int TMPro::TMP_TextUtilities::StringHexToInt(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext("StringHexToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "StringHexToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities..cctor
void TMPro::TMP_TextUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_TextUtilities").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
