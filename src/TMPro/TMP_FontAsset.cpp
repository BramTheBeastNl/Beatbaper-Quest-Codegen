// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_FontAsset/<>c
#include "TMPro/TMP_FontAsset_--c.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: TMPro.FaceInfo_Legacy
#include "TMPro/FaceInfo_Legacy.hpp"
// Including type: TMPro.TMP_Glyph
#include "TMPro/TMP_Glyph.hpp"
// Including type: TMPro.KerningTable
#include "TMPro/KerningTable.hpp"
// Including type: TMPro.TMP_FontFeatureTable
#include "TMPro/TMP_FontFeatureTable.hpp"
// Including type: TMPro.TMP_FontWeightPair
#include "TMPro/TMP_FontWeightPair.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.UInt32[] s_GlyphIndexArray
::Array<uint>* TMPro::TMP_FontAsset::_get_s_GlyphIndexArray() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("TMPro", "TMP_FontAsset", "s_GlyphIndexArray"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32[] s_GlyphIndexArray
void TMPro::TMP_FontAsset::_set_s_GlyphIndexArray(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "s_GlyphIndexArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<System.UInt32> s_MissingCharacterList
System::Collections::Generic::List_1<uint>* TMPro::TMP_FontAsset::_get_s_MissingCharacterList() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<uint>*>("TMPro", "TMP_FontAsset", "s_MissingCharacterList"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<System.UInt32> s_MissingCharacterList
void TMPro::TMP_FontAsset::_set_s_MissingCharacterList(System::Collections::Generic::List_1<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "s_MissingCharacterList", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_version
::CsString* TMPro::TMP_FontAsset::get_version() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_version"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_version
void TMPro::TMP_FontAsset::set_version(::CsString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_version", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_sourceFontFile
UnityEngine::Font* TMPro::TMP_FontAsset::get_sourceFontFile() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Font*>(this, "get_sourceFontFile"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_sourceFontFile
void TMPro::TMP_FontAsset::set_sourceFontFile(UnityEngine::Font* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_sourceFontFile", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasPopulationMode
TMPro::AtlasPopulationMode TMPro::TMP_FontAsset::get_atlasPopulationMode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::AtlasPopulationMode>(this, "get_atlasPopulationMode"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasPopulationMode
void TMPro::TMP_FontAsset::set_atlasPopulationMode(TMPro::AtlasPopulationMode value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_atlasPopulationMode", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_faceInfo
UnityEngine::TextCore::FaceInfo TMPro::TMP_FontAsset::get_faceInfo() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::TextCore::FaceInfo>(this, "get_faceInfo"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_faceInfo
void TMPro::TMP_FontAsset::set_faceInfo(UnityEngine::TextCore::FaceInfo value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_faceInfo", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_glyphTable
System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>* TMPro::TMP_FontAsset::get_glyphTable() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>*>(this, "get_glyphTable"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_glyphTable
void TMPro::TMP_FontAsset::set_glyphTable(System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_glyphTable", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_glyphLookupTable
System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>* TMPro::TMP_FontAsset::get_glyphLookupTable() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>*>(this, "get_glyphLookupTable")));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_characterTable
System::Collections::Generic::List_1<TMPro::TMP_Character*>* TMPro::TMP_FontAsset::get_characterTable() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<TMPro::TMP_Character*>*>(this, "get_characterTable"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_characterTable
void TMPro::TMP_FontAsset::set_characterTable(System::Collections::Generic::List_1<TMPro::TMP_Character*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_characterTable", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_characterLookupTable
System::Collections::Generic::Dictionary_2<uint, TMPro::TMP_Character*>* TMPro::TMP_FontAsset::get_characterLookupTable() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::Collections::Generic::Dictionary_2<uint, TMPro::TMP_Character*>*>(this, "get_characterLookupTable")));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasTexture
UnityEngine::Texture2D* TMPro::TMP_FontAsset::get_atlasTexture() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Texture2D*>(this, "get_atlasTexture"));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasTextures
::Array<UnityEngine::Texture2D*>* TMPro::TMP_FontAsset::get_atlasTextures() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Texture2D*>*>(this, "get_atlasTextures"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasTextures
void TMPro::TMP_FontAsset::set_atlasTextures(::Array<UnityEngine::Texture2D*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_atlasTextures", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_usedGlyphRects
System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* TMPro::TMP_FontAsset::get_usedGlyphRects() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*>(this, "get_usedGlyphRects"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_usedGlyphRects
void TMPro::TMP_FontAsset::set_usedGlyphRects(System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_usedGlyphRects", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_freeGlyphRects
System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* TMPro::TMP_FontAsset::get_freeGlyphRects() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*>(this, "get_freeGlyphRects"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_freeGlyphRects
void TMPro::TMP_FontAsset::set_freeGlyphRects(System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_freeGlyphRects", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontInfo
TMPro::FaceInfo_Legacy* TMPro::TMP_FontAsset::get_fontInfo() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::FaceInfo_Legacy*>(this, "get_fontInfo"));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasWidth
int TMPro::TMP_FontAsset::get_atlasWidth() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_atlasWidth"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasWidth
void TMPro::TMP_FontAsset::set_atlasWidth(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_atlasWidth", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasHeight
int TMPro::TMP_FontAsset::get_atlasHeight() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_atlasHeight"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasHeight
void TMPro::TMP_FontAsset::set_atlasHeight(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_atlasHeight", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasPadding
int TMPro::TMP_FontAsset::get_atlasPadding() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_atlasPadding"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasPadding
void TMPro::TMP_FontAsset::set_atlasPadding(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_atlasPadding", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasRenderMode
UnityEngine::TextCore::LowLevel::GlyphRenderMode TMPro::TMP_FontAsset::get_atlasRenderMode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(this, "get_atlasRenderMode"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasRenderMode
void TMPro::TMP_FontAsset::set_atlasRenderMode(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_atlasRenderMode", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontFeatureTable
TMPro::TMP_FontFeatureTable* TMPro::TMP_FontAsset::get_fontFeatureTable() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::TMP_FontFeatureTable*>(this, "get_fontFeatureTable"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fontFeatureTable
void TMPro::TMP_FontAsset::set_fontFeatureTable(TMPro::TMP_FontFeatureTable* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fontFeatureTable", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fallbackFontAssetTable
System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* TMPro::TMP_FontAsset::get_fallbackFontAssetTable() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>*>(this, "get_fallbackFontAssetTable"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fallbackFontAssetTable
void TMPro::TMP_FontAsset::set_fallbackFontAssetTable(System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fallbackFontAssetTable", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_creationSettings
TMPro::FontAssetCreationSettings TMPro::TMP_FontAsset::get_creationSettings() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::FontAssetCreationSettings>(this, "get_creationSettings"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_creationSettings
void TMPro::TMP_FontAsset::set_creationSettings(TMPro::FontAssetCreationSettings value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_creationSettings", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontWeightTable
::Array<TMPro::TMP_FontWeightPair>* TMPro::TMP_FontAsset::get_fontWeightTable() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<TMPro::TMP_FontWeightPair>*>(this, "get_fontWeightTable"));
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fontWeightTable
void TMPro::TMP_FontAsset::set_fontWeightTable(::Array<TMPro::TMP_FontWeightPair>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fontWeightTable", value));
}
// Autogenerated method: TMPro.TMP_FontAsset.CreateFontAsset
TMPro::TMP_FontAsset* TMPro::TMP_FontAsset::CreateFontAsset(UnityEngine::Font* font) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::TMP_FontAsset*>("TMPro", "TMP_FontAsset", "CreateFontAsset", font));
}
// Autogenerated method: TMPro.TMP_FontAsset.CreateFontAsset
TMPro::TMP_FontAsset* TMPro::TMP_FontAsset::CreateFontAsset(UnityEngine::Font* font, int samplingPointSize, int atlasPadding, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, TMPro::AtlasPopulationMode atlasPopulationMode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::TMP_FontAsset*>("TMPro", "TMP_FontAsset", "CreateFontAsset", font, samplingPointSize, atlasPadding, renderMode, atlasWidth, atlasHeight, atlasPopulationMode));
}
// Autogenerated method: TMPro.TMP_FontAsset.Awake
void TMPro::TMP_FontAsset::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: TMPro.TMP_FontAsset.InitializeDictionaryLookupTables
void TMPro::TMP_FontAsset::InitializeDictionaryLookupTables() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InitializeDictionaryLookupTables"));
}
// Autogenerated method: TMPro.TMP_FontAsset.ReadFontAssetDefinition
void TMPro::TMP_FontAsset::ReadFontAssetDefinition() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReadFontAssetDefinition"));
}
// Autogenerated method: TMPro.TMP_FontAsset.SortCharacterTable
void TMPro::TMP_FontAsset::SortCharacterTable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SortCharacterTable"));
}
// Autogenerated method: TMPro.TMP_FontAsset.SortGlyphTable
void TMPro::TMP_FontAsset::SortGlyphTable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SortGlyphTable"));
}
// Autogenerated method: TMPro.TMP_FontAsset.SortGlyphAndCharacterTables
void TMPro::TMP_FontAsset::SortGlyphAndCharacterTables() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SortGlyphAndCharacterTables"));
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter
bool TMPro::TMP_FontAsset::HasCharacter(int character) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasCharacter", character));
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter
bool TMPro::TMP_FontAsset::HasCharacter(::Il2CppChar character) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasCharacter", character));
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter
bool TMPro::TMP_FontAsset::HasCharacter(::Il2CppChar character, bool searchFallbacks) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasCharacter", character, searchFallbacks));
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter_Internal
bool TMPro::TMP_FontAsset::HasCharacter_Internal(::Il2CppChar character, bool searchFallbacks) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasCharacter_Internal", character, searchFallbacks));
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacters
bool TMPro::TMP_FontAsset::HasCharacters(::CsString* text, System::Collections::Generic::List_1<::Il2CppChar>*& missingCharacters) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasCharacters", text, missingCharacters));
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacters
bool TMPro::TMP_FontAsset::HasCharacters(::CsString* text) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasCharacters", text));
}
// Autogenerated method: TMPro.TMP_FontAsset.GetCharacters
::CsString* TMPro::TMP_FontAsset::GetCharacters(TMPro::TMP_FontAsset* fontAsset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("TMPro", "TMP_FontAsset", "GetCharacters", fontAsset));
}
// Autogenerated method: TMPro.TMP_FontAsset.GetCharactersArray
::Array<int>* TMPro::TMP_FontAsset::GetCharactersArray(TMPro::TMP_FontAsset* fontAsset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>("TMPro", "TMP_FontAsset", "GetCharactersArray", fontAsset));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::Array<uint>* unicodes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryAddCharacters", unicodes));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::Array<uint>* unicodes, ::Array<uint>*& missingUnicodes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryAddCharacters", unicodes, missingUnicodes));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::CsString* characters) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryAddCharacters", characters));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::CsString* characters, ::CsString*& missingCharacters) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryAddCharacters", characters, missingCharacters));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacter_Internal
bool TMPro::TMP_FontAsset::TryAddCharacter_Internal(uint unicode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryAddCharacter_Internal", unicode));
}
// Autogenerated method: TMPro.TMP_FontAsset.AddCharacter_Internal
TMPro::TMP_Character* TMPro::TMP_FontAsset::AddCharacter_Internal(uint unicode, UnityEngine::TextCore::Glyph* glyph) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::TMP_Character*>(this, "AddCharacter_Internal", unicode, glyph));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacterInternal
bool TMPro::TMP_FontAsset::TryAddCharacterInternal(uint unicode, TMPro::TMP_Character*& character) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryAddCharacterInternal", unicode, character));
}
// Autogenerated method: TMPro.TMP_FontAsset.GetGlyphIndex
uint TMPro::TMP_FontAsset::GetGlyphIndex(uint unicode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>(this, "GetGlyphIndex", unicode));
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateAtlasTexture
void TMPro::TMP_FontAsset::UpdateAtlasTexture() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateAtlasTexture"));
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords
void TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords(uint unicode, uint glyphIndex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateGlyphAdjustmentRecords", unicode, glyphIndex));
}
// Autogenerated method: TMPro.TMP_FontAsset.ClearFontAssetData
void TMPro::TMP_FontAsset::ClearFontAssetData(bool setAtlasSizeToZero) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearFontAssetData", setAtlasSizeToZero));
}
// Autogenerated method: TMPro.TMP_FontAsset.UpgradeFontAsset
void TMPro::TMP_FontAsset::UpgradeFontAsset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpgradeFontAsset"));
}
// Autogenerated method: TMPro.TMP_FontAsset.UpgradeGlyphAdjustmentTableToFontFeatureTable
void TMPro::TMP_FontAsset::UpgradeGlyphAdjustmentTableToFontFeatureTable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpgradeGlyphAdjustmentTableToFontFeatureTable"));
}
// Autogenerated method: TMPro.TMP_FontAsset..ctor
TMPro::TMP_FontAsset* TMPro::TMP_FontAsset::New_ctor() {
  return (TMP_FontAsset*)THROW_UNLESS(il2cpp_utils::New("TMPro", "TMP_FontAsset"));
}
// Autogenerated method: TMPro.TMP_FontAsset..cctor
void TMPro::TMP_FontAsset::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("TMPro", "TMP_FontAsset", ".cctor"));
}
