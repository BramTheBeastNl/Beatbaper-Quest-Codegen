// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SubMesh
#include "TMPro/TMP_SubMesh.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_SubMesh.get_fontAsset
TMPro::TMP_FontAsset* TMPro::TMP_SubMesh::get_fontAsset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::TMP_FontAsset*>(this, "get_fontAsset"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fontAsset
void TMPro::TMP_SubMesh::set_fontAsset(TMPro::TMP_FontAsset* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fontAsset", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_spriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_SubMesh::get_spriteAsset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::TMP_SpriteAsset*>(this, "get_spriteAsset"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_spriteAsset
void TMPro::TMP_SubMesh::set_spriteAsset(TMPro::TMP_SpriteAsset* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_spriteAsset", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_material
UnityEngine::Material* TMPro::TMP_SubMesh::get_material() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "get_material"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_material
void TMPro::TMP_SubMesh::set_material(UnityEngine::Material* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_material", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_sharedMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_sharedMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "get_sharedMaterial"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_sharedMaterial
void TMPro::TMP_SubMesh::set_sharedMaterial(UnityEngine::Material* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_sharedMaterial", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fallbackMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_fallbackMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "get_fallbackMaterial"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fallbackMaterial
void TMPro::TMP_SubMesh::set_fallbackMaterial(UnityEngine::Material* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fallbackMaterial", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fallbackSourceMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_fallbackSourceMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "get_fallbackSourceMaterial"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fallbackSourceMaterial
void TMPro::TMP_SubMesh::set_fallbackSourceMaterial(UnityEngine::Material* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fallbackSourceMaterial", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_isDefaultMaterial
bool TMPro::TMP_SubMesh::get_isDefaultMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isDefaultMaterial"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_isDefaultMaterial
void TMPro::TMP_SubMesh::set_isDefaultMaterial(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_isDefaultMaterial", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_padding
float TMPro::TMP_SubMesh::get_padding() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_padding"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_padding
void TMPro::TMP_SubMesh::set_padding(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_padding", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_renderer
UnityEngine::Renderer* TMPro::TMP_SubMesh::get_renderer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Renderer*>(this, "get_renderer"));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_meshFilter
UnityEngine::MeshFilter* TMPro::TMP_SubMesh::get_meshFilter() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::MeshFilter*>(this, "get_meshFilter"));
}
// Autogenerated method: TMPro.TMP_SubMesh.get_mesh
UnityEngine::Mesh* TMPro::TMP_SubMesh::get_mesh() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Mesh*>(this, "get_mesh"));
}
// Autogenerated method: TMPro.TMP_SubMesh.set_mesh
void TMPro::TMP_SubMesh::set_mesh(UnityEngine::Mesh* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_mesh", value));
}
// Autogenerated method: TMPro.TMP_SubMesh.OnEnable
void TMPro::TMP_SubMesh::OnEnable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnEnable"));
}
// Autogenerated method: TMPro.TMP_SubMesh.OnDisable
void TMPro::TMP_SubMesh::OnDisable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDisable"));
}
// Autogenerated method: TMPro.TMP_SubMesh.OnDestroy
void TMPro::TMP_SubMesh::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: TMPro.TMP_SubMesh.AddSubTextObject
TMPro::TMP_SubMesh* TMPro::TMP_SubMesh::AddSubTextObject(TMPro::TextMeshPro* textComponent, TMPro::MaterialReference materialReference) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<TMPro::TMP_SubMesh*>("TMPro", "TMP_SubMesh", "AddSubTextObject", textComponent, materialReference));
}
// Autogenerated method: TMPro.TMP_SubMesh.DestroySelf
void TMPro::TMP_SubMesh::DestroySelf() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DestroySelf"));
}
// Autogenerated method: TMPro.TMP_SubMesh.GetMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::GetMaterial(UnityEngine::Material* mat) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "GetMaterial", mat));
}
// Autogenerated method: TMPro.TMP_SubMesh.CreateMaterialInstance
UnityEngine::Material* TMPro::TMP_SubMesh::CreateMaterialInstance(UnityEngine::Material* source) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "CreateMaterialInstance", source));
}
// Autogenerated method: TMPro.TMP_SubMesh.GetSharedMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::GetSharedMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "GetSharedMaterial"));
}
// Autogenerated method: TMPro.TMP_SubMesh.SetSharedMaterial
void TMPro::TMP_SubMesh::SetSharedMaterial(UnityEngine::Material* mat) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetSharedMaterial", mat));
}
// Autogenerated method: TMPro.TMP_SubMesh.GetPaddingForMaterial
float TMPro::TMP_SubMesh::GetPaddingForMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "GetPaddingForMaterial"));
}
// Autogenerated method: TMPro.TMP_SubMesh.UpdateMeshPadding
void TMPro::TMP_SubMesh::UpdateMeshPadding(bool isExtraPadding, bool isUsingBold) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateMeshPadding", isExtraPadding, isUsingBold));
}
// Autogenerated method: TMPro.TMP_SubMesh.SetVerticesDirty
void TMPro::TMP_SubMesh::SetVerticesDirty() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetVerticesDirty"));
}
// Autogenerated method: TMPro.TMP_SubMesh.SetMaterialDirty
void TMPro::TMP_SubMesh::SetMaterialDirty() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetMaterialDirty"));
}
// Autogenerated method: TMPro.TMP_SubMesh.UpdateMaterial
void TMPro::TMP_SubMesh::UpdateMaterial() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateMaterial"));
}
// Autogenerated method: TMPro.TMP_SubMesh..ctor
TMPro::TMP_SubMesh* TMPro::TMP_SubMesh::New_ctor() {
  return (TMP_SubMesh*)THROW_UNLESS(il2cpp_utils::New("TMPro", "TMP_SubMesh"));
}
