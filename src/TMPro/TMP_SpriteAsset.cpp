// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset/<>c
#include "TMPro/TMP_SpriteAsset_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: TMPro.TMP_Sprite
#include "TMPro/TMP_Sprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedSpriteAssets
System::Collections::Generic::List_1<int>* TMPro::TMP_SpriteAsset::_get_k_searchedSpriteAssets() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("_get_k_searchedSpriteAssets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<int>*>("TMPro", "TMP_SpriteAsset", "k_searchedSpriteAssets"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedSpriteAssets
void TMPro::TMP_SpriteAsset::_set_k_searchedSpriteAssets(System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("_set_k_searchedSpriteAssets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset", "k_searchedSpriteAssets", value));
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_version
::Il2CppString* TMPro::TMP_SpriteAsset::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_version
void TMPro::TMP_SpriteAsset::set_version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("set_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_spriteCharacterTable
System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>* TMPro::TMP_SpriteAsset::get_spriteCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("get_spriteCharacterTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spriteCharacterTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_spriteCharacterTable
void TMPro::TMP_SpriteAsset::set_spriteCharacterTable(System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("set_spriteCharacterTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_spriteCharacterTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_spriteGlyphTable
System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>* TMPro::TMP_SpriteAsset::get_spriteGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("get_spriteGlyphTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spriteGlyphTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_spriteGlyphTable
void TMPro::TMP_SpriteAsset::set_spriteGlyphTable(System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("set_spriteGlyphTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_spriteGlyphTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.Awake
void TMPro::TMP_SpriteAsset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetDefaultSpriteMaterial
UnityEngine::Material* TMPro::TMP_SpriteAsset::GetDefaultSpriteMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("GetDefaultSpriteMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDefaultSpriteMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.UpdateLookupTables
void TMPro::TMP_SpriteAsset::UpdateLookupTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("UpdateLookupTables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLookupTables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromHashcode
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromHashcode(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("GetSpriteIndexFromHashcode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromHashcode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromUnicode
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromUnicode(uint unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("GetSpriteIndexFromUnicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromUnicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unicode)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, unicode);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromName
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("GetSpriteIndexFromName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicode
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicode(TMPro::TMP_SpriteAsset* spriteAsset, uint unicode, bool includeFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SearchForSpriteByUnicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spriteAsset, unicode, includeFallbacks, spriteIndex)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, unicode, includeFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal(System::Collections::Generic::List_1<TMPro::TMP_SpriteAsset*>* spriteAssets, uint unicode, bool includeFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SearchForSpriteByUnicodeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicodeInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spriteAssets, unicode, includeFallbacks, spriteIndex)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAssets, unicode, includeFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal(TMPro::TMP_SpriteAsset* spriteAsset, uint unicode, bool includeFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SearchForSpriteByUnicodeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicodeInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spriteAsset, unicode, includeFallbacks, spriteIndex)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, unicode, includeFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCode
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCode(TMPro::TMP_SpriteAsset* spriteAsset, int hashCode, bool includeFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SearchForSpriteByHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spriteAsset, hashCode, includeFallbacks, spriteIndex)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, hashCode, includeFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal(System::Collections::Generic::List_1<TMPro::TMP_SpriteAsset*>* spriteAssets, int hashCode, bool searchFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SearchForSpriteByHashCodeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCodeInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spriteAssets, hashCode, searchFallbacks, spriteIndex)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAssets, hashCode, searchFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal(TMPro::TMP_SpriteAsset* spriteAsset, int hashCode, bool searchFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SearchForSpriteByHashCodeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCodeInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spriteAsset, hashCode, searchFallbacks, spriteIndex)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, hashCode, searchFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortGlyphTable
void TMPro::TMP_SpriteAsset::SortGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SortGlyphTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SortGlyphTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortCharacterTable
void TMPro::TMP_SpriteAsset::SortCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SortCharacterTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SortCharacterTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortGlyphAndCharacterTables
void TMPro::TMP_SpriteAsset::SortGlyphAndCharacterTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("SortGlyphAndCharacterTables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SortGlyphAndCharacterTables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.UpgradeSpriteAsset
void TMPro::TMP_SpriteAsset::UpgradeSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_SpriteAsset").WithContext("UpgradeSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpgradeSpriteAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
