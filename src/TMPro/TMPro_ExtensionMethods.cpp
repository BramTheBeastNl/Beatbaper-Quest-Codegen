// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMPro_ExtensionMethods
#include "TMPro/TMPro_ExtensionMethods.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMPro_ExtensionMethods.ArrayToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::ArrayToString(::Array<::Il2CppChar>* chars) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("TMPro", "TMPro_ExtensionMethods", "ArrayToString", chars));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::IntToString(::Array<int>* unicodes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("TMPro", "TMPro_ExtensionMethods", "IntToString", unicodes));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::IntToString(::Array<int>* unicodes, int start, int length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("TMPro", "TMPro_ExtensionMethods", "IntToString", unicodes, start, length));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Color32 a, UnityEngine::Color32 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("TMPro", "TMPro_ExtensionMethods", "Compare", a, b));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(UnityEngine::Color32 a, UnityEngine::Color32 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("TMPro", "TMPro_ExtensionMethods", "CompareRGB", a, b));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Color a, UnityEngine::Color b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("TMPro", "TMPro_ExtensionMethods", "Compare", a, b));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(UnityEngine::Color a, UnityEngine::Color b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("TMPro", "TMPro_ExtensionMethods", "CompareRGB", a, b));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Multiply
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Multiply(UnityEngine::Color32 c1, UnityEngine::Color32 c2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color32>("TMPro", "TMPro_ExtensionMethods", "Multiply", c1, c2));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(UnityEngine::Color32 c1, UnityEngine::Color32 c2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color32>("TMPro", "TMPro_ExtensionMethods", "Tint", c1, c2));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(UnityEngine::Color32 c1, float tint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color32>("TMPro", "TMPro_ExtensionMethods", "Tint", c1, tint));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, int accuracy) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("TMPro", "TMPro_ExtensionMethods", "Compare", v1, v2, accuracy));
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Quaternion q1, UnityEngine::Quaternion q2, int accuracy) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("TMPro", "TMPro_ExtensionMethods", "Compare", q1, q2, accuracy));
}
