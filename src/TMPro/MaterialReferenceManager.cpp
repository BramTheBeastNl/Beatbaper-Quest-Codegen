// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaterialReferenceManager
#include "TMPro/MaterialReferenceManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.MaterialReferenceManager s_Instance
TMPro::MaterialReferenceManager* TMPro::MaterialReferenceManager::_get_s_Instance() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaterialReferenceManager*>("TMPro", "MaterialReferenceManager", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.MaterialReferenceManager s_Instance
void TMPro::MaterialReferenceManager::_set_s_Instance(TMPro::MaterialReferenceManager* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaterialReferenceManager", "s_Instance", value));
}
// Autogenerated method: TMPro.MaterialReferenceManager.get_instance
TMPro::MaterialReferenceManager* TMPro::MaterialReferenceManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("get_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "get_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::MaterialReferenceManager*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontAsset
void TMPro::MaterialReferenceManager::AddFontAsset(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddFontAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddFontAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fontAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontAssetInternal
void TMPro::MaterialReferenceManager::AddFontAssetInternal(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddFontAssetInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFontAssetInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fontAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAsset
void TMPro::MaterialReferenceManager::AddSpriteAsset(TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddSpriteAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spriteAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAssetInternal
void TMPro::MaterialReferenceManager::AddSpriteAssetInternal(TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spriteAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAsset
void TMPro::MaterialReferenceManager::AddSpriteAsset(int hashCode, TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddSpriteAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, spriteAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAssetInternal
void TMPro::MaterialReferenceManager::AddSpriteAssetInternal(int hashCode, TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, spriteAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontMaterial
void TMPro::MaterialReferenceManager::AddFontMaterial(int hashCode, UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddFontMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddFontMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, material)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, material);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontMaterialInternal
void TMPro::MaterialReferenceManager::AddFontMaterialInternal(int hashCode, UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddFontMaterialInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFontMaterialInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, material)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hashCode, material);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddColorGradientPreset
void TMPro::MaterialReferenceManager::AddColorGradientPreset(int hashCode, TMPro::TMP_ColorGradient* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddColorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddColorGradientPreset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, spriteAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddColorGradientPreset_Internal
void TMPro::MaterialReferenceManager::AddColorGradientPreset_Internal(int hashCode, TMPro::TMP_ColorGradient* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("AddColorGradientPreset_Internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddColorGradientPreset_Internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, spriteAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.Contains
bool TMPro::MaterialReferenceManager::Contains(TMPro::TMP_FontAsset* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(font)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, font);
}
// Autogenerated method: TMPro.MaterialReferenceManager.Contains
bool TMPro::MaterialReferenceManager::Contains(TMPro::TMP_SpriteAsset* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sprite)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sprite);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetFontAsset
bool TMPro::MaterialReferenceManager::TryGetFontAsset(int hashCode, TMPro::TMP_FontAsset*& fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("TryGetFontAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetFontAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, fontAsset)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, fontAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetFontAssetInternal
bool TMPro::MaterialReferenceManager::TryGetFontAssetInternal(int hashCode, TMPro::TMP_FontAsset*& fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("TryGetFontAssetInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetFontAssetInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, fontAsset)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, hashCode, fontAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetSpriteAsset
bool TMPro::MaterialReferenceManager::TryGetSpriteAsset(int hashCode, TMPro::TMP_SpriteAsset*& spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("TryGetSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetSpriteAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, spriteAsset)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetSpriteAssetInternal
bool TMPro::MaterialReferenceManager::TryGetSpriteAssetInternal(int hashCode, TMPro::TMP_SpriteAsset*& spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("TryGetSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, spriteAsset)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetColorGradientPreset
bool TMPro::MaterialReferenceManager::TryGetColorGradientPreset(int hashCode, TMPro::TMP_ColorGradient*& gradientPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("TryGetColorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetColorGradientPreset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, gradientPreset)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, gradientPreset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetColorGradientPresetInternal
bool TMPro::MaterialReferenceManager::TryGetColorGradientPresetInternal(int hashCode, TMPro::TMP_ColorGradient*& gradientPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("TryGetColorGradientPresetInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetColorGradientPresetInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, gradientPreset)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, hashCode, gradientPreset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetMaterial
bool TMPro::MaterialReferenceManager::TryGetMaterial(int hashCode, UnityEngine::Material*& material) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("TryGetMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, material)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, material);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetMaterialInternal
bool TMPro::MaterialReferenceManager::TryGetMaterialInternal(int hashCode, UnityEngine::Material*& material) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("MaterialReferenceManager").WithContext("TryGetMaterialInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetMaterialInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashCode, material)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, hashCode, material);
}
