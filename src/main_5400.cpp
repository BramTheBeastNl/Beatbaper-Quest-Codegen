// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.DictionaryHashHelpers
#include "System/Collections/Generic/DictionaryHashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCAD034
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>*>("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
void System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField(System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField", value));
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers.get_SerializationInfoTable
System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers..cctor
void System::Collections::Generic::DictionaryHashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::DictionaryHashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.NonRandomizedStringEqualityComparer
#include "System/Collections/Generic/NonRandomizedStringEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.Equals
bool System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.GetHashCode
int System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ObjectEqualityComparer
#include "System/Collections/Generic/ObjectEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
System::Collections::Generic::ObjectEqualityComparer* System::Collections::Generic::ObjectEqualityComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::ObjectEqualityComparer*>("System.Collections.Generic", "ObjectEqualityComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
void System::Collections::Generic::ObjectEqualityComparer::_set_Default(System::Collections::Generic::ObjectEqualityComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "ObjectEqualityComparer", "Default", value));
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.GetHashCode
int System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.Equals
bool System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer..cctor
void System::Collections::Generic::ObjectEqualityComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "ObjectEqualityComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ByteEqualityComparer
#include "System/Collections/Generic/ByteEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(uint8_t x, uint8_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.IndexOf
int System::Collections::Generic::ByteEqualityComparer::IndexOf(::Array<uint8_t>* array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.LastIndexOf
int System::Collections::Generic::ByteEqualityComparer::LastIndexOf(::Array<uint8_t>* array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.InternalStringComparer
#include "System/Collections/Generic/InternalStringComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.InternalStringComparer.GetHashCode
int System::Collections::Generic::InternalStringComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InternalStringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.Equals
bool System::Collections::Generic::InternalStringComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InternalStringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.IndexOf
int System::Collections::Generic::InternalStringComparer::IndexOf(::Array<::Il2CppString*>* array, ::Il2CppString* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InternalStringComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.KeyNotFoundException
#include "System/Collections/Generic/KeyNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.ConditionalAttribute
#include "System/Diagnostics/ConditionalAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerStepThroughAttribute
#include "System/Diagnostics/DebuggerStepThroughAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerHiddenAttribute
#include "System/Diagnostics/DebuggerHiddenAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerNonUserCodeAttribute
#include "System/Diagnostics/DebuggerNonUserCodeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute/DebuggingModes
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes None
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes None
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes Default
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes Default
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes DisableOptimizations
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes DisableOptimizations
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes IgnoreSymbolStoreSequencePoints
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes IgnoreSymbolStoreSequencePoints
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes EnableEditAndContinue
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes EnableEditAndContinue
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableState
#include "System/Diagnostics/DebuggerBrowsableState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Never
System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Never
void System::Diagnostics::DebuggerBrowsableState::_set_Never(System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Collapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_get_Collapsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Collapsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
void System::Diagnostics::DebuggerBrowsableState::_set_Collapsed(System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_set_Collapsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Collapsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_RootHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_get_RootHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "RootHidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
void System::Diagnostics::DebuggerBrowsableState::_set_RootHidden(System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_set_RootHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "RootHidden", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableAttribute
#include "System/Diagnostics/DebuggerBrowsableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DebuggerTypeProxyAttribute
#include "System/Diagnostics/DebuggerTypeProxyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DebuggerDisplayAttribute
#include "System/Diagnostics/DebuggerDisplayAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Debugger
#include "System/Diagnostics/Debugger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultCategory
::Il2CppString* System::Diagnostics::Debugger::_get_DefaultCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::_get_DefaultCategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "Debugger", "DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultCategory
void System::Diagnostics::Debugger::_set_DefaultCategory(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::_set_DefaultCategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Debugger", "DefaultCategory", value));
}
// Autogenerated method: System.Diagnostics.Debugger.get_IsAttached
bool System::Diagnostics::Debugger::get_IsAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::get_IsAttached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "get_IsAttached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsAttached_internal
bool System::Diagnostics::Debugger::IsAttached_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::IsAttached_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsAttached_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsLogging
bool System::Diagnostics::Debugger::IsLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::IsLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.Log
void System::Diagnostics::Debugger::Log(int level, ::Il2CppString* category, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, level, category, message);
}
// Autogenerated method: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency
void System::Diagnostics::Debugger::NotifyOfCrossThreadDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::NotifyOfCrossThreadDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "NotifyOfCrossThreadDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger..cctor
void System::Diagnostics::Debugger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 OFFSET_UNKNOWN
int System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OFFSET_UNKNOWN
void System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN", value));
}
// Autogenerated method: System.Diagnostics.StackFrame.get_frame_info
bool System::Diagnostics::StackFrame::get_frame_info(int skip, bool needFileInfo, System::Reflection::MethodBase*& method, int& iloffset, int& native_offset, ::Il2CppString*& file, int& line, int& column) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::get_frame_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackFrame", "get_frame_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skip), ::il2cpp_utils::ExtractType(needFileInfo), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodBase*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skip, needFileInfo, method, iloffset, native_offset, file, line, column);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileLineNumber
int System::Diagnostics::StackFrame::GetFileLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetFileLineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileName
::Il2CppString* System::Diagnostics::StackFrame::GetFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetFileName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetSecureFileName
::Il2CppString* System::Diagnostics::StackFrame::GetSecureFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetILOffset
int System::Diagnostics::StackFrame::GetILOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetILOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetILOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethod
System::Reflection::MethodBase* System::Diagnostics::StackFrame::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetNativeOffset
int System::Diagnostics::StackFrame::GetNativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetNativeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodAddress
int64_t System::Diagnostics::StackFrame::GetMethodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetMethodAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodIndex
uint System::Diagnostics::StackFrame::GetMethodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetMethodIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetInternalMethodName
::Il2CppString* System::Diagnostics::StackFrame::GetInternalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetInternalMethodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInternalMethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.ToString
::Il2CppString* System::Diagnostics::StackFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Diagnostics.StackTrace/TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 METHODS_TO_SKIP
int System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 METHODS_TO_SKIP
void System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAotidSet
bool System::Diagnostics::StackTrace::_get_isAotidSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_get_isAotidSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "StackTrace", "isAotidSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAotidSet
void System::Diagnostics::StackTrace::_set_isAotidSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_set_isAotidSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "isAotidSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.String aotid
::Il2CppString* System::Diagnostics::StackTrace::_get_aotid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_get_aotid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "StackTrace", "aotid"));
}
// Autogenerated static field setter
// Set static field: static private System.String aotid
void System::Diagnostics::StackTrace::_set_aotid(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_set_aotid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "aotid", value));
}
// Autogenerated method: System.Diagnostics.StackTrace.init_frames
void System::Diagnostics::StackTrace::init_frames(int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::init_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "init_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_trace
::Array<System::Diagnostics::StackFrame*>* System::Diagnostics::StackTrace::get_trace(System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::get_trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "get_trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Diagnostics::StackFrame*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_FrameCount
int System::Diagnostics::StackTrace::get_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::get_FrameCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrame
System::Diagnostics::StackFrame* System::Diagnostics::StackTrace::GetFrame(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::GetFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::StackFrame*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetAotId
::Il2CppString* System::Diagnostics::StackTrace::GetAotId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::GetAotId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "GetAotId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.AddFrames
bool System::Diagnostics::StackTrace::AddFrames(System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::AddFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFullNameForStackTrace
void System::Diagnostics::StackTrace::GetFullNameForStackTrace(System::Text::StringBuilder* sb, System::Reflection::MethodBase* mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::GetFullNameForStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullNameForStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(mi)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sb, mi);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::Il2CppString* System::Diagnostics::StackTrace::ToString(System::Diagnostics::StackTrace::TraceFormat traceFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceFormat)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, traceFormat);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::Il2CppString* System::Diagnostics::StackTrace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace/TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat Normal
System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat Normal
void System::Diagnostics::StackTrace::TraceFormat::_set_Normal(System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat TrailingNewLine
System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat TrailingNewLine
void System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine(System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat NoResourceLookup
System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat NoResourceLookup
void System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup(System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Contracts.Contract
#include "System/Diagnostics/Contracts/Contract.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ThreadStaticAttribute] Offset: 0xCAD044
// Autogenerated static field getter
// Get static field: static private System.Byte m_EventSourceExceptionRecurenceCount
uint8_t System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte m_EventSourceExceptionRecurenceCount
void System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] namespaceBytes
::Array<uint8_t>* System::Diagnostics::Tracing::EventSource::_get_namespaceBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_get_namespaceBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Diagnostics.Tracing", "EventSource", "namespaceBytes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] namespaceBytes
void System::Diagnostics::Tracing::EventSource::_set_namespaceBytes(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_set_namespaceBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "namespaceBytes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid AspNetEventSourceGuid
System::Guid System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid AspNetEventSourceGuid
void System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid", value));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource..cctor
void System::Diagnostics::Tracing::EventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ToString
::Il2CppString* System::Diagnostics::Tracing::EventSource::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Finalize
void System::Diagnostics::Tracing::EventSource::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Emit.UnmanagedMarshal
#include "System/Reflection/Emit/UnmanagedMarshal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.DynamicMethod
#include "System/Reflection/Emit/DynamicMethod.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Attributes
System::Reflection::MethodAttributes System::Reflection::Emit::DynamicMethod::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_DeclaringType
System::Type* System::Reflection::Emit::DynamicMethod::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_MethodHandle
System::RuntimeMethodHandle System::Reflection::Emit::DynamicMethod::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Name
::Il2CppString* System::Reflection::Emit::DynamicMethod::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_ReflectedType
System::Type* System::Reflection::Emit::DynamicMethod::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetBaseDefinition
System::Reflection::MethodInfo* System::Reflection::Emit::DynamicMethod::GetBaseDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::GetBaseDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::Array<::Il2CppObject*>* System::Reflection::Emit::DynamicMethod::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::Array<::Il2CppObject*>* System::Reflection::Emit::DynamicMethod::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
System::Reflection::MethodImplAttributes System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetParameters
::Array<System::Reflection::ParameterInfo*>* System::Reflection::Emit::DynamicMethod::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ParameterInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.Invoke
::Il2CppObject* System::Reflection::Emit::DynamicMethod::Invoke(::Il2CppObject* obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::Array<::Il2CppObject*>* parameters, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.IsDefined
bool System::Reflection::Emit::DynamicMethod::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::DynamicMethod::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::ThrowStub::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComObject
#include "System/__Il2CppComObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComObject.Finalize
void System::__Il2CppComObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Il2CppComObject::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComDelegate
#include "System/__Il2CppComDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComDelegate.Finalize
void System::__Il2CppComDelegate::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Il2CppComDelegate::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Env
#include "NUnit/Env.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String NewLine
::Il2CppString* NUnit::Env::_get_NewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Env::_get_NewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("NUnit", "Env", "NewLine"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String NewLine
void NUnit::Env::_set_NewLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Env::_set_NewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "NewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DocumentFolder
::Il2CppString* NUnit::Env::_get_DocumentFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Env::_get_DocumentFolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("NUnit", "Env", "DocumentFolder"));
}
// Autogenerated static field setter
// Set static field: static public System.String DocumentFolder
void NUnit::Env::_set_DocumentFolder(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Env::_set_DocumentFolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "DocumentFolder", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultWorkDirectory
::Il2CppString* NUnit::Env::_get_DefaultWorkDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Env::_get_DefaultWorkDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("NUnit", "Env", "DefaultWorkDirectory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultWorkDirectory
void NUnit::Env::_set_DefaultWorkDirectory(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Env::_set_DefaultWorkDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "DefaultWorkDirectory", value));
}
// Autogenerated method: NUnit.Env..cctor
void NUnit::Env::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Env::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit", "Env", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Compatibility.LongLivedMarshalByRefObject
#include "NUnit/Compatibility/LongLivedMarshalByRefObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Compatibility.LongLivedMarshalByRefObject.InitializeLifetimeService
::Il2CppObject* NUnit::Compatibility::LongLivedMarshalByRefObject::InitializeLifetimeService() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Compatibility::LongLivedMarshalByRefObject::InitializeLifetimeService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLifetimeService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Compatibility.TypeExtensions
#include "NUnit/Compatibility/TypeExtensions.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Compatibility.TypeExtensions.GetTypeInfo
System::Type* NUnit::Compatibility::TypeExtensions::GetTypeInfo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Compatibility::TypeExtensions::GetTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "TypeExtensions", "GetTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Compatibility.AdditionalTypeExtensions
#include "NUnit/Compatibility/AdditionalTypeExtensions.hpp"
// Including type: NUnit.Compatibility.AdditionalTypeExtensions/<>c__DisplayClass2_0
#include "NUnit/Compatibility/AdditionalTypeExtensions_--c__DisplayClass2_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Type>> convertibleValueTypes
System::Collections::Generic::Dictionary_2<System::Type*, System::Collections::Generic::List_1<System::Type*>*>* NUnit::Compatibility::AdditionalTypeExtensions::_get_convertibleValueTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Compatibility::AdditionalTypeExtensions::_get_convertibleValueTypes");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, System::Collections::Generic::List_1<System::Type*>*>*>("NUnit.Compatibility", "AdditionalTypeExtensions", "convertibleValueTypes")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Type>> convertibleValueTypes
void NUnit::Compatibility::AdditionalTypeExtensions::_set_convertibleValueTypes(System::Collections::Generic::Dictionary_2<System::Type*, System::Collections::Generic::List_1<System::Type*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Compatibility::AdditionalTypeExtensions::_set_convertibleValueTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Compatibility", "AdditionalTypeExtensions", "convertibleValueTypes", value));
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions.ParametersMatch
bool NUnit::Compatibility::AdditionalTypeExtensions::ParametersMatch(::Array<System::Reflection::ParameterInfo*>* pinfos, ::Array<System::Type*>* ptypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Compatibility::AdditionalTypeExtensions::ParametersMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", "ParametersMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinfos), ::il2cpp_utils::ExtractType(ptypes)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pinfos, ptypes);
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions.IsCastableFrom
bool NUnit::Compatibility::AdditionalTypeExtensions::IsCastableFrom(System::Type* to, System::Type* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Compatibility::AdditionalTypeExtensions::IsCastableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", "IsCastableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(from)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, to, from);
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions..cctor
void NUnit::Compatibility::AdditionalTypeExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Compatibility::AdditionalTypeExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Compatibility.AdditionalTypeExtensions/<>c__DisplayClass2_0
#include "NUnit/Compatibility/AdditionalTypeExtensions_--c__DisplayClass2_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions/<>c__DisplayClass2_0.<IsCastableFrom>b__0
bool NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::$IsCastableFrom$b__0(System::Reflection::MethodInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::<IsCastableFrom>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsCastableFrom>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ActionTargets
#include "NUnit/Framework/ActionTargets.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Default
NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ActionTargets::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Default"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Default
void NUnit::Framework::ActionTargets::_set_Default(NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ActionTargets::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Test
NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ActionTargets::_get_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Test"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Test
void NUnit::Framework::ActionTargets::_set_Test(NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ActionTargets::_set_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Test", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Suite
NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Suite() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ActionTargets::_get_Suite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Suite"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Suite
void NUnit::Framework::ActionTargets::_set_Suite(NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ActionTargets::_set_Suite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Suite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.CombiningStrategyAttribute
#include "NUnit/Framework/CombiningStrategyAttribute.hpp"
// Including type: NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestCaseBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.ICombiningStrategy
#include "NUnit/Framework/Interfaces/ICombiningStrategy.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterDataProvider
#include "NUnit/Framework/Interfaces/IParameterDataProvider.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.CombiningStrategyAttribute.BuildFrom
System::Collections::Generic::IEnumerable_1<NUnit::Framework::Internal::TestMethod*>* NUnit::Framework::CombiningStrategyAttribute::BuildFrom(NUnit::Framework::Interfaces::IMethodInfo* method, NUnit::Framework::Internal::Test* suite) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::CombiningStrategyAttribute::BuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(suite)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<NUnit::Framework::Internal::TestMethod*>*, false>(this, ___internal__method, method, suite);
}
// Autogenerated method: NUnit.Framework.CombiningStrategyAttribute.ApplyToTest
void NUnit::Framework::CombiningStrategyAttribute::ApplyToTest(NUnit::Framework::Internal::Test* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::CombiningStrategyAttribute::ApplyToTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyToTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.RetryAttribute/RetryCommand
#include "NUnit/Framework/RetryAttribute_RetryCommand.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.RetryAttribute/RetryCommand.Execute
NUnit::Framework::Internal::TestResult* NUnit::Framework::RetryAttribute::RetryCommand::Execute(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::RetryAttribute::RetryCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ParallelScope
#include "NUnit/Framework/ParallelScope.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope None
NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ParallelScope::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "None"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope None
void NUnit::Framework::ParallelScope::_set_None(NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ParallelScope::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "None", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Self
NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ParallelScope::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Self"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Self
void NUnit::Framework::ParallelScope::_set_Self(NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ParallelScope::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Children
NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ParallelScope::_get_Children");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Children"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Children
void NUnit::Framework::ParallelScope::_set_Children(NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ParallelScope::_set_Children");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Children", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Fixtures
NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Fixtures() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ParallelScope::_get_Fixtures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Fixtures"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Fixtures
void NUnit::Framework::ParallelScope::_set_Fixtures(NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ParallelScope::_set_Fixtures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Fixtures", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Assert
#include "NUnit/Framework/_Assert.hpp"
// Including type: NUnit.Framework.Constraints.IResolveConstraint
#include "NUnit/Framework/Constraints/IResolveConstraint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Assert.AreEqual
void NUnit::Framework::_Assert::AreEqual(::Il2CppObject* expected, ::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::_Assert::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual);
}
// Autogenerated method: NUnit.Framework.Assert.IncrementAssertCount
void NUnit::Framework::_Assert::IncrementAssertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::_Assert::IncrementAssertCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IncrementAssertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Assert.GreaterOrEqual
void NUnit::Framework::_Assert::GreaterOrEqual(float arg1, float arg2, ::Il2CppString* message, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::_Assert::GreaterOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "GreaterOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg1, arg2, message, args);
}
// Creating initializer_list -> params proxy for: System.Void GreaterOrEqual(System.Single arg1, System.Single arg2, System.String message, params System.Object[] args)
void NUnit::Framework::_Assert::GreaterOrEqual(float arg1, float arg2, ::Il2CppString* message, std::initializer_list<::Il2CppObject*> args) {
  NUnit::Framework::_Assert::GreaterOrEqual(arg1, arg2, message, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: NUnit.Framework.Assert.LessOrEqual
void NUnit::Framework::_Assert::LessOrEqual(float arg1, float arg2, ::Il2CppString* message, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::_Assert::LessOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "LessOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg1, arg2, message, args);
}
// Creating initializer_list -> params proxy for: System.Void LessOrEqual(System.Single arg1, System.Single arg2, System.String message, params System.Object[] args)
void NUnit::Framework::_Assert::LessOrEqual(float arg1, float arg2, ::Il2CppString* message, std::initializer_list<::Il2CppObject*> args) {
  NUnit::Framework::_Assert::LessOrEqual(arg1, arg2, message, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: NUnit.Framework.Assert.IsTrue
void NUnit::Framework::_Assert::IsTrue(bool condition, ::Il2CppString* message, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::_Assert::IsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, condition, message, args);
}
// Creating initializer_list -> params proxy for: System.Void IsTrue(System.Boolean condition, System.String message, params System.Object[] args)
void NUnit::Framework::_Assert::IsTrue(bool condition, ::Il2CppString* message, std::initializer_list<::Il2CppObject*> args) {
  NUnit::Framework::_Assert::IsTrue(condition, message, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: NUnit.Framework.Assert.IsTrue
void NUnit::Framework::_Assert::IsTrue(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::_Assert::IsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, condition);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Guard
#include "NUnit/Framework/Guard.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Guard.ArgumentNotNull
void NUnit::Framework::Guard::ArgumentNotNull(::Il2CppObject* value, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Guard::ArgumentNotNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentNotNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, name);
}
// Autogenerated method: NUnit.Framework.Guard.ArgumentNotNullOrEmpty
void NUnit::Framework::Guard::ArgumentNotNullOrEmpty(::Il2CppString* value, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Guard::ArgumentNotNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentNotNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, name);
}
// Autogenerated method: NUnit.Framework.Guard.ArgumentValid
void NUnit::Framework::Guard::ArgumentValid(bool condition, ::Il2CppString* message, ::Il2CppString* paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Guard::ArgumentValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, condition, message, paramName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.ResultStateException
#include "NUnit/Framework/ResultStateException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.ResultStateException.get_ResultState
NUnit::Framework::Interfaces::ResultState* NUnit::Framework::ResultStateException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ResultStateException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.ActionTargets
#include "NUnit/Framework/ActionTargets.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.ITestAction.BeforeTest
void NUnit::Framework::ITestAction::BeforeTest(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ITestAction::BeforeTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeforeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.ITestAction.AfterTest
void NUnit::Framework::ITestAction::AfterTest(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ITestAction::AfterTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.ITestAction.get_Targets
NUnit::Framework::ActionTargets NUnit::Framework::ITestAction::get_Targets() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::ITestAction::get_Targets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::ActionTargets, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.CombinatorialAttribute
#include "NUnit/Framework/CombinatorialAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.NUnitAttribute
#include "NUnit/Framework/NUnitAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.RepeatAttribute/RepeatedTestCommand
#include "NUnit/Framework/RepeatAttribute_RepeatedTestCommand.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.RepeatAttribute/RepeatedTestCommand.Execute
NUnit::Framework::Internal::TestResult* NUnit::Framework::RepeatAttribute::RepeatedTestCommand::Execute(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::RepeatAttribute::RepeatedTestCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.TestFixtureAttribute
#include "NUnit/Framework/TestFixtureAttribute.hpp"
// Including type: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48
#include "NUnit/Framework/TestFixtureAttribute_-BuildFrom-d__48.hpp"
// Including type: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestFixtureBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.IPropertyBag
#include "NUnit/Framework/Interfaces/IPropertyBag.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_RunState
NUnit::Framework::Interfaces::RunState NUnit::Framework::TestFixtureAttribute::get_RunState() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::get_RunState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::RunState, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_Arguments
::Array<::Il2CppObject*>* NUnit::Framework::TestFixtureAttribute::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::get_Arguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_Properties
NUnit::Framework::Interfaces::IPropertyBag* NUnit::Framework::TestFixtureAttribute::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::IPropertyBag*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_TypeArgs
::Array<System::Type*>* NUnit::Framework::TestFixtureAttribute::get_TypeArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::get_TypeArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.BuildFrom
System::Collections::Generic::IEnumerable_1<NUnit::Framework::Internal::TestSuite*>* NUnit::Framework::TestFixtureAttribute::BuildFrom(NUnit::Framework::Interfaces::ITypeInfo* typeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::BuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<NUnit::Framework::Internal::TestSuite*>*, false>(this, ___internal__method, typeInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48
#include "NUnit/Framework/TestFixtureAttribute_-BuildFrom-d__48.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48.System.IDisposable.Dispose
void NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48.MoveNext
bool NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48.System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current
NUnit::Framework::Internal::TestSuite* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_Generic_IEnumerator$NUnit_Framework_Internal_TestSuite$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48.System.Collections.IEnumerator.Reset
void NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48.System.Collections.IEnumerator.get_Current
::Il2CppObject* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48.System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator
System::Collections::Generic::IEnumerator_1<NUnit::Framework::Internal::TestSuite*>* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_Generic_IEnumerable$NUnit_Framework_Internal_TestSuite$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<NUnit::Framework::Internal::TestSuite*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/<BuildFrom>d__48.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.AssertionException
#include "NUnit/Framework/AssertionException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.AssertionException.get_ResultState
NUnit::Framework::Interfaces::ResultState* NUnit::Framework::AssertionException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::AssertionException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.IgnoreException
#include "NUnit/Framework/IgnoreException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.IgnoreException.get_ResultState
NUnit::Framework::Interfaces::ResultState* NUnit::Framework::IgnoreException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::IgnoreException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.GlobalSettings
#include "NUnit/Framework/GlobalSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Double DefaultFloatingPointTolerance
double NUnit::Framework::GlobalSettings::_get_DefaultFloatingPointTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::GlobalSettings::_get_DefaultFloatingPointTolerance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("NUnit.Framework", "GlobalSettings", "DefaultFloatingPointTolerance"));
}
// Autogenerated static field setter
// Set static field: static public System.Double DefaultFloatingPointTolerance
void NUnit::Framework::GlobalSettings::_set_DefaultFloatingPointTolerance(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::GlobalSettings::_set_DefaultFloatingPointTolerance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "GlobalSettings", "DefaultFloatingPointTolerance", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Is
#include "NUnit/Framework/Is.hpp"
// Including type: NUnit.Framework.Constraints.TrueConstraint
#include "NUnit/Framework/Constraints/TrueConstraint.hpp"
// Including type: NUnit.Framework.Constraints.EqualConstraint
#include "NUnit/Framework/Constraints/EqualConstraint.hpp"
// Including type: NUnit.Framework.Constraints.GreaterThanOrEqualConstraint
#include "NUnit/Framework/Constraints/GreaterThanOrEqualConstraint.hpp"
// Including type: NUnit.Framework.Constraints.LessThanOrEqualConstraint
#include "NUnit/Framework/Constraints/LessThanOrEqualConstraint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Is.get_True
NUnit::Framework::Constraints::TrueConstraint* NUnit::Framework::Is::get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Is::get_True");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "get_True", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::TrueConstraint*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Is.EqualTo
NUnit::Framework::Constraints::EqualConstraint* NUnit::Framework::Is::EqualTo(::Il2CppObject* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Is::EqualTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "EqualTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::EqualConstraint*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected);
}
// Autogenerated method: NUnit.Framework.Is.GreaterThanOrEqualTo
NUnit::Framework::Constraints::GreaterThanOrEqualConstraint* NUnit::Framework::Is::GreaterThanOrEqualTo(::Il2CppObject* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Is::GreaterThanOrEqualTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "GreaterThanOrEqualTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::GreaterThanOrEqualConstraint*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected);
}
// Autogenerated method: NUnit.Framework.Is.LessThanOrEqualTo
NUnit::Framework::Constraints::LessThanOrEqualConstraint* NUnit::Framework::Is::LessThanOrEqualTo(::Il2CppObject* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Is::LessThanOrEqualTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "LessThanOrEqualTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::LessThanOrEqualConstraint*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.TestContext
#include "NUnit/Framework/TestContext.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: NUnit.Framework.TestParameters
#include "NUnit/Framework/TestParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.ITestExecutionContext CurrentTestExecutionContext
NUnit::Framework::Internal::ITestExecutionContext* NUnit::Framework::TestContext::_get_CurrentTestExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::_get_CurrentTestExecutionContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::ITestExecutionContext*>("NUnit.Framework", "TestContext", "CurrentTestExecutionContext"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.ITestExecutionContext CurrentTestExecutionContext
void NUnit::Framework::TestContext::_set_CurrentTestExecutionContext(NUnit::Framework::Internal::ITestExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::_set_CurrentTestExecutionContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "CurrentTestExecutionContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.TextWriter Error
System::IO::TextWriter* NUnit::Framework::TestContext::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextWriter*>("NUnit.Framework", "TestContext", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.TextWriter Error
void NUnit::Framework::TestContext::_set_Error(System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter Progress
System::IO::TextWriter* NUnit::Framework::TestContext::_get_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::_get_Progress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextWriter*>("NUnit.Framework", "TestContext", "Progress"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter Progress
void NUnit::Framework::TestContext::_set_Progress(System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::_set_Progress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Progress", value));
}
// Autogenerated static field getter
// Get static field: static public readonly NUnit.Framework.TestParameters Parameters
NUnit::Framework::TestParameters* NUnit::Framework::TestContext::_get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::_get_Parameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::TestParameters*>("NUnit.Framework", "TestContext", "Parameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly NUnit.Framework.TestParameters Parameters
void NUnit::Framework::TestContext::_set_Parameters(NUnit::Framework::TestParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::_set_Parameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Parameters", value));
}
// Autogenerated method: NUnit.Framework.TestContext.get_Out
System::IO::TextWriter* NUnit::Framework::TestContext::get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::get_Out");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestContext", "get_Out", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::TextWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestContext..cctor
void NUnit::Framework::TestContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.TestParameters
#include "NUnit/Framework/TestParameters.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IFormatProvider MODIFIED_INVARIANT_CULTURE
System::IFormatProvider* NUnit::Framework::TestParameters::_get_MODIFIED_INVARIANT_CULTURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestParameters::_get_MODIFIED_INVARIANT_CULTURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IFormatProvider*>("NUnit.Framework", "TestParameters", "MODIFIED_INVARIANT_CULTURE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IFormatProvider MODIFIED_INVARIANT_CULTURE
void NUnit::Framework::TestParameters::_set_MODIFIED_INVARIANT_CULTURE(System::IFormatProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestParameters::_set_MODIFIED_INVARIANT_CULTURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestParameters", "MODIFIED_INVARIANT_CULTURE", value));
}
// Autogenerated method: NUnit.Framework.TestParameters.Add
void NUnit::Framework::TestParameters::Add(::Il2CppString* name, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestParameters::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: NUnit.Framework.TestParameters.CreateModifiedInvariantCulture
System::IFormatProvider* NUnit::Framework::TestParameters::CreateModifiedInvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestParameters::CreateModifiedInvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestParameters", "CreateModifiedInvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IFormatProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestParameters..cctor
void NUnit::Framework::TestParameters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::TestParameters::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestParameters", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.AssemblyHelper
#include "NUnit/Framework/Internal/AssemblyHelper.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.GetAssemblyPath
::Il2CppString* NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPath(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "GetAssemblyPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assembly);
}
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.IsFileUri
bool NUnit::Framework::Internal::AssemblyHelper::IsFileUri(::Il2CppString* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::AssemblyHelper::IsFileUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "IsFileUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.GetAssemblyPathFromCodeBase
::Il2CppString* NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPathFromCodeBase(::Il2CppString* codeBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPathFromCodeBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "GetAssemblyPathFromCodeBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codeBase)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, codeBase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.InternalTrace
#include "NUnit/Framework/Internal/InternalTrace.hpp"
// Including type: NUnit.Framework.Internal.InternalTraceWriter
#include "NUnit/Framework/Internal/InternalTraceWriter.hpp"
// Including type: NUnit.Framework.Internal.Logger
#include "NUnit/Framework/Internal/Logger.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private NUnit.Framework.Internal.InternalTraceLevel traceLevel
NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTrace::_get_traceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTrace::_get_traceLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTrace", "traceLevel"));
}
// Autogenerated static field setter
// Set static field: static private NUnit.Framework.Internal.InternalTraceLevel traceLevel
void NUnit::Framework::Internal::InternalTrace::_set_traceLevel(NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTrace::_set_traceLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTrace", "traceLevel", value));
}
// Autogenerated static field getter
// Get static field: static private NUnit.Framework.Internal.InternalTraceWriter traceWriter
NUnit::Framework::Internal::InternalTraceWriter* NUnit::Framework::Internal::InternalTrace::_get_traceWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTrace::_get_traceWriter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceWriter*>("NUnit.Framework.Internal", "InternalTrace", "traceWriter"));
}
// Autogenerated static field setter
// Set static field: static private NUnit.Framework.Internal.InternalTraceWriter traceWriter
void NUnit::Framework::Internal::InternalTrace::_set_traceWriter(NUnit::Framework::Internal::InternalTraceWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTrace::_set_traceWriter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTrace", "traceWriter", value));
}
// Autogenerated method: NUnit.Framework.Internal.InternalTrace.GetLogger
NUnit::Framework::Internal::Logger* NUnit::Framework::Internal::InternalTrace::GetLogger(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTrace::GetLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "InternalTrace", "GetLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::Logger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: NUnit.Framework.Internal.InternalTrace.GetLogger
NUnit::Framework::Internal::Logger* NUnit::Framework::Internal::InternalTrace::GetLogger(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTrace::GetLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "InternalTrace", "GetLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::Logger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InternalTraceLevel
#include "NUnit/Framework/Internal/InternalTraceLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Default
NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Default
void NUnit::Framework::Internal::InternalTraceLevel::_set_Default(NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Off
NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Off
void NUnit::Framework::Internal::InternalTraceLevel::_set_Off(NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Error
NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Error
void NUnit::Framework::Internal::InternalTraceLevel::_set_Error(NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Warning
NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Warning
void NUnit::Framework::Internal::InternalTraceLevel::_set_Warning(NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Info
NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Info
void NUnit::Framework::Internal::InternalTraceLevel::_set_Info(NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Debug
NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Debug
void NUnit::Framework::Internal::InternalTraceLevel::_set_Debug(NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Verbose
NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Verbose
void NUnit::Framework::Internal::InternalTraceLevel::_set_Verbose(NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Verbose", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InternalTraceWriter
#include "NUnit/Framework/Internal/InternalTraceWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.InternalTraceWriter.get_Encoding
System::Text::Encoding* NUnit::Framework::Internal::InternalTraceWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::InternalTraceWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Logger
#include "NUnit/Framework/Internal/Logger.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String TIME_FMT
::Il2CppString* NUnit::Framework::Internal::Logger::_get_TIME_FMT() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::_get_TIME_FMT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("NUnit.Framework.Internal", "Logger", "TIME_FMT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String TIME_FMT
void NUnit::Framework::Internal::Logger::_set_TIME_FMT(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::_set_TIME_FMT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Logger", "TIME_FMT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String TRACE_FMT
::Il2CppString* NUnit::Framework::Internal::Logger::_get_TRACE_FMT() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::_get_TRACE_FMT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("NUnit.Framework.Internal", "Logger", "TRACE_FMT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String TRACE_FMT
void NUnit::Framework::Internal::Logger::_set_TRACE_FMT(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::_set_TRACE_FMT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Logger", "TRACE_FMT", value));
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Error
void NUnit::Framework::Internal::Logger::Error(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::Error");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Debug
void NUnit::Framework::Internal::Logger::Debug(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::Debug");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Debug
void NUnit::Framework::Internal::Logger::Debug(::Il2CppString* message, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::Debug");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, args);
}
// Creating initializer_list -> params proxy for: System.Void Debug(System.String message, params System.Object[] args)
void NUnit::Framework::Internal::Logger::Debug(::Il2CppString* message, std::initializer_list<::Il2CppObject*> args) {
  NUnit::Framework::Internal::Logger::Debug(message, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Log
void NUnit::Framework::Internal::Logger::Log(NUnit::Framework::Internal::InternalTraceLevel level, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Log
void NUnit::Framework::Internal::Logger::Log(NUnit::Framework::Internal::InternalTraceLevel level, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, format, args);
}
// Creating initializer_list -> params proxy for: System.Void Log(NUnit.Framework.Internal.InternalTraceLevel level, System.String format, params System.Object[] args)
void NUnit::Framework::Internal::Logger::Log(NUnit::Framework::Internal::InternalTraceLevel level, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  NUnit::Framework::Internal::Logger::Log(level, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: NUnit.Framework.Internal.Logger.WriteLog
void NUnit::Framework::Internal::Logger::WriteLog(NUnit::Framework::Internal::InternalTraceLevel level, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::WriteLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger..cctor
void NUnit::Framework::Internal::Logger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::Logger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Logger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.MethodWrapper
#include "NUnit/Framework/Internal/MethodWrapper.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterInfo
#include "NUnit/Framework/Interfaces/IParameterInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_TypeInfo
NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::MethodWrapper::get_TypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::get_TypeInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.set_TypeInfo
void NUnit::Framework::Internal::MethodWrapper::set_TypeInfo(NUnit::Framework::Interfaces::ITypeInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::set_TypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_MethodInfo
System::Reflection::MethodInfo* NUnit::Framework::Internal::MethodWrapper::get_MethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::get_MethodInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.set_MethodInfo
void NUnit::Framework::Internal::MethodWrapper::set_MethodInfo(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::set_MethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_Name
::Il2CppString* NUnit::Framework::Internal::MethodWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsAbstract
bool NUnit::Framework::Internal::MethodWrapper::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::get_IsAbstract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsPublic
bool NUnit::Framework::Internal::MethodWrapper::get_IsPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::get_IsPublic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_ContainsGenericParameters
bool NUnit::Framework::Internal::MethodWrapper::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsGenericMethodDefinition
bool NUnit::Framework::Internal::MethodWrapper::get_IsGenericMethodDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::get_IsGenericMethodDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericMethodDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_ReturnType
NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::MethodWrapper::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.GetParameters
::Array<NUnit::Framework::Interfaces::IParameterInfo*>* NUnit::Framework::Internal::MethodWrapper::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<NUnit::Framework::Interfaces::IParameterInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.MakeGenericMethod
NUnit::Framework::Interfaces::IMethodInfo* NUnit::Framework::Internal::MethodWrapper::MakeGenericMethod(::Array<System::Type*>* typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::MakeGenericMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeArguments)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::IMethodInfo*, false>(this, ___internal__method, typeArguments);
}
// Creating initializer_list -> params proxy for: NUnit.Framework.Interfaces.IMethodInfo MakeGenericMethod(params System.Type[] typeArguments)
NUnit::Framework::Interfaces::IMethodInfo* NUnit::Framework::Internal::MethodWrapper::MakeGenericMethod(std::initializer_list<System::Type*> typeArguments) {
  return NUnit::Framework::Internal::MethodWrapper::MakeGenericMethod(::Array<System::Type*>::New(typeArguments));
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.Invoke
::Il2CppObject* NUnit::Framework::Internal::MethodWrapper::Invoke(::Il2CppObject* fixture, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixture), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, fixture, args);
}
// Creating initializer_list -> params proxy for: System.Object Invoke(System.Object fixture, params System.Object[] args)
::Il2CppObject* NUnit::Framework::Internal::MethodWrapper::Invoke(::Il2CppObject* fixture, std::initializer_list<::Il2CppObject*> args) {
  return NUnit::Framework::Internal::MethodWrapper::Invoke(fixture, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.ToString
::Il2CppString* NUnit::Framework::Internal::MethodWrapper::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::MethodWrapper::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.ParameterWrapper
#include "NUnit/Framework/Internal/ParameterWrapper.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_IsOptional
bool NUnit::Framework::Internal::ParameterWrapper::get_IsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::ParameterWrapper::get_IsOptional");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.set_Method
void NUnit::Framework::Internal::ParameterWrapper::set_Method(NUnit::Framework::Interfaces::IMethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::ParameterWrapper::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_ParameterInfo
System::Reflection::ParameterInfo* NUnit::Framework::Internal::ParameterWrapper::get_ParameterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::ParameterWrapper::get_ParameterInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ParameterInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.set_ParameterInfo
void NUnit::Framework::Internal::ParameterWrapper::set_ParameterInfo(System::Reflection::ParameterInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::ParameterWrapper::set_ParameterInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParameterInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_ParameterType
System::Type* NUnit::Framework::Internal::ParameterWrapper::get_ParameterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::ParameterWrapper::get_ParameterType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator
#include "NUnit/Framework/Internal/TestNameGenerator.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/TestIDFragment
#include "NUnit/Framework/Internal/TestNameGenerator_TestIDFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/FixedTextFragment
#include "NUnit/Framework/Internal/TestNameGenerator_FixedTextFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/MethodNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NamespaceFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NamespaceFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/MethodFullNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodFullNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/ClassNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ClassNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/ClassFullNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ClassFullNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/ArgListFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ArgListFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/ArgumentFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ArgumentFragment.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DefaultTestNamePattern
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::_get_DefaultTestNamePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::_get_DefaultTestNamePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("NUnit.Framework.Internal", "TestNameGenerator", "DefaultTestNamePattern"));
}
// Autogenerated static field setter
// Set static field: static public System.String DefaultTestNamePattern
void NUnit::Framework::Internal::TestNameGenerator::_set_DefaultTestNamePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::_set_DefaultTestNamePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestNameGenerator", "DefaultTestNamePattern", value));
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator.GetDisplayName
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::GetDisplayName(NUnit::Framework::Internal::TestMethod* testMethod, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, testMethod, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator.BuildFragmentList
System::Collections::Generic::List_1<NUnit::Framework::Internal::TestNameGenerator::NameFragment*>* NUnit::Framework::Internal::TestNameGenerator::BuildFragmentList(::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::BuildFragmentList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator", "BuildFragmentList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<NUnit::Framework::Internal::TestNameGenerator::NameFragment*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator..cctor
void NUnit::Framework::Internal::TestNameGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NameFragment.GetText
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText(NUnit::Framework::Internal::TestMethod* testMethod, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, testMethod, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NameFragment.GetText
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText(System::Reflection::MethodInfo* method, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NameFragment.AppendGenericTypeNames
void NUnit::Framework::Internal::TestNameGenerator::NameFragment::AppendGenericTypeNames(System::Text::StringBuilder* sb, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::NameFragment::AppendGenericTypeNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "AppendGenericTypeNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb, method);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NameFragment.GetDisplayString
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetDisplayString(::Il2CppObject* arg, int stringMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetDisplayString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "GetDisplayString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(stringMax)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg, stringMax);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NameFragment.EscapeSingleChar
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeSingleChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NameFragment.EscapeCharInString
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeCharInString(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeCharInString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeCharInString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NameFragment.EscapeControlChar
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeControlChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeControlChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeControlChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/TestIDFragment
#include "NUnit/Framework/Internal/TestNameGenerator_TestIDFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/TestIDFragment.GetText
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText(System::Reflection::MethodInfo* method, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/TestIDFragment.GetText
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText(NUnit::Framework::Internal::TestMethod* testMethod, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, testMethod, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/FixedTextFragment
#include "NUnit/Framework/Internal/TestNameGenerator_FixedTextFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/FixedTextFragment.GetText
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::FixedTextFragment::GetText(System::Reflection::MethodInfo* method, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::FixedTextFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/MethodNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodNameFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/MethodNameFragment.GetText
::Il2CppString* NUnit::Framework::Internal::TestNameGenerator::MethodNameFragment::GetText(System::Reflection::MethodInfo* method, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::TestNameGenerator::MethodNameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, method, args);
}
