// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _objectReturnType
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn__objectReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn__objectReturnType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectReturnType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator arrayEnumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn_arrayEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn_arrayEnumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayEnumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Key
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Value
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.MoveNext
bool System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.Reset
void System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryKeyValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _objects
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn__objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn__objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objects"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.StringCollection
#include "System/Collections/Specialized/StringCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList data
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::Specialized::StringCollection::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Item
::StringW System::Collections::Specialized::StringCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.set_Item
void System::Collections::Specialized::StringCollection::set_Item(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Count
int System::Collections::Specialized::StringCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsReadOnly
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsFixedSize
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::StringCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::Specialized::StringCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.set_Item
void System::Collections::Specialized::StringCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Add
int System::Collections::Specialized::StringCollection::Add(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Clear
void System::Collections::Specialized::StringCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Contains
bool System::Collections::Specialized::StringCollection::Contains(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.CopyTo
void System::Collections::Specialized::StringCollection::CopyTo(::ArrayW<::StringW> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.IndexOf
int System::Collections::Specialized::StringCollection::IndexOf(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Insert
void System::Collections::Specialized::StringCollection::Insert(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Remove
void System::Collections::Specialized::StringCollection::Remove(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.RemoveAt
void System::Collections::Specialized::StringCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Add
int System::Collections::Specialized::StringCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains
bool System::Collections::Specialized::StringCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf
int System::Collections::Specialized::StringCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert
void System::Collections::Specialized::StringCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove
void System::Collections::Specialized::StringCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::StringCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::StringCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.StringDictionary
#include "System/Collections/Specialized/StringDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable contents
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Specialized::StringDictionary::dyn_contents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringDictionary::dyn_contents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contents"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.StringDictionary.Add
void System::Collections::Specialized::StringDictionary::Add(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.StringDictionary.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::StringDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.BitHelper
#include "System/Collections/Generic/BitHelper_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::Collections::Generic::BitHelper_::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32* _arrayPtr
[[deprecated("Use field access instead!")]] int*& System::Collections::Generic::BitHelper_::dyn__arrayPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::dyn__arrayPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayPtr"))->offset;
  return *reinterpret_cast<int**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _array
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Collections::Generic::BitHelper_::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _useStackAlloc
[[deprecated("Use field access instead!")]] bool& System::Collections::Generic::BitHelper_::dyn__useStackAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::dyn__useStackAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStackAlloc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Generic.BitHelper.MarkBit
void System::Collections::Generic::BitHelper_::MarkBit(int bitPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::MarkBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitPosition);
}
// Autogenerated method: System.Collections.Generic.BitHelper.IsMarked
bool System::Collections::Generic::BitHelper_::IsMarked(int bitPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::IsMarked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMarked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitPosition);
}
// Autogenerated method: System.Collections.Generic.BitHelper.ToIntArrayLength
int System::Collections::Generic::BitHelper_::ToIntArrayLength(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::ToIntArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "BitHelper", "ToIntArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.NodeColor
#include "System/Collections/Generic/NodeColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Black
::System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Black"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Black
void System::Collections::Generic::NodeColor::_set_Black(::System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Black", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Red
::System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_get_Red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Red"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Red
void System::Collections::Generic::NodeColor::_set_Red(::System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_set_Red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Red", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Collections::Generic::NodeColor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.TreeRotation
#include "System/Collections/Generic/TreeRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Left
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Left"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Left
void System::Collections::Generic::TreeRotation::_set_Left(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation LeftRight
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation LeftRight
void System::Collections::Generic::TreeRotation::_set_LeftRight(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "LeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Right
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Right"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Right
void System::Collections::Generic::TreeRotation::_set_Right(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation RightLeft
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_RightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_RightLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "RightLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation RightLeft
void System::Collections::Generic::TreeRotation::_set_RightLeft(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_RightLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "RightLeft", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Collections::Generic::TreeRotation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.BypassElementCollection
#include "System/Net/Configuration/BypassElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementElementCollection
#include "System/Net/Configuration/ConnectionManagementElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementSection
#include "System/Net/Configuration/ConnectionManagementSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ConnectionManagementSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ConnectionManagementSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ConnectionManagementSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.DefaultProxySection
#include "System/Net/Configuration/DefaultProxySection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.DefaultProxySection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::DefaultProxySection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySection.Reset
void System::Net::Configuration::DefaultProxySection::Reset(::System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySection::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ProxyElement
#include "System/Net/Configuration/ProxyElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ProxyElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ProxyElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ProxyElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.HttpWebRequestElement
#include "System/Net/Configuration/HttpWebRequestElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.HttpWebRequestElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::HttpWebRequestElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::HttpWebRequestElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.Ipv6Element
#include "System/Net/Configuration/Ipv6Element.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.Ipv6Element.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::Ipv6Element::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::Ipv6Element::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.NetSectionGroup
#include "System/Net/Configuration/NetSectionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSection
#include "System/Net/Configuration/SettingsSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SettingsSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SettingsSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.PerformanceCountersElement
#include "System/Net/Configuration/PerformanceCountersElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.PerformanceCountersElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::PerformanceCountersElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::PerformanceCountersElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ServicePointManagerElement
#include "System/Net/Configuration/ServicePointManagerElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ServicePointManagerElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ServicePointManagerElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ServicePointManagerElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SocketElement
#include "System/Net/Configuration/SocketElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SocketElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SocketElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SocketElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebProxyScriptElement
#include "System/Net/Configuration/WebProxyScriptElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebProxyScriptElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebProxyScriptElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebProxyScriptElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModulesSection
#include "System/Net/Configuration/WebRequestModulesSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebRequestModulesSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebRequestModulesSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebRequestModulesSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModuleElementCollection
#include "System/Net/Configuration/WebRequestModuleElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DiagnosticsConfigurationHandler
#include "System/Diagnostics/DiagnosticsConfigurationHandler.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.DiagnosticsConfigurationHandler.Create
::Il2CppObject* System::Diagnostics::DiagnosticsConfigurationHandler::Create(::Il2CppObject* parent, ::Il2CppObject* configContext, ::System::Xml::XmlNode* section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DiagnosticsConfigurationHandler::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(configContext), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, parent, configContext, section);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub__::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub__::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.ByteArrayContent
#include "System/Net/Http/ByteArrayContent.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] content
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::Http::ByteArrayContent::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Net::Http::ByteArrayContent::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Net::Http::ByteArrayContent::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.ByteArrayContent.SerializeToStreamAsync
::System::Threading::Tasks::Task* System::Net::Http::ByteArrayContent::SerializeToStreamAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.ByteArrayContent.TryComputeLength
bool System::Net::Http::ByteArrayContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.FormUrlEncodedContent
#include "System/Net/Http/FormUrlEncodedContent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.FormUrlEncodedContent.EncodeContent
::ArrayW<uint8_t> System::Net::Http::FormUrlEncodedContent::EncodeContent(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>>* nameValueCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::FormUrlEncodedContent::EncodeContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "FormUrlEncodedContent", "EncodeContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameValueCollection)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameValueCollection);
}
// Autogenerated method: System.Net.Http.FormUrlEncodedContent.SerializeValue
::ArrayW<uint8_t> System::Net::Http::FormUrlEncodedContent::SerializeValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::FormUrlEncodedContent::SerializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "FormUrlEncodedContent", "SerializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47
#include "System/Net/Http/HttpClient_-SendAsyncWorker-d__47.hpp"
// Including type: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53
#include "System/Net/Http/HttpClient_-GetStringAsync-d__53.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpCompletionOption
#include "System/Net/Http/HttpCompletionOption.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan TimeoutDefault
::System::TimeSpan System::Net::Http::HttpClient::_get_TimeoutDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::_get_TimeoutDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Net.Http", "HttpClient", "TimeoutDefault"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan TimeoutDefault
void System::Net::Http::HttpClient::_set_TimeoutDefault(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::_set_TimeoutDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClient", "TimeoutDefault", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Uri base_address
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Http::HttpClient::dyn_base_address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_base_address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base_address"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource cts
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& System::Net::Http::HttpClient::dyn_cts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_cts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cts"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClient::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpRequestHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpRequestHeaders*& System::Net::Http::HttpClient::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpRequestHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 buffer_size
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::HttpClient::dyn_buffer_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_buffer_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer_size"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan timeout
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Net::Http::HttpClient::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient.get_MaxResponseContentBufferSize
int64_t System::Net::Http::HttpClient::get_MaxResponseContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::get_MaxResponseContentBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxResponseContentBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient.set_Timeout
void System::Net::Http::HttpClient::set_Timeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::set_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpClient..cctor
void System::Net::Http::HttpClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient.GetAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::GetAsync(::System::Uri* requestUri, ::System::Net::Http::HttpCompletionOption completionOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::GetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri), ::il2cpp_utils::ExtractType(completionOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, requestUri, completionOption);
}
// Autogenerated method: System.Net.Http.HttpClient.PostAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::PostAsync(::System::Uri* requestUri, ::System::Net::Http::HttpContent* content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::PostAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri), ::il2cpp_utils::ExtractType(content)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, requestUri, content);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(::System::Net::Http::HttpRequestMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Net::Http::HttpCompletionOption completionOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Net::Http::HttpCompletionOption completionOption, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsyncWorker
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsyncWorker(::System::Net::Http::HttpRequestMessage* request, ::System::Net::Http::HttpCompletionOption completionOption, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsyncWorker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsyncWorker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.GetStringAsync
::System::Threading::Tasks::Task_1<::StringW>* System::Net::Http::HttpClient::GetStringAsync(::System::Uri* requestUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::GetStringAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::StringW>*, false>(this, ___internal__method, requestUri);
}
// Autogenerated method: System.Net.Http.HttpClient.<>n__0
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::$$n__0(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::<>n__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>n__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.Dispose
void System::Net::Http::HttpClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47
#include "System/Net/Http/HttpClient_-SendAsyncWorker-d__47.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.Http.HttpResponseMessage> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClient <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClient*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpRequestMessage request
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpCompletionOption completionOption
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpCompletionOption& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_completionOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_completionOption");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionOption"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpCompletionOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpResponseMessage <response>5__1
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpResponseMessage*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$response$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$response$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<response>5__1"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpResponseMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource <lcts>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$lcts$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$lcts$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lcts>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.Http.HttpResponseMessage> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47.MoveNext
void System::Net::Http::HttpClient::$SendAsyncWorker$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47.SetStateMachine
void System::Net::Http::HttpClient::$SendAsyncWorker$d__47::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53
#include "System/Net/Http/HttpClient_-GetStringAsync-d__53.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClient <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClient*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri requestUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_requestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_requestUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpResponseMessage <resp>5__1
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpResponseMessage*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$resp$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$resp$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<resp>5__1"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpResponseMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.Http.HttpResponseMessage> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.String> <>u__2
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53.MoveNext
void System::Net::Http::HttpClient::$GetStringAsync$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53.SetStateMachine
void System::Net::Http::HttpClient::$GetStringAsync$d__53::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClientHandler
#include "System/Net/Http/HttpClientHandler.hpp"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<>c
#include "System/Net/Http/HttpClientHandler_--c.hpp"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64
#include "System/Net/Http/HttpClientHandler_-SendAsync-d__64.hpp"
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 groupCounter
int64_t System::Net::Http::HttpClientHandler::_get_groupCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::_get_groupCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Net.Http", "HttpClientHandler", "groupCounter"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 groupCounter
void System::Net::Http::HttpClientHandler::_set_groupCounter(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::_set_groupCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler", "groupCounter", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowAutoRedirect
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_allowAutoRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_allowAutoRedirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowAutoRedirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.DecompressionMethods automaticDecompression
[[deprecated("Use field access instead!")]] ::System::Net::DecompressionMethods& System::Net::Http::HttpClientHandler::dyn_automaticDecompression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_automaticDecompression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automaticDecompression"))->offset;
  return *reinterpret_cast<::System::Net::DecompressionMethods*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieContainer cookieContainer
[[deprecated("Use field access instead!")]] ::System::Net::CookieContainer*& System::Net::Http::HttpClientHandler::dyn_cookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_cookieContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookieContainer"))->offset;
  return *reinterpret_cast<::System::Net::CookieContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::Http::HttpClientHandler::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxAutomaticRedirections
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpClientHandler::dyn_maxAutomaticRedirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_maxAutomaticRedirections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAutomaticRedirections"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxRequestContentBufferSize
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::HttpClientHandler::dyn_maxRequestContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_maxRequestContentBufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRequestContentBufferSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean preAuthenticate
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_preAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_preAuthenticate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preAuthenticate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Net::Http::HttpClientHandler::dyn_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useCookies
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_useCookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_useCookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCookies"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useDefaultCredentials
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_useDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_useDefaultCredentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useDefaultCredentials"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useProxy
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_useProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_useProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useProxy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean sentRequest
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_sentRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_sentRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sentRequest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String connectionGroupName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::HttpClientHandler::dyn_connectionGroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_connectionGroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionGroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.get_CookieContainer
::System::Net::CookieContainer* System::Net::Http::HttpClientHandler::get_CookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::get_CookieContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CookieContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.get_MaxRequestContentBufferSize
int64_t System::Net::Http::HttpClientHandler::get_MaxRequestContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::get_MaxRequestContentBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxRequestContentBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.CreateWebRequest
::System::Net::HttpWebRequest* System::Net::Http::HttpClientHandler::CreateWebRequest(::System::Net::Http::HttpRequestMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::CreateWebRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpWebRequest*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.CreateResponseMessage
::System::Net::Http::HttpResponseMessage* System::Net::Http::HttpClientHandler::CreateResponseMessage(::System::Net::HttpWebResponse* wr, ::System::Net::Http::HttpRequestMessage* requestMessage, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::CreateResponseMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateResponseMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wr), ::il2cpp_utils::ExtractType(requestMessage), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method, wr, requestMessage, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.MethodHasBody
bool System::Net::Http::HttpClientHandler::MethodHasBody(::System::Net::Http::HttpMethod* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::MethodHasBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClientHandler", "MethodHasBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.Dispose
void System::Net::Http::HttpClientHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClientHandler::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<>c
#include "System/Net/Http/HttpClientHandler_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.HttpClientHandler/System.Net.Http.<>c <>9
::System::Net::Http::HttpClientHandler::$$c* System::Net::Http::HttpClientHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::HttpClientHandler::$$c*>("System.Net.Http", "HttpClientHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.HttpClientHandler/System.Net.Http.<>c <>9
void System::Net::Http::HttpClientHandler::$$c::_set_$$9(::System::Net::Http::HttpClientHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__61_0
::System::Func_2<::StringW, bool>* System::Net::Http::HttpClientHandler::$$c::_get_$$9__61_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_get_$$9__61_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("System.Net.Http", "HttpClientHandler/<>c", "<>9__61_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__61_0
void System::Net::Http::HttpClientHandler::$$c::_set_$$9__61_0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_set_$$9__61_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9__61_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__64_0
::System::Action_1<::Il2CppObject*>* System::Net::Http::HttpClientHandler::$$c::_get_$$9__64_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_get_$$9__64_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Net.Http", "HttpClientHandler/<>c", "<>9__64_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__64_0
void System::Net::Http::HttpClientHandler::$$c::_set_$$9__64_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_set_$$9__64_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9__64_0", value)));
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c..cctor
void System::Net::Http::HttpClientHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClientHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c.<CreateWebRequest>b__61_0
bool System::Net::Http::HttpClientHandler::$$c::$CreateWebRequest$b__61_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::<CreateWebRequest>b__61_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateWebRequest>b__61_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c.<SendAsync>b__64_0
void System::Net::Http::HttpClientHandler::$$c::$SendAsync$b__64_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::<SendAsync>b__64_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendAsync>b__64_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64
#include "System/Net/Http/HttpClientHandler_-SendAsync-d__64.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.Http.HttpResponseMessage> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClientHandler <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClientHandler*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClientHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpRequestMessage request
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest <wrequest>5__1
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wrequest$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wrequest$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wrequest>5__1"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <content>5__2
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$content$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$content$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<content>5__2"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream <stream>5__3
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$stream$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$stream$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stream>5__3"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebResponse <wresponse>5__4
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebResponse*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wresponse$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wresponse$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wresponse>5__4"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenRegistration <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$7__wrap1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.IO.Stream> <>u__2
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::IO::Stream*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::IO::Stream*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.WebResponse> <>u__3
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebResponse*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebResponse*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.Http.HttpResponseMessage> <>u__4
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64.MoveNext
void System::Net::Http::HttpClientHandler::$SendAsync$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64.SetStateMachine
void System::Net::Http::HttpClientHandler::$SendAsync$d__64::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpCompletionOption
#include "System/Net/Http/HttpCompletionOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
::System::Net::Http::HttpCompletionOption System::Net::Http::HttpCompletionOption::_get_ResponseContentRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::_get_ResponseContentRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpCompletionOption>("System.Net.Http", "HttpCompletionOption", "ResponseContentRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
void System::Net::Http::HttpCompletionOption::_set_ResponseContentRead(::System::Net::Http::HttpCompletionOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::_set_ResponseContentRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpCompletionOption", "ResponseContentRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
::System::Net::Http::HttpCompletionOption System::Net::Http::HttpCompletionOption::_get_ResponseHeadersRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::_get_ResponseHeadersRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpCompletionOption>("System.Net.Http", "HttpCompletionOption", "ResponseHeadersRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
void System::Net::Http::HttpCompletionOption::_set_ResponseHeadersRead(::System::Net::Http::HttpCompletionOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::_set_ResponseHeadersRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpCompletionOption", "ResponseHeadersRead", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpCompletionOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream
#include "System/Net/Http/HttpContent_FixedMemoryStream.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17
#include "System/Net/Http/HttpContent_-LoadIntoBufferAsync-d__17.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20
#include "System/Net/Http/HttpContent_-ReadAsStringAsync-d__20.hpp"
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream buffer
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent::FixedMemoryStream*& System::Net::Http::HttpContent::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent::FixedMemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpContent::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpContentHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpContentHeaders*& System::Net::Http::HttpContent::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpContentHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent.get_Headers
::System::Net::Http::Headers::HttpContentHeaders* System::Net::Http::HttpContent::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpContentHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.get_LoadedBufferLength
::System::Nullable_1<int64_t> System::Net::Http::HttpContent::get_LoadedBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::get_LoadedBufferLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadedBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyTo
void System::Net::Http::HttpContent::CopyTo(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyToAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::CopyToAsync(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyToAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::CopyToAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.HttpContent.CreateFixedMemoryStream
::System::Net::Http::HttpContent::FixedMemoryStream* System::Net::Http::HttpContent::CreateFixedMemoryStream(int64_t maxBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::CreateFixedMemoryStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "CreateFixedMemoryStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpContent::FixedMemoryStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, maxBufferSize);
}
// Autogenerated method: System.Net.Http.HttpContent.Dispose
void System::Net::Http::HttpContent::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.Dispose
void System::Net::Http::HttpContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpContent.LoadIntoBufferAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::LoadIntoBufferAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::LoadIntoBufferAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoBufferAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.LoadIntoBufferAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::LoadIntoBufferAsync(int64_t maxBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::LoadIntoBufferAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoBufferAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, maxBufferSize);
}
// Autogenerated method: System.Net.Http.HttpContent.ReadAsStringAsync
::System::Threading::Tasks::Task_1<::StringW>* System::Net::Http::HttpContent::ReadAsStringAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::ReadAsStringAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsStringAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.GetEncodingFromBuffer
::System::Text::Encoding* System::Net::Http::HttpContent::GetEncodingFromBuffer(::ArrayW<uint8_t> buffer, int length, ByRef<int> preambleLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::GetEncodingFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "GetEncodingFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(preambleLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length, byref(preambleLength));
}
// Autogenerated method: System.Net.Http.HttpContent.StartsWith
int System::Net::Http::HttpContent::StartsWith(::ArrayW<uint8_t> array, int length, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, length, value);
}
// Autogenerated method: System.Net.Http.HttpContent.SerializeToStreamAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::SerializeToStreamAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.HttpContent.TryComputeLength
bool System::Net::Http::HttpContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream
#include "System/Net/Http/HttpContent_FixedMemoryStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 maxSize
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::HttpContent::FixedMemoryStream::dyn_maxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::FixedMemoryStream::dyn_maxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.CheckOverflow
void System::Net::Http::HttpContent::FixedMemoryStream::CheckOverflow(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::FixedMemoryStream::CheckOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.WriteByte
void System::Net::Http::HttpContent::FixedMemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::FixedMemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.Write
void System::Net::Http::HttpContent::FixedMemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::FixedMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17
#include "System/Net/Http/HttpContent_-LoadIntoBufferAsync-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpContent <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 maxBufferSize
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_maxBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_maxBufferSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxBufferSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17.MoveNext
void System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17.SetStateMachine
void System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20
#include "System/Net/Http/HttpContent_-ReadAsStringAsync-d__20.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpContent <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20.MoveNext
void System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20.SetStateMachine
void System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageHandler::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageInvoker
#include "System/Net/Http/HttpMessageInvoker.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpMessageHandler handler
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpMessageHandler*& System::Net::Http::HttpMessageInvoker::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean disposeHandler
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpMessageInvoker::dyn_disposeHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::dyn_disposeHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposeHandler"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageInvoker::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod delete_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_delete_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_delete_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "delete_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod delete_method
void System::Net::Http::HttpMethod::_set_delete_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_delete_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "delete_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod get_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_get_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_get_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "get_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod get_method
void System::Net::Http::HttpMethod::_set_get_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_get_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "get_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod head_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_head_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_head_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "head_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod head_method
void System::Net::Http::HttpMethod::_set_head_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_head_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "head_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod options_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_options_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_options_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "options_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod options_method
void System::Net::Http::HttpMethod::_set_options_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_options_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "options_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod post_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_post_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_post_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "post_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod post_method
void System::Net::Http::HttpMethod::_set_post_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_post_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "post_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod put_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_put_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_put_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "put_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod put_method
void System::Net::Http::HttpMethod::_set_put_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_put_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "put_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod trace_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_trace_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_trace_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "trace_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod trace_method
void System::Net::Http::HttpMethod::_set_trace_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_trace_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "trace_method", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String method
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::HttpMethod::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Get
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Method
::StringW System::Net::Http::HttpMethod::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Post
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod..cctor
void System::Net::Http::HttpMethod::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(::System::Net::Http::HttpMethod* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.HttpMethod.GetHashCode
int System::Net::Http::HttpMethod::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.ToString
::StringW System::Net::Http::HttpMethod::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.op_Equality
bool System::Net::Http::operator ==(::System::Net::Http::HttpMethod* left, ::System::Net::Http::HttpMethod& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpRequestException
#include "System/Net/Http/HttpRequestException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpRequestHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpRequestHeaders*& System::Net::Http::HttpRequestMessage::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpRequestHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpMethod method
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpMethod*& System::Net::Http::HttpRequestMessage::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpMethod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::Http::HttpRequestMessage::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Http::HttpRequestMessage::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_used
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpRequestMessage::dyn_is_used() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_is_used");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_used"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpRequestMessage::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <Content>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpRequestMessage::dyn_$Content$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_$Content$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Content>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Content
::System::Net::Http::HttpContent* System::Net::Http::HttpRequestMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Content
void System::Net::Http::HttpRequestMessage::set_Content(::System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Headers
::System::Net::Http::Headers::HttpRequestHeaders* System::Net::Http::HttpRequestMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpRequestHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Method
::System::Net::Http::HttpMethod* System::Net::Http::HttpRequestMessage::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Method
void System::Net::Http::HttpRequestMessage::set_Method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_RequestUri
::System::Uri* System::Net::Http::HttpRequestMessage::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_RequestUri
void System::Net::Http::HttpRequestMessage::set_RequestUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Version
::System::Version* System::Net::Http::HttpRequestMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.IsAllowedAbsoluteUri
bool System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpRequestMessage", "IsAllowedAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.SetIsUsed
bool System::Net::Http::HttpRequestMessage::SetIsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::SetIsUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.ToString
::StringW System::Net::Http::HttpRequestMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpResponseHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpResponseHeaders*& System::Net::Http::HttpResponseMessage::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpResponseHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String reasonPhrase
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::HttpResponseMessage::dyn_reasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_reasonPhrase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reasonPhrase"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpStatusCode statusCode
[[deprecated("Use field access instead!")]] ::System::Net::HttpStatusCode& System::Net::Http::HttpResponseMessage::dyn_statusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_statusCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusCode"))->offset;
  return *reinterpret_cast<::System::Net::HttpStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::Http::HttpResponseMessage::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpResponseMessage::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <Content>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpResponseMessage::dyn_$Content$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_$Content$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Content>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpRequestMessage <RequestMessage>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpResponseMessage::dyn_$RequestMessage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_$RequestMessage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestMessage>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Content
::System::Net::Http::HttpContent* System::Net::Http::HttpResponseMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_Content
void System::Net::Http::HttpResponseMessage::set_Content(::System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Headers
::System::Net::Http::Headers::HttpResponseHeaders* System::Net::Http::HttpResponseMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpResponseHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_IsSuccessStatusCode
bool System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_ReasonPhrase
::StringW System::Net::Http::HttpResponseMessage::get_ReasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_ReasonPhrase
void System::Net::Http::HttpResponseMessage::set_ReasonPhrase(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_RequestMessage
void System::Net::Http::HttpResponseMessage::set_RequestMessage(::System::Net::Http::HttpRequestMessage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_RequestMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_StatusCode
::System::Net::HttpStatusCode System::Net::Http::HttpResponseMessage::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpStatusCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_StatusCode
void System::Net::Http::HttpResponseMessage::set_StatusCode(::System::Net::HttpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Version
::System::Version* System::Net::Http::HttpResponseMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
::System::Net::Http::HttpResponseMessage* System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.ToString
::StringW System::Net::Http::HttpResponseMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StreamContent
#include "System/Net/Http/StreamContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream content
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::Http::StreamContent::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 bufferSize
[[deprecated("Use field access instead!")]] int& System::Net::Http::StreamContent::dyn_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::Http::StreamContent::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 startPosition
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::StreamContent::dyn_startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean contentCopied
[[deprecated("Use field access instead!")]] bool& System::Net::Http::StreamContent::dyn_contentCopied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_contentCopied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentCopied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.StreamContent.Dispose
void System::Net::Http::StreamContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.StreamContent.SerializeToStreamAsync
::System::Threading::Tasks::Task* System::Net::Http::StreamContent::SerializeToStreamAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.StreamContent.TryComputeLength
bool System::Net::Http::StreamContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StringContent
#include "System/Net/Http/StringContent.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.StringContent.GetByteArray
::ArrayW<uint8_t> System::Net::Http::StringContent::GetByteArray(::StringW content, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StringContent::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "StringContent", "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, content, encoding);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.AuthenticationHeaderValue
#include "System/Net/Http/Headers/AuthenticationHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Parameter>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Parameter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Parameter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameter>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Scheme>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Scheme$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Scheme$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Scheme>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Parameter
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Parameter
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Scheme
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Scheme
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::AuthenticationHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::AuthenticationHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::AuthenticationHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::AuthenticationHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::AuthenticationHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParseElement
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::AuthenticationHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::AuthenticationHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.Equals
bool System::Net::Http::Headers::AuthenticationHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode
int System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.ToString
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.CacheControlHeaderValue
#include "System/Net/Http/Headers/CacheControlHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> extensions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> no_cache_headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_no_cache_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_no_cache_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "no_cache_headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> private_headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_private_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_private_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "private_headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MaxAge>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxAge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxAge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxAge>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MaxStale>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStale$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxStale>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MaxStaleLimit>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStaleLimit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStaleLimit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxStaleLimit>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MinFresh>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MinFresh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MinFresh$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MinFresh>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MustRevalidate>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MustRevalidate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MustRevalidate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MustRevalidate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoCache>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoCache$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoCache$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoCache>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoStore>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoStore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoStore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoStore>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoTransform>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoTransform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoTransform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoTransform>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OnlyIfCached>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$OnlyIfCached$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$OnlyIfCached$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnlyIfCached>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Private>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Private$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Private$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Private>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ProxyRevalidate>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$ProxyRevalidate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$ProxyRevalidate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProxyRevalidate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Public>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Public$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Public$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Public>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <SharedMaxAge>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$SharedMaxAge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$SharedMaxAge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SharedMaxAge>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Extensions
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxAge
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStale
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStale
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStaleLimit
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStaleLimit
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MinFresh
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MinFresh
void System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MustRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MustRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCache
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoCache
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCacheHeaders
::System::Collections::Generic::ICollection_1<::StringW>* System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCacheHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoStore
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoStore
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoTransform
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoTransform
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_OnlyIfCached
bool System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_OnlyIfCached
void System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Private
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Private
void System::Net::Http::Headers::CacheControlHeaderValue::set_Private(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_PrivateHeaders
::System::Collections::Generic::ICollection_1<::StringW>* System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_ProxyRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_ProxyRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Public
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Public
void System::Net::Http::Headers::CacheControlHeaderValue::set_Public(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_SharedMaxAge
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_SharedMaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::CacheControlHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.TryParse
bool System::Net::Http::Headers::CacheControlHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::CacheControlHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CacheControlHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::CacheControlHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.Equals
bool System::Net::Http::Headers::CacheControlHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
int System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.ToString
::StringW System::Net::Http::Headers::CacheControlHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.CollectionExtensions
#include "System/Net/Http/Headers/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionExtensions.SetValue
void System::Net::Http::Headers::CollectionExtensions::SetValue(::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>* parameters, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionExtensions::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionExtensions", "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.CollectionParser
#include "System/Net/Http/Headers/CollectionParser.hpp"
// Including type: System.Net.Http.Headers.ElementTryParser`1
#include "System/Net/Http/Headers/ElementTryParser_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParse
bool System::Net::Http::Headers::CollectionParser::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::StringW>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionParser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::StringW>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParseStringElement
bool System::Net::Http::Headers::CollectionParser::TryParseStringElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::StringW> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionParser::TryParseStringElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParseStringElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentDispositionHeaderValue
#include "System/Net/Http/Headers/ContentDispositionHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String dispositionType
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_dispositionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_dispositionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dispositionType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentDispositionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse
bool System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::ContentDispositionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentDispositionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ContentDispositionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.Equals
bool System::Net::Http::Headers::ContentDispositionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.ToString
::StringW System::Net::Http::Headers::ContentDispositionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentRangeHeaderValue
#include "System/Net/Http/Headers/ContentRangeHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String unit
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <From>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$From$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$From$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<From>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <Length>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <To>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$To$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$To$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<To>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_From
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_From
void System::Net::Http::Headers::ContentRangeHeaderValue::set_From(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Length
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_Length
void System::Net::Http::Headers::ContentRangeHeaderValue::set_Length(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_To
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_To
void System::Net::Http::Headers::ContentRangeHeaderValue::set_To(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Unit
::StringW System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentRangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.TryParse
bool System::Net::Http::Headers::ContentRangeHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::ContentRangeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentRangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ContentRangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.Equals
bool System::Net::Http::Headers::ContentRangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.ToString
::StringW System::Net::Http::Headers::ContentRangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
::System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::EntityTagHeaderValue::_get_any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::_get_any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::EntityTagHeaderValue*>("System.Net.Http.Headers", "EntityTagHeaderValue", "any"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
void System::Net::Http::Headers::EntityTagHeaderValue::_set_any(::System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::_set_any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "EntityTagHeaderValue", "any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsWeak>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::EntityTagHeaderValue::dyn_$IsWeak$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::dyn_$IsWeak$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsWeak>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Tag>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::EntityTagHeaderValue::dyn_$Tag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::dyn_$Tag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tag>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_IsWeak
bool System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_IsWeak
void System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_Tag
::StringW System::Net::Http::Headers::EntityTagHeaderValue::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_Tag
void System::Net::Http::Headers::EntityTagHeaderValue::set_Tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::set_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue..cctor
void System::Net::Http::Headers::EntityTagHeaderValue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::EntityTagHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::EntityTagHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::EntityTagHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParseElement
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::EntityTagHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::EntityTagHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::EntityTagHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::EntityTagHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.Equals
bool System::Net::Http::Headers::EntityTagHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
int System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.ToString
::StringW System::Net::Http::Headers::EntityTagHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HashCodeCalculator
#include "System/Net/Http/Headers/HashCodeCalculator.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/System.Net.Http.Headers.HeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_HeaderTypeInfo_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/System.Net.Http.Headers.CollectionHeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_CollectionHeaderTypeInfo_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.Http.Headers.TryParseDelegate`1
#include "System/Net/Http/Headers/TryParseDelegate_1.hpp"
// Including type: System.Net.Http.Headers.TryParseListDelegate`1
#include "System/Net/Http/Headers/TryParseListDelegate_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowsMany
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::HeaderInfo::dyn_AllowsMany() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_AllowsMany");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowsMany"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaderKind& System::Net::Http::Headers::HeaderInfo::dyn_HeaderKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_HeaderKind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderKind"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaderKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::HeaderInfo::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.String> <CustomToString>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::StringW>*& System::Net::Http::Headers::HeaderInfo::dyn_$CustomToString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_$CustomToString$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomToString>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_CustomToString
::System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::HeaderInfo::get_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::get_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.set_CustomToString
void System::Net::Http::Headers::HeaderInfo::set_CustomToString(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::set_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_Separator
::StringW System::Net::Http::Headers::HeaderInfo::get_Separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::get_Separator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Separator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(::System::Net::Http::Headers::HttpHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::CreateCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, headers);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.AddToCollection
void System::Net::Http::Headers::HeaderInfo::AddToCollection(::Il2CppObject* collection, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::AddToCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collection, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(::System::Net::Http::Headers::HttpHeaders* headers, ::System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::CreateCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, headers, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.ToStringCollection
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HeaderInfo::ToStringCollection(::Il2CppObject* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::ToStringCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.TryParse
bool System::Net::Http::Headers::HeaderInfo::TryParse(::StringW value, ByRef<::Il2CppObject*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::TryParse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.HttpContent content
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::Headers::HttpContentHeaders::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentLength
::System::Nullable_1<int64_t> System::Net::Http::Headers::HttpContentHeaders::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::get_ContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentType
::System::Net::Http::Headers::MediaTypeHeaderValue* System::Net::Http::Headers::HttpContentHeaders::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::MediaTypeHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.set_ContentType
void System::Net::Http::Headers::HttpContentHeaders::set_ContentType(::System::Net::Http::Headers::MediaTypeHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpHeaderKind
#include "System/Net/Http/Headers/HttpHeaderKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind None
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind None
void System::Net::Http::Headers::HttpHeaderKind::_set_None(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Request
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Request"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Request
void System::Net::Http::Headers::HttpHeaderKind::_set_Request(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Request", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Response
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Response"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Response
void System::Net::Http::Headers::HttpHeaderKind::_set_Response(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Response", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Content
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Content
void System::Net::Http::Headers::HttpHeaderKind::_set_Content(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Content", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::HttpHeaderKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>* System::Net::Http::Headers::HttpHeaders::_get_known_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::_get_known_headers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>*>("System.Net.Http.Headers", "HttpHeaders", "known_headers")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
void System::Net::Http::Headers::HttpHeaders::_set_known_headers(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::_set_known_headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaders", "known_headers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket> headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>*& System::Net::Http::Headers::HttpHeaders::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaderKind& System::Net::Http::Headers::HttpHeaders::dyn_HeaderKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_HeaderKind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderKind"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaderKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> connectionclose
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpHeaders::dyn_connectionclose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_connectionclose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionclose"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> transferEncodingChunked
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpHeaders::dyn_transferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_transferEncodingChunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transferEncodingChunked"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders..cctor
void System::Net::Http::Headers::HttpHeaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.AddInternal
bool System::Net::Http::Headers::HttpHeaders::AddInternal(::StringW name, ::System::Collections::Generic::IEnumerable_1<::StringW>* values, ::System::Net::Http::Headers::HeaderInfo* headerInfo, bool ignoreInvalid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::AddInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(headerInfo), ::il2cpp_utils::ExtractType(ignoreInvalid)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, values, headerInfo, ignoreInvalid);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation
bool System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation(::StringW name, ::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddWithoutValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.CheckName
::System::Net::Http::Headers::HeaderInfo* System::Net::Http::Headers::HttpHeaders::CheckName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::CheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HeaderInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryCheckName
bool System::Net::Http::Headers::HttpHeaders::TryCheckName(::StringW name, ByRef<::System::Net::Http::Headers::HeaderInfo*> headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::TryCheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::HeaderInfo*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(headerInfo));
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>>* System::Net::Http::Headers::HttpHeaders::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Net::Http::Headers::HttpHeaders::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.Remove
bool System::Net::Http::Headers::HttpHeaders::Remove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetSingleHeaderString
::StringW System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString(::StringW key, ::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetSingleHeaderString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetAllHeaderValues
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues(::System::Net::Http::Headers::HttpHeaders::HeaderBucket* bucket, ::System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllHeaderValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, bucket, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetKnownHeaderKind
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetKnownHeaderKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderKind, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.ToString
::StringW System::Net::Http::Headers::HttpHeaders::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object Parsed
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_Parsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_Parsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parsed"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> values
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Func`2<System.Object,System.String> CustomToString
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::StringW>*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_CustomToString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomToString"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.get_HasStringValues
bool System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasStringValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.get_Values
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.set_Values
void System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.ParsedToString
::StringW System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsedToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,System.Collections.Generic.IEnumerable`1<System.String>> <>2__current
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.Headers.HttpHeaders <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaders*& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>::Enumerator& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*> System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_System_Collections_Generic_IEnumerable$System_String$$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.IDisposable.Dispose
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.MoveNext
bool System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.<>m__Finally1
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.IEnumerator.Reset
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> expectContinue
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpRequestHeaders::dyn_expectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::dyn_expectContinue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectContinue"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Connection
::System::Net::Http::Headers::HttpHeaderValueCollection_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderValueCollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionClose
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionKeepAlive
bool System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionKeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ExpectContinue
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Host
::StringW System::Net::Http::Headers::HttpRequestHeaders::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncoding
::System::Net::Http::Headers::HttpHeaderValueCollection_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderValueCollection_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncodingChunked
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncodingChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.AddHeaders
void System::Net::Http::Headers::HttpRequestHeaders::AddHeaders(::System::Net::Http::Headers::HttpRequestHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::AddHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::HttpRequestHeaders::$$c* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpRequestHeaders::$$c*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9(::System::Net::Http::Headers::HttpRequestHeaders::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__19_0
::System::Predicate_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::StringW>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__19_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0(::System::Predicate_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__22_0
::System::Predicate_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::StringW>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__22_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0(::System::Predicate_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0(::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0(::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpRequestHeaders/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ConnectionClose>b__19_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionClose$b__19_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionClose>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionClose>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ConnectionKeepAlive>b__22_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionKeepAlive$b__22_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionKeepAlive>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionKeepAlive>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ExpectContinue>b__29_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ExpectContinue$b__29_0(::System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ExpectContinue>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ExpectContinue>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_TransferEncodingChunked>b__71_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_TransferEncodingChunked$b__71_0(::System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_TransferEncodingChunked>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_TransferEncodingChunked>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Token Empty
::System::Net::Http::Headers::Token System::Net::Http::Headers::Token::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token>("System.Net.Http.Headers", "Token", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Token Empty
void System::Net::Http::Headers::Token::_set_Empty(::System::Net::Http::Headers::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.Headers.Token/System.Net.Http.Headers.Type type
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::Token::Type& System::Net::Http::Headers::Token::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::Token::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartPosition>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::dyn_$StartPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_$StartPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <EndPosition>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::dyn_$EndPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_$EndPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EndPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_StartPosition
int System::Net::Http::Headers::Token::get_StartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_StartPosition
void System::Net::Http::Headers::Token::set_StartPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::set_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_EndPosition
int System::Net::Http::Headers::Token::get_EndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_EndPosition
void System::Net::Http::Headers::Token::set_EndPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::set_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_Kind
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::Token::Type, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token..ctor
// ABORTED elsewhere.  System::Net::Http::Headers::Token::Token(::System::Net::Http::Headers::Token::Type type, int startPosition, int endPosition)
// Autogenerated method: System.Net.Http.Headers.Token..cctor
void System::Net::Http::Headers::Token::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Token", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.ToString
::StringW System::Net::Http::Headers::Token::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token/System.Net.Http.Headers.Type
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Error
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Error
void System::Net::Http::Headers::Token::Type::_set_Error(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type End
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type End
void System::Net::Http::Headers::Token::Type::_set_End(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Token
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Token
void System::Net::Http::Headers::Token::Type::_set_Token(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type QuotedString
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_QuotedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_QuotedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "QuotedString"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type QuotedString
void System::Net::Http::Headers::Token::Type::_set_QuotedString(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_QuotedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "QuotedString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorEqual
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorEqual
void System::Net::Http::Headers::Token::Type::_set_SeparatorEqual(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSemicolon
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSemicolon
void System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSlash
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorSlash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSlash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSlash
void System::Net::Http::Headers::Token::Type::_set_SeparatorSlash(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorSlash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSlash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorDash
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorDash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorDash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorDash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorDash
void System::Net::Http::Headers::Token::Type::_set_SeparatorDash(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorDash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorDash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorComma
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorComma"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorComma
void System::Net::Http::Headers::Token::Type::_set_SeparatorComma(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorComma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type OpenParens
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_OpenParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_OpenParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "OpenParens"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type OpenParens
void System::Net::Http::Headers::Token::Type::_set_OpenParens(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_OpenParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "OpenParens", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean[] token_chars
::ArrayW<bool> System::Net::Http::Headers::Lexer::_get_token_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_token_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("System.Net.Http.Headers", "Lexer", "token_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean[] token_chars
void System::Net::Http::Headers::Lexer::_set_token_chars(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_token_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "token_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 last_token_char
int System::Net::Http::Headers::Lexer::_get_last_token_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_last_token_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Http.Headers", "Lexer", "last_token_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 last_token_char
void System::Net::Http::Headers::Lexer::_set_last_token_char(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_last_token_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "last_token_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] dt_formats
::ArrayW<::StringW> System::Net::Http::Headers::Lexer::_get_dt_formats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_dt_formats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net.Http.Headers", "Lexer", "dt_formats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] dt_formats
void System::Net::Http::Headers::Lexer::_set_dt_formats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_dt_formats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "dt_formats", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String s
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::Lexer::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Lexer::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.get_Position
int System::Net::Http::Headers::Lexer::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.set_Position
void System::Net::Http::Headers::Lexer::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer..cctor
void System::Net::Http::Headers::Lexer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::StringW System::Net::Http::Headers::Lexer::GetStringValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::StringW System::Net::Http::Headers::Lexer::GetStringValue(::System::Net::Http::Headers::Token start, ::System::Net::Http::Headers::Token end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetQuotedStringValue
::StringW System::Net::Http::Headers::Lexer::GetQuotedStringValue(::System::Net::Http::Headers::Token start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetQuotedStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuotedStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetRemainingStringValue
::StringW System::Net::Http::Headers::Lexer::GetRemainingStringValue(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetRemainingStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, position);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsStarStringValue
bool System::Net::Http::Headers::Lexer::IsStarStringValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsStarStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsStarStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(::System::Net::Http::Headers::Token token, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(::System::Net::Http::Headers::Token token, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetTimeSpanValue
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::Lexer::TryGetTimeSpanValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetTimeSpanValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTimeSpanValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(::System::Net::Http::Headers::Token token, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(::StringW text, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDoubleValue
bool System::Net::Http::Headers::Lexer::TryGetDoubleValue(::System::Net::Http::Headers::Token token, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDoubleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDoubleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidToken
bool System::Net::Http::Headers::Lexer::IsValidToken(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsValidToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidCharacter
bool System::Net::Http::Headers::Lexer::IsValidCharacter(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsValidCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.EatChar
void System::Net::Http::Headers::Lexer::EatChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::EatChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.PeekChar
int System::Net::Http::Headers::Lexer::PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::PeekChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.ScanCommentOptional
bool System::Net::Http::Headers::Lexer::ScanCommentOptional(ByRef<::StringW> value, ByRef<::System::Net::Http::Headers::Token> readToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::ScanCommentOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCommentOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value), byref(readToken));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.Scan
::System::Net::Http::Headers::Token System::Net::Http::Headers::Lexer::Scan(bool recognizeDash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recognizeDash)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::Token, false>(this, ___internal__method, recognizeDash);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::MediaTypeHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String media_type
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::MediaTypeHeaderValue::dyn_media_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::dyn_media_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "media_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_CharSet
::StringW System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.set_CharSet
void System::Net::Http::Headers::MediaTypeHeaderValue::set_CharSet(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::set_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.set_MediaType
void System::Net::Http::Headers::MediaTypeHeaderValue::set_MediaType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::set_MediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::MediaTypeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.Parse
::System::Net::Http::Headers::MediaTypeHeaderValue* System::Net::Http::Headers::MediaTypeHeaderValue::Parse(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::MediaTypeHeaderValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::MediaTypeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::MediaTypeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParseMediaType
::System::Nullable_1<::System::Net::Http::Headers::Token> System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType(::System::Net::Http::Headers::Lexer* lexer, ByRef<::StringW> media) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParseMediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Net::Http::Headers::Token>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(media));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.Equals
bool System::Net::Http::Headers::MediaTypeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
int System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.ToString
::StringW System::Net::Http::Headers::MediaTypeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::MediaTypeHeaderValue::$$c* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::MediaTypeHeaderValue::$$c*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9(::System::Net::Http::Headers::MediaTypeHeaderValue::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0(::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c.<get_CharSet>b__6_0
bool System::Net::Http::Headers::MediaTypeHeaderValue::$$c::$get_CharSet$b__6_0(::System::Net::Http::Headers::NameValueHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::<get_CharSet>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_CharSet>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
#include "System/Net/Http/Headers/MediaTypeWithQualityHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::NameValueHeaderValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::NameValueHeaderValue::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Name
::StringW System::Net::Http::Headers::NameValueHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Name
void System::Net::Http::Headers::NameValueHeaderValue::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Value
::StringW System::Net::Http::Headers::NameValueHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Value
void System::Net::Http::Headers::NameValueHeaderValue::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Create
::System::Net::Http::Headers::NameValueHeaderValue* System::Net::Http::Headers::NameValueHeaderValue::Create(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::NameValueHeaderValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParsePragma
bool System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParsePragma", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseParameters
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*> result, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(result), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::NameValueHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::NameValueHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Equals
bool System::Net::Http::Headers::NameValueHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.ToString
::StringW System::Net::Http::Headers::NameValueHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueWithParametersHeaderValue
#include "System/Net/Http/Headers/NameValueWithParametersHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::NameValueWithParametersHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueWithParametersHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString
::StringW System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Parser_Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token.Check
void System::Net::Http::Headers::Parser::Token::Check(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Token::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token.TryCheck
bool System::Net::Http::Headers::Parser::Token::TryCheck(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Token::TryCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "TryCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime
#include "System/Net/Http/Headers/Parser_DateTime.hpp"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
::System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::Parser::DateTime::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, ::StringW>*>("System.Net.Http.Headers", "Parser/DateTime", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::DateTime::_set_ToString(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime..cctor
void System::Net::Http::Headers::Parser::DateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime.TryParse
bool System::Net::Http::Headers::Parser::DateTime::TryParse(::StringW input, ByRef<::System::DateTimeOffset> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::Parser::DateTime::$$c* System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Parser::DateTime::$$c*>("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9(::System::Net::Http::Headers::Parser::DateTime::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::Parser::DateTime::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c.<.cctor>b__2_0
::StringW System::Net::Http::Headers::Parser::DateTime::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.EmailAddress
#include "System/Net/Http/Headers/Parser_EmailAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.EmailAddress.TryParse
bool System::Net::Http::Headers::Parser::EmailAddress::TryParse(::StringW input, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::EmailAddress::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/EmailAddress", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Host
#include "System/Net/Http/Headers/Parser_Host.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Host.TryParse
bool System::Net::Http::Headers::Parser::Host::TryParse(::StringW input, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Host::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Host", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Int
#include "System/Net/Http/Headers/Parser_Int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Int.TryParse
bool System::Net::Http::Headers::Parser::Int::TryParse(::StringW input, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Int::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Int", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Long
#include "System/Net/Http/Headers/Parser_Long.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Long.TryParse
bool System::Net::Http::Headers::Parser::Long::TryParse(::StringW input, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Long::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Long", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5
#include "System/Net/Http/Headers/Parser_MD5.hpp"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_MD5_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
::System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::Parser::MD5::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, ::StringW>*>("System.Net.Http.Headers", "Parser/MD5", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::MD5::_set_ToString(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/MD5", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5..cctor
void System::Net::Http::Headers::Parser::MD5::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5.TryParse
bool System::Net::Http::Headers::Parser::MD5::TryParse(::StringW input, ByRef<::ArrayW<uint8_t>> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_MD5_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::Parser::MD5::$$c* System::Net::Http::Headers::Parser::MD5::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Parser::MD5::$$c*>("System.Net.Http.Headers", "Parser/MD5/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::Parser::MD5::$$c::_set_$$9(::System::Net::Http::Headers::Parser::MD5::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/MD5/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::Parser::MD5::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c.<.cctor>b__2_0
::StringW System::Net::Http::Headers::Parser::MD5::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.TimeSpanSeconds
#include "System/Net/Http/Headers/Parser_TimeSpanSeconds.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.TimeSpanSeconds.TryParse
bool System::Net::Http::Headers::Parser::TimeSpanSeconds::TryParse(::StringW input, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::TimeSpanSeconds::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/TimeSpanSeconds", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Uri
#include "System/Net/Http/Headers/Parser_Uri.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Uri.TryParse
bool System::Net::Http::Headers::Parser::Uri::TryParse(::StringW input, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Uri::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Uri", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ProductHeaderValue
#include "System/Net/Http/Headers/ProductHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ProductHeaderValue::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Version>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ProductHeaderValue::dyn_$Version$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::dyn_$Version$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Version>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.get_Name
::StringW System::Net::Http::Headers::ProductHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.set_Name
void System::Net::Http::Headers::ProductHeaderValue::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.get_Version
::StringW System::Net::Http::Headers::ProductHeaderValue::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.set_Version
void System::Net::Http::Headers::ProductHeaderValue::set_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ProductHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.TryParse
bool System::Net::Http::Headers::ProductHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ProductHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ProductHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.TryParseElement
bool System::Net::Http::Headers::ProductHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::ProductHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ProductHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.Equals
bool System::Net::Http::Headers::ProductHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.GetHashCode
int System::Net::Http::Headers::ProductHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.ToString
::StringW System::Net::Http::Headers::ProductHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ProductInfoHeaderValue
#include "System/Net/Http/Headers/ProductInfoHeaderValue.hpp"
// Including type: System.Net.Http.Headers.ProductHeaderValue
#include "System/Net/Http/Headers/ProductHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Comment>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Comment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Comment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Comment>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.ProductHeaderValue <Product>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::ProductHeaderValue*& System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Product$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Product$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Product>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::ProductHeaderValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.get_Comment
::StringW System::Net::Http::Headers::ProductInfoHeaderValue::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.set_Comment
void System::Net::Http::Headers::ProductInfoHeaderValue::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.get_Product
::System::Net::Http::Headers::ProductHeaderValue* System::Net::Http::Headers::ProductInfoHeaderValue::get_Product() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::get_Product");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Product", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::ProductHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.set_Product
void System::Net::Http::Headers::ProductInfoHeaderValue::set_Product(::System::Net::Http::Headers::ProductHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::set_Product");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Product", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ProductInfoHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.TryParse
bool System::Net::Http::Headers::ProductInfoHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ProductInfoHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductInfoHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ProductInfoHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.TryParseElement
bool System::Net::Http::Headers::ProductInfoHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::ProductInfoHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductInfoHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ProductInfoHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.Equals
bool System::Net::Http::Headers::ProductInfoHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode
int System::Net::Http::Headers::ProductInfoHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.ToString
::StringW System::Net::Http::Headers::ProductInfoHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeConditionHeaderValue
#include "System/Net/Http/Headers/RangeConditionHeaderValue.hpp"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTimeOffset>& System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.EntityTagHeaderValue <EntityTag>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::EntityTagHeaderValue*& System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$EntityTag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$EntityTag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EntityTag>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::EntityTagHeaderValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.get_Date
::System::Nullable_1<::System::DateTimeOffset> System::Net::Http::Headers::RangeConditionHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.set_Date
void System::Net::Http::Headers::RangeConditionHeaderValue::set_Date(::System::Nullable_1<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.get_EntityTag
::System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::RangeConditionHeaderValue::get_EntityTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::get_EntityTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::EntityTagHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.set_EntityTag
void System::Net::Http::Headers::RangeConditionHeaderValue::set_EntityTag(::System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::set_EntityTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntityTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeConditionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.TryParse
bool System::Net::Http::Headers::RangeConditionHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::RangeConditionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RangeConditionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::RangeConditionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.Equals
bool System::Net::Http::Headers::RangeConditionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeConditionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeConditionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeHeaderValue
#include "System/Net/Http/Headers/RangeHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.RangeItemHeaderValue
#include "System/Net/Http/Headers/RangeItemHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.RangeItemHeaderValue> ranges
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::RangeItemHeaderValue*>*& System::Net::Http::Headers::RangeHeaderValue::dyn_ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::dyn_ranges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ranges"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::RangeItemHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String unit
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::RangeHeaderValue::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.get_Ranges
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::RangeItemHeaderValue*>* System::Net::Http::Headers::RangeHeaderValue::get_Ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::get_Ranges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ranges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::RangeItemHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.get_Unit
::StringW System::Net::Http::Headers::RangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.TryParse
bool System::Net::Http::Headers::RangeHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::RangeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::RangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.Equals
bool System::Net::Http::Headers::RangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeItemHeaderValue
#include "System/Net/Http/Headers/RangeItemHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <From>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::RangeItemHeaderValue::dyn_$From$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::dyn_$From$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<From>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <To>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::RangeItemHeaderValue::dyn_$To$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::dyn_$To$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<To>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.get_From
::System::Nullable_1<int64_t> System::Net::Http::Headers::RangeItemHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.set_From
void System::Net::Http::Headers::RangeItemHeaderValue::set_From(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.get_To
::System::Nullable_1<int64_t> System::Net::Http::Headers::RangeItemHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.set_To
void System::Net::Http::Headers::RangeItemHeaderValue::set_To(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeItemHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.Equals
bool System::Net::Http::Headers::RangeItemHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeItemHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeItemHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RetryConditionHeaderValue
#include "System/Net/Http/Headers/RetryConditionHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTimeOffset>& System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <Delta>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Delta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Delta$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Delta>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.get_Date
::System::Nullable_1<::System::DateTimeOffset> System::Net::Http::Headers::RetryConditionHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.set_Date
void System::Net::Http::Headers::RetryConditionHeaderValue::set_Date(::System::Nullable_1<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.get_Delta
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::RetryConditionHeaderValue::get_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::get_Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.set_Delta
void System::Net::Http::Headers::RetryConditionHeaderValue::set_Delta(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::set_Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RetryConditionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.TryParse
bool System::Net::Http::Headers::RetryConditionHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::RetryConditionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RetryConditionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::RetryConditionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.Equals
bool System::Net::Http::Headers::RetryConditionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode
int System::Net::Http::Headers::RetryConditionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.ToString
::StringW System::Net::Http::Headers::RetryConditionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.StringWithQualityHeaderValue
#include "System/Net/Http/Headers/StringWithQualityHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Double> <Quality>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<double>& System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Quality$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Quality$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Quality>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.get_Quality
::System::Nullable_1<double> System::Net::Http::Headers::StringWithQualityHeaderValue::get_Quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::get_Quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.set_Quality
void System::Net::Http::Headers::StringWithQualityHeaderValue::set_Quality(::System::Nullable_1<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::set_Quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.get_Value
::StringW System::Net::Http::Headers::StringWithQualityHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.set_Value
void System::Net::Http::Headers::StringWithQualityHeaderValue::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::StringWithQualityHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::StringWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::StringWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "StringWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::StringWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::StringWithQualityHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::StringWithQualityHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "StringWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::StringWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals
bool System::Net::Http::Headers::StringWithQualityHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
int System::Net::Http::Headers::StringWithQualityHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
::StringW System::Net::Http::Headers::StringWithQualityHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::TransferCodingHeaderValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::TransferCodingHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::TransferCodingHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.get_Value
::StringW System::Net::Http::Headers::TransferCodingHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::TransferCodingHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse
bool System::Net::Http::Headers::TransferCodingHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.TryParseElement
bool System::Net::Http::Headers::TransferCodingHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::TransferCodingHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::TransferCodingHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.Equals
bool System::Net::Http::Headers::TransferCodingHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode
int System::Net::Http::Headers::TransferCodingHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.ToString
::StringW System::Net::Http::Headers::TransferCodingHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
#include "System/Net/Http/Headers/TransferCodingWithQualityHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ViaHeaderValue
#include "System/Net/Http/Headers/ViaHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Comment>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$Comment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::dyn_$Comment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Comment>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ProtocolName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProtocolName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ProtocolVersion>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolVersion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolVersion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProtocolVersion>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ReceivedBy>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ReceivedBy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::dyn_$ReceivedBy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceivedBy>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_Comment
::StringW System::Net::Http::Headers::ViaHeaderValue::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_Comment
void System::Net::Http::Headers::ViaHeaderValue::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ProtocolName
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ProtocolName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::get_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ProtocolName
void System::Net::Http::Headers::ViaHeaderValue::set_ProtocolName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::set_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ProtocolVersion
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ProtocolVersion
void System::Net::Http::Headers::ViaHeaderValue::set_ProtocolVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::set_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ReceivedBy
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ReceivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::get_ReceivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ReceivedBy
void System::Net::Http::Headers::ViaHeaderValue::set_ReceivedBy(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::set_ReceivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ViaHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.TryParse
bool System::Net::Http::Headers::ViaHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ViaHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ViaHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ViaHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.TryParseElement
bool System::Net::Http::Headers::ViaHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::ViaHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ViaHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ViaHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.Equals
bool System::Net::Http::Headers::ViaHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.GetHashCode
int System::Net::Http::Headers::ViaHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.ToString
::StringW System::Net::Http::Headers::ViaHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.WarningHeaderValue
#include "System/Net/Http/Headers/WarningHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Agent>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::WarningHeaderValue::dyn_$Agent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::dyn_$Agent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Agent>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Code>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::WarningHeaderValue::dyn_$Code$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::dyn_$Code$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Code>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTimeOffset>& System::Net::Http::Headers::WarningHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Text>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::WarningHeaderValue::dyn_$Text$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::dyn_$Text$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Text>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Agent
::StringW System::Net::Http::Headers::WarningHeaderValue::get_Agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::get_Agent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Agent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Agent
void System::Net::Http::Headers::WarningHeaderValue::set_Agent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::set_Agent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Agent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Code
int System::Net::Http::Headers::WarningHeaderValue::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Code
void System::Net::Http::Headers::WarningHeaderValue::set_Code(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::set_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Date
::System::Nullable_1<::System::DateTimeOffset> System::Net::Http::Headers::WarningHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Date
void System::Net::Http::Headers::WarningHeaderValue::set_Date(::System::Nullable_1<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Text
::StringW System::Net::Http::Headers::WarningHeaderValue::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Text
void System::Net::Http::Headers::WarningHeaderValue::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.IsCodeValid
bool System::Net::Http::Headers::WarningHeaderValue::IsCodeValid(int code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::IsCodeValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "IsCodeValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::WarningHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.TryParse
bool System::Net::Http::Headers::WarningHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::WarningHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::WarningHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.TryParseElement
bool System::Net::Http::Headers::WarningHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::WarningHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::WarningHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.Equals
bool System::Net::Http::Headers::WarningHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.GetHashCode
int System::Net::Http::Headers::WarningHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.ToString
::StringW System::Net::Http::Headers::WarningHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataContractAttribute
#include "System/Runtime/Serialization/DataContractAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReference
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataContractAttribute::dyn_isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataContractAttribute::dyn_isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataContractAttribute.get_IsReference
bool System::Runtime::Serialization::DataContractAttribute::get_IsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataContractAttribute::get_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataMemberAttribute
#include "System/Runtime/Serialization/DataMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Serialization::DataMemberAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated("Use field access instead!")]] int& System::Runtime::Serialization::DataMemberAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRequired
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emitDefaultValue
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emitDefaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Name
::StringW System::Runtime::Serialization::DataMemberAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Order
int System::Runtime::Serialization::DataMemberAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_IsRequired
bool System::Runtime::Serialization::DataMemberAttribute::get_IsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_IsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_EmitDefaultValue
bool System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmitDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.EnumMemberAttribute
#include "System/Runtime/Serialization/EnumMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Serialization::EnumMemberAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::EnumMemberAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.EnumMemberAttribute.get_Value
::StringW System::Runtime::Serialization::EnumMemberAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::EnumMemberAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.KnownTypeAttribute
#include "System/Runtime/Serialization/KnownTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Runtime::Serialization::KnownTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::KnownTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR___.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::System::Globalization::CultureInfo* culture, ::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, name, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.Cache.XPathDocumentNavigator
#include "MS/Internal/Xml/Cache/XPathDocumentNavigator.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageCurrent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageCurrent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxCurrent
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxCurrent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxParent
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.GetPositionHashCode
int MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Value
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NamespaceURI
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NameTable
::System::Xml::XmlNameTable* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_UnderlyingObject
::Il2CppObject* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.Clone
::System::Xml::XPath::XPathNavigator* MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToFirstNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace(::System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFirstNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceScope)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToNextNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace(::System::Xml::XPath::XPathNamespaceScope scope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scope)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, scope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToParent
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.IsSamePosition
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition(::System::Xml::XPath::XPathNavigator* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSamePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNode
#include "MS/Internal/Xml/Cache/XPathNode.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodeInfoAtom info
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::Cache::XPathNodeInfoAtom*& MS::Internal::Xml::Cache::XPathNode::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_info");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::Cache::XPathNodeInfoAtom**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSibling
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSibling"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxParent
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSimilar
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSimilar"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 posOffset
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_posOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_posOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posOffset"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 props
[[deprecated("Use field access instead!")]] uint& MS::Internal::Xml::Cache::XPathNode::dyn_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_props");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "props"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_NodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNode::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Document
::System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNode::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_PageInfo
::MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNode::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsXmlNamespaceNode
bool MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsXmlNamespaceNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasSibling
bool MS::Internal::Xml::Cache::XPathNode::get_HasSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasCollapsedText
bool MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasCollapsedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsText
bool MS::Internal::Xml::Cache::XPathNode::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasNamespaceDecls
bool MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasNamespaceDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Value
::StringW MS::Internal::Xml::Cache::XPathNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetParent
int MS::Internal::Xml::Cache::XPathNode::GetParent(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetSibling
int MS::Internal::Xml::Cache::XPathNode::GetSibling(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::GetSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeRef
#include "MS/Internal/Xml/Cache/XPathNodeRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] page
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeRef::dyn_page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::dyn_page");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "page"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idx
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Page
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeRef::get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::get_Page");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Page", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Index
int MS::Internal::Xml::Cache::XPathNodeRef::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef..ctor
// ABORTED elsewhere.  MS::Internal::Xml::Cache::XPathNodeRef::XPathNodeRef(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> page, int idx)
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.GetHashCode
int MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeHelper
#include "MS/Internal/Xml/Cache/XPathNodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocalNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocalNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetInScopeNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetInScopeNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetParent
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetParent(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocation
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageNode, int idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageNode, idxNode);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetTextFollowing
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageCurrent, ByRef<int> idxCurrent, ::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageEnd, int idxEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetTextFollowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageCurrent), ::il2cpp_utils::ExtractType(idxCurrent), ::il2cpp_utils::ExtractType(pageEnd), ::il2cpp_utils::ExtractType(idxEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageCurrent), byref(idxCurrent), pageEnd, idxEnd);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetNonDescendant
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetNonDescendant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pageNum
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeCount
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageNext
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNext"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_PageNumber
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NodeCount
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NextPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String localName
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String namespaceUri
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageSibling
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageSibling"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathDocument doc
[[deprecated("Use field access instead!")]] ::System::Xml::XPath::XPathDocument*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doc"))->offset;
  return *reinterpret_cast<::System::Xml::XPath::XPathDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodePageInfo pageInfo
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::Cache::XPathNodePageInfo*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageInfo"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::Cache::XPathNodePageInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_PageInfo
::MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_SiblingPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SiblingPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_ParentPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Document
::System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalAppContextSwitches
#include "System/LocalAppContextSwitches_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean DontThrowOnInvalidSurrogatePairs
bool System::LocalAppContextSwitches_::_get_DontThrowOnInvalidSurrogatePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches_::_get_DontThrowOnInvalidSurrogatePairs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "LocalAppContextSwitches", "DontThrowOnInvalidSurrogatePairs"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean DontThrowOnInvalidSurrogatePairs
void System::LocalAppContextSwitches_::_set_DontThrowOnInvalidSurrogatePairs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches_::_set_DontThrowOnInvalidSurrogatePairs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalAppContextSwitches", "DontThrowOnInvalidSurrogatePairs", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.AsyncHelper
#include "System/Xml/AsyncHelper.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task DoneTask
::System::Threading::Tasks::Task* System::Xml::AsyncHelper::_get_DoneTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task*>("System.Xml", "AsyncHelper", "DoneTask"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task DoneTask
void System::Xml::AsyncHelper::_set_DoneTask(::System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTask", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
::System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskTrue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
void System::Xml::AsyncHelper::_set_DoneTaskTrue(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskTrue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
::System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskFalse"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
void System::Xml::AsyncHelper::_set_DoneTaskFalse(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskFalse", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
::System::Threading::Tasks::Task_1<int>* System::Xml::AsyncHelper::_get_DoneTaskZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<int>*>("System.Xml", "AsyncHelper", "DoneTaskZero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
void System::Xml::AsyncHelper::_set_DoneTaskZero(::System::Threading::Tasks::Task_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskZero", value));
}
// Autogenerated method: System.Xml.AsyncHelper..cctor
void System::Xml::AsyncHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "AsyncHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Base64Encoder
#include "System/Xml/Base64Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] leftOverBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::Base64Encoder::dyn_leftOverBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_leftOverBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftOverBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 leftOverBytesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Base64Encoder::dyn_leftOverBytesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_leftOverBytesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftOverBytesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charsLine
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::Base64Encoder::dyn_charsLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_charsLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charsLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Base64Encoder.WriteChars
void System::Xml::Base64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Encode
void System::Xml::Base64Encoder::Encode(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Flush
void System::Xml::Base64Encoder::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlRawWriterBase64Encoder
#include "System/Xml/XmlRawWriterBase64Encoder.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlRawWriter rawWriter
[[deprecated("Use field access instead!")]] ::System::Xml::XmlRawWriter*& System::Xml::XmlRawWriterBase64Encoder::dyn_rawWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriterBase64Encoder::dyn_rawWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawWriter"))->offset;
  return *reinterpret_cast<::System::Xml::XmlRawWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlRawWriterBase64Encoder.WriteChars
void System::Xml::XmlRawWriterBase64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriterBase64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexDecoder
#include "System/Xml/BinHexDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::BinHexDecoder::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curIndex
[[deprecated("Use field access instead!")]] int& System::Xml::BinHexDecoder::dyn_curIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_curIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endIndex
[[deprecated("Use field access instead!")]] int& System::Xml::BinHexDecoder::dyn_endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasHalfByteCached
[[deprecated("Use field access instead!")]] bool& System::Xml::BinHexDecoder::dyn_hasHalfByteCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_hasHalfByteCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasHalfByteCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte cachedHalfByte
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::BinHexDecoder::dyn_cachedHalfByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_cachedHalfByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedHalfByte"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
::ArrayW<uint8_t> System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, bool allowOddChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(allowOddChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, allowOddChars);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
void System::Xml::BinHexDecoder::Decode(::Il2CppChar* pChars, ::Il2CppChar* pCharsEndPos, uint8_t* pBytes, uint8_t* pBytesEndPos, ByRef<bool> hasHalfByteCached, ByRef<uint8_t> cachedHalfByte, ByRef<int> charsDecoded, ByRef<int> bytesDecoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pChars), ::il2cpp_utils::ExtractType(pCharsEndPos), ::il2cpp_utils::ExtractType(pBytes), ::il2cpp_utils::ExtractType(pBytesEndPos), ::il2cpp_utils::ExtractType(hasHalfByteCached), ::il2cpp_utils::ExtractType(cachedHalfByte), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pChars, pCharsEndPos, pBytes, pBytesEndPos, byref(hasHalfByteCached), byref(cachedHalfByte), byref(charsDecoded), byref(bytesDecoded));
}
// Autogenerated method: System.Xml.BinHexDecoder.get_IsFull
bool System::Xml::BinHexDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
int System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexEncoder
#include "System/Xml/BinHexEncoder.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.BinHexEncoder.Encode
void System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> buffer, int index, int count, ::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, count, writer);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
::StringW System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
int System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count, ::ArrayW<::Il2CppChar> outArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(outArray)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count, outArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] bitStack
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Xml::BitStack::dyn_bitStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_bitStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitStack"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 stackPos
[[deprecated("Use field access instead!")]] int& System::Xml::BitStack::dyn_stackPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_stackPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stackPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 curr
[[deprecated("Use field access instead!")]] uint& System::Xml::BitStack::dyn_curr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_curr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curr"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BitStack.PushBit
void System::Xml::BitStack::PushBit(bool bit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PushBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bit);
}
// Autogenerated method: System.Xml.BitStack.PopBit
bool System::Xml::BitStack::PopBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PopBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PeekBit
bool System::Xml::BitStack::PeekBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PeekBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PushCurr
void System::Xml::BitStack::PushCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PushCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PopCurr
void System::Xml::BitStack::PopCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PopCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Bits
#include "System/Xml/Bits.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0101010101010101
uint System::Xml::Bits::_get_MASK_0101010101010101() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0101010101010101");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0101010101010101"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0101010101010101
void System::Xml::Bits::_set_MASK_0101010101010101(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0101010101010101");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0101010101010101", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0011001100110011
uint System::Xml::Bits::_get_MASK_0011001100110011() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0011001100110011");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0011001100110011"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0011001100110011
void System::Xml::Bits::_set_MASK_0011001100110011(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0011001100110011");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0011001100110011", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0000111100001111
uint System::Xml::Bits::_get_MASK_0000111100001111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0000111100001111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0000111100001111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0000111100001111
void System::Xml::Bits::_set_MASK_0000111100001111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0000111100001111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0000111100001111", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0000000011111111
uint System::Xml::Bits::_get_MASK_0000000011111111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0000000011111111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0000000011111111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0000000011111111
void System::Xml::Bits::_set_MASK_0000000011111111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0000000011111111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0000000011111111", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_1111111111111111
uint System::Xml::Bits::_get_MASK_1111111111111111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_1111111111111111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_1111111111111111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_1111111111111111
void System::Xml::Bits::_set_MASK_1111111111111111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_1111111111111111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_1111111111111111", value));
}
// Autogenerated method: System.Xml.Bits..cctor
void System::Xml::Bits::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Bits.Count
int System::Xml::Bits::Count(uint num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num);
}
// Autogenerated method: System.Xml.Bits.LeastPosition
int System::Xml::Bits::LeastPosition(uint num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::LeastPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", "LeastPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] stack
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::ByteStack::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 growthRate
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_growthRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_growthRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "growthRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 top
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "top"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 size
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.ByteStack.Push
void System::Xml::ByteStack::Push(uint8_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.ByteStack.Pop
uint8_t System::Xml::ByteStack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinaryCompatibility
#include "System/Xml/BinaryCompatibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _targetsAtLeast_Desktop_V4_5_2
bool System::Xml::BinaryCompatibility::_get__targetsAtLeast_Desktop_V4_5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::_get__targetsAtLeast_Desktop_V4_5_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Xml", "BinaryCompatibility", "_targetsAtLeast_Desktop_V4_5_2"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _targetsAtLeast_Desktop_V4_5_2
void System::Xml::BinaryCompatibility::_set__targetsAtLeast_Desktop_V4_5_2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::_set__targetsAtLeast_Desktop_V4_5_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinaryCompatibility", "_targetsAtLeast_Desktop_V4_5_2", value));
}
// Autogenerated method: System.Xml.BinaryCompatibility.get_TargetsAtLeast_Desktop_V4_5_2
bool System::Xml::BinaryCompatibility::get_TargetsAtLeast_Desktop_V4_5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::get_TargetsAtLeast_Desktop_V4_5_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", "get_TargetsAtLeast_Desktop_V4_5_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinaryCompatibility..cctor
void System::Xml::BinaryCompatibility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinaryCompatibility.RunningOnCheck
bool System::Xml::BinaryCompatibility::RunningOnCheck(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::RunningOnCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", "RunningOnCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
// Including type: System.Xml.CharEntityEncoderFallbackBuffer
#include "System/Xml/CharEntityEncoderFallbackBuffer.hpp"
// Including type: System.Text.EncoderFallbackBuffer
#include "System/Text/EncoderFallbackBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.CharEntityEncoderFallbackBuffer fallbackBuffer
[[deprecated("Use field access instead!")]] ::System::Xml::CharEntityEncoderFallbackBuffer*& System::Xml::CharEntityEncoderFallback::dyn_fallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_fallbackBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackBuffer"))->offset;
  return *reinterpret_cast<::System::Xml::CharEntityEncoderFallbackBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] textContentMarks
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Xml::CharEntityEncoderFallback::dyn_textContentMarks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_textContentMarks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textContentMarks"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkPos
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_endMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_endMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curMarkPos
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_curMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_curMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curMarkPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startOffset
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_startOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_startOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.set_StartOffset
void System::Xml::CharEntityEncoderFallback::set_StartOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::set_StartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.Reset
void System::Xml::CharEntityEncoderFallback::Reset(::ArrayW<int> textContentMarks, int endMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContentMarks), ::il2cpp_utils::ExtractType(endMarkPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textContentMarks, endMarkPos);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.CanReplaceAt
bool System::Xml::CharEntityEncoderFallback::CanReplaceAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::CanReplaceAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanReplaceAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.get_MaxCharCount
int System::Xml::CharEntityEncoderFallback::get_MaxCharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::get_MaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.CreateFallbackBuffer
::System::Text::EncoderFallbackBuffer* System::Xml::CharEntityEncoderFallback::CreateFallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::CreateFallbackBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFallbackBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::EncoderFallbackBuffer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.CharEntityEncoderFallbackBuffer
#include "System/Xml/CharEntityEncoderFallbackBuffer.hpp"
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.CharEntityEncoderFallback parent
[[deprecated("Use field access instead!")]] ::System::Xml::CharEntityEncoderFallback*& System::Xml::CharEntityEncoderFallbackBuffer::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::CharEntityEncoderFallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String charEntity
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEntity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charEntityIndex
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntityIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntityIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEntityIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.SurrogateCharToUtf32
int System::Xml::CharEntityEncoderFallbackBuffer::SurrogateCharToUtf32(::Il2CppChar highSurrogate, ::Il2CppChar lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::SurrogateCharToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SurrogateCharToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.get_Remaining
int System::Xml::CharEntityEncoderFallbackBuffer::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::get_Remaining");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Remaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Fallback
bool System::Xml::CharEntityEncoderFallbackBuffer::Fallback(::Il2CppChar charUnknown, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charUnknown), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, charUnknown, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Fallback
bool System::Xml::CharEntityEncoderFallbackBuffer::Fallback(::Il2CppChar charUnknownHigh, ::Il2CppChar charUnknownLow, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charUnknownHigh), ::il2cpp_utils::ExtractType(charUnknownLow), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, charUnknownHigh, charUnknownLow, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.GetNextChar
::Il2CppChar System::Xml::CharEntityEncoderFallbackBuffer::GetNextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::GetNextChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.MovePrevious
bool System::Xml::CharEntityEncoderFallbackBuffer::MovePrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::MovePrevious");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Reset
void System::Xml::CharEntityEncoderFallbackBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ConformanceLevel
#include "System/Xml/ConformanceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Auto
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Auto
void System::Xml::ConformanceLevel::_set_Auto(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Fragment
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Fragment
void System::Xml::ConformanceLevel::_set_Fragment(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Document
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Document
void System::Xml::ConformanceLevel::_set_Document(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Document", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::ConformanceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdProcessing
#include "System/Xml/DtdProcessing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Prohibit
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Prohibit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Prohibit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Prohibit"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Prohibit
void System::Xml::DtdProcessing::_set_Prohibit(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Prohibit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Prohibit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Ignore
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Ignore
void System::Xml::DtdProcessing::_set_Ignore(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Parse
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Parse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Parse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Parse
void System::Xml::DtdProcessing::_set_Parse(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Parse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Parse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdProcessing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.EntityHandling
#include "System/Xml/EntityHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.EntityHandling ExpandEntities
::System::Xml::EntityHandling System::Xml::EntityHandling::_get_ExpandEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_get_ExpandEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EntityHandling>("System.Xml", "EntityHandling", "ExpandEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.EntityHandling ExpandEntities
void System::Xml::EntityHandling::_set_ExpandEntities(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_set_ExpandEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "EntityHandling", "ExpandEntities", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.EntityHandling ExpandCharEntities
::System::Xml::EntityHandling System::Xml::EntityHandling::_get_ExpandCharEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_get_ExpandCharEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EntityHandling>("System.Xml", "EntityHandling", "ExpandCharEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.EntityHandling ExpandCharEntities
void System::Xml::EntityHandling::_set_ExpandCharEntities(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_set_ExpandCharEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "EntityHandling", "ExpandCharEntities", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::EntityHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlEncodedRawTextWriter
#include "System/Xml/HtmlEncodedRawTextWriter.hpp"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlEncodedRawTextWriter::_get_elementPropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_get_elementPropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlEncodedRawTextWriter", "elementPropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
void System::Xml::HtmlEncodedRawTextWriter::_set_elementPropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_set_elementPropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlEncodedRawTextWriter", "elementPropertySearch", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlEncodedRawTextWriter::_get_attributePropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_get_attributePropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlEncodedRawTextWriter", "attributePropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
void System::Xml::HtmlEncodedRawTextWriter::_set_attributePropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_set_attributePropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlEncodedRawTextWriter", "attributePropertySearch", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ByteStack elementScope
[[deprecated("Use field access instead!")]] ::System::Xml::ByteStack*& System::Xml::HtmlEncodedRawTextWriter::dyn_elementScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_elementScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementScope"))->offset;
  return *reinterpret_cast<::System::Xml::ByteStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ElementProperties currentElementProperties
[[deprecated("Use field access instead!")]] ::System::Xml::ElementProperties& System::Xml::HtmlEncodedRawTextWriter::dyn_currentElementProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_currentElementProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElementProperties"))->offset;
  return *reinterpret_cast<::System::Xml::ElementProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.AttributeProperties currentAttributeProperties
[[deprecated("Use field access instead!")]] ::System::Xml::AttributeProperties& System::Xml::HtmlEncodedRawTextWriter::dyn_currentAttributeProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_currentAttributeProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAttributeProperties"))->offset;
  return *reinterpret_cast<::System::Xml::AttributeProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean endsWithAmpersand
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriter::dyn_endsWithAmpersand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_endsWithAmpersand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endsWithAmpersand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] uriEscapingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::HtmlEncodedRawTextWriter::dyn_uriEscapingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_uriEscapingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uriEscapingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mediaType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlEncodedRawTextWriter::dyn_mediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_mediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doNotEscapeUriAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriter::dyn_doNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_doNotEscapeUriAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotEscapeUriAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.Init
void System::Xml::HtmlEncodedRawTextWriter::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteMetaElement
void System::Xml::HtmlEncodedRawTextWriter::WriteMetaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteMetaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlElementTextBlock
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeTextBlock
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeText
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteUriAttributeText
void System::Xml::HtmlEncodedRawTextWriter::WriteUriAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteUriAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUriAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.OutputRestAmps
void System::Xml::HtmlEncodedRawTextWriter::OutputRestAmps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::OutputRestAmps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutputRestAmps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteDocType
void System::Xml::HtmlEncodedRawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteStartElement
void System::Xml::HtmlEncodedRawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.StartElementContent
void System::Xml::HtmlEncodedRawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEndElement
void System::Xml::HtmlEncodedRawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteFullEndElement
void System::Xml::HtmlEncodedRawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteStartAttribute
void System::Xml::HtmlEncodedRawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEndAttribute
void System::Xml::HtmlEncodedRawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteProcessingInstruction
void System::Xml::HtmlEncodedRawTextWriter::WriteProcessingInstruction(::StringW target, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteString
void System::Xml::HtmlEncodedRawTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEntityRef
void System::Xml::HtmlEncodedRawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteCharEntity
void System::Xml::HtmlEncodedRawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteSurrogateCharEntity
void System::Xml::HtmlEncodedRawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteChars
void System::Xml::HtmlEncodedRawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlEncodedRawTextWriterIndent
#include "System/Xml/HtmlEncodedRawTextWriterIndent.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endBlockPos
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_endBlockPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_endBlockPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endBlockPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteIndent
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteDocType
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteStartElement
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.StartElementContent
void System::Xml::HtmlEncodedRawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteEndElement
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteStartAttribute
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.FlushBuffer
void System::Xml::HtmlEncodedRawTextWriterIndent::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.Init
void System::Xml::HtmlEncodedRawTextWriterIndent::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlTernaryTree
#include "System/Xml/HtmlTernaryTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Byte[] htmlElements
::ArrayW<uint8_t> System::Xml::HtmlTernaryTree::_get_htmlElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_get_htmlElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "HtmlTernaryTree", "htmlElements"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] htmlElements
void System::Xml::HtmlTernaryTree::_set_htmlElements(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_set_htmlElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlTernaryTree", "htmlElements", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte[] htmlAttributes
::ArrayW<uint8_t> System::Xml::HtmlTernaryTree::_get_htmlAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_get_htmlAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "HtmlTernaryTree", "htmlAttributes"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] htmlAttributes
void System::Xml::HtmlTernaryTree::_set_htmlAttributes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_set_htmlAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlTernaryTree", "htmlAttributes", value));
}
// Autogenerated method: System.Xml.HtmlTernaryTree..cctor
void System::Xml::HtmlTernaryTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "HtmlTernaryTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlUtf8RawTextWriter
#include "System/Xml/HtmlUtf8RawTextWriter.hpp"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlUtf8RawTextWriter::_get_elementPropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_get_elementPropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlUtf8RawTextWriter", "elementPropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
void System::Xml::HtmlUtf8RawTextWriter::_set_elementPropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_set_elementPropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlUtf8RawTextWriter", "elementPropertySearch", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlUtf8RawTextWriter::_get_attributePropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_get_attributePropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlUtf8RawTextWriter", "attributePropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
void System::Xml::HtmlUtf8RawTextWriter::_set_attributePropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_set_attributePropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlUtf8RawTextWriter", "attributePropertySearch", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ByteStack elementScope
[[deprecated("Use field access instead!")]] ::System::Xml::ByteStack*& System::Xml::HtmlUtf8RawTextWriter::dyn_elementScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_elementScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementScope"))->offset;
  return *reinterpret_cast<::System::Xml::ByteStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ElementProperties currentElementProperties
[[deprecated("Use field access instead!")]] ::System::Xml::ElementProperties& System::Xml::HtmlUtf8RawTextWriter::dyn_currentElementProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_currentElementProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElementProperties"))->offset;
  return *reinterpret_cast<::System::Xml::ElementProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.AttributeProperties currentAttributeProperties
[[deprecated("Use field access instead!")]] ::System::Xml::AttributeProperties& System::Xml::HtmlUtf8RawTextWriter::dyn_currentAttributeProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_currentAttributeProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAttributeProperties"))->offset;
  return *reinterpret_cast<::System::Xml::AttributeProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean endsWithAmpersand
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriter::dyn_endsWithAmpersand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_endsWithAmpersand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endsWithAmpersand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] uriEscapingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::HtmlUtf8RawTextWriter::dyn_uriEscapingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_uriEscapingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uriEscapingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mediaType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlUtf8RawTextWriter::dyn_mediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_mediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doNotEscapeUriAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriter::dyn_doNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_doNotEscapeUriAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotEscapeUriAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.Init
void System::Xml::HtmlUtf8RawTextWriter::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteMetaElement
void System::Xml::HtmlUtf8RawTextWriter::WriteMetaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteMetaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlElementTextBlock
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeTextBlock
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeText
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteUriAttributeText
void System::Xml::HtmlUtf8RawTextWriter::WriteUriAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteUriAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUriAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.OutputRestAmps
void System::Xml::HtmlUtf8RawTextWriter::OutputRestAmps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::OutputRestAmps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutputRestAmps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteDocType
void System::Xml::HtmlUtf8RawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteStartElement
void System::Xml::HtmlUtf8RawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.StartElementContent
void System::Xml::HtmlUtf8RawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEndElement
void System::Xml::HtmlUtf8RawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteFullEndElement
void System::Xml::HtmlUtf8RawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteStartAttribute
void System::Xml::HtmlUtf8RawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEndAttribute
void System::Xml::HtmlUtf8RawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteProcessingInstruction
void System::Xml::HtmlUtf8RawTextWriter::WriteProcessingInstruction(::StringW target, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteString
void System::Xml::HtmlUtf8RawTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEntityRef
void System::Xml::HtmlUtf8RawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteCharEntity
void System::Xml::HtmlUtf8RawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteSurrogateCharEntity
void System::Xml::HtmlUtf8RawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteChars
void System::Xml::HtmlUtf8RawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlUtf8RawTextWriterIndent
#include "System/Xml/HtmlUtf8RawTextWriterIndent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endBlockPos
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_endBlockPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_endBlockPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endBlockPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteIndent
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteDocType
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteStartElement
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.StartElementContent
void System::Xml::HtmlUtf8RawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteEndElement
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteStartAttribute
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.FlushBuffer
void System::Xml::HtmlUtf8RawTextWriterIndent::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.Init
void System::Xml::HtmlUtf8RawTextWriterIndent::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdInfo.get_Name
::System::Xml::XmlQualifiedName* System::Xml::IDtdInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_InternalDtdSubset
::StringW System::Xml::IDtdInfo::get_InternalDtdSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_InternalDtdSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalDtdSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_HasDefaultAttributes
bool System::Xml::IDtdInfo::get_HasDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_HasDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDefaultAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_HasNonCDataAttributes
bool System::Xml::IDtdInfo::get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasNonCDataAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.LookupAttributeList
::System::Xml::IDtdAttributeListInfo* System::Xml::IDtdInfo::LookupAttributeList(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::LookupAttributeList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupAttributeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeListInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.IDtdInfo.LookupEntity
::System::Xml::IDtdEntityInfo* System::Xml::IDtdInfo::LookupEntity(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::LookupEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdEntityInfo*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdAttributeListInfo.get_HasNonCDataAttributes
bool System::Xml::IDtdAttributeListInfo::get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasNonCDataAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeListInfo.LookupAttribute
::System::Xml::IDtdAttributeInfo* System::Xml::IDtdAttributeListInfo::LookupAttribute(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::LookupAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes
::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>* System::Xml::IDtdAttributeListInfo::LookupDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::LookupDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupDefaultAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_Prefix
::StringW System::Xml::IDtdAttributeInfo::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LocalName
::StringW System::Xml::IDtdAttributeInfo::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LineNumber
int System::Xml::IDtdAttributeInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LinePosition
int System::Xml::IDtdAttributeInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsNonCDataType
bool System::Xml::IDtdAttributeInfo::get_IsNonCDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsNonCDataType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNonCDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsDeclaredInExternal
bool System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsXmlAttribute
bool System::Xml::IDtdAttributeInfo::get_IsXmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsXmlAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsXmlAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueExpanded
::StringW System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueExpanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueTyped
::Il2CppObject* System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueTyped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_ValueLineNumber
int System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_ValueLinePosition
int System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueLinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdEntityInfo.get_Name
::StringW System::Xml::IDtdEntityInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsExternal
bool System::Xml::IDtdEntityInfo::get_IsExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsExternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsDeclaredInExternal
bool System::Xml::IDtdEntityInfo::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsUnparsedEntity
bool System::Xml::IDtdEntityInfo::get_IsUnparsedEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsUnparsedEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnparsedEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsParameterEntity
bool System::Xml::IDtdEntityInfo::get_IsParameterEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsParameterEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsParameterEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_BaseUriString
::StringW System::Xml::IDtdEntityInfo::get_BaseUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_BaseUriString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_DeclaredUriString
::StringW System::Xml::IDtdEntityInfo::get_DeclaredUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_DeclaredUriString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaredUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_SystemId
::StringW System::Xml::IDtdEntityInfo::get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_SystemId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_PublicId
::StringW System::Xml::IDtdEntityInfo::get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_PublicId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_Text
::StringW System::Xml::IDtdEntityInfo::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_Text");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_LineNumber
int System::Xml::IDtdEntityInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_LinePosition
int System::Xml::IDtdEntityInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParser
#include "System/Xml/IDtdParser.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParser.ParseInternalDtd
::System::Xml::IDtdInfo* System::Xml::IDtdParser::ParseInternalDtd(::System::Xml::IDtdParserAdapter* adapter, bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParser::ParseInternalDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInternalDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adapter), ::il2cpp_utils::ExtractType(saveInternalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, adapter, saveInternalSubset);
}
// Autogenerated method: System.Xml.IDtdParser.ParseFreeFloatingDtd
::System::Xml::IDtdInfo* System::Xml::IDtdParser::ParseFreeFloatingDtd(::StringW baseUri, ::StringW docTypeName, ::StringW publicId, ::StringW systemId, ::StringW internalSubset, ::System::Xml::IDtdParserAdapter* adapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParser::ParseFreeFloatingDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFreeFloatingDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(docTypeName), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset), ::il2cpp_utils::ExtractType(adapter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
// Including type: System.Xml.LineInfo
#include "System/Xml/LineInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParserAdapter.get_NameTable
::System::Xml::XmlNameTable* System::Xml::IDtdParserAdapter::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_NamespaceResolver
::System::Xml::IXmlNamespaceResolver* System::Xml::IDtdParserAdapter::get_NamespaceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IXmlNamespaceResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_BaseUri
::System::Uri* System::Xml::IDtdParserAdapter::get_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_BaseUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_ParsingBuffer
::ArrayW<::Il2CppChar> System::Xml::IDtdParserAdapter::get_ParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_ParsingBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_ParsingBufferLength
int System::Xml::IDtdParserAdapter::get_ParsingBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_ParsingBufferLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_CurrentPosition
int System::Xml::IDtdParserAdapter::get_CurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.set_CurrentPosition
void System::Xml::IDtdParserAdapter::set_CurrentPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::set_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_LineNo
int System::Xml::IDtdParserAdapter::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_LineNo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_LineStartPosition
int System::Xml::IDtdParserAdapter::get_LineStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_LineStartPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineStartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_IsEof
bool System::Xml::IDtdParserAdapter::get_IsEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_IsEof");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_EntityStackLength
int System::Xml::IDtdParserAdapter::get_EntityStackLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_EntityStackLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityStackLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_IsEntityEolNormalized
bool System::Xml::IDtdParserAdapter::get_IsEntityEolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_IsEntityEolNormalized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEntityEolNormalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ReadData
int System::Xml::IDtdParserAdapter::ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ReadData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnNewLine
void System::Xml::IDtdParserAdapter::OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnNewLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseNumericCharRef
int System::Xml::IDtdParserAdapter::ParseNumericCharRef(::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseNumericCharRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumericCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseNamedCharRef
int System::Xml::IDtdParserAdapter::ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseNamedCharRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNamedCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParsePI
void System::Xml::IDtdParserAdapter::ParsePI(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParsePI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseComment
void System::Xml::IDtdParserAdapter::ParseComment(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushEntity
bool System::Xml::IDtdParserAdapter::PushEntity(::System::Xml::IDtdEntityInfo* entity, ByRef<int> entityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity, byref(entityId));
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PopEntity
bool System::Xml::IDtdParserAdapter::PopEntity(ByRef<::System::Xml::IDtdEntityInfo*> oldEntity, ByRef<int> newEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PopEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Xml::IDtdEntityInfo*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(oldEntity), byref(newEntityId));
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushExternalSubset
bool System::Xml::IDtdParserAdapter::PushExternalSubset(::StringW systemId, ::StringW publicId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushExternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushExternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(publicId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, systemId, publicId);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushInternalDtd
void System::Xml::IDtdParserAdapter::PushInternalDtd(::StringW baseUri, ::StringW internalDtd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushInternalDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushInternalDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(internalDtd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, internalDtd);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnSystemId
void System::Xml::IDtdParserAdapter::OnSystemId(::StringW systemId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo systemLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnSystemId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(systemLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, systemId, keywordLineInfo, systemLiteralLineInfo);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnPublicId
void System::Xml::IDtdParserAdapter::OnPublicId(::StringW publicId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo publicLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnPublicId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(publicLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, keywordLineInfo, publicLiteralLineInfo);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.Throw
void System::Xml::IDtdParserAdapter::Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::Throw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParserAdapterWithValidation
#include "System/Xml/IDtdParserAdapterWithValidation.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParserAdapterWithValidation.get_DtdValidation
bool System::Xml::IDtdParserAdapterWithValidation::get_DtdValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterWithValidation::get_DtdValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapterWithValidation.get_ValidationEventHandling
::System::Xml::IValidationEventHandling* System::Xml::IDtdParserAdapterWithValidation::get_ValidationEventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterWithValidation::get_ValidationEventHandling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidationEventHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IValidationEventHandling*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParserAdapterV1
#include "System/Xml/IDtdParserAdapterV1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParserAdapterV1.get_V1CompatibilityMode
bool System::Xml::IDtdParserAdapterV1::get_V1CompatibilityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterV1::get_V1CompatibilityMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_V1CompatibilityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapterV1.get_Normalization
bool System::Xml::IDtdParserAdapterV1::get_Normalization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterV1::get_Normalization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Normalization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapterV1.get_Namespaces
bool System::Xml::IDtdParserAdapterV1::get_Namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterV1::get_Namespaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.OnRemoveWriter
#include "System/Xml/OnRemoveWriter.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.OnRemoveWriter.Invoke
void System::Xml::OnRemoveWriter::Invoke(::System::Xml::XmlRawWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::OnRemoveWriter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.OnRemoveWriter.BeginInvoke
::System::IAsyncResult* System::Xml::OnRemoveWriter::BeginInvoke(::System::Xml::XmlRawWriter* writer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::OnRemoveWriter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, writer, callback, object);
}
// Autogenerated method: System.Xml.OnRemoveWriter.EndInvoke
void System::Xml::OnRemoveWriter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::OnRemoveWriter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IValidationEventHandling.SendEvent
void System::Xml::IValidationEventHandling::SendEvent(::System::Exception* exception, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IValidationEventHandling::SendEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, severity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IncrementalReadDecoder
#include "System/Xml/IncrementalReadDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IncrementalReadDecoder.get_IsFull
bool System::Xml::IncrementalReadDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IncrementalReadDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IncrementalReadDecoder.Decode
int System::Xml::IncrementalReadDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IncrementalReadDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IncrementalReadDummyDecoder
#include "System/Xml/IncrementalReadDummyDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IncrementalReadDummyDecoder.get_IsFull
bool System::Xml::IncrementalReadDummyDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IncrementalReadDummyDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IncrementalReadDummyDecoder.Decode
int System::Xml::IncrementalReadDummyDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IncrementalReadDummyDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.NamespaceHandling
#include "System/Xml/NamespaceHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.NamespaceHandling Default
::System::Xml::NamespaceHandling System::Xml::NamespaceHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NamespaceHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::NamespaceHandling>("System.Xml", "NamespaceHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NamespaceHandling Default
void System::Xml::NamespaceHandling::_set_Default(::System::Xml::NamespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NamespaceHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NamespaceHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.NamespaceHandling OmitDuplicates
::System::Xml::NamespaceHandling System::Xml::NamespaceHandling::_get_OmitDuplicates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NamespaceHandling::_get_OmitDuplicates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::NamespaceHandling>("System.Xml", "NamespaceHandling", "OmitDuplicates"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NamespaceHandling OmitDuplicates
void System::Xml::NamespaceHandling::_set_OmitDuplicates(::System::Xml::NamespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NamespaceHandling::_set_OmitDuplicates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NamespaceHandling", "OmitDuplicates", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::NamespaceHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NamespaceHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.NewLineHandling
#include "System/Xml/NewLineHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.NewLineHandling Replace
::System::Xml::NewLineHandling System::Xml::NewLineHandling::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NewLineHandling::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::NewLineHandling>("System.Xml", "NewLineHandling", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NewLineHandling Replace
void System::Xml::NewLineHandling::_set_Replace(::System::Xml::NewLineHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NewLineHandling::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NewLineHandling", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.NewLineHandling Entitize
::System::Xml::NewLineHandling System::Xml::NewLineHandling::_get_Entitize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NewLineHandling::_get_Entitize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::NewLineHandling>("System.Xml", "NewLineHandling", "Entitize"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NewLineHandling Entitize
void System::Xml::NewLineHandling::_set_Entitize(::System::Xml::NewLineHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NewLineHandling::_set_Entitize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NewLineHandling", "Entitize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.NewLineHandling None
::System::Xml::NewLineHandling System::Xml::NewLineHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NewLineHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::NewLineHandling>("System.Xml", "NewLineHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NewLineHandling None
void System::Xml::NewLineHandling::_set_None(::System::Xml::NewLineHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NewLineHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NewLineHandling", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::NewLineHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NewLineHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.QueryOutputWriter
#include "System/Xml/QueryOutputWriter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlRawWriter wrapped
[[deprecated("Use field access instead!")]] ::System::Xml::XmlRawWriter*& System::Xml::QueryOutputWriter::dyn_wrapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_wrapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wrapped"))->offset;
  return *reinterpret_cast<::System::Xml::XmlRawWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inCDataSection
[[deprecated("Use field access instead!")]] bool& System::Xml::QueryOutputWriter::dyn_inCDataSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_inCDataSection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inCDataSection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Int32> lookupCDataElems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, int>*& System::Xml::QueryOutputWriter::dyn_lookupCDataElems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_lookupCDataElems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookupCDataElems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.BitStack bitsCData
[[deprecated("Use field access instead!")]] ::System::Xml::BitStack*& System::Xml::QueryOutputWriter::dyn_bitsCData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_bitsCData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitsCData"))->offset;
  return *reinterpret_cast<::System::Xml::BitStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qnameCData
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::QueryOutputWriter::dyn_qnameCData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_qnameCData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnameCData"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean outputDocType
[[deprecated("Use field access instead!")]] bool& System::Xml::QueryOutputWriter::dyn_outputDocType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_outputDocType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputDocType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkWellFormedDoc
[[deprecated("Use field access instead!")]] bool& System::Xml::QueryOutputWriter::dyn_checkWellFormedDoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_checkWellFormedDoc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkWellFormedDoc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasDocElem
[[deprecated("Use field access instead!")]] bool& System::Xml::QueryOutputWriter::dyn_hasDocElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_hasDocElem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasDocElem"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inAttr
[[deprecated("Use field access instead!")]] bool& System::Xml::QueryOutputWriter::dyn_inAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_inAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inAttr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::QueryOutputWriter::dyn_systemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_systemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String publicId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::QueryOutputWriter::dyn_publicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_publicId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 depth
[[deprecated("Use field access instead!")]] int& System::Xml::QueryOutputWriter::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.QueryOutputWriter.StartCDataSection
bool System::Xml::QueryOutputWriter::StartCDataSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::StartCDataSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.EndCDataSection
void System::Xml::QueryOutputWriter::EndCDataSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::EndCDataSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.set_NamespaceResolver
void System::Xml::QueryOutputWriter::set_NamespaceResolver(::System::Xml::IXmlNamespaceResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::set_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.QueryOutputWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::QueryOutputWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteXmlDeclaration
void System::Xml::QueryOutputWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteXmlDeclaration
void System::Xml::QueryOutputWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteDocType
void System::Xml::QueryOutputWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteStartElement
void System::Xml::QueryOutputWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteEndElement
void System::Xml::QueryOutputWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteFullEndElement
void System::Xml::QueryOutputWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.StartElementContent
void System::Xml::QueryOutputWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteStartAttribute
void System::Xml::QueryOutputWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteEndAttribute
void System::Xml::QueryOutputWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteNamespaceDeclaration
void System::Xml::QueryOutputWriter::WriteNamespaceDeclaration(::StringW prefix, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteStartNamespaceDeclaration
void System::Xml::QueryOutputWriter::WriteStartNamespaceDeclaration(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteEndNamespaceDeclaration
void System::Xml::QueryOutputWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteCData
void System::Xml::QueryOutputWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteComment
void System::Xml::QueryOutputWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteProcessingInstruction
void System::Xml::QueryOutputWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteWhitespace
void System::Xml::QueryOutputWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteString
void System::Xml::QueryOutputWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteChars
void System::Xml::QueryOutputWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteEntityRef
void System::Xml::QueryOutputWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteCharEntity
void System::Xml::QueryOutputWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteSurrogateCharEntity
void System::Xml::QueryOutputWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteRaw
void System::Xml::QueryOutputWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteRaw
void System::Xml::QueryOutputWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.QueryOutputWriter.Close
void System::Xml::QueryOutputWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.Flush
void System::Xml::QueryOutputWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::QueryOutputWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ElementProperties
#include "System/Xml/ElementProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties DEFAULT
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties DEFAULT
void System::Xml::ElementProperties::_set_DEFAULT(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties URI_PARENT
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_URI_PARENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_URI_PARENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "URI_PARENT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties URI_PARENT
void System::Xml::ElementProperties::_set_URI_PARENT(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_URI_PARENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "URI_PARENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties BOOL_PARENT
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_BOOL_PARENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_BOOL_PARENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "BOOL_PARENT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties BOOL_PARENT
void System::Xml::ElementProperties::_set_BOOL_PARENT(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_BOOL_PARENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "BOOL_PARENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties NAME_PARENT
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_NAME_PARENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_NAME_PARENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "NAME_PARENT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties NAME_PARENT
void System::Xml::ElementProperties::_set_NAME_PARENT(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_NAME_PARENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "NAME_PARENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties EMPTY
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties EMPTY
void System::Xml::ElementProperties::_set_EMPTY(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties NO_ENTITIES
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_NO_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_NO_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "NO_ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties NO_ENTITIES
void System::Xml::ElementProperties::_set_NO_ENTITIES(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_NO_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "NO_ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties HEAD
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_HEAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_HEAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "HEAD"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties HEAD
void System::Xml::ElementProperties::_set_HEAD(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_HEAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "HEAD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties BLOCK_WS
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_BLOCK_WS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_BLOCK_WS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "BLOCK_WS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties BLOCK_WS
void System::Xml::ElementProperties::_set_BLOCK_WS(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_BLOCK_WS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "BLOCK_WS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties HAS_NS
::System::Xml::ElementProperties System::Xml::ElementProperties::_get_HAS_NS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_get_HAS_NS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ElementProperties>("System.Xml", "ElementProperties", "HAS_NS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties HAS_NS
void System::Xml::ElementProperties::_set_HAS_NS(::System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::_set_HAS_NS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "HAS_NS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& System::Xml::ElementProperties::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ElementProperties::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.AttributeProperties
#include "System/Xml/AttributeProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.AttributeProperties DEFAULT
::System::Xml::AttributeProperties System::Xml::AttributeProperties::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::AttributeProperties>("System.Xml", "AttributeProperties", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.AttributeProperties DEFAULT
void System::Xml::AttributeProperties::_set_DEFAULT(::System::Xml::AttributeProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AttributeProperties", "DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.AttributeProperties URI
::System::Xml::AttributeProperties System::Xml::AttributeProperties::_get_URI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::_get_URI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::AttributeProperties>("System.Xml", "AttributeProperties", "URI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.AttributeProperties URI
void System::Xml::AttributeProperties::_set_URI(::System::Xml::AttributeProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::_set_URI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AttributeProperties", "URI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.AttributeProperties BOOLEAN
::System::Xml::AttributeProperties System::Xml::AttributeProperties::_get_BOOLEAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::_get_BOOLEAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::AttributeProperties>("System.Xml", "AttributeProperties", "BOOLEAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.AttributeProperties BOOLEAN
void System::Xml::AttributeProperties::_set_BOOLEAN(::System::Xml::AttributeProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::_set_BOOLEAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AttributeProperties", "BOOLEAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.AttributeProperties NAME
::System::Xml::AttributeProperties System::Xml::AttributeProperties::_get_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::_get_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::AttributeProperties>("System.Xml", "AttributeProperties", "NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.AttributeProperties NAME
void System::Xml::AttributeProperties::_set_NAME(::System::Xml::AttributeProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::_set_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AttributeProperties", "NAME", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& System::Xml::AttributeProperties::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AttributeProperties::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] nodeBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::TernaryTreeReadOnly::dyn_nodeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TernaryTreeReadOnly::dyn_nodeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.TernaryTreeReadOnly.FindCaseInsensitiveString
uint8_t System::Xml::TernaryTreeReadOnly::FindCaseInsensitiveString(::StringW stringToFind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TernaryTreeReadOnly::FindCaseInsensitiveString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCaseInsensitiveString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToFind)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, stringToFind);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ReadState
#include "System/Xml/ReadState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState Initial
::System::Xml::ReadState System::Xml::ReadState::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState Initial
void System::Xml::ReadState::_set_Initial(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState Interactive
::System::Xml::ReadState System::Xml::ReadState::_get_Interactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_Interactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "Interactive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState Interactive
void System::Xml::ReadState::_set_Interactive(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_Interactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "Interactive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState Error
::System::Xml::ReadState System::Xml::ReadState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState Error
void System::Xml::ReadState::_set_Error(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState EndOfFile
::System::Xml::ReadState System::Xml::ReadState::_get_EndOfFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_EndOfFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "EndOfFile"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState EndOfFile
void System::Xml::ReadState::_set_EndOfFile(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_EndOfFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "EndOfFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState Closed
::System::Xml::ReadState System::Xml::ReadState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState Closed
void System::Xml::ReadState::_set_Closed(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "Closed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::ReadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
// Including type: System.Xml.SecureStringHasher/System.Xml.HashCodeOfStringDelegate
#include "System/Xml/SecureStringHasher_HashCodeOfStringDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.SecureStringHasher/System.Xml.HashCodeOfStringDelegate hashCodeDelegate
::System::Xml::SecureStringHasher::HashCodeOfStringDelegate* System::Xml::SecureStringHasher::_get_hashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::_get_hashCodeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::SecureStringHasher::HashCodeOfStringDelegate*>("System.Xml", "SecureStringHasher", "hashCodeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.SecureStringHasher/System.Xml.HashCodeOfStringDelegate hashCodeDelegate
void System::Xml::SecureStringHasher::_set_hashCodeDelegate(::System::Xml::SecureStringHasher::HashCodeOfStringDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::_set_hashCodeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "SecureStringHasher", "hashCodeDelegate", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCodeRandomizer
[[deprecated("Use field access instead!")]] int& System::Xml::SecureStringHasher::dyn_hashCodeRandomizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::dyn_hashCodeRandomizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCodeRandomizer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.SecureStringHasher.Equals
bool System::Xml::SecureStringHasher::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Xml.SecureStringHasher.GetHashCode
int System::Xml::SecureStringHasher::GetHashCode(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Xml.SecureStringHasher.GetHashCodeOfString
int System::Xml::SecureStringHasher::GetHashCodeOfString(::StringW key, int sLen, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "SecureStringHasher", "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, sLen, additionalEntropy);
}
// Autogenerated method: System.Xml.SecureStringHasher.GetHashCodeDelegate
::System::Xml::SecureStringHasher::HashCodeOfStringDelegate* System::Xml::SecureStringHasher::GetHashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::GetHashCodeDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "SecureStringHasher", "GetHashCodeDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::SecureStringHasher::HashCodeOfStringDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.SecureStringHasher/System.Xml.HashCodeOfStringDelegate
#include "System/Xml/SecureStringHasher_HashCodeOfStringDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.SecureStringHasher/System.Xml.HashCodeOfStringDelegate.Invoke
int System::Xml::SecureStringHasher::HashCodeOfStringDelegate::Invoke(::StringW s, int sLen, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::HashCodeOfStringDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, sLen, additionalEntropy);
}
// Autogenerated method: System.Xml.SecureStringHasher/System.Xml.HashCodeOfStringDelegate.BeginInvoke
::System::IAsyncResult* System::Xml::SecureStringHasher::HashCodeOfStringDelegate::BeginInvoke(::StringW s, int sLen, int64_t additionalEntropy, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::HashCodeOfStringDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, s, sLen, additionalEntropy, callback, object);
}
// Autogenerated method: System.Xml.SecureStringHasher/System.Xml.HashCodeOfStringDelegate.EndInvoke
int System::Xml::SecureStringHasher::HashCodeOfStringDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SecureStringHasher::HashCodeOfStringDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.TextEncodedRawTextWriter
#include "System/Xml/TextEncodedRawTextWriter.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::TextEncodedRawTextWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::TextEncodedRawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::TextEncodedRawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteDocType
void System::Xml::TextEncodedRawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteStartElement
void System::Xml::TextEncodedRawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteEndElement
void System::Xml::TextEncodedRawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteFullEndElement
void System::Xml::TextEncodedRawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.StartElementContent
void System::Xml::TextEncodedRawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteStartAttribute
void System::Xml::TextEncodedRawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteEndAttribute
void System::Xml::TextEncodedRawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteNamespaceDeclaration
void System::Xml::TextEncodedRawTextWriter::WriteNamespaceDeclaration(::StringW prefix, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteCData
void System::Xml::TextEncodedRawTextWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteComment
void System::Xml::TextEncodedRawTextWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteProcessingInstruction
void System::Xml::TextEncodedRawTextWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteEntityRef
void System::Xml::TextEncodedRawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteCharEntity
void System::Xml::TextEncodedRawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteSurrogateCharEntity
void System::Xml::TextEncodedRawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteWhitespace
void System::Xml::TextEncodedRawTextWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteString
void System::Xml::TextEncodedRawTextWriter::WriteString(::StringW textBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textBlock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textBlock);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteChars
void System::Xml::TextEncodedRawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteRaw
void System::Xml::TextEncodedRawTextWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteRaw
void System::Xml::TextEncodedRawTextWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextEncodedRawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.TextUtf8RawTextWriter
#include "System/Xml/TextUtf8RawTextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::TextUtf8RawTextWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::TextUtf8RawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::TextUtf8RawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteDocType
void System::Xml::TextUtf8RawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteStartElement
void System::Xml::TextUtf8RawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteEndElement
void System::Xml::TextUtf8RawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteFullEndElement
void System::Xml::TextUtf8RawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.StartElementContent
void System::Xml::TextUtf8RawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteStartAttribute
void System::Xml::TextUtf8RawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteEndAttribute
void System::Xml::TextUtf8RawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteNamespaceDeclaration
void System::Xml::TextUtf8RawTextWriter::WriteNamespaceDeclaration(::StringW prefix, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteCData
void System::Xml::TextUtf8RawTextWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteComment
void System::Xml::TextUtf8RawTextWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteProcessingInstruction
void System::Xml::TextUtf8RawTextWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteEntityRef
void System::Xml::TextUtf8RawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteCharEntity
void System::Xml::TextUtf8RawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteSurrogateCharEntity
void System::Xml::TextUtf8RawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteWhitespace
void System::Xml::TextUtf8RawTextWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteString
void System::Xml::TextUtf8RawTextWriter::WriteString(::StringW textBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textBlock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textBlock);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteChars
void System::Xml::TextUtf8RawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteRaw
void System::Xml::TextUtf8RawTextWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteRaw
void System::Xml::TextUtf8RawTextWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TextUtf8RawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ValidationType
#include "System/Xml/ValidationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ValidationType None
::System::Xml::ValidationType System::Xml::ValidationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ValidationType>("System.Xml", "ValidationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ValidationType None
void System::Xml::ValidationType::_set_None(::System::Xml::ValidationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ValidationType", "None", value));
}
// [ObsoleteAttribute] Offset: 0x10878A0
// Autogenerated static field getter
// Get static field: static public System.Xml.ValidationType Auto
::System::Xml::ValidationType System::Xml::ValidationType::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ValidationType>("System.Xml", "ValidationType", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ValidationType Auto
void System::Xml::ValidationType::_set_Auto(::System::Xml::ValidationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ValidationType", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ValidationType DTD
::System::Xml::ValidationType System::Xml::ValidationType::_get_DTD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_get_DTD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ValidationType>("System.Xml", "ValidationType", "DTD"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ValidationType DTD
void System::Xml::ValidationType::_set_DTD(::System::Xml::ValidationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_set_DTD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ValidationType", "DTD", value));
}
// [ObsoleteAttribute] Offset: 0x10878D8
// Autogenerated static field getter
// Get static field: static public System.Xml.ValidationType XDR
::System::Xml::ValidationType System::Xml::ValidationType::_get_XDR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_get_XDR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ValidationType>("System.Xml", "ValidationType", "XDR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ValidationType XDR
void System::Xml::ValidationType::_set_XDR(::System::Xml::ValidationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_set_XDR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ValidationType", "XDR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ValidationType Schema
::System::Xml::ValidationType System::Xml::ValidationType::_get_Schema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_get_Schema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ValidationType>("System.Xml", "ValidationType", "Schema"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ValidationType Schema
void System::Xml::ValidationType::_set_Schema(::System::Xml::ValidationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::_set_Schema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ValidationType", "Schema", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::ValidationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.WhitespaceHandling
#include "System/Xml/WhitespaceHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.WhitespaceHandling All
::System::Xml::WhitespaceHandling System::Xml::WhitespaceHandling::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WhitespaceHandling>("System.Xml", "WhitespaceHandling", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WhitespaceHandling All
void System::Xml::WhitespaceHandling::_set_All(::System::Xml::WhitespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WhitespaceHandling", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WhitespaceHandling Significant
::System::Xml::WhitespaceHandling System::Xml::WhitespaceHandling::_get_Significant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_get_Significant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WhitespaceHandling>("System.Xml", "WhitespaceHandling", "Significant"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WhitespaceHandling Significant
void System::Xml::WhitespaceHandling::_set_Significant(::System::Xml::WhitespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_set_Significant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WhitespaceHandling", "Significant", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WhitespaceHandling None
::System::Xml::WhitespaceHandling System::Xml::WhitespaceHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WhitespaceHandling>("System.Xml", "WhitespaceHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WhitespaceHandling None
void System::Xml::WhitespaceHandling::_set_None(::System::Xml::WhitespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WhitespaceHandling", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::WhitespaceHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlAsyncCheckWriter
#include "System/Xml/XmlAsyncCheckWriter.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlWriter coreWriter
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWriter*& System::Xml::XmlAsyncCheckWriter::dyn_coreWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::dyn_coreWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coreWriter"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task lastTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Xml::XmlAsyncCheckWriter::dyn_lastTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::dyn_lastTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.CheckAsync
void System::Xml::XmlAsyncCheckWriter::CheckAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::CheckAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.get_WriteState
::System::Xml::WriteState System::Xml::XmlAsyncCheckWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteStartDocument
void System::Xml::XmlAsyncCheckWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteStartDocument
void System::Xml::XmlAsyncCheckWriter::WriteStartDocument(bool standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteEndDocument
void System::Xml::XmlAsyncCheckWriter::WriteEndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteEndDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteDocType
void System::Xml::XmlAsyncCheckWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteStartElement
void System::Xml::XmlAsyncCheckWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteEndElement
void System::Xml::XmlAsyncCheckWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteFullEndElement
void System::Xml::XmlAsyncCheckWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteStartAttribute
void System::Xml::XmlAsyncCheckWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteEndAttribute
void System::Xml::XmlAsyncCheckWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteCData
void System::Xml::XmlAsyncCheckWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteComment
void System::Xml::XmlAsyncCheckWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteProcessingInstruction
void System::Xml::XmlAsyncCheckWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteEntityRef
void System::Xml::XmlAsyncCheckWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteCharEntity
void System::Xml::XmlAsyncCheckWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteWhitespace
void System::Xml::XmlAsyncCheckWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteString
void System::Xml::XmlAsyncCheckWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteSurrogateCharEntity
void System::Xml::XmlAsyncCheckWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteChars
void System::Xml::XmlAsyncCheckWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteRaw
void System::Xml::XmlAsyncCheckWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteRaw
void System::Xml::XmlAsyncCheckWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteBase64
void System::Xml::XmlAsyncCheckWriter::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteBinHex
void System::Xml::XmlAsyncCheckWriter::WriteBinHex(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.Close
void System::Xml::XmlAsyncCheckWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.Flush
void System::Xml::XmlAsyncCheckWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.LookupPrefix
::StringW System::Xml::XmlAsyncCheckWriter::LookupPrefix(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteValue
void System::Xml::XmlAsyncCheckWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.Dispose
void System::Xml::XmlAsyncCheckWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlAutoDetectWriter
#include "System/Xml/XmlAutoDetectWriter.hpp"
// Including type: System.Xml.OnRemoveWriter
#include "System/Xml/OnRemoveWriter.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.Xml.XmlEventCache
#include "System/Xml/XmlEventCache.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlOutputMethod
#include "System/Xml/XmlOutputMethod.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlRawWriter wrapped
[[deprecated("Use field access instead!")]] ::System::Xml::XmlRawWriter*& System::Xml::XmlAutoDetectWriter::dyn_wrapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::dyn_wrapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wrapped"))->offset;
  return *reinterpret_cast<::System::Xml::XmlRawWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.OnRemoveWriter onRemove
[[deprecated("Use field access instead!")]] ::System::Xml::OnRemoveWriter*& System::Xml::XmlAutoDetectWriter::dyn_onRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::dyn_onRemove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onRemove"))->offset;
  return *reinterpret_cast<::System::Xml::OnRemoveWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWriterSettings writerSettings
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWriterSettings*& System::Xml::XmlAutoDetectWriter::dyn_writerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::dyn_writerSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writerSettings"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWriterSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlEventCache eventCache
[[deprecated("Use field access instead!")]] ::System::Xml::XmlEventCache*& System::Xml::XmlAutoDetectWriter::dyn_eventCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::dyn_eventCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventCache"))->offset;
  return *reinterpret_cast<::System::Xml::XmlEventCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter textWriter
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& System::Xml::XmlAutoDetectWriter::dyn_textWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::dyn_textWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textWriter"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream strm
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Xml::XmlAutoDetectWriter::dyn_strm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::dyn_strm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strm"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.IsHtmlTag
bool System::Xml::XmlAutoDetectWriter::IsHtmlTag(::StringW tagName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::IsHtmlTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlAutoDetectWriter", "IsHtmlTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tagName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tagName);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.EnsureWrappedWriter
void System::Xml::XmlAutoDetectWriter::EnsureWrappedWriter(::System::Xml::XmlOutputMethod outMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::EnsureWrappedWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWrappedWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outMethod);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.TextBlockCreatesWriter
bool System::Xml::XmlAutoDetectWriter::TextBlockCreatesWriter(::StringW textBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::TextBlockCreatesWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextBlockCreatesWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, textBlock);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.CreateWrappedWriter
void System::Xml::XmlAutoDetectWriter::CreateWrappedWriter(::System::Xml::XmlOutputMethod outMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::CreateWrappedWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWrappedWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outMethod);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.set_NamespaceResolver
void System::Xml::XmlAutoDetectWriter::set_NamespaceResolver(::System::Xml::IXmlNamespaceResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::set_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::XmlAutoDetectWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteDocType
void System::Xml::XmlAutoDetectWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteStartElement
void System::Xml::XmlAutoDetectWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteStartAttribute
void System::Xml::XmlAutoDetectWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteEndAttribute
void System::Xml::XmlAutoDetectWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteCData
void System::Xml::XmlAutoDetectWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteComment
void System::Xml::XmlAutoDetectWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteProcessingInstruction
void System::Xml::XmlAutoDetectWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteWhitespace
void System::Xml::XmlAutoDetectWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteString
void System::Xml::XmlAutoDetectWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteChars
void System::Xml::XmlAutoDetectWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteRaw
void System::Xml::XmlAutoDetectWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteRaw
void System::Xml::XmlAutoDetectWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteEntityRef
void System::Xml::XmlAutoDetectWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteCharEntity
void System::Xml::XmlAutoDetectWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteSurrogateCharEntity
void System::Xml::XmlAutoDetectWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteBase64
void System::Xml::XmlAutoDetectWriter::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteBinHex
void System::Xml::XmlAutoDetectWriter::WriteBinHex(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.Close
void System::Xml::XmlAutoDetectWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.Flush
void System::Xml::XmlAutoDetectWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteValue
void System::Xml::XmlAutoDetectWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteXmlDeclaration
void System::Xml::XmlAutoDetectWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteXmlDeclaration
void System::Xml::XmlAutoDetectWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.StartElementContent
void System::Xml::XmlAutoDetectWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteEndElement
void System::Xml::XmlAutoDetectWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteFullEndElement
void System::Xml::XmlAutoDetectWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteNamespaceDeclaration
void System::Xml::XmlAutoDetectWriter::WriteNamespaceDeclaration(::StringW prefix, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteStartNamespaceDeclaration
void System::Xml::XmlAutoDetectWriter::WriteStartNamespaceDeclaration(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteEndNamespaceDeclaration
void System::Xml::XmlAutoDetectWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAutoDetectWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlEncodedRawTextWriter
#include "System/Xml/XmlEncodedRawTextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean useAsync
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_useAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_useAsync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAsync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] bufBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::XmlEncodedRawTextWriter::dyn_bufBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_bufBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Xml::XmlEncodedRawTextWriter::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlEncodedRawTextWriter::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::XmlEncodedRawTextWriter::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 bufPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriter::dyn_bufPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_bufPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 textPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriter::dyn_textPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_textPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 contentPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriter::dyn_contentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_contentPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 cdataPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriter::dyn_cdataPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_cdataPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cdataPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 attrEndPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriter::dyn_attrEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_attrEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrEndPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 bufLen
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriter::dyn_bufLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_bufLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean writeToNull
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_writeToNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_writeToNull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeToNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean hadDoubleBracket
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_hadDoubleBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_hadDoubleBracket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hadDoubleBracket"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean inAttributeValue
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_inAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_inAttributeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inAttributeValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 bufBytesUsed
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriter::dyn_bufBytesUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_bufBytesUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufBytesUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Char[] bufChars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::XmlEncodedRawTextWriter::dyn_bufChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_bufChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufChars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Text.Encoder encoder
[[deprecated("Use field access instead!")]] ::System::Text::Encoder*& System::Xml::XmlEncodedRawTextWriter::dyn_encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoder"))->offset;
  return *reinterpret_cast<::System::Text::Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.IO.TextWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& System::Xml::XmlEncodedRawTextWriter::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean trackTextContent
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_trackTextContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_trackTextContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackTextContent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean inTextContent
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_inTextContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_inTextContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inTextContent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastMarkPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriter::dyn_lastMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_lastMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastMarkPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] textContentMarks
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Xml::XmlEncodedRawTextWriter::dyn_textContentMarks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_textContentMarks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textContentMarks"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.CharEntityEncoderFallback charEntityFallback
[[deprecated("Use field access instead!")]] ::System::Xml::CharEntityEncoderFallback*& System::Xml::XmlEncodedRawTextWriter::dyn_charEntityFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_charEntityFallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEntityFallback"))->offset;
  return *reinterpret_cast<::System::Xml::CharEntityEncoderFallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.NewLineHandling newLineHandling
[[deprecated("Use field access instead!")]] ::System::Xml::NewLineHandling& System::Xml::XmlEncodedRawTextWriter::dyn_newLineHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_newLineHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineHandling"))->offset;
  return *reinterpret_cast<::System::Xml::NewLineHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean closeOutput
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_closeOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_closeOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeOutput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean omitXmlDeclaration
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_omitXmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_omitXmlDeclaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "omitXmlDeclaration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String newLineChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEncodedRawTextWriter::dyn_newLineChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_newLineChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean checkCharacters
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlStandalone standalone
[[deprecated("Use field access instead!")]] ::System::Xml::XmlStandalone& System::Xml::XmlEncodedRawTextWriter::dyn_standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_standalone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standalone"))->offset;
  return *reinterpret_cast<::System::Xml::XmlStandalone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlOutputMethod outputMethod
[[deprecated("Use field access instead!")]] ::System::Xml::XmlOutputMethod& System::Xml::XmlEncodedRawTextWriter::dyn_outputMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_outputMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputMethod"))->offset;
  return *reinterpret_cast<::System::Xml::XmlOutputMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean autoXmlDeclaration
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_autoXmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_autoXmlDeclaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoXmlDeclaration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean mergeCDataSections
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriter::dyn_mergeCDataSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::dyn_mergeCDataSections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergeCDataSections"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.FlushBuffer
void System::Xml::XmlEncodedRawTextWriter::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.EncodeChars
void System::Xml::XmlEncodedRawTextWriter::EncodeChars(int startOffset, int endOffset, bool writeAllToStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::EncodeChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startOffset), ::il2cpp_utils::ExtractType(endOffset), ::il2cpp_utils::ExtractType(writeAllToStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startOffset, endOffset, writeAllToStream);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.FlushEncoder
void System::Xml::XmlEncodedRawTextWriter::FlushEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::FlushEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteAttributeTextBlock
void System::Xml::XmlEncodedRawTextWriter::WriteAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteElementTextBlock
void System::Xml::XmlEncodedRawTextWriter::WriteElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.RawText
void System::Xml::XmlEncodedRawTextWriter::RawText(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::RawText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RawText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.RawText
void System::Xml::XmlEncodedRawTextWriter::RawText(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::RawText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RawText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrcBegin), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrcBegin, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteRawWithCharChecking
void System::Xml::XmlEncodedRawTextWriter::WriteRawWithCharChecking(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteRawWithCharChecking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawWithCharChecking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrcBegin), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrcBegin, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteCommentOrPi
void System::Xml::XmlEncodedRawTextWriter::WriteCommentOrPi(::StringW text, int stopChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteCommentOrPi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCommentOrPi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(stopChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, stopChar);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteCDataSection
void System::Xml::XmlEncodedRawTextWriter::WriteCDataSection(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteCDataSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.EncodeSurrogate
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::EncodeSurrogate(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd, ::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::EncodeSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "EncodeSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pSrc, pSrcEnd, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.InvalidXmlChar
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::InvalidXmlChar(int ch, ::Il2CppChar* pDst, bool entitize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::InvalidXmlChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidXmlChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(entitize)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(this, ___internal__method, ch, pDst, entitize);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.EncodeChar
void System::Xml::XmlEncodedRawTextWriter::EncodeChar(ByRef<::Il2CppChar*> pSrc, ::Il2CppChar* pSrcEnd, ByRef<::Il2CppChar*> pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::EncodeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pSrc), pSrcEnd, byref(pDst));
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.ChangeTextContentMark
void System::Xml::XmlEncodedRawTextWriter::ChangeTextContentMark(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::ChangeTextContentMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTextContentMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.GrowTextContentMarks
void System::Xml::XmlEncodedRawTextWriter::GrowTextContentMarks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::GrowTextContentMarks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrowTextContentMarks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteNewLine
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::WriteNewLine(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(this, ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.LtEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::LtEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::LtEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "LtEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.GtEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::GtEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::GtEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "GtEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.AmpEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::AmpEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::AmpEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "AmpEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.QuoteEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::QuoteEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::QuoteEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "QuoteEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.TabEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::TabEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::TabEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "TabEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.LineFeedEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::LineFeedEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::LineFeedEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "LineFeedEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.CarriageReturnEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::CarriageReturnEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::CarriageReturnEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "CarriageReturnEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.CharEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::CharEntity(::Il2CppChar* pDst, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::CharEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "CharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst, ch);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.RawStartCData
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::RawStartCData(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::RawStartCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "RawStartCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.RawEndCData
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::RawEndCData(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::RawEndCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "RawEndCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.ValidateContentChars
void System::Xml::XmlEncodedRawTextWriter::ValidateContentChars(::StringW chars, ::StringW propertyName, bool allowOnlyWhitespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::ValidateContentChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateContentChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(allowOnlyWhitespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, propertyName, allowOnlyWhitespace);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::XmlEncodedRawTextWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteDocType
void System::Xml::XmlEncodedRawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteStartElement
void System::Xml::XmlEncodedRawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.StartElementContent
void System::Xml::XmlEncodedRawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteEndElement
void System::Xml::XmlEncodedRawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteFullEndElement
void System::Xml::XmlEncodedRawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteStartAttribute
void System::Xml::XmlEncodedRawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteEndAttribute
void System::Xml::XmlEncodedRawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteNamespaceDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteNamespaceDeclaration(::StringW prefix, ::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(namespaceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, namespaceName);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteStartNamespaceDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteStartNamespaceDeclaration(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteEndNamespaceDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteCData
void System::Xml::XmlEncodedRawTextWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteComment
void System::Xml::XmlEncodedRawTextWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteProcessingInstruction
void System::Xml::XmlEncodedRawTextWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteEntityRef
void System::Xml::XmlEncodedRawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteCharEntity
void System::Xml::XmlEncodedRawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteWhitespace
void System::Xml::XmlEncodedRawTextWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteString
void System::Xml::XmlEncodedRawTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteSurrogateCharEntity
void System::Xml::XmlEncodedRawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteChars
void System::Xml::XmlEncodedRawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteRaw
void System::Xml::XmlEncodedRawTextWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteRaw
void System::Xml::XmlEncodedRawTextWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.Close
void System::Xml::XmlEncodedRawTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.Flush
void System::Xml::XmlEncodedRawTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlEncodedRawTextWriterIndent
#include "System/Xml/XmlEncodedRawTextWriterIndent.hpp"
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEncodedRawTextWriterIndent::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriterIndent::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEncodedRawTextWriterIndent::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean mixedContent
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEncodedRawTextWriterIndent::dyn_mixedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::dyn_mixedContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedContent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.BitStack mixedContentStack
[[deprecated("Use field access instead!")]] ::System::Xml::BitStack*& System::Xml::XmlEncodedRawTextWriterIndent::dyn_mixedContentStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::dyn_mixedContentStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedContentStack"))->offset;
  return *reinterpret_cast<::System::Xml::BitStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ConformanceLevel conformanceLevel
[[deprecated("Use field access instead!")]] ::System::Xml::ConformanceLevel& System::Xml::XmlEncodedRawTextWriterIndent::dyn_conformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::dyn_conformanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "conformanceLevel"))->offset;
  return *reinterpret_cast<::System::Xml::ConformanceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.Init
void System::Xml::XmlEncodedRawTextWriterIndent::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteIndent
void System::Xml::XmlEncodedRawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteDocType
void System::Xml::XmlEncodedRawTextWriterIndent::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteStartElement
void System::Xml::XmlEncodedRawTextWriterIndent::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.StartElementContent
void System::Xml::XmlEncodedRawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.OnRootElement
void System::Xml::XmlEncodedRawTextWriterIndent::OnRootElement(::System::Xml::ConformanceLevel currentConformanceLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::OnRootElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentConformanceLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentConformanceLevel);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteEndElement
void System::Xml::XmlEncodedRawTextWriterIndent::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteFullEndElement
void System::Xml::XmlEncodedRawTextWriterIndent::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteStartAttribute
void System::Xml::XmlEncodedRawTextWriterIndent::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteCData
void System::Xml::XmlEncodedRawTextWriterIndent::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteComment
void System::Xml::XmlEncodedRawTextWriterIndent::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteProcessingInstruction
void System::Xml::XmlEncodedRawTextWriterIndent::WriteProcessingInstruction(::StringW target, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteEntityRef
void System::Xml::XmlEncodedRawTextWriterIndent::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteCharEntity
void System::Xml::XmlEncodedRawTextWriterIndent::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteSurrogateCharEntity
void System::Xml::XmlEncodedRawTextWriterIndent::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteWhitespace
void System::Xml::XmlEncodedRawTextWriterIndent::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteString
void System::Xml::XmlEncodedRawTextWriterIndent::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteChars
void System::Xml::XmlEncodedRawTextWriterIndent::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteRaw
void System::Xml::XmlEncodedRawTextWriterIndent::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteRaw
void System::Xml::XmlEncodedRawTextWriterIndent::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteBase64
void System::Xml::XmlEncodedRawTextWriterIndent::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEncodedRawTextWriterIndent::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlEventCache
#include "System/Xml/XmlEventCache.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Xml.XmlEventCache/System.Xml.XmlEvent[]> pages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<::System::Xml::XmlEventCache::XmlEvent>>*& System::Xml::XmlEventCache::dyn_pages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::dyn_pages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<::System::Xml::XmlEventCache::XmlEvent>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlEventCache/System.Xml.XmlEvent[] pageCurr
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlEventCache::XmlEvent>& System::Xml::XmlEventCache::dyn_pageCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::dyn_pageCurr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageCurr"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlEventCache::XmlEvent>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pageSize
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEventCache::dyn_pageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::dyn_pageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasRootNode
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEventCache::dyn_hasRootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::dyn_hasRootNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasRootNode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Xsl.Runtime.StringConcat singleText
[[deprecated("Use field access instead!")]] ::System::Xml::Xsl::Runtime::StringConcat& System::Xml::XmlEventCache::dyn_singleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::dyn_singleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "singleText"))->offset;
  return *reinterpret_cast<::System::Xml::Xsl::Runtime::StringConcat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String baseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEventCache::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::dyn_baseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlEventCache.EndEvents
void System::Xml::XmlEventCache::EndEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::EndEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.EventsToWriter
void System::Xml::XmlEventCache::EventsToWriter(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::EventsToWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EventsToWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(::System::Xml::XmlEventCache::XmlEventType eventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::StringW s1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, s1);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::StringW s1, ::StringW s2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, s1, s2);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::StringW s1, ::StringW s2, ::StringW s3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(s3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, s1, s2, s3);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::StringW s1, ::StringW s2, ::StringW s3, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(s3), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, s1, s2, s3, o);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, o);
}
// Autogenerated method: System.Xml.XmlEventCache.NewEvent
int System::Xml::XmlEventCache::NewEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::NewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.ToBytes
::ArrayW<uint8_t> System::Xml::XmlEventCache::ToBytes(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEventCache", "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteDocType
void System::Xml::XmlEventCache::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteStartElement
void System::Xml::XmlEventCache::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteStartAttribute
void System::Xml::XmlEventCache::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteEndAttribute
void System::Xml::XmlEventCache::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteCData
void System::Xml::XmlEventCache::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteComment
void System::Xml::XmlEventCache::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteProcessingInstruction
void System::Xml::XmlEventCache::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteWhitespace
void System::Xml::XmlEventCache::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteString
void System::Xml::XmlEventCache::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteChars
void System::Xml::XmlEventCache::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteRaw
void System::Xml::XmlEventCache::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteRaw
void System::Xml::XmlEventCache::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteEntityRef
void System::Xml::XmlEventCache::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteCharEntity
void System::Xml::XmlEventCache::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteSurrogateCharEntity
void System::Xml::XmlEventCache::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteBase64
void System::Xml::XmlEventCache::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteBinHex
void System::Xml::XmlEventCache::WriteBinHex(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.Close
void System::Xml::XmlEventCache::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.Flush
void System::Xml::XmlEventCache::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteValue
void System::Xml::XmlEventCache::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEventCache.Dispose
void System::Xml::XmlEventCache::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteXmlDeclaration
void System::Xml::XmlEventCache::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteXmlDeclaration
void System::Xml::XmlEventCache::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlEventCache.StartElementContent
void System::Xml::XmlEventCache::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteEndElement
void System::Xml::XmlEventCache::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteFullEndElement
void System::Xml::XmlEventCache::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteNamespaceDeclaration
void System::Xml::XmlEventCache::WriteNamespaceDeclaration(::StringW prefix, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteEndBase64
void System::Xml::XmlEventCache::WriteEndBase64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::WriteEndBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlEventCache/System.Xml.XmlEventType
#include "System/Xml/XmlEventCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Unknown
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Unknown
void System::Xml::XmlEventCache::XmlEventType::_set_Unknown(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType DocType
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_DocType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_DocType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "DocType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType DocType
void System::Xml::XmlEventCache::XmlEventType::_set_DocType(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_DocType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "DocType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType StartElem
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_StartElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_StartElem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "StartElem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType StartElem
void System::Xml::XmlEventCache::XmlEventType::_set_StartElem(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_StartElem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "StartElem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType StartAttr
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_StartAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_StartAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "StartAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType StartAttr
void System::Xml::XmlEventCache::XmlEventType::_set_StartAttr(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_StartAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "StartAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType EndAttr
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_EndAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_EndAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "EndAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType EndAttr
void System::Xml::XmlEventCache::XmlEventType::_set_EndAttr(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_EndAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "EndAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType CData
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_CData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_CData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "CData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType CData
void System::Xml::XmlEventCache::XmlEventType::_set_CData(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_CData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "CData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Comment
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Comment
void System::Xml::XmlEventCache::XmlEventType::_set_Comment(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType PI
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType PI
void System::Xml::XmlEventCache::XmlEventType::_set_PI(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Whitespace
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Whitespace
void System::Xml::XmlEventCache::XmlEventType::_set_Whitespace(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType String
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType String
void System::Xml::XmlEventCache::XmlEventType::_set_String(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Raw
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Raw
void System::Xml::XmlEventCache::XmlEventType::_set_Raw(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType EntRef
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_EntRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_EntRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "EntRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType EntRef
void System::Xml::XmlEventCache::XmlEventType::_set_EntRef(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_EntRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "EntRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType CharEnt
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_CharEnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_CharEnt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "CharEnt"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType CharEnt
void System::Xml::XmlEventCache::XmlEventType::_set_CharEnt(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_CharEnt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "CharEnt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType SurrCharEnt
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_SurrCharEnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_SurrCharEnt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "SurrCharEnt"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType SurrCharEnt
void System::Xml::XmlEventCache::XmlEventType::_set_SurrCharEnt(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_SurrCharEnt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "SurrCharEnt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Base64
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Base64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Base64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Base64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Base64
void System::Xml::XmlEventCache::XmlEventType::_set_Base64(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Base64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Base64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType BinHex
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_BinHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_BinHex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "BinHex"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType BinHex
void System::Xml::XmlEventCache::XmlEventType::_set_BinHex(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_BinHex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "BinHex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType XmlDecl1
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_XmlDecl1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_XmlDecl1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "XmlDecl1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType XmlDecl1
void System::Xml::XmlEventCache::XmlEventType::_set_XmlDecl1(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_XmlDecl1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "XmlDecl1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType XmlDecl2
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_XmlDecl2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_XmlDecl2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "XmlDecl2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType XmlDecl2
void System::Xml::XmlEventCache::XmlEventType::_set_XmlDecl2(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_XmlDecl2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "XmlDecl2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType StartContent
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_StartContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_StartContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "StartContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType StartContent
void System::Xml::XmlEventCache::XmlEventType::_set_StartContent(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_StartContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "StartContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType EndElem
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_EndElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_EndElem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "EndElem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType EndElem
void System::Xml::XmlEventCache::XmlEventType::_set_EndElem(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_EndElem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "EndElem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType FullEndElem
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_FullEndElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_FullEndElem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "FullEndElem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType FullEndElem
void System::Xml::XmlEventCache::XmlEventType::_set_FullEndElem(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_FullEndElem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "FullEndElem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Nmsp
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Nmsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Nmsp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Nmsp"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Nmsp
void System::Xml::XmlEventCache::XmlEventType::_set_Nmsp(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Nmsp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Nmsp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType EndBase64
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_EndBase64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_EndBase64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "EndBase64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType EndBase64
void System::Xml::XmlEventCache::XmlEventType::_set_EndBase64(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_EndBase64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "EndBase64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Close
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Close");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Close"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Close
void System::Xml::XmlEventCache::XmlEventType::_set_Close(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Close");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Close", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Flush
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Flush
void System::Xml::XmlEventCache::XmlEventType::_set_Flush(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Dispose
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_get_Dispose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Dispose"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/System.Xml.XmlEventType Dispose
void System::Xml::XmlEventCache::XmlEventType::_set_Dispose(::System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::_set_Dispose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Dispose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlEventCache::XmlEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlEventCache/System.Xml.XmlEvent
#include "System/Xml/XmlEventCache.hpp"
// Including type: System.Xml.XmlEventCache/System.Xml.XmlEventType
// Already included the same include: System/Xml/XmlEventCache.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlEventCache/System.Xml.XmlEventType eventType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlEventCache::XmlEventType& System::Xml::XmlEventCache::XmlEvent::dyn_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::dyn_eventType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlEventCache::XmlEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s1
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEventCache::XmlEvent::dyn_s1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::dyn_s1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s1"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s2
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEventCache::XmlEvent::dyn_s2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::dyn_s2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s3
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEventCache::XmlEvent::dyn_s3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::dyn_s3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s3"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object o
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlEventCache::XmlEvent::dyn_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::dyn_o");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.get_EventType
::System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEvent::get_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::get_EventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlEventCache::XmlEventType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.get_String1
::StringW System::Xml::XmlEventCache::XmlEvent::get_String1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::get_String1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_String1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.get_String2
::StringW System::Xml::XmlEventCache::XmlEvent::get_String2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::get_String2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_String2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.get_String3
::StringW System::Xml::XmlEventCache::XmlEvent::get_String3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::get_String3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_String3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.get_Object
::Il2CppObject* System::Xml::XmlEventCache::XmlEvent::get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::get_Object");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(::System::Xml::XmlEventCache::XmlEventType eventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::StringW s1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, s1);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::StringW s1, ::StringW s2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, s1, s2);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::StringW s1, ::StringW s2, ::StringW s3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(s3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, s1, s2, s3);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::StringW s1, ::StringW s2, ::StringW s3, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(s3), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, s1, s2, s3, o);
}
// Autogenerated method: System.Xml.XmlEventCache/System.Xml.XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(::System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlParserContext
#include "System/Xml/XmlParserContext.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable _nt
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XmlParserContext::dyn__nt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__nt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nt"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager _nsMgr
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamespaceManager*& System::Xml::XmlParserContext::dyn__nsMgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__nsMgr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nsMgr"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _docTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__docTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__docTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_docTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _pubId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__pubId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__pubId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pubId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sysId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__sysId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__sysId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sysId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _internalSubset
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__internalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__internalSubset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internalSubset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _xmlLang
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__xmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__xmlLang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlLang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSpace _xmlSpace
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSpace& System::Xml::XmlParserContext::dyn__xmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__xmlSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlSpace"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _baseURI
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__baseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__baseURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlParserContext::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlParserContext.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlParserContext::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_NamespaceManager
::System::Xml::XmlNamespaceManager* System::Xml::XmlParserContext::get_NamespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_NamespaceManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNamespaceManager*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_DocTypeName
::StringW System::Xml::XmlParserContext::get_DocTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_DocTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_PublicId
::StringW System::Xml::XmlParserContext::get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_PublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_SystemId
::StringW System::Xml::XmlParserContext::get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_SystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_BaseURI
::StringW System::Xml::XmlParserContext::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_BaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_InternalSubset
::StringW System::Xml::XmlParserContext::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_InternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_XmlLang
::StringW System::Xml::XmlParserContext::get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_XmlLang");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlLang", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_XmlSpace
::System::Xml::XmlSpace System::Xml::XmlParserContext::get_XmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_XmlSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_Encoding
::System::Text::Encoding* System::Xml::XmlParserContext::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_HasDtdInfo
bool System::Xml::XmlParserContext::get_HasDtdInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_HasDtdInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDtdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
// Including type: System.Xml.XmlRawWriterBase64Encoder
#include "System/Xml/XmlRawWriterBase64Encoder.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
// Including type: System.Xml.ConformanceLevel
#include "System/Xml/ConformanceLevel.hpp"
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlRawWriterBase64Encoder base64Encoder
[[deprecated("Use field access instead!")]] ::System::Xml::XmlRawWriterBase64Encoder*& System::Xml::XmlRawWriter::dyn_base64Encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::dyn_base64Encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base64Encoder"))->offset;
  return *reinterpret_cast<::System::Xml::XmlRawWriterBase64Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.IXmlNamespaceResolver resolver
[[deprecated("Use field access instead!")]] ::System::Xml::IXmlNamespaceResolver*& System::Xml::XmlRawWriter::dyn_resolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::dyn_resolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolver"))->offset;
  return *reinterpret_cast<::System::Xml::IXmlNamespaceResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlRawWriter.set_NamespaceResolver
void System::Xml::XmlRawWriter::set_NamespaceResolver(::System::Xml::IXmlNamespaceResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::set_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlRawWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::XmlRawWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteXmlDeclaration
void System::Xml::XmlRawWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteXmlDeclaration
void System::Xml::XmlRawWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlRawWriter.StartElementContent
void System::Xml::XmlRawWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.OnRootElement
void System::Xml::XmlRawWriter::OnRootElement(::System::Xml::ConformanceLevel conformanceLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::OnRootElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conformanceLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, conformanceLevel);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndElement
void System::Xml::XmlRawWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteFullEndElement
void System::Xml::XmlRawWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteNamespaceDeclaration
void System::Xml::XmlRawWriter::WriteNamespaceDeclaration(::StringW prefix, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteStartNamespaceDeclaration
void System::Xml::XmlRawWriter::WriteStartNamespaceDeclaration(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndNamespaceDeclaration
void System::Xml::XmlRawWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndBase64
void System::Xml::XmlRawWriter::WriteEndBase64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteEndBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.Close
void System::Xml::XmlRawWriter::Close(::System::Xml::WriteState currentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentState);
}
// Autogenerated method: System.Xml.XmlRawWriter.get_WriteState
::System::Xml::WriteState System::Xml::XmlRawWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteStartDocument
void System::Xml::XmlRawWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteStartDocument
void System::Xml::XmlRawWriter::WriteStartDocument(bool standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndDocument
void System::Xml::XmlRawWriter::WriteEndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteEndDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteDocType
void System::Xml::XmlRawWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndElement
void System::Xml::XmlRawWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteFullEndElement
void System::Xml::XmlRawWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteBase64
void System::Xml::XmlRawWriter::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlRawWriter.LookupPrefix
::StringW System::Xml::XmlRawWriter::LookupPrefix(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteCData
void System::Xml::XmlRawWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteCharEntity
void System::Xml::XmlRawWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteSurrogateCharEntity
void System::Xml::XmlRawWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteWhitespace
void System::Xml::XmlRawWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteChars
void System::Xml::XmlRawWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteRaw
void System::Xml::XmlRawWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteRaw
void System::Xml::XmlRawWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteValue
void System::Xml::XmlRawWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
// Including type: System.Xml.ReadState
#include "System/Xml/ReadState.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 IsTextualNodeBitmap
uint System::Xml::XmlReader::_get_IsTextualNodeBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_IsTextualNodeBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "IsTextualNodeBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 IsTextualNodeBitmap
void System::Xml::XmlReader::_set_IsTextualNodeBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_IsTextualNodeBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "IsTextualNodeBitmap", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 CanReadContentAsBitmap
uint System::Xml::XmlReader::_get_CanReadContentAsBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_CanReadContentAsBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "CanReadContentAsBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 CanReadContentAsBitmap
void System::Xml::XmlReader::_set_CanReadContentAsBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_CanReadContentAsBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "CanReadContentAsBitmap", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 HasValueBitmap
uint System::Xml::XmlReader::_get_HasValueBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_HasValueBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "HasValueBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 HasValueBitmap
void System::Xml::XmlReader::_set_HasValueBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_HasValueBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "HasValueBitmap", value));
}
// Autogenerated method: System.Xml.XmlReader.get_Settings
::System::Xml::XmlReaderSettings* System::Xml::XmlReader::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_Settings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReaderSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlReader::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_Name
::StringW System::Xml::XmlReader::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_LocalName
::StringW System::Xml::XmlReader::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_NamespaceURI
::StringW System::Xml::XmlReader::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_Prefix
::StringW System::Xml::XmlReader::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_Value
::StringW System::Xml::XmlReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_BaseURI
::StringW System::Xml::XmlReader::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_IsEmptyElement
bool System::Xml::XmlReader::get_IsEmptyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_IsEmptyElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmptyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_IsDefault
bool System::Xml::XmlReader::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_SchemaInfo
::System::Xml::Schema::IXmlSchemaInfo* System::Xml::XmlReader::get_SchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_SchemaInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::IXmlSchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_ReadState
::System::Xml::ReadState System::Xml::XmlReader::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_ReadState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlReader::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_CanResolveEntity
bool System::Xml::XmlReader::get_CanResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_CanResolveEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanResolveEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_DtdInfo
::System::Xml::IDtdInfo* System::Xml::XmlReader::get_DtdInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_DtdInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader..cctor
void System::Xml::XmlReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.MoveToAttribute
bool System::Xml::XmlReader::MoveToAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlReader.MoveToFirstAttribute
bool System::Xml::XmlReader::MoveToFirstAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::MoveToFirstAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFirstAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.MoveToNextAttribute
bool System::Xml::XmlReader::MoveToNextAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::MoveToNextAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.MoveToElement
bool System::Xml::XmlReader::MoveToElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::MoveToElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.ReadAttributeValue
bool System::Xml::XmlReader::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.Read
bool System::Xml::XmlReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.Close
void System::Xml::XmlReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.LookupNamespace
::StringW System::Xml::XmlReader::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlReader.ResolveEntity
void System::Xml::XmlReader::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.Dispose
void System::Xml::XmlReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.Dispose
void System::Xml::XmlReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Xml.XmlReader.CalcBufferSize
int System::Xml::XmlReader::CalcBufferSize(::System::IO::Stream* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::CalcBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReader", "CalcBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.Boolean> s_enableLegacyXmlSettings
::System::Nullable_1<bool> System::Xml::XmlReaderSettings::_get_s_enableLegacyXmlSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::_get_s_enableLegacyXmlSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<bool>>("System.Xml", "XmlReaderSettings", "s_enableLegacyXmlSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.Boolean> s_enableLegacyXmlSettings
void System::Xml::XmlReaderSettings::_set_s_enableLegacyXmlSettings(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::_set_s_enableLegacyXmlSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReaderSettings", "s_enableLegacyXmlSettings", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useAsync
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlReaderSettings::dyn_useAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_useAsync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAsync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XmlReaderSettings::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated("Use field access instead!")]] ::System::Xml::XmlResolver*& System::Xml::XmlReaderSettings::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumberOffset
[[deprecated("Use field access instead!")]] int& System::Xml::XmlReaderSettings::dyn_lineNumberOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_lineNumberOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumberOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePositionOffset
[[deprecated("Use field access instead!")]] int& System::Xml::XmlReaderSettings::dyn_linePositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_linePositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePositionOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.ConformanceLevel conformanceLevel
[[deprecated("Use field access instead!")]] ::System::Xml::ConformanceLevel& System::Xml::XmlReaderSettings::dyn_conformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_conformanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "conformanceLevel"))->offset;
  return *reinterpret_cast<::System::Xml::ConformanceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCharacters
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlReaderSettings::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxCharactersInDocument
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlReaderSettings::dyn_maxCharactersInDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_maxCharactersInDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCharactersInDocument"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxCharactersFromEntities
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlReaderSettings::dyn_maxCharactersFromEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_maxCharactersFromEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCharactersFromEntities"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreWhitespace
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlReaderSettings::dyn_ignoreWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_ignoreWhitespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreWhitespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignorePIs
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlReaderSettings::dyn_ignorePIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_ignorePIs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignorePIs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreComments
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlReaderSettings::dyn_ignoreComments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_ignoreComments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreComments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdProcessing dtdProcessing
[[deprecated("Use field access instead!")]] ::System::Xml::DtdProcessing& System::Xml::XmlReaderSettings::dyn_dtdProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_dtdProcessing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdProcessing"))->offset;
  return *reinterpret_cast<::System::Xml::DtdProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.ValidationType validationType
[[deprecated("Use field access instead!")]] ::System::Xml::ValidationType& System::Xml::XmlReaderSettings::dyn_validationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_validationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationType"))->offset;
  return *reinterpret_cast<::System::Xml::ValidationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaValidationFlags validationFlags
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaValidationFlags& System::Xml::XmlReaderSettings::dyn_validationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_validationFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationFlags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaValidationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSet schemas
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSet*& System::Xml::XmlReaderSettings::dyn_schemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_schemas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemas"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeInput
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlReaderSettings::dyn_closeInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_closeInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReadOnly
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlReaderSettings::dyn_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsXmlResolverSet>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlReaderSettings::dyn_$IsXmlResolverSet$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::dyn_$IsXmlResolverSet$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsXmlResolverSet>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_NameTable
void System::Xml::XmlReaderSettings::set_NameTable(::System::Xml::XmlNameTable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_IsXmlResolverSet
void System::Xml::XmlReaderSettings::set_IsXmlResolverSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_IsXmlResolverSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsXmlResolverSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_XmlResolver
void System::Xml::XmlReaderSettings::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_LineNumberOffset
void System::Xml::XmlReaderSettings::set_LineNumberOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_LineNumberOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LineNumberOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_LinePositionOffset
void System::Xml::XmlReaderSettings::set_LinePositionOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_LinePositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LinePositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_ConformanceLevel
void System::Xml::XmlReaderSettings::set_ConformanceLevel(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_ConformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_CheckCharacters
void System::Xml::XmlReaderSettings::set_CheckCharacters(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_CheckCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CheckCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_MaxCharactersInDocument
void System::Xml::XmlReaderSettings::set_MaxCharactersInDocument(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_MaxCharactersInDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxCharactersInDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_MaxCharactersFromEntities
void System::Xml::XmlReaderSettings::set_MaxCharactersFromEntities(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_MaxCharactersFromEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxCharactersFromEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_IgnoreWhitespace
void System::Xml::XmlReaderSettings::set_IgnoreWhitespace(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_IgnoreWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_IgnoreProcessingInstructions
void System::Xml::XmlReaderSettings::set_IgnoreProcessingInstructions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_IgnoreProcessingInstructions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreProcessingInstructions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_IgnoreComments
void System::Xml::XmlReaderSettings::set_IgnoreComments(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_IgnoreComments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreComments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_DtdProcessing
void System::Xml::XmlReaderSettings::set_DtdProcessing(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_DtdProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtdProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.get_ValidationType
::System::Xml::ValidationType System::Xml::XmlReaderSettings::get_ValidationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::get_ValidationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ValidationType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReaderSettings.get_Schemas
::System::Xml::Schema::XmlSchemaSet* System::Xml::XmlReaderSettings::get_Schemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::get_Schemas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Schemas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReaderSettings.set_ReadOnly
void System::Xml::XmlReaderSettings::set_ReadOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::set_ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlReaderSettings.GetXmlResolver
::System::Xml::XmlResolver* System::Xml::XmlReaderSettings::GetXmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::GetXmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReaderSettings.CheckReadOnly
void System::Xml::XmlReaderSettings::CheckReadOnly(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::CheckReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: System.Xml.XmlReaderSettings.Initialize
void System::Xml::XmlReaderSettings::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReaderSettings.Initialize
void System::Xml::XmlReaderSettings::Initialize(::System::Xml::XmlResolver* resolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resolver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resolver);
}
// Autogenerated method: System.Xml.XmlReaderSettings.CreateDefaultResolver
::System::Xml::XmlResolver* System::Xml::XmlReaderSettings::CreateDefaultResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::CreateDefaultResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReaderSettings", "CreateDefaultResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlResolver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlReaderSettings.EnableLegacyXmlSettings
bool System::Xml::XmlReaderSettings::EnableLegacyXmlSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::EnableLegacyXmlSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReaderSettings", "EnableLegacyXmlSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSpace
#include "System/Xml/XmlSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace None
::System::Xml::XmlSpace System::Xml::XmlSpace::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSpace>("System.Xml", "XmlSpace", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace None
void System::Xml::XmlSpace::_set_None(::System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace Default
::System::Xml::XmlSpace System::Xml::XmlSpace::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSpace>("System.Xml", "XmlSpace", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace Default
void System::Xml::XmlSpace::_set_Default(::System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace Preserve
::System::Xml::XmlSpace System::Xml::XmlSpace::_get_Preserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_get_Preserve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSpace>("System.Xml", "XmlSpace", "Preserve"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace Preserve
void System::Xml::XmlSpace::_set_Preserve(::System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_set_Preserve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "Preserve", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReader
#include "System/Xml/XmlTextReader.hpp"
// Including type: System.Xml.XmlTextReaderImpl
#include "System/Xml/XmlTextReaderImpl.hpp"
// Including type: System.Xml.EntityHandling
#include "System/Xml/EntityHandling.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.ReadState
#include "System/Xml/ReadState.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl impl
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl*& System::Xml::XmlTextReader::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReader.set_EntityHandling
void System::Xml::XmlTextReader::set_EntityHandling(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::set_EntityHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntityHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReader.set_XmlResolver
void System::Xml::XmlTextReader::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReader.get_Impl
::System::Xml::XmlTextReaderImpl* System::Xml::XmlTextReader::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.set_XmlValidatingReaderCompatibilityMode
void System::Xml::XmlTextReader::set_XmlValidatingReaderCompatibilityMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::set_XmlValidatingReaderCompatibilityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlValidatingReaderCompatibilityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupNamespace
::StringW System::Xml::XmlTextReader::System_Xml_IXmlNamespaceResolver_LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::System.Xml.IXmlNamespaceResolver.LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::XmlTextReader::System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::System.Xml.IXmlNamespaceResolver.LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.XmlTextReader.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlTextReader::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_Name
::StringW System::Xml::XmlTextReader::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_LocalName
::StringW System::Xml::XmlTextReader::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_NamespaceURI
::StringW System::Xml::XmlTextReader::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_Prefix
::StringW System::Xml::XmlTextReader::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_Value
::StringW System::Xml::XmlTextReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_BaseURI
::StringW System::Xml::XmlTextReader::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_IsEmptyElement
bool System::Xml::XmlTextReader::get_IsEmptyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_IsEmptyElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmptyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_IsDefault
bool System::Xml::XmlTextReader::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_ReadState
::System::Xml::ReadState System::Xml::XmlTextReader::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_ReadState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlTextReader::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_CanResolveEntity
bool System::Xml::XmlTextReader::get_CanResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_CanResolveEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanResolveEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_DtdInfo
::System::Xml::IDtdInfo* System::Xml::XmlTextReader::get_DtdInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_DtdInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.MoveToAttribute
bool System::Xml::XmlTextReader::MoveToAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlTextReader.MoveToFirstAttribute
bool System::Xml::XmlTextReader::MoveToFirstAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::MoveToFirstAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFirstAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.MoveToNextAttribute
bool System::Xml::XmlTextReader::MoveToNextAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::MoveToNextAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.MoveToElement
bool System::Xml::XmlTextReader::MoveToElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::MoveToElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.ReadAttributeValue
bool System::Xml::XmlTextReader::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.Read
bool System::Xml::XmlTextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.Close
void System::Xml::XmlTextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.LookupNamespace
::StringW System::Xml::XmlTextReader::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReader.ResolveEntity
void System::Xml::XmlTextReader::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlTextReaderImpl
#include "System/Xml/XmlTextReaderImpl.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.EntityType
#include "System/Xml/XmlTextReaderImpl_EntityType.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.EntityExpandType
#include "System/Xml/XmlTextReaderImpl_EntityExpandType.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.LaterInitParam
#include "System/Xml/XmlTextReaderImpl_LaterInitParam.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.InitInputType
#include "System/Xml/XmlTextReaderImpl_InitInputType.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.XmlContext
#include "System/Xml/XmlTextReaderImpl_XmlContext.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager
#include "System/Xml/XmlTextReaderImpl_NoNamespaceManager.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy
#include "System/Xml/XmlTextReaderImpl_DtdParserProxy.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.NodeData
#include "System/Xml/XmlTextReaderImpl_NodeData.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.DtdDefaultAttributeInfoToNodeDataComparer
#include "System/Xml/XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer.hpp"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.OnDefaultAttributeUseDelegate
#include "System/Xml/XmlTextReaderImpl_OnDefaultAttributeUseDelegate.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.XmlParserContext
#include "System/Xml/XmlParserContext.hpp"
// Including type: System.Xml.IncrementalReadDecoder
#include "System/Xml/IncrementalReadDecoder.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Tuple`4
#include "System/Tuple_4.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.LaterInitParam laterInitParam
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::LaterInitParam*& System::Xml::XmlTextReaderImpl::dyn_laterInitParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_laterInitParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laterInitParam"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::LaterInitParam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::XmlTextReaderImpl::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.ParsingState ps
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingState& System::Xml::XmlTextReaderImpl::dyn_ps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_ps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ps"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction parsingFunction
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingFunction& System::Xml::XmlTextReaderImpl::dyn_parsingFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parsingFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingFunction"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction nextParsingFunction
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingFunction& System::Xml::XmlTextReaderImpl::dyn_nextParsingFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nextParsingFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextParsingFunction"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction nextNextParsingFunction
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingFunction& System::Xml::XmlTextReaderImpl::dyn_nextNextParsingFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nextNextParsingFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextNextParsingFunction"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.NodeData[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*>& System::Xml::XmlTextReaderImpl::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.NodeData curNode
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::NodeData*& System::Xml::XmlTextReaderImpl::dyn_curNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_curNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curNode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::NodeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curAttrIndex
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_curAttrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_curAttrIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curAttrIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrCount
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_attrCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrHashtable
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_attrHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrHashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrHashtable"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrDuplWalkCount
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_attrDuplWalkCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrDuplWalkCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrDuplWalkCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attrNeedNamespaceLookup
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_attrNeedNamespaceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrNeedNamespaceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrNeedNamespaceLookup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fullAttrCleanup
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_fullAttrCleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_fullAttrCleanup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullAttrCleanup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.NodeData[] attrDuplSortingArray
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*>& System::Xml::XmlTextReaderImpl::dyn_attrDuplSortingArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrDuplSortingArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrDuplSortingArray"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XmlTextReaderImpl::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean nameTableFromSettings
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_nameTableFromSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nameTableFromSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTableFromSettings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated("Use field access instead!")]] ::System::Xml::XmlResolver*& System::Xml::XmlTextReaderImpl::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String url
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean normalize
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_normalize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean supportNamespaces
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_supportNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_supportNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportNamespaces"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.WhitespaceHandling whitespaceHandling
[[deprecated("Use field access instead!")]] ::System::Xml::WhitespaceHandling& System::Xml::XmlTextReaderImpl::dyn_whitespaceHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_whitespaceHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "whitespaceHandling"))->offset;
  return *reinterpret_cast<::System::Xml::WhitespaceHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdProcessing dtdProcessing
[[deprecated("Use field access instead!")]] ::System::Xml::DtdProcessing& System::Xml::XmlTextReaderImpl::dyn_dtdProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_dtdProcessing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdProcessing"))->offset;
  return *reinterpret_cast<::System::Xml::DtdProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.EntityHandling entityHandling
[[deprecated("Use field access instead!")]] ::System::Xml::EntityHandling& System::Xml::XmlTextReaderImpl::dyn_entityHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_entityHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityHandling"))->offset;
  return *reinterpret_cast<::System::Xml::EntityHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignorePIs
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_ignorePIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_ignorePIs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignorePIs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreComments
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_ignoreComments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_ignoreComments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreComments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCharacters
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumberOffset
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_lineNumberOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_lineNumberOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumberOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePositionOffset
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_linePositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_linePositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePositionOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeInput
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_closeInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_closeInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxCharactersInDocument
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlTextReaderImpl::dyn_maxCharactersInDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_maxCharactersInDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCharactersInDocument"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxCharactersFromEntities
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlTextReaderImpl::dyn_maxCharactersFromEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_maxCharactersFromEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCharactersFromEntities"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean v1Compat
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_v1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_v1Compat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v1Compat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager namespaceManager
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamespaceManager*& System::Xml::XmlTextReaderImpl::dyn_namespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_namespaceManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String lastPrefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_lastPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_lastPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.XmlContext xmlContext
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::XmlContext*& System::Xml::XmlTextReaderImpl::dyn_xmlContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_xmlContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlContext"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::XmlContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.ParsingState[] parsingStatesStack
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlTextReaderImpl::ParsingState>& System::Xml::XmlTextReaderImpl::dyn_parsingStatesStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parsingStatesStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingStatesStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlTextReaderImpl::ParsingState>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parsingStatesStackTop
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_parsingStatesStackTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parsingStatesStackTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingStatesStackTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String reportedBaseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_reportedBaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_reportedBaseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedBaseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding reportedEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlTextReaderImpl::dyn_reportedEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_reportedEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdInfo dtdInfo
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdInfo*& System::Xml::XmlTextReaderImpl::dyn_dtdInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_dtdInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdInfo"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeType fragmentType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeType& System::Xml::XmlTextReaderImpl::dyn_fragmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_fragmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fragmentType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlParserContext fragmentParserContext
[[deprecated("Use field access instead!")]] ::System::Xml::XmlParserContext*& System::Xml::XmlTextReaderImpl::dyn_fragmentParserContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_fragmentParserContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fragmentParserContext"))->offset;
  return *reinterpret_cast<::System::Xml::XmlParserContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fragment
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_fragment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fragment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IncrementalReadDecoder incReadDecoder
[[deprecated("Use field access instead!")]] ::System::Xml::IncrementalReadDecoder*& System::Xml::XmlTextReaderImpl::dyn_incReadDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadDecoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadDecoder"))->offset;
  return *reinterpret_cast<::System::Xml::IncrementalReadDecoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState incReadState
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::IncrementalReadState& System::Xml::XmlTextReaderImpl::dyn_incReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadState"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::IncrementalReadState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.LineInfo incReadLineInfo
[[deprecated("Use field access instead!")]] ::System::Xml::LineInfo& System::Xml::XmlTextReaderImpl::dyn_incReadLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadLineInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadLineInfo"))->offset;
  return *reinterpret_cast<::System::Xml::LineInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 incReadDepth
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_incReadDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 incReadLeftStartPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_incReadLeftStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadLeftStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadLeftStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 incReadLeftEndPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_incReadLeftEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadLeftEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadLeftEndPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attributeValueBaseEntityId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_attributeValueBaseEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attributeValueBaseEntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeValueBaseEntityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emptyEntityInAttributeResolved
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_emptyEntityInAttributeResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_emptyEntityInAttributeResolved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyEntityInAttributeResolved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IValidationEventHandling validationEventHandling
[[deprecated("Use field access instead!")]] ::System::Xml::IValidationEventHandling*& System::Xml::XmlTextReaderImpl::dyn_validationEventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_validationEventHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationEventHandling"))->offset;
  return *reinterpret_cast<::System::Xml::IValidationEventHandling**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.OnDefaultAttributeUseDelegate onDefaultAttributeUse
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate*& System::Xml::XmlTextReaderImpl::dyn_onDefaultAttributeUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_onDefaultAttributeUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDefaultAttributeUse"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean validatingReaderCompatFlag
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_validatingReaderCompatFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_validatingReaderCompatFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validatingReaderCompatFlag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean addDefaultAttributesAndNormalize
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_addDefaultAttributesAndNormalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_addDefaultAttributesAndNormalize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDefaultAttributesAndNormalize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder stringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::XmlTextReaderImpl::dyn_stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rootElementParsed
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_rootElementParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_rootElementParsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootElementParsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean standalone
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_standalone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standalone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextEntityId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_nextEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nextEntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextEntityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/System.Xml.ParsingMode parsingMode
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingMode& System::Xml::XmlTextReaderImpl::dyn_parsingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parsingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingMode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.ReadState readState
[[deprecated("Use field access instead!")]] ::System::Xml::ReadState& System::Xml::XmlTextReaderImpl::dyn_readState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_readState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readState"))->offset;
  return *reinterpret_cast<::System::Xml::ReadState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdEntityInfo lastEntity
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdEntityInfo*& System::Xml::XmlTextReaderImpl::dyn_lastEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_lastEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastEntity"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdEntityInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean afterResetState
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_afterResetState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_afterResetState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "afterResetState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 documentStartBytePos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_documentStartBytePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_documentStartBytePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "documentStartBytePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 readValueOffset
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_readValueOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_readValueOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readValueOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 charactersInDocument
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlTextReaderImpl::dyn_charactersInDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_charactersInDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charactersInDocument"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 charactersFromEntities
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlTextReaderImpl::dyn_charactersFromEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_charactersFromEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charactersFromEntities"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.IDtdEntityInfo,System.Xml.IDtdEntityInfo> currentEntities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::IDtdEntityInfo*, ::System::Xml::IDtdEntityInfo*>*& System::Xml::XmlTextReaderImpl::dyn_currentEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_currentEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentEntities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::IDtdEntityInfo*, ::System::Xml::IDtdEntityInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disableUndeclaredEntityCheck
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_disableUndeclaredEntityCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_disableUndeclaredEntityCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableUndeclaredEntityCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader outerReader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Xml::XmlTextReaderImpl::dyn_outerReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_outerReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outerReader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xmlResolverIsSet
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_xmlResolverIsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_xmlResolverIsSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolverIsSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Xml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_Xml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Xml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String XmlNs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_XmlNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_XmlNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XmlNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Tuple`4<System.Int32,System.Int32,System.Int32,System.Boolean>> parseText_dummyTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::System::Tuple_4<int, int, int, bool>*>*& System::Xml::XmlTextReaderImpl::dyn_parseText_dummyTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parseText_dummyTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parseText_dummyTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::System::Tuple_4<int, int, int, bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_OuterReader
void System::Xml::XmlTextReaderImpl::set_OuterReader(::System::Xml::XmlReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_OuterReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OuterReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_Namespaces
void System::Xml::XmlTextReaderImpl::set_Namespaces(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_Namespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_EntityHandling
void System::Xml::XmlTextReaderImpl::set_EntityHandling(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_EntityHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntityHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_XmlResolver
void System::Xml::XmlTextReaderImpl::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlTextReaderImpl::get_DtdParserProxy_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_NamespaceResolver
::System::Xml::IXmlNamespaceResolver* System::Xml::XmlTextReaderImpl::get_DtdParserProxy_NamespaceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_NamespaceResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IXmlNamespaceResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_DtdValidation
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_DtdValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_DtdValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_DtdValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_Normalization
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_Normalization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_Normalization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_Normalization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_Namespaces
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_Namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_Namespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_Namespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_V1CompatibilityMode
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_V1CompatibilityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_V1CompatibilityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_V1CompatibilityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_BaseUri
::System::Uri* System::Xml::XmlTextReaderImpl::get_DtdParserProxy_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_BaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_IsEof
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_IsEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_IsEof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_IsEof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_ParsingBuffer
::ArrayW<::Il2CppChar> System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ParsingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_ParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_ParsingBufferLength
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ParsingBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ParsingBufferLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_ParsingBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_CurrentPosition
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_CurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_CurrentPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_DtdParserProxy_CurrentPosition
void System::Xml::XmlTextReaderImpl::set_DtdParserProxy_CurrentPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_DtdParserProxy_CurrentPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtdParserProxy_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_EntityStackLength
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_EntityStackLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_EntityStackLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_EntityStackLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_IsEntityEolNormalized
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_IsEntityEolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_IsEntityEolNormalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_IsEntityEolNormalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_ValidationEventHandling
::System::Xml::IValidationEventHandling* System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ValidationEventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ValidationEventHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_ValidationEventHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IValidationEventHandling*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_LineNo
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_LineNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_LineStartPosition
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_LineStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_LineStartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_LineStartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_IsResolverNull
bool System::Xml::XmlTextReaderImpl::get_IsResolverNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_IsResolverNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsResolverNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_InAttributeValueIterator
bool System::Xml::XmlTextReaderImpl::get_InAttributeValueIterator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_InAttributeValueIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InAttributeValueIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdValidation
bool System::Xml::XmlTextReaderImpl::get_DtdValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_InEntity
bool System::Xml::XmlTextReaderImpl::get_InEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_InEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_XmlValidatingReaderCompatibilityMode
void System::Xml::XmlTextReaderImpl::set_XmlValidatingReaderCompatibilityMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_XmlValidatingReaderCompatibilityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlValidatingReaderCompatibilityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_DisableUndeclaredEntityCheck
void System::Xml::XmlTextReaderImpl::set_DisableUndeclaredEntityCheck(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_DisableUndeclaredEntityCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisableUndeclaredEntityCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishInitUriString
void System::Xml::XmlTextReaderImpl::FinishInitUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishInitUriString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInitUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishInitStream
void System::Xml::XmlTextReaderImpl::FinishInitStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishInitStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInitStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishInitTextReader
void System::Xml::XmlTextReaderImpl::FinishInitTextReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishInitTextReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInitTextReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishInit
void System::Xml::XmlTextReaderImpl::FinishInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.System.Xml.IXmlNamespaceResolver.LookupNamespace
::StringW System::Xml::XmlTextReaderImpl::System_Xml_IXmlNamespaceResolver_LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::System.Xml.IXmlNamespaceResolver.LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::XmlTextReaderImpl::System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::System.Xml.IXmlNamespaceResolver.LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.LookupPrefix
::StringW System::Xml::XmlTextReaderImpl::LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::LookupPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_OnNewLine
void System::Xml::XmlTextReaderImpl::DtdParserProxy_OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_OnNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_OnNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ReadData
int System::Xml::XmlTextReaderImpl::DtdParserProxy_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ParseNumericCharRef
int System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseNumericCharRef(::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseNumericCharRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ParseNumericCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ParseNamedCharRef
int System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseNamedCharRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ParseNamedCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ParsePI
void System::Xml::XmlTextReaderImpl::DtdParserProxy_ParsePI(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ParsePI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ParseComment
void System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseComment(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetTempResolver
::System::Xml::XmlResolver* System::Xml::XmlTextReaderImpl::GetTempResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetTempResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTempResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_PushEntity
bool System::Xml::XmlTextReaderImpl::DtdParserProxy_PushEntity(::System::Xml::IDtdEntityInfo* entity, ByRef<int> entityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_PushEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_PushEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity, byref(entityId));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_PopEntity
bool System::Xml::XmlTextReaderImpl::DtdParserProxy_PopEntity(ByRef<::System::Xml::IDtdEntityInfo*> oldEntity, ByRef<int> newEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_PopEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_PopEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Xml::IDtdEntityInfo*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(oldEntity), byref(newEntityId));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_PushExternalSubset
bool System::Xml::XmlTextReaderImpl::DtdParserProxy_PushExternalSubset(::StringW systemId, ::StringW publicId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_PushExternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_PushExternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(publicId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, systemId, publicId);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_PushInternalDtd
void System::Xml::XmlTextReaderImpl::DtdParserProxy_PushInternalDtd(::StringW baseUri, ::StringW internalDtd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_PushInternalDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_PushInternalDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(internalDtd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, internalDtd);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_Throw
void System::Xml::XmlTextReaderImpl::DtdParserProxy_Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_OnSystemId
void System::Xml::XmlTextReaderImpl::DtdParserProxy_OnSystemId(::StringW systemId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo systemLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_OnSystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_OnSystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(systemLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, systemId, keywordLineInfo, systemLiteralLineInfo);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_OnPublicId
void System::Xml::XmlTextReaderImpl::DtdParserProxy_OnPublicId(::StringW publicId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo publicLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_OnPublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_OnPublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(publicLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, keywordLineInfo, publicLiteralLineInfo);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(int pos, ::StringW res, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, res, arg);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(int pos, ::StringW res, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, res, args);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(int pos, ::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(res)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, res);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::StringW arg, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, args);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::StringW arg, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg, innerException);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::ArrayW<::StringW> args, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, args, innerException);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ReThrow
void System::Xml::XmlTextReaderImpl::ReThrow(::System::Exception* e, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ReThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo
void System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo(::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowWithoutLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo
void System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo(::StringW res, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowWithoutLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo
void System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo(::StringW res, ::ArrayW<::StringW> args, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowWithoutLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, args, innerException);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowInvalidChar
void System::Xml::XmlTextReaderImpl::ThrowInvalidChar(::ArrayW<::Il2CppChar> data, int length, int invCharPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowInvalidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInvalidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(invCharPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, length, invCharPos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetErrorState
void System::Xml::XmlTextReaderImpl::SetErrorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetErrorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetErrorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SendValidationEvent
void System::Xml::XmlTextReaderImpl::SendValidationEvent(::System::Xml::Schema::XmlSeverityType severity, ::StringW code, ::StringW arg, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, severity, code, arg, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SendValidationEvent
void System::Xml::XmlTextReaderImpl::SendValidationEvent(::System::Xml::Schema::XmlSeverityType severity, ::System::Xml::Schema::XmlSchemaException* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, severity, exception);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishAttributeValueIterator
void System::Xml::XmlTextReaderImpl::FinishAttributeValueIterator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishAttributeValueIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishAttributeValueIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitStreamInput
void System::Xml::XmlTextReaderImpl::InitStreamInput(::System::Uri* baseUri, ::System::IO::Stream* stream, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitStreamInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStreamInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, stream, encoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitStreamInput
void System::Xml::XmlTextReaderImpl::InitStreamInput(::System::Uri* baseUri, ::StringW baseUriStr, ::System::IO::Stream* stream, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitStreamInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStreamInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, baseUriStr, stream, encoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitStreamInput
void System::Xml::XmlTextReaderImpl::InitStreamInput(::System::Uri* baseUri, ::StringW baseUriStr, ::System::IO::Stream* stream, ::ArrayW<uint8_t> bytes, int byteCount, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitStreamInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStreamInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, baseUriStr, stream, bytes, byteCount, encoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitTextReaderInput
void System::Xml::XmlTextReaderImpl::InitTextReaderInput(::StringW baseUriStr, ::System::IO::TextReader* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitTextReaderInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTextReaderInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUriStr, input);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitTextReaderInput
void System::Xml::XmlTextReaderImpl::InitTextReaderInput(::StringW baseUriStr, ::System::Uri* baseUri, ::System::IO::TextReader* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitTextReaderInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTextReaderInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUriStr, baseUri, input);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitStringInput
void System::Xml::XmlTextReaderImpl::InitStringInput(::StringW baseUriStr, ::System::Text::Encoding* originalEncoding, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitStringInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStringInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(originalEncoding), ::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUriStr, originalEncoding, str);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitFragmentReader
void System::Xml::XmlTextReaderImpl::InitFragmentReader(::System::Xml::XmlNodeType fragmentType, ::System::Xml::XmlParserContext* parserContext, bool allowXmlDeclFragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitFragmentReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitFragmentReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fragmentType), ::il2cpp_utils::ExtractType(parserContext), ::il2cpp_utils::ExtractType(allowXmlDeclFragment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fragmentType, parserContext, allowXmlDeclFragment);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ProcessDtdFromParserContext
void System::Xml::XmlTextReaderImpl::ProcessDtdFromParserContext(::System::Xml::XmlParserContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ProcessDtdFromParserContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDtdFromParserContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OpenUrl
void System::Xml::XmlTextReaderImpl::OpenUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OpenUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OpenUrlDelegate
void System::Xml::XmlTextReaderImpl::OpenUrlDelegate(::Il2CppObject* xmlResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OpenUrlDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUrlDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlResolver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlResolver);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DetectEncoding
::System::Text::Encoding* System::Xml::XmlTextReaderImpl::DetectEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DetectEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetupEncoding
void System::Xml::XmlTextReaderImpl::SetupEncoding(::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetupEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SwitchEncoding
void System::Xml::XmlTextReaderImpl::SwitchEncoding(::System::Text::Encoding* newEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SwitchEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newEncoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.CheckEncoding
::System::Text::Encoding* System::Xml::XmlTextReaderImpl::CheckEncoding(::StringW newEncodingName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::CheckEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newEncodingName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method, newEncodingName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.UnDecodeChars
void System::Xml::XmlTextReaderImpl::UnDecodeChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::UnDecodeChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnDecodeChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SwitchEncodingToUTF8
void System::Xml::XmlTextReaderImpl::SwitchEncodingToUTF8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SwitchEncodingToUTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchEncodingToUTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ReadData
int System::Xml::XmlTextReaderImpl::ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetChars
int System::Xml::XmlTextReaderImpl::GetChars(int maxCharsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxCharsCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, maxCharsCount);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InvalidCharRecovery
void System::Xml::XmlTextReaderImpl::InvalidCharRecovery(ByRef<int> bytesCount, ByRef<int> charsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InvalidCharRecovery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidCharRecovery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytesCount), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(bytesCount), byref(charsCount));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Close
void System::Xml::XmlTextReaderImpl::Close(bool closeInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeInput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeInput);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ShiftBuffer
void System::Xml::XmlTextReaderImpl::ShiftBuffer(int sourcePos, int destPos, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ShiftBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShiftBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePos), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourcePos, destPos, count);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseXmlDeclaration
bool System::Xml::XmlTextReaderImpl::ParseXmlDeclaration(bool isTextDecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseXmlDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isTextDecl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, isTextDecl);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseDocumentContent
bool System::Xml::XmlTextReaderImpl::ParseDocumentContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseDocumentContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDocumentContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseElementContent
bool System::Xml::XmlTextReaderImpl::ParseElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseElementContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnclosedElements
void System::Xml::XmlTextReaderImpl::ThrowUnclosedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnclosedElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnclosedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseElement
void System::Xml::XmlTextReaderImpl::ParseElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddDefaultAttributesAndNormalize
void System::Xml::XmlTextReaderImpl::AddDefaultAttributesAndNormalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddDefaultAttributesAndNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDefaultAttributesAndNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseEndElement
void System::Xml::XmlTextReaderImpl::ParseEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowTagMismatch
void System::Xml::XmlTextReaderImpl::ThrowTagMismatch(::System::Xml::XmlTextReaderImpl::NodeData* startTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowTagMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowTagMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTag);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseAttributes
void System::Xml::XmlTextReaderImpl::ParseAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ElementNamespaceLookup
void System::Xml::XmlTextReaderImpl::ElementNamespaceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ElementNamespaceLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ElementNamespaceLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AttributeNamespaceLookup
void System::Xml::XmlTextReaderImpl::AttributeNamespaceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AttributeNamespaceLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttributeNamespaceLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AttributeDuplCheck
void System::Xml::XmlTextReaderImpl::AttributeDuplCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AttributeDuplCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttributeDuplCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnDefaultNamespaceDecl
void System::Xml::XmlTextReaderImpl::OnDefaultNamespaceDecl(::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnDefaultNamespaceDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDefaultNamespaceDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnNamespaceDecl
void System::Xml::XmlTextReaderImpl::OnNamespaceDecl(::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnNamespaceDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNamespaceDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnXmlReservedAttribute
void System::Xml::XmlTextReaderImpl::OnXmlReservedAttribute(::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnXmlReservedAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnXmlReservedAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseAttributeValueSlow
void System::Xml::XmlTextReaderImpl::ParseAttributeValueSlow(int curPos, ::Il2CppChar quoteChar, ::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseAttributeValueSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttributeValueSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curPos), ::il2cpp_utils::ExtractType(quoteChar), ::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curPos, quoteChar, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddAttributeChunkToList
void System::Xml::XmlTextReaderImpl::AddAttributeChunkToList(::System::Xml::XmlTextReaderImpl::NodeData* attr, ::System::Xml::XmlTextReaderImpl::NodeData* chunk, ByRef<::System::Xml::XmlTextReaderImpl::NodeData*> lastChunk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddAttributeChunkToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributeChunkToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(lastChunk)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr, chunk, byref(lastChunk));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseText
bool System::Xml::XmlTextReaderImpl::ParseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseText
bool System::Xml::XmlTextReaderImpl::ParseText(ByRef<int> startPos, ByRef<int> endPos, ByRef<int> outOrChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(outOrChars)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(startPos), byref(endPos), byref(outOrChars));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishPartialValue
void System::Xml::XmlTextReaderImpl::FinishPartialValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishPartialValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishPartialValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishOtherValueIterator
void System::Xml::XmlTextReaderImpl::FinishOtherValueIterator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishOtherValueIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishOtherValueIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SkipPartialTextValue
void System::Xml::XmlTextReaderImpl::SkipPartialTextValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SkipPartialTextValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipPartialTextValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishReadValueChunk
void System::Xml::XmlTextReaderImpl::FinishReadValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishReadValueChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishReadValueChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishReadContentAsBinary
void System::Xml::XmlTextReaderImpl::FinishReadContentAsBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishReadContentAsBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishReadContentAsBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishReadElementContentAsBinary
void System::Xml::XmlTextReaderImpl::FinishReadElementContentAsBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishReadElementContentAsBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishReadElementContentAsBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseRootLevelWhitespace
bool System::Xml::XmlTextReaderImpl::ParseRootLevelWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseRootLevelWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRootLevelWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseEntityReference
void System::Xml::XmlTextReaderImpl::ParseEntityReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.HandleEntityReference
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::HandleEntityReference(bool isInAttributeValue, ::System::Xml::XmlTextReaderImpl::EntityExpandType expandType, ByRef<int> charRefEndPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::HandleEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInAttributeValue), ::il2cpp_utils::ExtractType(expandType), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::EntityType, false>(this, ___internal__method, isInAttributeValue, expandType, byref(charRefEndPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.HandleGeneralEntityReference
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::HandleGeneralEntityReference(::StringW name, bool isInAttributeValue, bool pushFakeEntityIfNullResolver, int entityStartLinePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::HandleGeneralEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGeneralEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(isInAttributeValue), ::il2cpp_utils::ExtractType(pushFakeEntityIfNullResolver), ::il2cpp_utils::ExtractType(entityStartLinePos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::EntityType, false>(this, ___internal__method, name, isInAttributeValue, pushFakeEntityIfNullResolver, entityStartLinePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.HandleEntityEnd
bool System::Xml::XmlTextReaderImpl::HandleEntityEnd(bool checkEntityNesting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::HandleEntityEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checkEntityNesting)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, checkEntityNesting);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetupEndEntityNodeInContent
void System::Xml::XmlTextReaderImpl::SetupEndEntityNodeInContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetupEndEntityNodeInContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEndEntityNodeInContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetupEndEntityNodeInAttribute
void System::Xml::XmlTextReaderImpl::SetupEndEntityNodeInAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetupEndEntityNodeInAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEndEntityNodeInAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParsePI
bool System::Xml::XmlTextReaderImpl::ParsePI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsePI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParsePI
bool System::Xml::XmlTextReaderImpl::ParsePI(::System::Text::StringBuilder* piInDtdStringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsePI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piInDtdStringBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, piInDtdStringBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParsePIValue
bool System::Xml::XmlTextReaderImpl::ParsePIValue(ByRef<int> outStartPos, ByRef<int> outEndPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsePIValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePIValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(outStartPos), byref(outEndPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseComment
bool System::Xml::XmlTextReaderImpl::ParseComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseCData
void System::Xml::XmlTextReaderImpl::ParseCData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseCDataOrComment
void System::Xml::XmlTextReaderImpl::ParseCDataOrComment(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseCDataOrComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCDataOrComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseCDataOrComment
bool System::Xml::XmlTextReaderImpl::ParseCDataOrComment(::System::Xml::XmlNodeType type, ByRef<int> outStartPos, ByRef<int> outEndPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseCDataOrComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCDataOrComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type, byref(outStartPos), byref(outEndPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseDoctypeDecl
bool System::Xml::XmlTextReaderImpl::ParseDoctypeDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseDoctypeDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDoctypeDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseDtd
void System::Xml::XmlTextReaderImpl::ParseDtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SkipDtd
void System::Xml::XmlTextReaderImpl::SkipDtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SkipDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SkipPublicOrSystemIdLiteral
void System::Xml::XmlTextReaderImpl::SkipPublicOrSystemIdLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SkipPublicOrSystemIdLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipPublicOrSystemIdLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SkipUntil
void System::Xml::XmlTextReaderImpl::SkipUntil(::Il2CppChar stopChar, bool recognizeLiterals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SkipUntil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopChar), ::il2cpp_utils::ExtractType(recognizeLiterals)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stopChar, recognizeLiterals);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.EatWhitespaces
int System::Xml::XmlTextReaderImpl::EatWhitespaces(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EatWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseCharRefInline
int System::Xml::XmlTextReaderImpl::ParseCharRefInline(int startPos, ByRef<int> charCount, ByRef<::System::Xml::XmlTextReaderImpl::EntityType> entityType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseCharRefInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCharRefInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::Xml::XmlTextReaderImpl::EntityType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPos, byref(charCount), byref(entityType));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseNumericCharRef
int System::Xml::XmlTextReaderImpl::ParseNumericCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder, ByRef<::System::Xml::XmlTextReaderImpl::EntityType> entityType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseNumericCharRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumericCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder), ::il2cpp_utils::ExtractIndependentType<::System::Xml::XmlTextReaderImpl::EntityType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder, byref(entityType));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseNumericCharRefInline
int System::Xml::XmlTextReaderImpl::ParseNumericCharRefInline(int startPos, bool expand, ::System::Text::StringBuilder* internalSubsetBuilder, ByRef<int> charCount, ByRef<::System::Xml::XmlTextReaderImpl::EntityType> entityType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseNumericCharRefInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumericCharRefInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::Xml::XmlTextReaderImpl::EntityType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPos, expand, internalSubsetBuilder, byref(charCount), byref(entityType));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseNamedCharRef
int System::Xml::XmlTextReaderImpl::ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseNamedCharRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNamedCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseNamedCharRefInline
int System::Xml::XmlTextReaderImpl::ParseNamedCharRefInline(int startPos, bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseNamedCharRefInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNamedCharRefInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPos, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseName
int System::Xml::XmlTextReaderImpl::ParseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseQName
int System::Xml::XmlTextReaderImpl::ParseQName(ByRef<int> colonPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(colonPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseQName
int System::Xml::XmlTextReaderImpl::ParseQName(bool isQName, int startOffset, ByRef<int> colonPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isQName), ::il2cpp_utils::ExtractType(startOffset), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, isQName, startOffset, byref(colonPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ReadDataInName
bool System::Xml::XmlTextReaderImpl::ReadDataInName(ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ReadDataInName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDataInName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseEntityName
::StringW System::Xml::XmlTextReaderImpl::ParseEntityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseEntityName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEntityName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddNode
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddNode(int nodeIndex, int nodeDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex), ::il2cpp_utils::ExtractType(nodeDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, nodeIndex, nodeDepth);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AllocNode
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AllocNode(int nodeIndex, int nodeDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AllocNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex), ::il2cpp_utils::ExtractType(nodeDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, nodeIndex, nodeDepth);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddAttributeNoChecks
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddAttributeNoChecks(::StringW name, int attrDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddAttributeNoChecks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributeNoChecks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(attrDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, name, attrDepth);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddAttribute
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddAttribute(int endNamePos, int colonPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endNamePos), ::il2cpp_utils::ExtractType(colonPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, endNamePos, colonPos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddAttribute
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddAttribute(::StringW localName, ::StringW prefix, ::StringW nameWPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(nameWPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, localName, prefix, nameWPrefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PopElementContext
void System::Xml::XmlTextReaderImpl::PopElementContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PopElementContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopElementContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnNewLine
void System::Xml::XmlTextReaderImpl::OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnEof
void System::Xml::XmlTextReaderImpl::OnEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnEof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.LookupNamespace
::StringW System::Xml::XmlTextReaderImpl::LookupNamespace(::System::Xml::XmlTextReaderImpl::NodeData* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::LookupNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddNamespace
void System::Xml::XmlTextReaderImpl::AddNamespace(::StringW prefix, ::StringW uri, ::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ResetAttributes
void System::Xml::XmlTextReaderImpl::ResetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ResetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FullAttributeCleanup
void System::Xml::XmlTextReaderImpl::FullAttributeCleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FullAttributeCleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FullAttributeCleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushXmlContext
void System::Xml::XmlTextReaderImpl::PushXmlContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushXmlContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushXmlContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PopXmlContext
void System::Xml::XmlTextReaderImpl::PopXmlContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PopXmlContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopXmlContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetWhitespaceType
::System::Xml::XmlNodeType System::Xml::XmlTextReaderImpl::GetWhitespaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetWhitespaceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWhitespaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetTextNodeType
::System::Xml::XmlNodeType System::Xml::XmlTextReaderImpl::GetTextNodeType(int orChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetTextNodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextNodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(orChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method, orChars);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushExternalEntityOrSubset
void System::Xml::XmlTextReaderImpl::PushExternalEntityOrSubset(::StringW publicId, ::StringW systemId, ::System::Uri* baseUri, ::StringW entityName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushExternalEntityOrSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushExternalEntityOrSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(entityName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, systemId, baseUri, entityName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OpenAndPush
bool System::Xml::XmlTextReaderImpl::OpenAndPush(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OpenAndPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenAndPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushExternalEntity
bool System::Xml::XmlTextReaderImpl::PushExternalEntity(::System::Xml::IDtdEntityInfo* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushExternalEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushExternalEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushInternalEntity
void System::Xml::XmlTextReaderImpl::PushInternalEntity(::System::Xml::IDtdEntityInfo* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushInternalEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushInternalEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PopEntity
void System::Xml::XmlTextReaderImpl::PopEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PopEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.RegisterEntity
void System::Xml::XmlTextReaderImpl::RegisterEntity(::System::Xml::IDtdEntityInfo* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::RegisterEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.UnregisterEntity
void System::Xml::XmlTextReaderImpl::UnregisterEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::UnregisterEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushParsingState
void System::Xml::XmlTextReaderImpl::PushParsingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushParsingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushParsingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PopParsingState
void System::Xml::XmlTextReaderImpl::PopParsingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PopParsingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopParsingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.IncrementalRead
int System::Xml::XmlTextReaderImpl::IncrementalRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishIncrementalRead
void System::Xml::XmlTextReaderImpl::FinishIncrementalRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishIncrementalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishIncrementalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseFragmentAttribute
bool System::Xml::XmlTextReaderImpl::ParseFragmentAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseFragmentAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFragmentAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseAttributeValueChunk
bool System::Xml::XmlTextReaderImpl::ParseAttributeValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseAttributeValueChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttributeValueChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseXmlDeclarationFragment
void System::Xml::XmlTextReaderImpl::ParseXmlDeclarationFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseXmlDeclarationFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseXmlDeclarationFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnexpectedToken
void System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken(int pos, ::StringW expectedToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(expectedToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, expectedToken);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnexpectedToken
void System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken(::StringW expectedToken1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedToken1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expectedToken1);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnexpectedToken
void System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken(int pos, ::StringW expectedToken1, ::StringW expectedToken2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(expectedToken1), ::il2cpp_utils::ExtractType(expectedToken2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, expectedToken1, expectedToken2);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnexpectedToken
void System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken(::StringW expectedToken1, ::StringW expectedToken2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedToken1), ::il2cpp_utils::ExtractType(expectedToken2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expectedToken1, expectedToken2);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseUnexpectedToken
::StringW System::Xml::XmlTextReaderImpl::ParseUnexpectedToken(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseUnexpectedToken
::StringW System::Xml::XmlTextReaderImpl::ParseUnexpectedToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowExpectingWhitespace
void System::Xml::XmlTextReaderImpl::ThrowExpectingWhitespace(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowExpectingWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowExpectingWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetIndexOfAttributeWithoutPrefix
int System::Xml::XmlTextReaderImpl::GetIndexOfAttributeWithoutPrefix(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetIndexOfAttributeWithoutPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexOfAttributeWithoutPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetIndexOfAttributeWithPrefix
int System::Xml::XmlTextReaderImpl::GetIndexOfAttributeWithPrefix(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetIndexOfAttributeWithPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexOfAttributeWithPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ZeroEndingStream
bool System::Xml::XmlTextReaderImpl::ZeroEndingStream(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ZeroEndingStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ZeroEndingStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseDtdFromParserContext
void System::Xml::XmlTextReaderImpl::ParseDtdFromParserContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseDtdFromParserContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDtdFromParserContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.MoveToNextContentNode
bool System::Xml::XmlTextReaderImpl::MoveToNextContentNode(bool moveIfOnContentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::MoveToNextContentNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextContentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveIfOnContentNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, moveIfOnContentNode);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetDtdInfo
void System::Xml::XmlTextReaderImpl::SetDtdInfo(::System::Xml::IDtdInfo* newDtdInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetDtdInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDtdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDtdInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newDtdInfo);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddDefaultAttributeDtd
bool System::Xml::XmlTextReaderImpl::AddDefaultAttributeDtd(::System::Xml::IDtdDefaultAttributeInfo* defAttrInfo, bool definedInDtd, ::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*> nameSortedNodeData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddDefaultAttributeDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDefaultAttributeDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defAttrInfo), ::il2cpp_utils::ExtractType(definedInDtd), ::il2cpp_utils::ExtractType(nameSortedNodeData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, defAttrInfo, definedInDtd, nameSortedNodeData);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddDefaultAttributeInternal
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddDefaultAttributeInternal(::StringW localName, ::StringW ns, ::StringW prefix, ::StringW value, int lineNo, int linePos, int valueLineNo, int valueLinePos, bool isXmlAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddDefaultAttributeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDefaultAttributeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos), ::il2cpp_utils::ExtractType(valueLineNo), ::il2cpp_utils::ExtractType(valueLinePos), ::il2cpp_utils::ExtractType(isXmlAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, localName, ns, prefix, value, lineNo, linePos, valueLineNo, valueLinePos, isXmlAttribute);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.RegisterConsumedCharacters
void System::Xml::XmlTextReaderImpl::RegisterConsumedCharacters(int64_t characters, bool inEntityReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::RegisterConsumedCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterConsumedCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characters), ::il2cpp_utils::ExtractType(inEntityReference)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, characters, inEntityReference);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.StripSpaces
::StringW System::Xml::XmlTextReaderImpl::StripSpaces(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::StripSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl", "StripSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.StripSpaces
void System::Xml::XmlTextReaderImpl::StripSpaces(::ArrayW<::Il2CppChar> value, int index, ByRef<int> len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::StripSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl", "StripSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, index, byref(len));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.BlockCopyChars
void System::Xml::XmlTextReaderImpl::BlockCopyChars(::ArrayW<::Il2CppChar> src, int srcOffset, ::ArrayW<::Il2CppChar> dst, int dstOffset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::BlockCopyChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl", "BlockCopyChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOffset), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOffset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, srcOffset, dst, dstOffset, count);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.BlockCopy
void System::Xml::XmlTextReaderImpl::BlockCopy(::ArrayW<uint8_t> src, int srcOffset, ::ArrayW<uint8_t> dst, int dstOffset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::BlockCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl", "BlockCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOffset), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOffset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, srcOffset, dst, dstOffset, count);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_Settings
::System::Xml::XmlReaderSettings* System::Xml::XmlTextReaderImpl::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_Settings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReaderSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlTextReaderImpl::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_Name
::StringW System::Xml::XmlTextReaderImpl::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_LocalName
::StringW System::Xml::XmlTextReaderImpl::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_NamespaceURI
::StringW System::Xml::XmlTextReaderImpl::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_Prefix
::StringW System::Xml::XmlTextReaderImpl::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_Value
::StringW System::Xml::XmlTextReaderImpl::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_BaseURI
::StringW System::Xml::XmlTextReaderImpl::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_IsEmptyElement
bool System::Xml::XmlTextReaderImpl::get_IsEmptyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_IsEmptyElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmptyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_IsDefault
bool System::Xml::XmlTextReaderImpl::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_ReadState
::System::Xml::ReadState System::Xml::XmlTextReaderImpl::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_ReadState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlTextReaderImpl::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_CanResolveEntity
bool System::Xml::XmlTextReaderImpl::get_CanResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_CanResolveEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanResolveEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdInfo
::System::Xml::IDtdInfo* System::Xml::XmlTextReaderImpl::get_DtdInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.MoveToAttribute
bool System::Xml::XmlTextReaderImpl::MoveToAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.MoveToFirstAttribute
bool System::Xml::XmlTextReaderImpl::MoveToFirstAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::MoveToFirstAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFirstAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.MoveToNextAttribute
bool System::Xml::XmlTextReaderImpl::MoveToNextAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::MoveToNextAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.MoveToElement
bool System::Xml::XmlTextReaderImpl::MoveToElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::MoveToElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Read
bool System::Xml::XmlTextReaderImpl::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Close
void System::Xml::XmlTextReaderImpl::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.LookupNamespace
::StringW System::Xml::XmlTextReaderImpl::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ReadAttributeValue
bool System::Xml::XmlTextReaderImpl::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ResolveEntity
void System::Xml::XmlTextReaderImpl::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction
#include "System/Xml/XmlTextReaderImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction ElementContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ElementContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ElementContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction ElementContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ElementContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ElementContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ElementContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction NoData
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_NoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_NoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction NoData
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_NoData(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_NoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction OpenUrl
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_OpenUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_OpenUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "OpenUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction OpenUrl
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_OpenUrl(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_OpenUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "OpenUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction SwitchToInteractive
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_SwitchToInteractive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_SwitchToInteractive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "SwitchToInteractive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction SwitchToInteractive
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_SwitchToInteractive(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_SwitchToInteractive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "SwitchToInteractive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction SwitchToInteractiveXmlDecl
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_SwitchToInteractiveXmlDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_SwitchToInteractiveXmlDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "SwitchToInteractiveXmlDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction SwitchToInteractiveXmlDecl
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_SwitchToInteractiveXmlDecl(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_SwitchToInteractiveXmlDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "SwitchToInteractiveXmlDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction DocumentContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_DocumentContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_DocumentContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "DocumentContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction DocumentContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_DocumentContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_DocumentContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "DocumentContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction MoveToElementContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_MoveToElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_MoveToElementContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "MoveToElementContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction MoveToElementContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_MoveToElementContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_MoveToElementContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "MoveToElementContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction PopElementContext
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PopElementContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PopElementContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PopElementContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction PopElementContext
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PopElementContext(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PopElementContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PopElementContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction PopEmptyElementContext
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PopEmptyElementContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PopEmptyElementContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PopEmptyElementContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction PopEmptyElementContext
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PopEmptyElementContext(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PopEmptyElementContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PopEmptyElementContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction ResetAttributesRootLevel
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ResetAttributesRootLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ResetAttributesRootLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ResetAttributesRootLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction ResetAttributesRootLevel
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ResetAttributesRootLevel(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ResetAttributesRootLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ResetAttributesRootLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction Error
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction Error
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_Error(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction Eof
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_Eof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "Eof"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction Eof
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_Eof(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_Eof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "Eof", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction ReaderClosed
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ReaderClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ReaderClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ReaderClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction ReaderClosed
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ReaderClosed(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ReaderClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ReaderClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction EntityReference
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_EntityReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_EntityReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "EntityReference"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction EntityReference
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_EntityReference(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_EntityReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "EntityReference", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InIncrementalRead
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InIncrementalRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InIncrementalRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InIncrementalRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InIncrementalRead
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InIncrementalRead(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InIncrementalRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InIncrementalRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction FragmentAttribute
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_FragmentAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_FragmentAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "FragmentAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction FragmentAttribute
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_FragmentAttribute(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_FragmentAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "FragmentAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction ReportEndEntity
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ReportEndEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ReportEndEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ReportEndEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction ReportEndEntity
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ReportEndEntity(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ReportEndEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ReportEndEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction AfterResolveEntityInContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_AfterResolveEntityInContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_AfterResolveEntityInContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "AfterResolveEntityInContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction AfterResolveEntityInContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_AfterResolveEntityInContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_AfterResolveEntityInContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "AfterResolveEntityInContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction AfterResolveEmptyEntityInContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_AfterResolveEmptyEntityInContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_AfterResolveEmptyEntityInContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "AfterResolveEmptyEntityInContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction AfterResolveEmptyEntityInContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_AfterResolveEmptyEntityInContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_AfterResolveEmptyEntityInContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "AfterResolveEmptyEntityInContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction XmlDeclarationFragment
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_XmlDeclarationFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_XmlDeclarationFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "XmlDeclarationFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction XmlDeclarationFragment
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_XmlDeclarationFragment(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_XmlDeclarationFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "XmlDeclarationFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction GoToEof
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_GoToEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_GoToEof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "GoToEof"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction GoToEof
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_GoToEof(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_GoToEof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "GoToEof", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction PartialTextValue
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PartialTextValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PartialTextValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PartialTextValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction PartialTextValue
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PartialTextValue(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PartialTextValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PartialTextValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InReadAttributeValue
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadAttributeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadAttributeValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InReadAttributeValue
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadAttributeValue(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadAttributeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadAttributeValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InReadValueChunk
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadValueChunk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadValueChunk"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InReadValueChunk
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadValueChunk(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadValueChunk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadValueChunk", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InReadContentAsBinary
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadContentAsBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadContentAsBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadContentAsBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InReadContentAsBinary
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadContentAsBinary(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadContentAsBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadContentAsBinary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InReadElementContentAsBinary
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadElementContentAsBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadElementContentAsBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadElementContentAsBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingFunction InReadElementContentAsBinary
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadElementContentAsBinary(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadElementContentAsBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadElementContentAsBinary", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingFunction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.ParsingMode
#include "System/Xml/XmlTextReaderImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingMode Full
::System::Xml::XmlTextReaderImpl::ParsingMode System::Xml::XmlTextReaderImpl::ParsingMode::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingMode>("System.Xml", "XmlTextReaderImpl/ParsingMode", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingMode Full
void System::Xml::XmlTextReaderImpl::ParsingMode::_set_Full(::System::Xml::XmlTextReaderImpl::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingMode", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingMode SkipNode
::System::Xml::XmlTextReaderImpl::ParsingMode System::Xml::XmlTextReaderImpl::ParsingMode::_get_SkipNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_get_SkipNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingMode>("System.Xml", "XmlTextReaderImpl/ParsingMode", "SkipNode"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingMode SkipNode
void System::Xml::XmlTextReaderImpl::ParsingMode::_set_SkipNode(::System::Xml::XmlTextReaderImpl::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_set_SkipNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingMode", "SkipNode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingMode SkipContent
::System::Xml::XmlTextReaderImpl::ParsingMode System::Xml::XmlTextReaderImpl::ParsingMode::_get_SkipContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_get_SkipContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingMode>("System.Xml", "XmlTextReaderImpl/ParsingMode", "SkipContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.ParsingMode SkipContent
void System::Xml::XmlTextReaderImpl::ParsingMode::_set_SkipContent(::System::Xml::XmlTextReaderImpl::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_set_SkipContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingMode", "SkipContent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.EntityType
#include "System/Xml/XmlTextReaderImpl_EntityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterDec
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterDec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterDec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterDec"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterDec
void System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterDec(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterDec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterDec", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterHex
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterHex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterHex"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterHex
void System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterHex(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterHex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterHex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterNamed
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterNamed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterNamed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterNamed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterNamed
void System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterNamed(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterNamed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterNamed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Expanded
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_Expanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_Expanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "Expanded"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Expanded
void System::Xml::XmlTextReaderImpl::EntityType::_set_Expanded(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_Expanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "Expanded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Skipped
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_Skipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_Skipped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "Skipped"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Skipped
void System::Xml::XmlTextReaderImpl::EntityType::_set_Skipped(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_Skipped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "Skipped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType FakeExpanded
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_FakeExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_FakeExpanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "FakeExpanded"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType FakeExpanded
void System::Xml::XmlTextReaderImpl::EntityType::_set_FakeExpanded(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_FakeExpanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "FakeExpanded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Unexpanded
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_Unexpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_Unexpanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "Unexpanded"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Unexpanded
void System::Xml::XmlTextReaderImpl::EntityType::_set_Unexpanded(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_Unexpanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "Unexpanded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType ExpandedInAttribute
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_ExpandedInAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_ExpandedInAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "ExpandedInAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType ExpandedInAttribute
void System::Xml::XmlTextReaderImpl::EntityType::_set_ExpandedInAttribute(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_ExpandedInAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "ExpandedInAttribute", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::EntityType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.EntityExpandType
#include "System/Xml/XmlTextReaderImpl_EntityExpandType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityExpandType All
::System::Xml::XmlTextReaderImpl::EntityExpandType System::Xml::XmlTextReaderImpl::EntityExpandType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityExpandType>("System.Xml", "XmlTextReaderImpl/EntityExpandType", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityExpandType All
void System::Xml::XmlTextReaderImpl::EntityExpandType::_set_All(::System::Xml::XmlTextReaderImpl::EntityExpandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityExpandType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityExpandType OnlyGeneral
::System::Xml::XmlTextReaderImpl::EntityExpandType System::Xml::XmlTextReaderImpl::EntityExpandType::_get_OnlyGeneral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_get_OnlyGeneral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityExpandType>("System.Xml", "XmlTextReaderImpl/EntityExpandType", "OnlyGeneral"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityExpandType OnlyGeneral
void System::Xml::XmlTextReaderImpl::EntityExpandType::_set_OnlyGeneral(::System::Xml::XmlTextReaderImpl::EntityExpandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_set_OnlyGeneral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityExpandType", "OnlyGeneral", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityExpandType OnlyCharacter
::System::Xml::XmlTextReaderImpl::EntityExpandType System::Xml::XmlTextReaderImpl::EntityExpandType::_get_OnlyCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_get_OnlyCharacter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityExpandType>("System.Xml", "XmlTextReaderImpl/EntityExpandType", "OnlyCharacter"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityExpandType OnlyCharacter
void System::Xml::XmlTextReaderImpl::EntityExpandType::_set_OnlyCharacter(::System::Xml::XmlTextReaderImpl::EntityExpandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_set_OnlyCharacter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityExpandType", "OnlyCharacter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::EntityExpandType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState
#include "System/Xml/XmlTextReaderImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState Text
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState Text
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Text(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState StartTag
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_StartTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_StartTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "StartTag"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState StartTag
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_StartTag(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_StartTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "StartTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState PI
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState PI
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_PI(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState CDATA
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_CDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_CDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "CDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState CDATA
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_CDATA(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_CDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "CDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState Comment
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState Comment
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Comment(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState Attributes
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Attributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState Attributes
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Attributes(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Attributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState AttributeValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_AttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_AttributeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "AttributeValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState AttributeValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_AttributeValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_AttributeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "AttributeValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadData
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadData
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadData(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState EndElement
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_EndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_EndElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "EndElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState EndElement
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_EndElement(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_EndElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "EndElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState End
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState End
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_End(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadValueChunk_OnCachedValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadValueChunk_OnCachedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadValueChunk_OnCachedValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadValueChunk_OnCachedValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadValueChunk_OnCachedValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadValueChunk_OnCachedValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadValueChunk_OnCachedValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadValueChunk_OnCachedValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadValueChunk_OnPartialValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadValueChunk_OnPartialValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadValueChunk_OnPartialValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadValueChunk_OnPartialValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadValueChunk_OnPartialValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadValueChunk_OnPartialValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadValueChunk_OnPartialValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadValueChunk_OnPartialValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadContentAsBinary_OnCachedValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_OnCachedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_OnCachedValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_OnCachedValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadContentAsBinary_OnCachedValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_OnCachedValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_OnCachedValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_OnCachedValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadContentAsBinary_OnPartialValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_OnPartialValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_OnPartialValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_OnPartialValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadContentAsBinary_OnPartialValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_OnPartialValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_OnPartialValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_OnPartialValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadContentAsBinary_End
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_End"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.IncrementalReadState ReadContentAsBinary_End
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_End(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::IncrementalReadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
