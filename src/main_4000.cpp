// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Authenticode.PrivateKey
#include "Mono/Security/Authenticode/PrivateKey.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.get_RSA
System::Security::Cryptography::RSA* Mono::Security::Authenticode::PrivateKey::get_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::get_RSA");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RSA", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.DeriveKey
::Array<uint8_t>* Mono::Security::Authenticode::PrivateKey::DeriveKey(::Array<uint8_t>* salt, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::DeriveKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeriveKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(salt, password)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, salt, password);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.Decode
bool Mono::Security::Authenticode::PrivateKey::Decode(::Array<uint8_t>* pvk, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::Decode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pvk, password)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pvk, password);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.CreateFromFile
Mono::Security::Authenticode::PrivateKey* Mono::Security::Authenticode::PrivateKey::CreateFromFile(::Il2CppString* filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::CreateFromFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Authenticode", "PrivateKey", "CreateFromFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filename)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Authenticode::PrivateKey*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.CreateFromFile
Mono::Security::Authenticode::PrivateKey* Mono::Security::Authenticode::PrivateKey::CreateFromFile(::Il2CppString* filename, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::CreateFromFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Authenticode", "PrivateKey", "CreateFromFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filename, password)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Authenticode::PrivateKey*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, password);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] smallPrimes
::Array<uint>* Mono::Math::BigInteger::_get_smallPrimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::_get_smallPrimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Mono.Math", "BigInteger", "smallPrimes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] smallPrimes
void Mono::Math::BigInteger::_set_smallPrimes(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::_set_smallPrimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "smallPrimes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RandomNumberGenerator*>("Mono.Math", "BigInteger", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Math::BigInteger::_set_rng(System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "rng", value));
}
// Autogenerated method: Mono.Math.BigInteger.get_Rng
System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::get_Rng");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "get_Rng", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits, System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bits, rng)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits, rng);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bits)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.BitCount
int Mono::Math::BigInteger::BitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::BitCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BitCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger::TestBit(int bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::TestBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TestBit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bitNum)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::SetBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bitNum)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::SetBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bitNum, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitNum, value);
}
// Autogenerated method: Mono.Math.BigInteger.LowestSetBit
int Mono::Math::BigInteger::LowestSetBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::LowestSetBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LowestSetBit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetBytes
::Array<uint8_t>* Mono::Math::BigInteger::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GetBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString(uint radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(radix)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, radix);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString(uint radix, ::Il2CppString* characterSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(radix, characterSet)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, radix, characterSet);
}
// Autogenerated method: Mono.Math.BigInteger.Normalize
void Mono::Math::BigInteger::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Normalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ModInverse
Mono::Math::BigInteger* Mono::Math::BigInteger::ModInverse(Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModInverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ModInverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(modulus)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, modulus);
}
// Autogenerated method: Mono.Math.BigInteger.GeneratePseudoPrime
Mono::Math::BigInteger* Mono::Math::BigInteger::GeneratePseudoPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GeneratePseudoPrime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GeneratePseudoPrime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bits)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Incr2
void Mono::Math::BigInteger::Incr2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Incr2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Incr2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger..cctor
void Mono::Math::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetHashCode
int Mono::Math::BigInteger::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Equals
bool Mono::Math::BigInteger::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: Mono.Math.BigInteger.op_Subtraction
Mono::Math::BigInteger* Mono::Math::operator-(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
uint Mono::Math::operator%(Mono::Math::BigInteger& bi, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(&bi, ui)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
Mono::Math::BigInteger* Mono::Math::operator%(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Division
Mono::Math::BigInteger* Mono::Math::operator/(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Division");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Division", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
Mono::Math::BigInteger* Mono::Math::operator*(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LeftShift
Mono::Math::BigInteger* Mono::Math::operator<<(Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_LeftShift");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LeftShift", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(&bi1, shiftVal)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_RightShift
Mono::Math::BigInteger* Mono::Math::operator>>(Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_RightShift");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_RightShift", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(&bi1, shiftVal)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(&bi1, ui)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(&bi1, ui)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThan
bool Mono::Math::operator >(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThan
bool Mono::Math::operator <(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThanOrEqual
bool Mono::Math::operator >=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThanOrEqual
bool Mono::Math::operator <=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, &bi2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Negative
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Negative() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_get_Negative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Negative"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Negative
void Mono::Math::BigInteger::Sign::_set_Negative(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_set_Negative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Negative", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Zero
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Zero
void Mono::Math::BigInteger::Sign::_set_Zero(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Positive
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_get_Positive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Positive"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Positive
void Mono::Math::BigInteger::Sign::_set_Positive(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_set_Positive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Positive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.BarrettReduction
void Mono::Math::BigInteger::ModulusRing::BarrettReduction(Mono::Math::BigInteger* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::BarrettReduction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BarrettReduction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Multiply
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Multiply(Mono::Math::BigInteger* a, Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Difference
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Difference(Mono::Math::BigInteger* a, Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::Difference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Difference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(Mono::Math::BigInteger* a, Mono::Math::BigInteger* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, k)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, k);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(uint b, Mono::Math::BigInteger* exp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(b, exp)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, b, exp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/Kernel.Subtract
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::Subtract(Mono::Math::BigInteger* big, Mono::Math::BigInteger* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::Subtract");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Subtract", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(big, small)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MinusEq
void Mono::Math::BigInteger::Kernel::MinusEq(Mono::Math::BigInteger* big, Mono::Math::BigInteger* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::MinusEq");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MinusEq", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(big, small)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.PlusEq
void Mono::Math::BigInteger::Kernel::PlusEq(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::PlusEq");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "PlusEq", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, bi2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Compare
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Kernel::Compare(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, bi2)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger::Sign, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.SingleByteDivideInPlace
uint Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace(Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "SingleByteDivideInPlace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, d)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordMod
uint Mono::Math::BigInteger::Kernel::DwordMod(Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::DwordMod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordMod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, d)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordDivMod
::Array<Mono::Math::BigInteger*>* Mono::Math::BigInteger::Kernel::DwordDivMod(Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::DwordDivMod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordDivMod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, d)));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Math::BigInteger*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.multiByteDivide
::Array<Mono::Math::BigInteger*>* Mono::Math::BigInteger::Kernel::multiByteDivide(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::multiByteDivide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "multiByteDivide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi1, bi2)));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Math::BigInteger*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.LeftShift
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::LeftShift(Mono::Math::BigInteger* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::LeftShift");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "LeftShift", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi, n)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.RightShift
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::RightShift(Mono::Math::BigInteger* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::RightShift");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "RightShift", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi, n)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Multiply
void Mono::Math::BigInteger::Kernel::Multiply(::Array<uint>* x, uint xOffset, uint xLen, ::Array<uint>* y, uint yOffset, uint yLen, ::Array<uint>* d, uint dOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, xOffset, xLen, y, yOffset, yLen, d, dOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffset, yLen, d, dOffset);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MultiplyMod2p32pmod
void Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod(::Array<uint>* x, int xOffset, int xLen, ::Array<uint>* y, int yOffest, int yLen, ::Array<uint>* d, int dOffset, int mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MultiplyMod2p32pmod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, xOffset, xLen, y, yOffest, yLen, d, dOffset, mod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffest, yLen, d, dOffset, mod);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
uint Mono::Math::BigInteger::Kernel::modInverse(Mono::Math::BigInteger* bi, uint modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi, modulus)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::modInverse(Mono::Math::BigInteger* bi, Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi, modulus)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_ExtraLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_ExtraLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
void Mono::Math::Prime::ConfidenceFactor::_set_ExtraLow(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_ExtraLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Low
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Low
void Mono::Math::Prime::ConfidenceFactor::_set_Low(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Medium
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Medium
void Mono::Math::Prime::ConfidenceFactor::_set_Medium(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor High
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "High"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor High
void Mono::Math::Prime::ConfidenceFactor::_set_High(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "High", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_ExtraHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_ExtraHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
void Mono::Math::Prime::ConfidenceFactor::_set_ExtraHigh(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_ExtraHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Provable
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Provable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_Provable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Provable"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Provable
void Mono::Math::Prime::ConfidenceFactor::_set_Provable(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_Provable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Provable", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTest.Invoke
bool Mono::Math::Prime::PrimalityTest::Invoke_NEW(Mono::Math::BigInteger* bi, Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTest::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi, confidence)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTest.BeginInvoke
System::IAsyncResult* Mono::Math::Prime::PrimalityTest::BeginInvoke_NEW(Mono::Math::BigInteger* bi, Mono::Math::Prime::ConfidenceFactor confidence, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTest::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi, confidence, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, bi, confidence, callback, object);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTest.EndInvoke
bool Mono::Math::Prime::PrimalityTest::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTest::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.PrimalityTests
#include "Mono/Math/Prime/PrimalityTests.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTests.GetSPPRounds
int Mono::Math::Prime::PrimalityTests::GetSPPRounds(Mono::Math::BigInteger* bi, Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTests::GetSPPRounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "GetSPPRounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi, confidence)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.RabinMillerTest
bool Mono::Math::Prime::PrimalityTests::RabinMillerTest(Mono::Math::BigInteger* n, Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTests::RabinMillerTest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "RabinMillerTest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, confidence)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, confidence);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.Generator.PrimeGeneratorBase
#include "Mono/Math/Prime/Generator/PrimeGeneratorBase.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_Confidence
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::Generator::PrimeGeneratorBase::get_Confidence_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::PrimeGeneratorBase::get_Confidence_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Confidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::Prime::ConfidenceFactor, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_PrimalityTest
Mono::Math::Prime::PrimalityTest* Mono::Math::Prime::Generator::PrimeGeneratorBase::get_PrimalityTest_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::PrimeGeneratorBase::get_PrimalityTest_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PrimalityTest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::Prime::PrimalityTest*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_TrialDivisionBounds
int Mono::Math::Prime::Generator::PrimeGeneratorBase::get_TrialDivisionBounds_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::PrimeGeneratorBase::get_TrialDivisionBounds_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TrialDivisionBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.GenerateNewPrime
Mono::Math::BigInteger* Mono::Math::Prime::Generator::PrimeGeneratorBase::GenerateNewPrime_NEW(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::PrimeGeneratorBase::GenerateNewPrime_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bits)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase
#include "Mono/Math/Prime/Generator/SequentialSearchPrimeGeneratorBase.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateSearchBase
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase_NEW(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateSearchBase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bits, context)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime_NEW(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bits, context)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.IsPrimeAcceptable
bool Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable_NEW(Mono::Math::BigInteger* bi, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPrimeAcceptable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bi, context)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bi, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bits)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.Format
::Il2CppString* GlobalNamespace::SR::Format(::Il2CppString* resourceFormat, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourceFormat, p1)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resourceFormat, p1);
}
// Autogenerated method: SR.Format
::Il2CppString* GlobalNamespace::SR::Format(::Il2CppString* resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourceFormat, p1, p2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resourceFormat, p1, p2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Runtime
#include "Mono/Runtime.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Runtime.mono_runtime_install_handlers
void Mono::Runtime::mono_runtime_install_handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::mono_runtime_install_handlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "mono_runtime_install_handlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.InstallSignalHandlers
void Mono::Runtime::InstallSignalHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::InstallSignalHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "InstallSignalHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.mono_runtime_cleanup_handlers
void Mono::Runtime::mono_runtime_cleanup_handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::mono_runtime_cleanup_handlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "mono_runtime_cleanup_handlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.RemoveSignalHandlers
void Mono::Runtime::RemoveSignalHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::RemoveSignalHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "RemoveSignalHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.GetDisplayName
::Il2CppString* Mono::Runtime::GetDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "GetDisplayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.GetNativeStackTrace
::Il2CppString* Mono::Runtime::GetNativeStackTrace(System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::GetNativeStackTrace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "GetNativeStackTrace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exception)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Mono.Runtime.SetGCAllowSynchronousMajor
bool Mono::Runtime::SetGCAllowSynchronousMajor(bool flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::SetGCAllowSynchronousMajor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "Runtime", "SetGCAllowSynchronousMajor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flag)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flag);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeClassHandle
#include "Mono/RuntimeClassHandle.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: Mono.RuntimeStructs/MonoClass
#include "Mono/RuntimeStructs_MonoClass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeClassHandle.get_Value
Mono::RuntimeStructs::MonoClass* Mono::RuntimeClassHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::RuntimeStructs::MonoClass*, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetTypeFromClass
System::IntPtr Mono::RuntimeClassHandle::GetTypeFromClass(Mono::RuntimeStructs::MonoClass* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::GetTypeFromClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeClassHandle", "GetTypeFromClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(klass)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetTypeHandle
System::RuntimeTypeHandle Mono::RuntimeClassHandle::GetTypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::GetTypeHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTypeHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeClassHandle.Equals
bool Mono::RuntimeClassHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetHashCode
int Mono::RuntimeClassHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeRemoteClassHandle
#include "Mono/RuntimeRemoteClassHandle.hpp"
// Including type: Mono.RuntimeClassHandle
#include "Mono/RuntimeClassHandle.hpp"
// Including type: Mono.RuntimeStructs/RemoteClass
#include "Mono/RuntimeStructs_RemoteClass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeRemoteClassHandle.get_ProxyClass
Mono::RuntimeClassHandle Mono::RuntimeRemoteClassHandle::get_ProxyClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeRemoteClassHandle::get_ProxyClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_ProxyClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::RuntimeClassHandle, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeGenericParamInfoHandle
#include "Mono/RuntimeGenericParamInfoHandle.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: Mono.RuntimeStructs/GenericParamInfo
#include "Mono/RuntimeStructs_GenericParamInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.get_Constraints
::Array<System::Type*>* Mono::RuntimeGenericParamInfoHandle::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGenericParamInfoHandle::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Constraints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.get_Attributes
System::Reflection::GenericParameterAttributes Mono::RuntimeGenericParamInfoHandle::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGenericParamInfoHandle::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.GetConstraints
::Array<System::Type*>* Mono::RuntimeGenericParamInfoHandle::GetConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGenericParamInfoHandle::GetConstraints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetConstraints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.GetConstraintsCount
int Mono::RuntimeGenericParamInfoHandle::GetConstraintsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGenericParamInfoHandle::GetConstraintsCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetConstraintsCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeEventHandle
#include "Mono/RuntimeEventHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeEventHandle.get_Value
System::IntPtr Mono::RuntimeEventHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeEventHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeEventHandle.Equals
bool Mono::RuntimeEventHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeEventHandle::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimeEventHandle.GetHashCode
int Mono::RuntimeEventHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeEventHandle::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimePropertyHandle
#include "Mono/RuntimePropertyHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimePropertyHandle.get_Value
System::IntPtr Mono::RuntimePropertyHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimePropertyHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimePropertyHandle.Equals
bool Mono::RuntimePropertyHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimePropertyHandle::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimePropertyHandle.GetHashCode
int Mono::RuntimePropertyHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimePropertyHandle::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeGPtrArrayHandle
#include "Mono/RuntimeGPtrArrayHandle.hpp"
// Including type: Mono.RuntimeStructs/GPtrArray
#include "Mono/RuntimeStructs_GPtrArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.get_Length
int Mono::RuntimeGPtrArrayHandle::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.get_Item
System::IntPtr Mono::RuntimeGPtrArrayHandle::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method, i);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.Lookup
System::IntPtr Mono::RuntimeGPtrArrayHandle::Lookup(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::Lookup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Lookup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method, i);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.GPtrArrayFree
void Mono::RuntimeGPtrArrayHandle::GPtrArrayFree(Mono::RuntimeStructs::GPtrArray* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::GPtrArrayFree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeGPtrArrayHandle", "GPtrArrayFree", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.DestroyAndFree
void Mono::RuntimeGPtrArrayHandle::DestroyAndFree(Mono::RuntimeGPtrArrayHandle& h) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::DestroyAndFree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeGPtrArrayHandle", "DestroyAndFree", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeMarshal
#include "Mono/RuntimeMarshal.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.SafeStringMarshal
#include "Mono/SafeStringMarshal.hpp"
// Including type: Mono.MonoAssemblyName
#include "Mono/MonoAssemblyName.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeMarshal.PtrToUtf8String
::Il2CppString* Mono::RuntimeMarshal::PtrToUtf8String(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeMarshal::PtrToUtf8String");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "PtrToUtf8String", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeMarshal.MarshalString
Mono::SafeStringMarshal Mono::RuntimeMarshal::MarshalString(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeMarshal::MarshalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "MarshalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<Mono::SafeStringMarshal, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Mono.RuntimeMarshal.DecodeBlobSize
int Mono::RuntimeMarshal::DecodeBlobSize(System::IntPtr in_ptr, System::IntPtr& out_ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeMarshal::DecodeBlobSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "DecodeBlobSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(in_ptr, out_ptr)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, in_ptr, out_ptr);
}
// Autogenerated method: Mono.RuntimeMarshal.DecodeBlobArray
::Array<uint8_t>* Mono::RuntimeMarshal::DecodeBlobArray(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeMarshal::DecodeBlobArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "DecodeBlobArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeMarshal.AsciHexDigitValue
int Mono::RuntimeMarshal::AsciHexDigitValue(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeMarshal::AsciHexDigitValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "AsciHexDigitValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.RuntimeMarshal.FreeAssemblyName
void Mono::RuntimeMarshal::FreeAssemblyName(Mono::MonoAssemblyName& name, bool freeStruct) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeMarshal::FreeAssemblyName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "FreeAssemblyName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, freeStruct)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, freeStruct);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.SafeGPtrArrayHandle
#include "Mono/SafeGPtrArrayHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.SafeGPtrArrayHandle.Dispose
void Mono::SafeGPtrArrayHandle::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::SafeGPtrArrayHandle::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle.get_Length
int Mono::SafeGPtrArrayHandle::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::SafeGPtrArrayHandle::get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle.get_Item
System::IntPtr Mono::SafeGPtrArrayHandle::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::SafeGPtrArrayHandle::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.SafeStringMarshal
#include "Mono/SafeStringMarshal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.SafeStringMarshal.StringToUtf8
System::IntPtr Mono::SafeStringMarshal::StringToUtf8(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::SafeStringMarshal::StringToUtf8");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "SafeStringMarshal", "StringToUtf8", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Mono.SafeStringMarshal.GFree
void Mono::SafeStringMarshal::GFree(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::SafeStringMarshal::GFree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono", "SafeStringMarshal", "GFree", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.SafeStringMarshal.get_Value
System::IntPtr Mono::SafeStringMarshal::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::SafeStringMarshal::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.SafeStringMarshal.Dispose
void Mono::SafeStringMarshal::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::SafeStringMarshal::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Xml.SecurityParser
#include "Mono/Xml/SecurityParser.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SecurityParser.LoadXml
void Mono::Xml::SecurityParser::LoadXml(::Il2CppString* xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::LoadXml");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadXml", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(xml)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xml);
}
// Autogenerated method: Mono.Xml.SecurityParser.ToXml
System::Security::SecurityElement* Mono::Xml::SecurityParser::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::ToXml");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnStartParsing
void Mono::Xml::SecurityParser::OnStartParsing_NEW(Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::OnStartParsing_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStartParsing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parser)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnProcessingInstruction
void Mono::Xml::SecurityParser::OnProcessingInstruction_NEW(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::OnProcessingInstruction_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnProcessingInstruction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnIgnorableWhitespace
void Mono::Xml::SecurityParser::OnIgnorableWhitespace_NEW(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::OnIgnorableWhitespace_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnIgnorableWhitespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnStartElement
void Mono::Xml::SecurityParser::OnStartElement_NEW(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::OnStartElement_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStartElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnEndElement
void Mono::Xml::SecurityParser::OnEndElement_NEW(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::OnEndElement_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEndElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnChars
void Mono::Xml::SecurityParser::OnChars_NEW(::Il2CppString* ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::OnChars_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnEndParsing
void Mono::Xml::SecurityParser::OnEndParsing_NEW(Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::OnEndParsing_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEndParsing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parser)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Xml.SmallXmlParser
#include "Mono/Xml/SmallXmlParser.hpp"
// Including type: Mono.Xml.SmallXmlParser/IContentHandler
#include "Mono/Xml/SmallXmlParser_IContentHandler.hpp"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
// Including type: Mono.Xml.SmallXmlParser/AttrListImpl
#include "Mono/Xml/SmallXmlParser_AttrListImpl.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SmallXmlParser.Error
System::Exception* Mono::Xml::SmallXmlParser::Error(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::Error");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(msg)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method, msg);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.UnexpectedEndError
System::Exception* Mono::Xml::SmallXmlParser::UnexpectedEndError() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::UnexpectedEndError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnexpectedEndError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.IsNameChar
bool Mono::Xml::SmallXmlParser::IsNameChar(::Il2CppChar c, bool start) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IsNameChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsNameChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c, start)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c, start);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.IsWhitespace
bool Mono::Xml::SmallXmlParser::IsWhitespace(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IsWhitespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsWhitespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.SkipWhitespaces
void Mono::Xml::SmallXmlParser::SkipWhitespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::SkipWhitespaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SkipWhitespaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.HandleWhitespaces
void Mono::Xml::SmallXmlParser::HandleWhitespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::HandleWhitespaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleWhitespaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.SkipWhitespaces
void Mono::Xml::SmallXmlParser::SkipWhitespaces(bool expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::SkipWhitespaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SkipWhitespaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(expected)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, expected);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Peek
int Mono::Xml::SmallXmlParser::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::Peek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Read
int Mono::Xml::SmallXmlParser::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Expect
void Mono::Xml::SmallXmlParser::Expect(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::Expect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Expect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadUntil
::Il2CppString* Mono::Xml::SmallXmlParser::ReadUntil(::Il2CppChar until, bool handleReferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadUntil");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadUntil", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(until, handleReferences)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, until, handleReferences);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadName
::Il2CppString* Mono::Xml::SmallXmlParser::ReadName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Parse
void Mono::Xml::SmallXmlParser::Parse(System::IO::TextReader* input, Mono::Xml::SmallXmlParser::IContentHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, handler)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, handler);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Cleanup
void Mono::Xml::SmallXmlParser::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::Cleanup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadContent
void Mono::Xml::SmallXmlParser::ReadContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadContent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadContent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.HandleBufferedContent
void Mono::Xml::SmallXmlParser::HandleBufferedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::HandleBufferedContent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBufferedContent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCharacters
void Mono::Xml::SmallXmlParser::ReadCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadReference
void Mono::Xml::SmallXmlParser::ReadReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCharacterReference
int Mono::Xml::SmallXmlParser::ReadCharacterReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadCharacterReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadCharacterReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadAttribute
void Mono::Xml::SmallXmlParser::ReadAttribute(Mono::Xml::SmallXmlParser::AttrListImpl* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadAttribute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadAttribute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCDATASection
void Mono::Xml::SmallXmlParser::ReadCDATASection() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadCDATASection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadCDATASection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadComment
void Mono::Xml::SmallXmlParser::ReadComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::ReadComment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadComment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Xml.SmallXmlParser/IContentHandler
#include "Mono/Xml/SmallXmlParser_IContentHandler.hpp"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnStartParsing
void Mono::Xml::SmallXmlParser::IContentHandler::OnStartParsing_NEW(Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IContentHandler::OnStartParsing_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStartParsing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parser)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnEndParsing
void Mono::Xml::SmallXmlParser::IContentHandler::OnEndParsing_NEW(Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IContentHandler::OnEndParsing_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEndParsing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parser)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnStartElement
void Mono::Xml::SmallXmlParser::IContentHandler::OnStartElement_NEW(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IContentHandler::OnStartElement_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStartElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnEndElement
void Mono::Xml::SmallXmlParser::IContentHandler::OnEndElement_NEW(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IContentHandler::OnEndElement_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEndElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnProcessingInstruction
void Mono::Xml::SmallXmlParser::IContentHandler::OnProcessingInstruction_NEW(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IContentHandler::OnProcessingInstruction_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnProcessingInstruction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnChars
void Mono::Xml::SmallXmlParser::IContentHandler::OnChars_NEW(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IContentHandler::OnChars_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnIgnorableWhitespace
void Mono::Xml::SmallXmlParser::IContentHandler::OnIgnorableWhitespace_NEW(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IContentHandler::OnIgnorableWhitespace_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnIgnorableWhitespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.get_Length
int Mono::Xml::SmallXmlParser::IAttrList::get_Length_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IAttrList::get_Length_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.GetName
::Il2CppString* Mono::Xml::SmallXmlParser::IAttrList::GetName_NEW(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IAttrList::GetName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.GetValue
::Il2CppString* Mono::Xml::SmallXmlParser::IAttrList::GetValue_NEW(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IAttrList::GetValue_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.GetValue
::Il2CppString* Mono::Xml::SmallXmlParser::IAttrList::GetValue_NEW(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IAttrList::GetValue_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.get_Names
::Array<::Il2CppString*>* Mono::Xml::SmallXmlParser::IAttrList::get_Names_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IAttrList::get_Names_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Names", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.get_Values
::Array<::Il2CppString*>* Mono::Xml::SmallXmlParser::IAttrList::get_Values_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::IAttrList::get_Values_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Xml.SmallXmlParser/AttrListImpl
#include "Mono/Xml/SmallXmlParser_AttrListImpl.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.get_Length
int Mono::Xml::SmallXmlParser::AttrListImpl::get_Length_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::AttrListImpl::get_Length_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.GetName
::Il2CppString* Mono::Xml::SmallXmlParser::AttrListImpl::GetName_NEW(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::AttrListImpl::GetName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.GetValue
::Il2CppString* Mono::Xml::SmallXmlParser::AttrListImpl::GetValue_NEW(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::AttrListImpl::GetValue_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.GetValue
::Il2CppString* Mono::Xml::SmallXmlParser::AttrListImpl::GetValue_NEW(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::AttrListImpl::GetValue_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.get_Names
::Array<::Il2CppString*>* Mono::Xml::SmallXmlParser::AttrListImpl::get_Names_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::AttrListImpl::get_Names_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Names", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.get_Values
::Array<::Il2CppString*>* Mono::Xml::SmallXmlParser::AttrListImpl::get_Values_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::AttrListImpl::get_Values_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.Clear
void Mono::Xml::SmallXmlParser::AttrListImpl::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::AttrListImpl::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.Add
void Mono::Xml::SmallXmlParser::AttrListImpl::Add(::Il2CppString* name, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SmallXmlParser::AttrListImpl::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Xml.SmallXmlParserException
#include "Mono/Xml/SmallXmlParserException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Globalization.Unicode.CodePointIndexer.ToIndex
int Mono::Globalization::Unicode::CodePointIndexer::ToIndex(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::CodePointIndexer::ToIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.CodePointIndexer/TableRange
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.TailoringInfo
#include "Mono/Globalization/Unicode/TailoringInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.ContractionComparer
#include "Mono/Globalization/Unicode/ContractionComparer.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.ContractionComparer Instance
Mono::Globalization::Unicode::ContractionComparer* Mono::Globalization::Unicode::ContractionComparer::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::ContractionComparer::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::ContractionComparer*>("Mono.Globalization.Unicode", "ContractionComparer", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.ContractionComparer Instance
void Mono::Globalization::Unicode::ContractionComparer::_set_Instance(Mono::Globalization::Unicode::ContractionComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::ContractionComparer::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "ContractionComparer", "Instance", value));
}
// Autogenerated method: Mono.Globalization.Unicode.ContractionComparer.Compare
int Mono::Globalization::Unicode::ContractionComparer::Compare_NEW(Mono::Globalization::Unicode::Contraction* c1, Mono::Globalization::Unicode::Contraction* c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::ContractionComparer::Compare_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c1, c2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, c1, c2);
}
// Autogenerated method: Mono.Globalization.Unicode.ContractionComparer..cctor
void Mono::Globalization::Unicode::ContractionComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::ContractionComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "ContractionComparer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable.hpp"
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable_--c.hpp"
// Including type: Mono.Globalization.Unicode.TailoringInfo
#include "Mono/Globalization/Unicode/TailoringInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxExpansionLength
int Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_MaxExpansionLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_MaxExpansionLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "MaxExpansionLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxExpansionLength
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_MaxExpansionLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_MaxExpansionLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "MaxExpansionLength", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* ignorableFlags
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_ignorableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_ignorableFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ignorableFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* ignorableFlags
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_ignorableFlags(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_ignorableFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ignorableFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* categories
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_categories() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_categories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "categories"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* categories
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_categories(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_categories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "categories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level2
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level2
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level2(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level3
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level3
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level3(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHScategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHScategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHScategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHScategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHScategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHScategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHScategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHScategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHTcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHTcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkJAcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkJAcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHSlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHSlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHSlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHSlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHSlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHSlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHSlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHSlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHTlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHTlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkJAlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkJAlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOlv2
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv2"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOlv2
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv2(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] tailoringArr
::Array<::Il2CppChar>* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringArr() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringArr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringArr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] tailoringArr
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringArr(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringArr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringArr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Mono.Globalization.Unicode.TailoringInfo[] tailoringInfos
::Array<Mono::Globalization::Unicode::TailoringInfo*>* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<Mono::Globalization::Unicode::TailoringInfo*>*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringInfos"));
}
// Autogenerated static field setter
// Set static field: static private readonly Mono.Globalization.Unicode.TailoringInfo[] tailoringInfos
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringInfos(::Array<Mono::Globalization::Unicode::TailoringInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object forLock
::Il2CppObject* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_forLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_forLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "forLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object forLock
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_forLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_forLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "forLock", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean isReady
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_isReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "isReady"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean isReady
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_isReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "isReady", value));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.GetTailoringInfo
Mono::Globalization::Unicode::TailoringInfo* Mono::Globalization::Unicode::MSCompatUnicodeTable::GetTailoringInfo(int lcid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::GetTailoringInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "GetTailoringInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lcid)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Globalization::Unicode::TailoringInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lcid);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.BuildTailoringTables
void Mono::Globalization::Unicode::MSCompatUnicodeTable::BuildTailoringTables(System::Globalization::CultureInfo* culture, Mono::Globalization::Unicode::TailoringInfo* t, ::Array<Mono::Globalization::Unicode::Contraction*>*& contractions, ::Array<Mono::Globalization::Unicode::Level2Map*>*& diacriticals) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::BuildTailoringTables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "BuildTailoringTables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture, t, contractions, diacriticals)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, culture, t, contractions, diacriticals);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.SetCJKReferences
void Mono::Globalization::Unicode::MSCompatUnicodeTable::SetCJKReferences(::Il2CppString* name, Mono::Globalization::Unicode::CodePointIndexer*& cjkIndexer, uint8_t*& catTable, uint8_t*& lv1Table, Mono::Globalization::Unicode::CodePointIndexer*& lv2Indexer, uint8_t*& lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::SetCJKReferences");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "SetCJKReferences", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, cjkIndexer, catTable, lv1Table, lv2Indexer, lv2Table)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, cjkIndexer, catTable, lv1Table, lv2Indexer, lv2Table);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Category
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Category(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::Category");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Category", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level1
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level1(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::Level1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level2
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level2(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::Level2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level3
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level3(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::Level3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsIgnorable
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorable(int cp, uint8_t flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsIgnorable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp, flag)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp, flag);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsIgnorableNonSpacing
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorableNonSpacing(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorableNonSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsIgnorableNonSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.ToKanaTypeInsensitive
int Mono::Globalization::Unicode::MSCompatUnicodeTable::ToKanaTypeInsensitive(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::ToKanaTypeInsensitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ToKanaTypeInsensitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.ToWidthCompat
int Mono::Globalization::Unicode::MSCompatUnicodeTable::ToWidthCompat(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::ToWidthCompat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ToWidthCompat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.HasSpecialWeight
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::HasSpecialWeight(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::HasSpecialWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "HasSpecialWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsHalfWidthKana
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHalfWidthKana(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHalfWidthKana");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsHalfWidthKana", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsHiragana
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHiragana(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHiragana");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsHiragana", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsJapaneseSmallLetter
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsJapaneseSmallLetter(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::IsJapaneseSmallLetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsJapaneseSmallLetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.get_IsReady
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::get_IsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::get_IsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "get_IsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.GetResource
System::IntPtr Mono::Globalization::Unicode::MSCompatUnicodeTable::GetResource(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::GetResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "GetResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.UInt32FromBytePtr
uint Mono::Globalization::Unicode::MSCompatUnicodeTable::UInt32FromBytePtr(uint8_t* raw, uint idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::UInt32FromBytePtr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "UInt32FromBytePtr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(raw, idx)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, raw, idx);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.FillCJK
void Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJK(::Il2CppString* culture, Mono::Globalization::Unicode::CodePointIndexer*& cjkIndexer, uint8_t*& catTable, uint8_t*& lv1Table, Mono::Globalization::Unicode::CodePointIndexer*& lv2Indexer, uint8_t*& lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "FillCJK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture, cjkIndexer, catTable, lv1Table, lv2Indexer, lv2Table)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, culture, cjkIndexer, catTable, lv1Table, lv2Indexer, lv2Table);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.FillCJKCore
void Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJKCore(::Il2CppString* culture, Mono::Globalization::Unicode::CodePointIndexer*& cjkIndexer, uint8_t*& catTable, uint8_t*& lv1Table, Mono::Globalization::Unicode::CodePointIndexer*& cjkLv2Indexer, uint8_t*& lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJKCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "FillCJKCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture, cjkIndexer, catTable, lv1Table, cjkLv2Indexer, lv2Table)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, culture, cjkIndexer, catTable, lv1Table, cjkLv2Indexer, lv2Table);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c <>9
Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c* Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c <>9
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9(Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Mono.Globalization.Unicode.Level2Map> <>9__17_0
System::Comparison_1<Mono::Globalization::Unicode::Level2Map*>* Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<Mono::Globalization::Unicode::Level2Map*>*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Mono.Globalization.Unicode.Level2Map> <>9__17_0
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9__17_0(System::Comparison_1<Mono::Globalization::Unicode::Level2Map*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9__17_0", value)));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c.<BuildTailoringTables>b__17_0
int Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::$BuildTailoringTables$b__17_0(Mono::Globalization::Unicode::Level2Map* a, Mono::Globalization::Unicode::Level2Map* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::<BuildTailoringTables>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildTailoringTables>b__17_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTableUtil
#include "Mono/Globalization/Unicode/MSCompatUnicodeTableUtil.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Ignorable
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Ignorable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Ignorable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Ignorable"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Ignorable
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Ignorable(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Ignorable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Ignorable", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Category
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Category");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Category"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Category
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Category(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Category");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Category", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level1
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level1
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level1(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level2
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level2
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level2(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level3
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level3"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level3
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level3(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer CjkCHS
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_CjkCHS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_CjkCHS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "CjkCHS"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer CjkCHS
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_CjkCHS(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_CjkCHS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "CjkCHS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Cjk
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Cjk() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Cjk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Cjk"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Cjk
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Cjk(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Cjk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Cjk", value));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTableUtil..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.NormalizationTableUtil
#include "Mono/Globalization/Unicode/NormalizationTableUtil.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Prop
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Prop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_get_Prop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Prop"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Prop
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Prop(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_set_Prop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Prop", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Map
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Map() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_get_Map");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Map"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Map
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Map(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_set_Map");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Map", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Combining
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Combining() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_get_Combining");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Combining"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Combining
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Combining(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_set_Combining");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Combining", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Composite
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Composite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_get_Composite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Composite"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Composite
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Composite(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_set_Composite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Composite", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Helper
Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_get_Helper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Helper"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Helper
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Helper(Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::_set_Helper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Helper", value));
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil..cctor
void Mono::Globalization::Unicode::NormalizationTableUtil::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil.PropIdx
int Mono::Globalization::Unicode::NormalizationTableUtil::PropIdx(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::PropIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", "PropIdx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil.MapIdx
int Mono::Globalization::Unicode::NormalizationTableUtil::MapIdx(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::NormalizationTableUtil::MapIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", "MapIdx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Globalization.Unicode.SimpleCollator
#include "Mono/Globalization/Unicode/SimpleCollator.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/Context
#include "Mono/Globalization/Unicode/SimpleCollator_Context.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/PreviousInfo
#include "Mono/Globalization/Unicode/SimpleCollator_PreviousInfo.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/Escape
#include "Mono/Globalization/Unicode/SimpleCollator_Escape.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/ExtenderType
#include "Mono/Globalization/Unicode/SimpleCollator_ExtenderType.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
// Including type: Mono.Globalization.Unicode.SortKeyBuffer
#include "Mono/Globalization/Unicode/SortKeyBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean QuickCheckDisabled
bool Mono::Globalization::Unicode::SimpleCollator::_get_QuickCheckDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::_get_QuickCheckDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Globalization.Unicode", "SimpleCollator", "QuickCheckDisabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean QuickCheckDisabled
void Mono::Globalization::Unicode::SimpleCollator::_set_QuickCheckDisabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::_set_QuickCheckDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator", "QuickCheckDisabled", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.Globalization.Unicode.SimpleCollator invariant
Mono::Globalization::Unicode::SimpleCollator* Mono::Globalization::Unicode::SimpleCollator::_get_invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::_get_invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::SimpleCollator*>("Mono.Globalization.Unicode", "SimpleCollator", "invariant"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Globalization.Unicode.SimpleCollator invariant
void Mono::Globalization::Unicode::SimpleCollator::_set_invariant(Mono::Globalization::Unicode::SimpleCollator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::_set_invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator", "invariant", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 UnsafeFlagLength
int Mono::Globalization::Unicode::SimpleCollator::_get_UnsafeFlagLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::_get_UnsafeFlagLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Globalization.Unicode", "SimpleCollator", "UnsafeFlagLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 UnsafeFlagLength
void Mono::Globalization::Unicode::SimpleCollator::_set_UnsafeFlagLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::_set_UnsafeFlagLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator", "UnsafeFlagLength", value));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.SetCJKTable
void Mono::Globalization::Unicode::SimpleCollator::SetCJKTable(System::Globalization::CultureInfo* culture, Mono::Globalization::Unicode::CodePointIndexer*& cjkIndexer, uint8_t*& catTable, uint8_t*& lv1Table, Mono::Globalization::Unicode::CodePointIndexer*& lv2Indexer, uint8_t*& lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::SetCJKTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCJKTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture, cjkIndexer, catTable, lv1Table, lv2Indexer, lv2Table)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, culture, cjkIndexer, catTable, lv1Table, lv2Indexer, lv2Table);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetNeutralCulture
System::Globalization::CultureInfo* Mono::Globalization::Unicode::SimpleCollator::GetNeutralCulture(System::Globalization::CultureInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetNeutralCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "GetNeutralCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, info);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Category
uint8_t Mono::Globalization::Unicode::SimpleCollator::Category(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::Category");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Category", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Level1
uint8_t Mono::Globalization::Unicode::SimpleCollator::Level1(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::Level1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Level1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Level2
uint8_t Mono::Globalization::Unicode::SimpleCollator::Level2(int cp, Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::Level2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Level2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp, ext)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, cp, ext);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsHalfKana
bool Mono::Globalization::Unicode::SimpleCollator::IsHalfKana(int cp, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IsHalfKana");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "IsHalfKana", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp, opt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetContraction
Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetContraction(::Il2CppString* s, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetContraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetContraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, start, end)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetContraction
Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetContraction(::Il2CppString* s, int start, int end, ::Array<Mono::Globalization::Unicode::Contraction*>* clist) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetContraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetContraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, start, end, clist)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end, clist);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetTailContraction
Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetTailContraction(::Il2CppString* s, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetTailContraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTailContraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, start, end)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetTailContraction
Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetTailContraction(::Il2CppString* s, int start, int end, ::Array<Mono::Globalization::Unicode::Contraction*>* clist) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetTailContraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTailContraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, start, end, clist)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end, clist);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FilterOptions
int Mono::Globalization::Unicode::SimpleCollator::FilterOptions(int i, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::FilterOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FilterOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, opt)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, i, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetExtenderType
Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::GetExtenderType(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetExtenderType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetExtenderType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Globalization::Unicode::SimpleCollator::ExtenderType, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.ToDashTypeValue
uint8_t Mono::Globalization::Unicode::SimpleCollator::ToDashTypeValue(Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ToDashTypeValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "ToDashTypeValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ext, opt)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ext, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FilterExtender
int Mono::Globalization::Unicode::SimpleCollator::FilterExtender(int i, Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::FilterExtender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FilterExtender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, ext, opt)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, i, ext, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsIgnorable
bool Mono::Globalization::Unicode::SimpleCollator::IsIgnorable(int i, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IsIgnorable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "IsIgnorable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, opt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSafe
bool Mono::Globalization::Unicode::SimpleCollator::IsSafe(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IsSafe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSafe", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
System::Globalization::SortKey* Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::Il2CppString* s, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, options)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(this, ___internal__method, s, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
System::Globalization::SortKey* Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::Il2CppString* s, int start, int length, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, start, length, options)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(this, ___internal__method, s, start, length, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
void Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::Il2CppString* s, int start, int end, Mono::Globalization::Unicode::SortKeyBuffer* buf, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, start, end, buf, opt)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s, start, end, buf, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FillSortKeyRaw
void Mono::Globalization::Unicode::SimpleCollator::FillSortKeyRaw(int i, Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, Mono::Globalization::Unicode::SortKeyBuffer* buf, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::FillSortKeyRaw");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FillSortKeyRaw", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, ext, buf, opt)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, ext, buf, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FillSurrogateSortKeyRaw
void Mono::Globalization::Unicode::SimpleCollator::FillSurrogateSortKeyRaw(int i, Mono::Globalization::Unicode::SortKeyBuffer* buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::FillSurrogateSortKeyRaw");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FillSurrogateSortKeyRaw", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, buf)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, buf);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Compare
int Mono::Globalization::Unicode::SimpleCollator::Compare(::Il2CppString* s1, int idx1, int len1, ::Il2CppString* s2, int idx2, int len2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s1, idx1, len1, s2, idx2, len2, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s1, idx1, len1, s2, idx2, len2, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.ClearBuffer
void Mono::Globalization::Unicode::SimpleCollator::ClearBuffer(uint8_t* buffer, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ClearBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, size);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.CompareInternal
int Mono::Globalization::Unicode::SimpleCollator::CompareInternal(::Il2CppString* s1, int idx1, int len1, ::Il2CppString* s2, int idx2, int len2, bool& targetConsumed, bool& sourceConsumed, bool skipHeadingExtenders, bool immediateBreakup, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::CompareInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s1, idx1, len1, s2, idx2, len2, targetConsumed, sourceConsumed, skipHeadingExtenders, immediateBreakup, ctx)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s1, idx1, len1, s2, idx2, len2, targetConsumed, sourceConsumed, skipHeadingExtenders, immediateBreakup, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.CompareFlagPair
int Mono::Globalization::Unicode::SimpleCollator::CompareFlagPair(bool b1, bool b2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::CompareFlagPair");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareFlagPair", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(b1, b2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, b1, b2);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::Il2CppString* src, ::Il2CppString* target, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, target, opt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, src, target, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::Il2CppString* s, ::Il2CppString* target, int start, int length, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length, opt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::Il2CppString* s, ::Il2CppString* target, int start, int length, bool skipHeadingExtenders, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length, skipHeadingExtenders, ctx)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s, target, start, length, skipHeadingExtenders, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSuffix
bool Mono::Globalization::Unicode::SimpleCollator::IsSuffix(::Il2CppString* src, ::Il2CppString* target, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IsSuffix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, target, opt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, src, target, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSuffix
bool Mono::Globalization::Unicode::SimpleCollator::IsSuffix(::Il2CppString* s, ::Il2CppString* target, int start, int length, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IsSuffix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length, opt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.QuickIndexOf
int Mono::Globalization::Unicode::SimpleCollator::QuickIndexOf(::Il2CppString* s, ::Il2CppString* target, int start, int length, bool& testWasUnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::QuickIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "QuickIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length, testWasUnable)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, target, start, length, testWasUnable);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOf
int Mono::Globalization::Unicode::SimpleCollator::IndexOf(::Il2CppString* s, ::Il2CppString* target, int start, int length, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length, opt)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal(::Il2CppString* s, ::Il2CppString* target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfOrdinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal(::Il2CppString* s, ::Il2CppChar target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfOrdinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfSortKey
int Mono::Globalization::Unicode::SimpleCollator::IndexOfSortKey(::Il2CppString* s, int start, int length, uint8_t* sortkey, ::Il2CppChar target, int ti, bool noLv4, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IndexOfSortKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfSortKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, start, length, sortkey, target, ti, noLv4, ctx)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, start, length, sortkey, target, ti, noLv4, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOf
int Mono::Globalization::Unicode::SimpleCollator::IndexOf(::Il2CppString* s, ::Il2CppString* target, int start, int length, uint8_t* targetSortKey, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length, targetSortKey, ctx)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, target, start, length, targetSortKey, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOf
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOf(::Il2CppString* s, ::Il2CppString* target, int start, int length, System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length, opt)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOfOrdinal(::Il2CppString* s, ::Il2CppString* target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::LastIndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOfOrdinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOfSortKey
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOfSortKey(::Il2CppString* s, int start, int orgStart, int length, uint8_t* sortkey, int ti, bool noLv4, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::LastIndexOfSortKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOfSortKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, start, orgStart, length, sortkey, ti, noLv4, ctx)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, start, orgStart, length, sortkey, ti, noLv4, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOf
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOf(::Il2CppString* s, ::Il2CppString* target, int start, int length, uint8_t* targetSortKey, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, target, start, length, targetSortKey, ctx)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, target, start, length, targetSortKey, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesForward
bool Mono::Globalization::Unicode::SimpleCollator::MatchesForward(::Il2CppString* s, int& idx, int end, int ti, uint8_t* sortkey, bool noLv4, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::MatchesForward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchesForward", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, idx, end, ti, sortkey, noLv4, ctx)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s, idx, end, ti, sortkey, noLv4, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesForwardCore
bool Mono::Globalization::Unicode::SimpleCollator::MatchesForwardCore(::Il2CppString* s, int& idx, int end, int ti, uint8_t* sortkey, bool noLv4, Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, Mono::Globalization::Unicode::Contraction*& ct, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::MatchesForwardCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchesForwardCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, idx, end, ti, sortkey, noLv4, ext, ct, ctx)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s, idx, end, ti, sortkey, noLv4, ext, ct, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesPrimitive
bool Mono::Globalization::Unicode::SimpleCollator::MatchesPrimitive(System::Globalization::CompareOptions opt, uint8_t* source, int si, Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, uint8_t* target, int ti, bool noLv4) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::MatchesPrimitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchesPrimitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(opt, source, si, ext, target, ti, noLv4)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, opt, source, si, ext, target, ti, noLv4);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesBackward
bool Mono::Globalization::Unicode::SimpleCollator::MatchesBackward(::Il2CppString* s, int& idx, int end, int orgStart, int ti, uint8_t* sortkey, bool noLv4, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::MatchesBackward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchesBackward", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, idx, end, orgStart, ti, sortkey, noLv4, ctx)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s, idx, end, orgStart, ti, sortkey, noLv4, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesBackwardCore
bool Mono::Globalization::Unicode::SimpleCollator::MatchesBackwardCore(::Il2CppString* s, int& idx, int end, int orgStart, int ti, uint8_t* sortkey, bool noLv4, Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, Mono::Globalization::Unicode::Contraction*& ct, Mono::Globalization::Unicode::SimpleCollator::Context& ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::MatchesBackwardCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchesBackwardCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, idx, end, orgStart, ti, sortkey, noLv4, ext, ct, ctx)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s, idx, end, orgStart, ti, sortkey, noLv4, ext, ct, ctx);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator..cctor
void Mono::Globalization::Unicode::SimpleCollator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/Context
#include "Mono/Globalization/Unicode/SimpleCollator_Context.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/PreviousInfo
#include "Mono/Globalization/Unicode/SimpleCollator_PreviousInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/ExtenderType
#include "Mono/Globalization/Unicode/SimpleCollator_ExtenderType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType None
Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType None
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_None(Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Simple
Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Simple
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Simple(Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Voiced
Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Voiced() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Voiced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Voiced"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Voiced
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Voiced(Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Voiced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Voiced", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Conditional
Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Conditional() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Conditional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Conditional"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Conditional
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Conditional(Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Conditional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Conditional", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Buggy
Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Buggy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Buggy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Buggy"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Buggy
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Buggy(Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Buggy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Buggy", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Globalization.Unicode.SortKeyBuffer
#include "Mono/Globalization/Unicode/SortKeyBuffer.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.Reset
void Mono::Globalization::Unicode::SortKeyBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.Initialize
void Mono::Globalization::Unicode::SortKeyBuffer::Initialize(System::Globalization::CompareOptions options, int lcid, ::Il2CppString* s, bool frenchSort) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(options, lcid, s, frenchSort)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, options, lcid, s, frenchSort);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendCJKExtension
void Mono::Globalization::Unicode::SortKeyBuffer::AppendCJKExtension(uint8_t lv1msb, uint8_t lv1lsb) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendCJKExtension");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AppendCJKExtension", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lv1msb, lv1lsb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lv1msb, lv1lsb);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendKana
void Mono::Globalization::Unicode::SortKeyBuffer::AppendKana(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3, bool isSmallKana, uint8_t markType, bool isKatakana, bool isHalfWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendKana");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AppendKana", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(category, lv1, lv2, lv3, isSmallKana, markType, isKatakana, isHalfWidth)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, category, lv1, lv2, lv3, isSmallKana, markType, isKatakana, isHalfWidth);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendNormal
void Mono::Globalization::Unicode::SortKeyBuffer::AppendNormal(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendNormal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AppendNormal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(category, lv1, lv2, lv3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, category, lv1, lv2, lv3);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendLevel5
void Mono::Globalization::Unicode::SortKeyBuffer::AppendLevel5(uint8_t category, uint8_t lv1) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendLevel5");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AppendLevel5", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(category, lv1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, category, lv1);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendBufferPrimitive
void Mono::Globalization::Unicode::SortKeyBuffer::AppendBufferPrimitive(uint8_t value, ::Array<uint8_t>*& buf, int& bidx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendBufferPrimitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AppendBufferPrimitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, buf, bidx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, buf, bidx);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetResultAndReset
System::Globalization::SortKey* Mono::Globalization::Unicode::SortKeyBuffer::GetResultAndReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::GetResultAndReset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetResultAndReset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetOptimizedLength
int Mono::Globalization::Unicode::SortKeyBuffer::GetOptimizedLength(::Array<uint8_t>* data, int len, uint8_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::GetOptimizedLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOptimizedLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, len, defaultValue)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, data, len, defaultValue);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetResult
System::Globalization::SortKey* Mono::Globalization::Unicode::SortKeyBuffer::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::GetResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.KeyPairPersistence
#include "Mono/Security/Cryptography/KeyPairPersistence.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _userPathExists
bool Mono::Security::Cryptography::KeyPairPersistence::_get__userPathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get__userPathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Cryptography", "KeyPairPersistence", "_userPathExists"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _userPathExists
void Mono::Security::Cryptography::KeyPairPersistence::_set__userPathExists(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set__userPathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_userPathExists", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _userPath
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::_get__userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get__userPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Mono.Security.Cryptography", "KeyPairPersistence", "_userPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _userPath
void Mono::Security::Cryptography::KeyPairPersistence::_set__userPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set__userPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_userPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _machinePathExists
bool Mono::Security::Cryptography::KeyPairPersistence::_get__machinePathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get__machinePathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePathExists"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _machinePathExists
void Mono::Security::Cryptography::KeyPairPersistence::_set__machinePathExists(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set__machinePathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePathExists", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _machinePath
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::_get__machinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get__machinePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _machinePath
void Mono::Security::Cryptography::KeyPairPersistence::_set__machinePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set__machinePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object lockobj
::Il2CppObject* Mono::Security::Cryptography::KeyPairPersistence::_get_lockobj() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get_lockobj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Security.Cryptography", "KeyPairPersistence", "lockobj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lockobj
void Mono::Security::Cryptography::KeyPairPersistence::_set_lockobj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set_lockobj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "lockobj", value));
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_Filename
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_Filename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Filename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_KeyValue
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_KeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_KeyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_KeyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.set_KeyValue
void Mono::Security::Cryptography::KeyPairPersistence::set_KeyValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::set_KeyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_KeyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Load
bool Mono::Security::Cryptography::KeyPairPersistence::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Save
void Mono::Security::Cryptography::KeyPairPersistence::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::Save");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Remove
void Mono::Security::Cryptography::KeyPairPersistence::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UserPath
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_UserPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_UserPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "get_UserPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_MachinePath
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_MachinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_MachinePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "get_MachinePath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._CanSecure
bool Mono::Security::Cryptography::KeyPairPersistence::_CanSecure(::Il2CppString* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_CanSecure");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_CanSecure", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._ProtectUser
bool Mono::Security::Cryptography::KeyPairPersistence::_ProtectUser(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_ProtectUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_ProtectUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._ProtectMachine
bool Mono::Security::Cryptography::KeyPairPersistence::_ProtectMachine(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_ProtectMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_ProtectMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._IsUserProtected
bool Mono::Security::Cryptography::KeyPairPersistence::_IsUserProtected(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_IsUserProtected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_IsUserProtected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._IsMachineProtected
bool Mono::Security::Cryptography::KeyPairPersistence::_IsMachineProtected(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_IsMachineProtected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_IsMachineProtected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.CanSecure
bool Mono::Security::Cryptography::KeyPairPersistence::CanSecure(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::CanSecure");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "CanSecure", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ProtectUser
bool Mono::Security::Cryptography::KeyPairPersistence::ProtectUser(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::ProtectUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "ProtectUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ProtectMachine
bool Mono::Security::Cryptography::KeyPairPersistence::ProtectMachine(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::ProtectMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "ProtectMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.IsUserProtected
bool Mono::Security::Cryptography::KeyPairPersistence::IsUserProtected(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::IsUserProtected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "IsUserProtected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.IsMachineProtected
bool Mono::Security::Cryptography::KeyPairPersistence::IsMachineProtected(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::IsMachineProtected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "IsMachineProtected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_CanChange
bool Mono::Security::Cryptography::KeyPairPersistence::get_CanChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_CanChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UseDefaultKeyContainer
bool Mono::Security::Cryptography::KeyPairPersistence::get_UseDefaultKeyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_UseDefaultKeyContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UseDefaultKeyContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UseMachineKeyStore
bool Mono::Security::Cryptography::KeyPairPersistence::get_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_UseMachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UseMachineKeyStore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_ContainerName
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_ContainerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_ContainerName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ContainerName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Copy
System::Security::Cryptography::CspParameters* Mono::Security::Cryptography::KeyPairPersistence::Copy(System::Security::Cryptography::CspParameters* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::Copy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::CspParameters*, false>(this, ___internal__method, p);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.FromXml
void Mono::Security::Cryptography::KeyPairPersistence::FromXml(::Il2CppString* xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::FromXml");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FromXml", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(xml)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xml);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ToXml
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::ToXml");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence..cctor
void Mono::Security::Cryptography::KeyPairPersistence::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.SymmetricTransform
#include "Mono/Security/Cryptography/SymmetricTransform.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.System.IDisposable.Dispose
void Mono::Security::Cryptography::SymmetricTransform::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Dispose
void Mono::Security::Cryptography::SymmetricTransform::Dispose_NEW(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_CanTransformMultipleBlocks
bool Mono::Security::Cryptography::SymmetricTransform::get_CanTransformMultipleBlocks_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::get_CanTransformMultipleBlocks_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanTransformMultipleBlocks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_InputBlockSize
int Mono::Security::Cryptography::SymmetricTransform::get_InputBlockSize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::get_InputBlockSize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InputBlockSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_OutputBlockSize
int Mono::Security::Cryptography::SymmetricTransform::get_OutputBlockSize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::get_OutputBlockSize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_OutputBlockSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Transform
void Mono::Security::Cryptography::SymmetricTransform::Transform_NEW(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::Transform_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Transform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.ECB
void Mono::Security::Cryptography::SymmetricTransform::ECB_NEW(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::ECB_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ECB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CBC
void Mono::Security::Cryptography::SymmetricTransform::CBC_NEW(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::CBC_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CBC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CFB
void Mono::Security::Cryptography::SymmetricTransform::CFB_NEW(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::CFB_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CFB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.OFB
void Mono::Security::Cryptography::SymmetricTransform::OFB_NEW(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::OFB_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OFB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CTS
void Mono::Security::Cryptography::SymmetricTransform::CTS_NEW(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::CTS_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CTS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CheckInput
void Mono::Security::Cryptography::SymmetricTransform::CheckInput(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::CheckInput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckInput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputBuffer, inputOffset, inputCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.TransformBlock
int Mono::Security::Cryptography::SymmetricTransform::TransformBlock_NEW(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount, ::Array<uint8_t>* outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::TransformBlock_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TransformBlock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_KeepLastBlock
bool Mono::Security::Cryptography::SymmetricTransform::get_KeepLastBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::get_KeepLastBlock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_KeepLastBlock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.InternalTransformBlock
int Mono::Security::Cryptography::SymmetricTransform::InternalTransformBlock(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount, ::Array<uint8_t>* outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::InternalTransformBlock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalTransformBlock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Random
void Mono::Security::Cryptography::SymmetricTransform::Random(::Array<uint8_t>* buffer, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::Random");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Random", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, start, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, start, length);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.ThrowBadPaddingException
void Mono::Security::Cryptography::SymmetricTransform::ThrowBadPaddingException(System::Security::Cryptography::PaddingMode padding, int length, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::ThrowBadPaddingException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ThrowBadPaddingException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(padding, length, position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, padding, length, position);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.FinalEncrypt
::Array<uint8_t>* Mono::Security::Cryptography::SymmetricTransform::FinalEncrypt_NEW(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::FinalEncrypt_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinalEncrypt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputBuffer, inputOffset, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.FinalDecrypt
::Array<uint8_t>* Mono::Security::Cryptography::SymmetricTransform::FinalDecrypt_NEW(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::FinalDecrypt_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinalDecrypt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputBuffer, inputOffset, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.TransformFinalBlock
::Array<uint8_t>* Mono::Security::Cryptography::SymmetricTransform::TransformFinalBlock_NEW(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::TransformFinalBlock_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TransformFinalBlock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputBuffer, inputOffset, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Finalize
void Mono::Security::Cryptography::SymmetricTransform::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.DSAManaged
#include "Mono/Security/Cryptography/DSAManaged.hpp"
// Including type: Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/DSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Generate
void Mono::Security::Cryptography::DSAManaged::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::Generate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::DSAManaged::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.add
void Mono::Security::Cryptography::DSAManaged::add(::Array<uint8_t>* a, ::Array<uint8_t>* b, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.GenerateParams
void Mono::Security::Cryptography::DSAManaged::GenerateParams(int keyLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::GenerateParams");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateParams", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyLength)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyLength);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_Random
System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::DSAManaged::get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::get_Random");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Random", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::DSAManaged::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.NormalizeArray
::Array<uint8_t>* Mono::Security::Cryptography::DSAManaged::NormalizeArray(::Array<uint8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::NormalizeArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NormalizeArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, array);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.add_KeyGenerated
void Mono::Security::Cryptography::DSAManaged::add_KeyGenerated(Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::add_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_KeyGenerated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.remove_KeyGenerated
void Mono::Security::Cryptography::DSAManaged::remove_KeyGenerated(Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::remove_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_KeyGenerated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Finalize
void Mono::Security::Cryptography::DSAManaged::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_KeySize
int Mono::Security::Cryptography::DSAManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::get_KeySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.ExportParameters
System::Security::Cryptography::DSAParameters Mono::Security::Cryptography::DSAManaged::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::ExportParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExportParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(includePrivateParameters)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.ImportParameters
void Mono::Security::Cryptography::DSAManaged::ImportParameters(System::Security::Cryptography::DSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::ImportParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ImportParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parameters)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.VerifySignature
bool Mono::Security::Cryptography::DSAManaged::VerifySignature(::Array<uint8_t>* rgbHash, ::Array<uint8_t>* rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rgbHash, rgbSignature)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Dispose
void Mono::Security::Cryptography::DSAManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/DSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::Invoke_NEW(::Il2CppObject* sender, System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender, e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler.BeginInvoke
System::IAsyncResult* Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::BeginInvoke_NEW(::Il2CppObject* sender, System::EventArgs* e, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender, e, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler.EndInvoke
void Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.IRegistryApi
#include "Microsoft/Win32/IRegistryApi.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.IRegistryApi.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::IRegistryApi::OpenSubKey_NEW(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyname, bool writtable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::OpenSubKey_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, keyname, writtable)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyname, writtable);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.Flush
void Microsoft::Win32::IRegistryApi::Flush_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::Flush_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.Close
void Microsoft::Win32::IRegistryApi::Close_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::Close_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::IRegistryApi::GetValue_NEW(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, ::Il2CppObject* default_value, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::GetValue_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, name, default_value, options)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, rkey, name, default_value, options);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetSubKeyNames
::Array<::Il2CppString*>* Microsoft::Win32::IRegistryApi::GetSubKeyNames_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::GetSubKeyNames_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.ToString
::Il2CppString* Microsoft::Win32::IRegistryApi::ToString_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::ToString_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetHandle
System::IntPtr Microsoft::Win32::IRegistryApi::GetHandle_NEW(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::GetHandle_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.Registry
#include "Microsoft/Win32/Registry.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey ClassesRoot
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_ClassesRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_ClassesRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "ClassesRoot"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey ClassesRoot
void Microsoft::Win32::Registry::_set_ClassesRoot(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_ClassesRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "ClassesRoot", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey CurrentConfig
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_CurrentConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_CurrentConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "CurrentConfig"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey CurrentConfig
void Microsoft::Win32::Registry::_set_CurrentConfig(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_CurrentConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "CurrentConfig", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey CurrentUser
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_CurrentUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "CurrentUser"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey CurrentUser
void Microsoft::Win32::Registry::_set_CurrentUser(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_CurrentUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "CurrentUser", value));
}
// [ObsoleteAttribute] Offset: 0xC99794
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey DynData
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_DynData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_DynData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "DynData"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey DynData
void Microsoft::Win32::Registry::_set_DynData(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_DynData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "DynData", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey LocalMachine
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_LocalMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "LocalMachine"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey LocalMachine
void Microsoft::Win32::Registry::_set_LocalMachine(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_LocalMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "LocalMachine", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey PerformanceData
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_PerformanceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_PerformanceData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "PerformanceData"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey PerformanceData
void Microsoft::Win32::Registry::_set_PerformanceData(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_PerformanceData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "PerformanceData", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey Users
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_Users");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "Users"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey Users
void Microsoft::Win32::Registry::_set_Users(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_Users");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "Users", value));
}
// Autogenerated method: Microsoft.Win32.Registry..cctor
void Microsoft::Win32::Registry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Registry", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryHive
#include "Microsoft/Win32/RegistryHive.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive ClassesRoot
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_ClassesRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_ClassesRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "ClassesRoot"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive ClassesRoot
void Microsoft::Win32::RegistryHive::_set_ClassesRoot(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_ClassesRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "ClassesRoot", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive CurrentConfig
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_CurrentConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_CurrentConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "CurrentConfig"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive CurrentConfig
void Microsoft::Win32::RegistryHive::_set_CurrentConfig(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_CurrentConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "CurrentConfig", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive CurrentUser
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_CurrentUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "CurrentUser"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive CurrentUser
void Microsoft::Win32::RegistryHive::_set_CurrentUser(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_CurrentUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "CurrentUser", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive DynData
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_DynData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_DynData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "DynData"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive DynData
void Microsoft::Win32::RegistryHive::_set_DynData(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_DynData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "DynData", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive LocalMachine
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_LocalMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "LocalMachine"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive LocalMachine
void Microsoft::Win32::RegistryHive::_set_LocalMachine(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_LocalMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "LocalMachine", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive PerformanceData
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_PerformanceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_PerformanceData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "PerformanceData"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive PerformanceData
void Microsoft::Win32::RegistryHive::_set_PerformanceData(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_PerformanceData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "PerformanceData", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive Users
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_Users");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "Users"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive Users
void Microsoft::Win32::RegistryHive::_set_Users(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_Users");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "Users", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
#include "Microsoft/Win32/SafeHandles/SafeRegistryHandle.hpp"
// Including type: Microsoft.Win32.IRegistryApi
#include "Microsoft/Win32/IRegistryApi.hpp"
// Including type: System.IO.IOException
#include "System/IO/IOException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Microsoft.Win32.IRegistryApi RegistryApi
Microsoft::Win32::IRegistryApi* Microsoft::Win32::RegistryKey::_get_RegistryApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::_get_RegistryApi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::IRegistryApi*>("Microsoft.Win32", "RegistryKey", "RegistryApi"));
}
// Autogenerated static field setter
// Set static field: static private readonly Microsoft.Win32.IRegistryApi RegistryApi
void Microsoft::Win32::RegistryKey::_set_RegistryApi(Microsoft::Win32::IRegistryApi* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::_set_RegistryApi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryKey", "RegistryApi", value));
}
// Autogenerated method: Microsoft.Win32.RegistryKey..cctor
void Microsoft::Win32::RegistryKey::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.IsEquals
bool Microsoft::Win32::RegistryKey::IsEquals(Microsoft::Win32::RegistryKey* a, Microsoft::Win32::RegistryKey* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::IsEquals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "IsEquals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Dispose
void Microsoft::Win32::RegistryKey::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Name
::Il2CppString* Microsoft::Win32::RegistryKey::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Flush
void Microsoft::Win32::RegistryKey::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Close
void Microsoft::Win32::RegistryKey::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Handle
Microsoft::Win32::SafeHandles::SafeRegistryHandle* Microsoft::Win32::RegistryKey::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_Handle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeRegistryHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::RegistryKey::OpenSubKey(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::OpenSubKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::RegistryKey::OpenSubKey(::Il2CppString* name, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::OpenSubKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, writable)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, name, writable);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetValue
::Il2CppObject* Microsoft::Win32::RegistryKey::GetValue(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetValue
::Il2CppObject* Microsoft::Win32::RegistryKey::GetValue(::Il2CppString* name, ::Il2CppObject* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, defaultValue)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, defaultValue);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetSubKeyNames
::Array<::Il2CppString*>* Microsoft::Win32::RegistryKey::GetSubKeyNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::GetSubKeyNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_IsRoot
bool Microsoft::Win32::RegistryKey::get_IsRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_IsRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Hive
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryKey::get_Hive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_Hive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Hive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryHive, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_InternalHandle
::Il2CppObject* Microsoft::Win32::RegistryKey::get_InternalHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_InternalHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InternalHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.AssertKeyStillValid
void Microsoft::Win32::RegistryKey::AssertKeyStillValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::AssertKeyStillValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AssertKeyStillValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.AssertKeyNameLength
void Microsoft::Win32::RegistryKey::AssertKeyNameLength(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::AssertKeyNameLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AssertKeyNameLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.DecodeString
::Il2CppString* Microsoft::Win32::RegistryKey::DecodeString(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::DecodeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "DecodeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.CreateMarkedForDeletionException
System::IO::IOException* Microsoft::Win32::RegistryKey::CreateMarkedForDeletionException() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::CreateMarkedForDeletionException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "CreateMarkedForDeletionException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IO::IOException*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetHiveName
::Il2CppString* Microsoft::Win32::RegistryKey::GetHiveName(Microsoft::Win32::RegistryHive hive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::GetHiveName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "GetHiveName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hive)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hive);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.ToString
::Il2CppString* Microsoft::Win32::RegistryKey::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryValueKind
#include "Microsoft/Win32/RegistryValueKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind Unknown
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind Unknown
void Microsoft::Win32::RegistryValueKind::_set_Unknown(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind String
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "String"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind String
void Microsoft::Win32::RegistryValueKind::_set_String(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind ExpandString
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_ExpandString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_ExpandString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "ExpandString"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind ExpandString
void Microsoft::Win32::RegistryValueKind::_set_ExpandString(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_ExpandString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "ExpandString", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind Binary
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind Binary
void Microsoft::Win32::RegistryValueKind::_set_Binary(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind DWord
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_DWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_DWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "DWord"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind DWord
void Microsoft::Win32::RegistryValueKind::_set_DWord(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_DWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "DWord", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind MultiString
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_MultiString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_MultiString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "MultiString"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind MultiString
void Microsoft::Win32::RegistryValueKind::_set_MultiString(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_MultiString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "MultiString", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind QWord
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_QWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_QWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "QWord"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind QWord
void Microsoft::Win32::RegistryValueKind::_set_QWord(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_QWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "QWord", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind None
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind None
void Microsoft::Win32::RegistryValueKind::_set_None(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "None", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueOptions None
Microsoft::Win32::RegistryValueOptions Microsoft::Win32::RegistryValueOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueOptions>("Microsoft.Win32", "RegistryValueOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueOptions None
void Microsoft::Win32::RegistryValueOptions::_set_None(Microsoft::Win32::RegistryValueOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
Microsoft::Win32::RegistryValueOptions Microsoft::Win32::RegistryValueOptions::_get_DoNotExpandEnvironmentNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::_get_DoNotExpandEnvironmentNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueOptions>("Microsoft.Win32", "RegistryValueOptions", "DoNotExpandEnvironmentNames"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
void Microsoft::Win32::RegistryValueOptions::_set_DoNotExpandEnvironmentNames(Microsoft::Win32::RegistryValueOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::_set_DoNotExpandEnvironmentNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueOptions", "DoNotExpandEnvironmentNames", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.ExpandString
#include "Microsoft/Win32/ExpandString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.ExpandString.Expand
::Il2CppString* Microsoft::Win32::ExpandString::Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::ExpandString::Expand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Expand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.ExpandString.ToString
::Il2CppString* Microsoft::Win32::ExpandString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::ExpandString::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.RegistryKeyComparer
#include "Microsoft/Win32/RegistryKeyComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.RegistryKeyComparer.Equals
bool Microsoft::Win32::RegistryKeyComparer::Equals_NEW(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKeyComparer::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Microsoft.Win32.RegistryKeyComparer.GetHashCode
int Microsoft::Win32::RegistryKeyComparer::GetHashCode_NEW(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKeyComparer::GetHashCode_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.KeyHandler
#include "Microsoft/Win32/KeyHandler.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable key_to_handler
System::Collections::Hashtable* Microsoft::Win32::KeyHandler::_get_key_to_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_get_key_to_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("Microsoft.Win32", "KeyHandler", "key_to_handler"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable key_to_handler
void Microsoft::Win32::KeyHandler::_set_key_to_handler(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_set_key_to_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "key_to_handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable dir_to_handler
System::Collections::Hashtable* Microsoft::Win32::KeyHandler::_get_dir_to_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_get_dir_to_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("Microsoft.Win32", "KeyHandler", "dir_to_handler"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable dir_to_handler
void Microsoft::Win32::KeyHandler::_set_dir_to_handler(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_set_dir_to_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "dir_to_handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.String user_store
::Il2CppString* Microsoft::Win32::KeyHandler::_get_user_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_get_user_store");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Microsoft.Win32", "KeyHandler", "user_store"));
}
// Autogenerated static field setter
// Set static field: static private System.String user_store
void Microsoft::Win32::KeyHandler::_set_user_store(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_set_user_store");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "user_store", value));
}
// Autogenerated static field getter
// Get static field: static private System.String machine_store
::Il2CppString* Microsoft::Win32::KeyHandler::_get_machine_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_get_machine_store");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Microsoft.Win32", "KeyHandler", "machine_store"));
}
// Autogenerated static field setter
// Set static field: static private System.String machine_store
void Microsoft::Win32::KeyHandler::_set_machine_store(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_set_machine_store");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "machine_store", value));
}
// Autogenerated method: Microsoft.Win32.KeyHandler..cctor
void Microsoft::Win32::KeyHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Load
void Microsoft::Win32::KeyHandler::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.LoadKey
void Microsoft::Win32::KeyHandler::LoadKey(System::Security::SecurityElement* se) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::LoadKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(se)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, se);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Ensure
Microsoft::Win32::RegistryKey* Microsoft::Win32::KeyHandler::Ensure(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* extra, bool writable, bool is_volatile) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Ensure");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Ensure", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, extra, writable, is_volatile)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, extra, writable, is_volatile);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Probe
Microsoft::Win32::RegistryKey* Microsoft::Win32::KeyHandler::Probe(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* extra, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Probe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Probe", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, extra, writable)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, extra, writable);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.CombineName
::Il2CppString* Microsoft::Win32::KeyHandler::CombineName(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* extra) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::CombineName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "CombineName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, extra)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey, extra);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetSystemBootTime
int64_t Microsoft::Win32::KeyHandler::GetSystemBootTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetSystemBootTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetSystemBootTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetRegisteredBootTime
int64_t Microsoft::Win32::KeyHandler::GetRegisteredBootTime(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetRegisteredBootTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetRegisteredBootTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.SaveRegisteredBootTime
void Microsoft::Win32::KeyHandler::SaveRegisteredBootTime(::Il2CppString* path, int64_t btime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::SaveRegisteredBootTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "SaveRegisteredBootTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, btime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, btime);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.CleanVolatileKeys
void Microsoft::Win32::KeyHandler::CleanVolatileKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::CleanVolatileKeys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "CleanVolatileKeys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.VolatileKeyExists
bool Microsoft::Win32::KeyHandler::VolatileKeyExists(::Il2CppString* dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::VolatileKeyExists");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "VolatileKeyExists", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dir)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetVolatileDir
::Il2CppString* Microsoft::Win32::KeyHandler::GetVolatileDir(::Il2CppString* dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetVolatileDir");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetVolatileDir", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dir)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Lookup
Microsoft::Win32::KeyHandler* Microsoft::Win32::KeyHandler::Lookup(Microsoft::Win32::RegistryKey* rkey, bool createNonExisting) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Lookup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "Lookup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, createNonExisting)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::KeyHandler*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey, createNonExisting);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetRootFromDir
::Il2CppString* Microsoft::Win32::KeyHandler::GetRootFromDir(::Il2CppString* dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetRootFromDir");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetRootFromDir", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dir)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Drop
void Microsoft::Win32::KeyHandler::Drop(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Drop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "Drop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetValue
::Il2CppObject* Microsoft::Win32::KeyHandler::GetValue(::Il2CppString* name, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, options)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, options);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetSubKeyNames
::Array<::Il2CppString*>* Microsoft::Win32::KeyHandler::GetSubKeyNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetSubKeyNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Flush
void Microsoft::Win32::KeyHandler::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.ValueExists
bool Microsoft::Win32::KeyHandler::ValueExists(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::ValueExists");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValueExists", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_IsMarkedForDeletion
bool Microsoft::Win32::KeyHandler::get_IsMarkedForDeletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::get_IsMarkedForDeletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsMarkedForDeletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Save
void Microsoft::Win32::KeyHandler::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Save");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_UserStore
::Il2CppString* Microsoft::Win32::KeyHandler::get_UserStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::get_UserStore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "get_UserStore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_MachineStore
::Il2CppString* Microsoft::Win32::KeyHandler::get_MachineStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::get_MachineStore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "get_MachineStore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Finalize
void Microsoft::Win32::KeyHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.UnixRegistryApi
#include "Microsoft/Win32/UnixRegistryApi.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.ToUnix
::Il2CppString* Microsoft::Win32::UnixRegistryApi::ToUnix(::Il2CppString* keyname) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::ToUnix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "UnixRegistryApi", "ToUnix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyname)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyname);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.IsWellKnownKey
bool Microsoft::Win32::UnixRegistryApi::IsWellKnownKey(::Il2CppString* parentKeyName, ::Il2CppString* keyname) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::IsWellKnownKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "UnixRegistryApi", "IsWellKnownKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentKeyName, keyname)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentKeyName, keyname);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::OpenSubKey_NEW(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyname, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::OpenSubKey_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, keyname, writable)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyname, writable);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.Flush
void Microsoft::Win32::UnixRegistryApi::Flush_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::Flush_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.Close
void Microsoft::Win32::UnixRegistryApi::Close_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::Close_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::UnixRegistryApi::GetValue_NEW(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, ::Il2CppObject* default_value, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::GetValue_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, name, default_value, options)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, rkey, name, default_value, options);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetSubKeyNames
::Array<::Il2CppString*>* Microsoft::Win32::UnixRegistryApi::GetSubKeyNames_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::GetSubKeyNames_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.ToString
::Il2CppString* Microsoft::Win32::UnixRegistryApi::ToString_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::ToString_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.CreateSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::CreateSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyname, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::CreateSubKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, keyname, writable)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyname, writable);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.CreateSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::CreateSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyname, bool writable, bool is_volatile) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::CreateSubKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, keyname, writable, is_volatile)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyname, writable, is_volatile);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetHandle
System::IntPtr Microsoft::Win32::UnixRegistryApi::GetHandle_NEW(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::GetHandle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32RegistryApi
#include "Microsoft/Win32/Win32RegistryApi.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Microsoft.Win32.RegistryValueKind
#include "Microsoft/Win32/RegistryValueKind.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegCloseKey
int Microsoft::Win32::Win32RegistryApi::RegCloseKey(System::IntPtr keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegCloseKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegCloseKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyHandle)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegFlushKey
int Microsoft::Win32::Win32RegistryApi::RegFlushKey(System::IntPtr keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegFlushKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegFlushKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyHandle)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegOpenKeyEx
int Microsoft::Win32::Win32RegistryApi::RegOpenKeyEx(System::IntPtr keyBase, ::Il2CppString* keyName, System::IntPtr reserved, int access, System::IntPtr& keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegOpenKeyEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegOpenKeyEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, keyName, reserved, access, keyHandle)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, keyName, reserved, access, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegEnumKeyEx
int Microsoft::Win32::Win32RegistryApi::RegEnumKeyEx(System::IntPtr keyHandle, int dwIndex, ::Il2CppChar* lpName, int& lpcbName, ::Array<int>* lpReserved, System::Text::StringBuilder*& lpClass, ::Array<int>* lpcbClass, ::Array<int64_t>* lpftLastWriteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegEnumKeyEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegEnumKeyEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyHandle, dwIndex, lpName, lpcbName, lpReserved, lpClass, lpcbClass, lpftLastWriteTime)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle, dwIndex, lpName, lpcbName, lpReserved, lpClass, lpcbClass, lpftLastWriteTime);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, System::IntPtr zero, int& dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, valueName, reserved, type, zero, dataSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, type, zero, dataSize);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, ::Array<uint8_t>*& data, int& dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, valueName, reserved, type, data, dataSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, type, data, dataSize);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, int& data, int& dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, valueName, reserved, type, data, dataSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, type, data, dataSize);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, int64_t& data, int& dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, valueName, reserved, type, data, dataSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, type, data, dataSize);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryInfoKey
int Microsoft::Win32::Win32RegistryApi::RegQueryInfoKey(System::IntPtr hKey, System::Text::StringBuilder*& lpClass, ::Array<int>* lpcbClass, System::IntPtr lpReserved_MustBeZero, int& lpcSubKeys, ::Array<int>* lpcbMaxSubKeyLen, ::Array<int>* lpcbMaxClassLen, int& lpcValues, ::Array<int>* lpcbMaxValueNameLen, ::Array<int>* lpcbMaxValueLen, ::Array<int>* lpcbSecurityDescriptor, ::Array<int>* lpftLastWriteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryInfoKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryInfoKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hKey, lpClass, lpcbClass, lpReserved_MustBeZero, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hKey, lpClass, lpcbClass, lpReserved_MustBeZero, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetHandle
System::IntPtr Microsoft::Win32::Win32RegistryApi::GetHandle_NEW(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GetHandle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.IsHandleValid
bool Microsoft::Win32::Win32RegistryApi::IsHandleValid(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::IsHandleValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "IsHandleValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::Win32RegistryApi::GetValue_NEW(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, ::Il2CppObject* defaultValue, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GetValue_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, name, defaultValue, options)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, rkey, name, defaultValue, options);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetBinaryValue
int Microsoft::Win32::Win32RegistryApi::GetBinaryValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, Microsoft::Win32::RegistryValueKind type, ::Array<uint8_t>*& data, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GetBinaryValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBinaryValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, name, type, data, size)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, rkey, name, type, data, size);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.SubKeyCount
int Microsoft::Win32::Win32RegistryApi::SubKeyCount_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::SubKeyCount_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SubKeyCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::Win32RegistryApi::OpenSubKey_NEW(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyName, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::OpenSubKey_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, keyName, writable)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyName, writable);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Flush
void Microsoft::Win32::Win32RegistryApi::Flush_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::Flush_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Close
void Microsoft::Win32::Win32RegistryApi::Close_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::Close_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetSubKeyNames
::Array<::Il2CppString*>* Microsoft::Win32::Win32RegistryApi::GetSubKeyNames_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GetSubKeyNames_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GenerateException
void Microsoft::Win32::Win32RegistryApi::GenerateException(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GenerateException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(errorCode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, errorCode);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.ToString
::Il2CppString* Microsoft::Win32::Win32RegistryApi::ToString_NEW(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::ToString_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.CombineName
::Il2CppString* Microsoft::Win32::Win32RegistryApi::CombineName(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::CombineName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "CombineName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, localName)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey, localName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32Native
#include "Microsoft/Win32/Win32Native.hpp"
// Including type: Microsoft.Win32.Win32Native/WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.Win32Native.GetMessage
::Il2CppString* Microsoft::Win32::Win32Native::GetMessage(int hr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32Native::GetMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32Native", "GetMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hr)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hr);
}
// Autogenerated method: Microsoft.Win32.Win32Native.MakeHRFromErrorCode
int Microsoft::Win32::Win32Native::MakeHRFromErrorCode(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32Native::MakeHRFromErrorCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32Native", "MakeHRFromErrorCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(errorCode)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32Native/WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeFindHandle
#include "Microsoft/Win32/SafeHandles/SafeFindHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeFindHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeFindHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeFindHandle::ReleaseHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
#include "Microsoft/Win32/SafeHandles/SafeRegistryHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeRegistryHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeRegistryHandle::ReleaseHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeWaitHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeWaitHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeWaitHandle::ReleaseHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
#include "Microsoft/Win32/SafeHandles/SafeHandleZeroOrMinusOneIsInvalid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid::get_IsInvalid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsInvalid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ThrowHelper
#include "System/ThrowHelper.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ExceptionResource
#include "System/ExceptionResource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ThrowHelper.ThrowArgumentNullException
void System::ThrowHelper::ThrowArgumentNullException(System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowArgumentNullException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentNullException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(argument)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.CreateArgumentNullException
System::Exception* System::ThrowHelper::CreateArgumentNullException(System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::CreateArgumentNullException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "CreateArgumentNullException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(argument)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentOutOfRangeException
void System::ThrowHelper::ThrowArgumentOutOfRangeException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ThrowHelper.ThrowWrongValueTypeArgumentException
void System::ThrowHelper::ThrowWrongValueTypeArgumentException(::Il2CppObject* value, System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowWrongValueTypeArgumentException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowWrongValueTypeArgumentException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, targetType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, targetType);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentException
void System::ThrowHelper::ThrowArgumentException(System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowArgumentException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resource)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentOutOfRangeException
void System::ThrowHelper::ThrowArgumentOutOfRangeException(System::ExceptionArgument argument, System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(argument, resource)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowInvalidOperationException
void System::ThrowHelper::ThrowInvalidOperationException(System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowInvalidOperationException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowInvalidOperationException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resource)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowNotSupportedException
void System::ThrowHelper::ThrowNotSupportedException(System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resource)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.GetArgumentName
::Il2CppString* System::ThrowHelper::GetArgumentName(System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::GetArgumentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "GetArgumentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(argument)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.GetResourceName
::Il2CppString* System::ThrowHelper::GetResourceName(System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::GetResourceName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ThrowHelper", "GetResourceName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resource)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resource);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TupleExtensions
#include "System/TupleExtensions.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueTuple
#include "System/ValueTuple.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ValueTuple.Equals
bool System::ValueTuple::Equals_NEW(System::ValueTuple other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralEquatable.Equals
bool System::ValueTuple::System_Collections_IStructuralEquatable_Equals_NEW(::Il2CppObject* other, System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::System.Collections.IStructuralEquatable.Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralEquatable.Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other, comparer)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other, comparer);
}
// Autogenerated method: System.ValueTuple.System.IComparable.CompareTo
int System::ValueTuple::System_IComparable_CompareTo_NEW(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::System.IComparable.CompareTo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IComparable.CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.CompareTo
int System::ValueTuple::CompareTo_NEW(System::ValueTuple other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::CompareTo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralComparable.CompareTo
int System::ValueTuple::System_Collections_IStructuralComparable_CompareTo_NEW(::Il2CppObject* other, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::System.Collections.IStructuralComparable.CompareTo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralComparable.CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other, comparer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other, comparer);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralEquatable.GetHashCode
int System::ValueTuple::System_Collections_IStructuralEquatable_GetHashCode_NEW(System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::System.Collections.IStructuralEquatable.GetHashCode_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralEquatable.GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(comparer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, comparer);
}
// Autogenerated method: System.ValueTuple.CombineHashCodes
int System::ValueTuple::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ValueTuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.ValueTuple.Equals
bool System::ValueTuple::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.ValueTuple.GetHashCode
int System::ValueTuple::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.ValueTuple.ToString
::Il2CppString* System::ValueTuple::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Array/ArrayEnumerator
#include "System/Array_ArrayEnumerator.hpp"
// Including type: System.Array/InternalEnumerator`1
#include "System/Array_InternalEnumerator_1.hpp"
// Including type: System.Array/EmptyInternalEnumerator`1
#include "System/Array_EmptyInternalEnumerator_1.hpp"
// Including type: System.Array/SorterObjectArray
#include "System/Array_SorterObjectArray.hpp"
// Including type: System.Array/SorterGenericArray
#include "System/Array_SorterGenericArray.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, ::Array<int64_t>* lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, lengths)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths);
}
// Creating initializer_list -> params proxy for: System.Array CreateInstance(System.Type elementType, params System.Int64[] lengths)
System::Array* System::Array::CreateInstance(System::Type* elementType, std::initializer_list<int64_t> lengths) {
  return System::Array::CreateInstance(elementType, ::Array<int64_t>::New(lengths));
}
// Autogenerated method: System.Array.System.Collections.ICollection.get_Count
int System::Array::System_Collections_ICollection_get_Count_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.ICollection.get_Count_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.get_IsReadOnly
bool System::Array::System_Collections_IList_get_IsReadOnly_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.get_IsReadOnly_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.get_Item
::Il2CppObject* System::Array::System_Collections_IList_get_Item_NEW(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.get_Item_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.System.Collections.IList.set_Item
void System::Array::System_Collections_IList_set_Item_NEW(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.set_Item_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Add
int System::Array::System_Collections_IList_Add_NEW(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Add_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Contains
bool System::Array::System_Collections_IList_Contains_NEW(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Contains_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Clear
void System::Array::System_Collections_IList_Clear_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Clear_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.IndexOf
int System::Array::System_Collections_IList_IndexOf_NEW(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.IndexOf_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Insert
void System::Array::System_Collections_IList_Insert_NEW(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Insert_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Remove
void System::Array::System_Collections_IList_Remove_NEW(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Remove_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.RemoveAt
void System::Array::System_Collections_IList_RemoveAt_NEW(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.RemoveAt_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.CopyTo
void System::Array::CopyTo_NEW(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CopyTo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Array.Clone
::Il2CppObject* System::Array::Clone_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Clone_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IStructuralComparable.CompareTo
int System::Array::System_Collections_IStructuralComparable_CompareTo_NEW(::Il2CppObject* other, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IStructuralComparable.CompareTo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralComparable.CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other, comparer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.Array.System.Collections.IStructuralEquatable.Equals
bool System::Array::System_Collections_IStructuralEquatable_Equals_NEW(::Il2CppObject* other, System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IStructuralEquatable.Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralEquatable.Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other, comparer)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.Array.CombineHashCodes
int System::Array::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.Array.System.Collections.IStructuralEquatable.GetHashCode
int System::Array::System_Collections_IStructuralEquatable_GetHashCode_NEW(System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IStructuralEquatable.GetHashCode_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralEquatable.GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(comparer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, comparer);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(System::Array* sourceArray, System::Array* destinationArray, int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceArray, destinationArray, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, destinationArray, length);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(System::Array* sourceArray, int64_t sourceIndex, System::Array* destinationArray, int64_t destinationIndex, int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceArray, sourceIndex, destinationArray, destinationIndex, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.CopyTo
void System::Array::CopyTo(System::Array* array, int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Array.get_LongLength
int64_t System::Array::get_LongLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_LongLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LongLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.GetLongLength
int64_t System::Array::GetLongLength(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetLongLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLongLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dimension)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index1, int64_t index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index1, index2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index1, index2);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index1, int64_t index2, int64_t index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index1, index2, index3)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index1, index2, index3);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(::Array<int64_t>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(indices)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, indices);
}
// Creating initializer_list -> params proxy for: System.Object GetValue(params System.Int64[] indices)
::Il2CppObject* System::Array::GetValue(std::initializer_list<int64_t> indices) {
  return System::Array::GetValue(::Array<int64_t>::New(indices));
}
// Autogenerated method: System.Array.get_IsFixedSize
bool System::Array::get_IsFixedSize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_IsFixedSize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_IsReadOnly
bool System::Array::get_IsReadOnly_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_IsReadOnly_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_IsSynchronized
bool System::Array::get_IsSynchronized_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_IsSynchronized_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSynchronized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_SyncRoot
::Il2CppObject* System::Array::get_SyncRoot_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_SyncRoot_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(System::Array* array, int index, int length, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, length, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length, value);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(System::Array* array, ::Il2CppObject* value, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value, comparer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, comparer);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(System::Array* array, int index, int length, ::Il2CppObject* value, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, length, value, comparer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length, value, comparer);
}
// Autogenerated method: System.Array.GetMedian
int System::Array::GetMedian(int low, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetMedian");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "GetMedian", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(low, hi)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, low, hi);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(System::Array* array, ::Il2CppObject* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value, startIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, startIndex);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(System::Array* array, ::Il2CppObject* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(System::Array* array, ::Il2CppObject* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value, startIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, startIndex);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(System::Array* array, ::Il2CppObject* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Array.Reverse
void System::Array::Reverse(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Reverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Reverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Array.Reverse
void System::Array::Reverse(System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Reverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Reverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, index);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index1, int64_t index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, index1, index2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, index1, index2);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index1, int64_t index2, int64_t index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, index1, index2, index3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, index1, index2, index3);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, ::Array<int64_t>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, indices)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, indices);
}
// Creating initializer_list -> params proxy for: System.Void SetValue(System.Object value, params System.Int64[] indices)
void System::Array::SetValue(::Il2CppObject* value, std::initializer_list<int64_t> indices) {
  System::Array::SetValue(value, ::Array<int64_t>::New(indices));
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* array, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, comparer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* array, int index, int length, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, length, comparer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* keys, System::Array* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keys, items)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* keys, System::Array* items, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keys, items, comparer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* keys, System::Array* items, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keys, items, index, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items, index, length);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* keys, System::Array* items, int index, int length, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keys, items, index, length, comparer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items, index, length, comparer);
}
// Autogenerated method: System.Array.GetEnumerator
System::Collections::IEnumerator* System::Array::GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_get_Count
int System::Array::InternalArray__ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__ICollection_get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_get_IsReadOnly
bool System::Array::InternalArray__ICollection_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__ICollection_get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_Clear
void System::Array::InternalArray__ICollection_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__ICollection_Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__IReadOnlyCollection_get_Count
int System::Array::InternalArray__IReadOnlyCollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__IReadOnlyCollection_get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalArray__IReadOnlyCollection_get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__RemoveAt
void System::Array::InternalArray__RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__RemoveAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalArray__RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.get_Length
int System::Array::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_Rank
int System::Array::get_Rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_Rank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Rank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.GetRank
int System::Array::GetRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.GetLength
int System::Array::GetLength(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dimension)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetLowerBound
int System::Array::GetLowerBound(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetLowerBound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLowerBound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dimension)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(::Array<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(indices)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, indices);
}
// Creating initializer_list -> params proxy for: System.Object GetValue(params System.Int32[] indices)
::Il2CppObject* System::Array::GetValue(std::initializer_list<int> indices) {
  return System::Array::GetValue(::Array<int>::New(indices));
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, ::Array<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, indices)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, indices);
}
// Creating initializer_list -> params proxy for: System.Void SetValue(System.Object value, params System.Int32[] indices)
void System::Array::SetValue(::Il2CppObject* value, std::initializer_list<int> indices) {
  System::Array::SetValue(value, ::Array<int>::New(indices));
}
// Autogenerated method: System.Array.GetValueImpl
::Il2CppObject* System::Array::GetValueImpl(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValueImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValueImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Array.SetValueImpl
void System::Array::SetValueImpl(::Il2CppObject* value, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValueImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValueImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, pos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, pos);
}
// Autogenerated method: System.Array.FastCopy
bool System::Array::FastCopy(System::Array* source, int source_idx, System::Array* dest, int dest_idx, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::FastCopy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "FastCopy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, source_idx, dest, dest_idx, length)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, source_idx, dest, dest_idx, length);
}
// Autogenerated method: System.Array.CreateInstanceImpl
System::Array* System::Array::CreateInstanceImpl(System::Type* elementType, ::Array<int>* lengths, ::Array<int>* bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstanceImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CreateInstanceImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, lengths, bounds)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths, bounds);
}
// Autogenerated method: System.Array.GetUpperBound
int System::Array::GetUpperBound(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetUpperBound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUpperBound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dimension)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index1, int index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index1, index2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index1, index2);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index1, int index2, int index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index1, index2, index3)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index1, index2, index3);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, index);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index1, int index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, index1, index2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, index1, index2);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index1, int index2, int index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, index1, index2, index3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, index1, index2, index3);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
System::Array* System::Array::UnsafeCreateInstance(System::Type* elementType, ::Array<int>* lengths, ::Array<int>* lowerBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, lengths, lowerBounds)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths, lowerBounds);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
System::Array* System::Array::UnsafeCreateInstance(System::Type* elementType, int length1, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, length1, length2)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, length1, length2);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
System::Array* System::Array::UnsafeCreateInstance(System::Type* elementType, ::Array<int>* lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, lengths)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths);
}
// Creating initializer_list -> params proxy for: System.Array UnsafeCreateInstance(System.Type elementType, params System.Int32[] lengths)
System::Array* System::Array::UnsafeCreateInstance(System::Type* elementType, std::initializer_list<int> lengths) {
  return System::Array::UnsafeCreateInstance(elementType, ::Array<int>::New(lengths));
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, length)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, length);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, int length1, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, length1, length2)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, length1, length2);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, int length1, int length2, int length3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, length1, length2, length3)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, length1, length2, length3);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, ::Array<int>* lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, lengths)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths);
}
// Creating initializer_list -> params proxy for: System.Array CreateInstance(System.Type elementType, params System.Int32[] lengths)
System::Array* System::Array::CreateInstance(System::Type* elementType, std::initializer_list<int> lengths) {
  return System::Array::CreateInstance(elementType, ::Array<int>::New(lengths));
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, ::Array<int>* lengths, ::Array<int>* lowerBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, lengths, lowerBounds)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths, lowerBounds);
}
// Autogenerated method: System.Array.Clear
void System::Array::Clear(System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.ClearInternal
void System::Array::ClearInternal(System::Array* a, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ClearInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "ClearInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, index, count);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(System::Array* sourceArray, System::Array* destinationArray, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceArray, destinationArray, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, destinationArray, length);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(System::Array* sourceArray, int sourceIndex, System::Array* destinationArray, int destinationIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceArray, sourceIndex, destinationArray, destinationIndex, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.CreateArrayTypeMismatchException
System::Exception* System::Array::CreateArrayTypeMismatchException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateArrayTypeMismatchException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CreateArrayTypeMismatchException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Array.CanAssignArrayElement
bool System::Array::CanAssignArrayElement(System::Type* source, System::Type* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CanAssignArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "CanAssignArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, target)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, target);
}
// Autogenerated method: System.Array.ConstrainedCopy
void System::Array::ConstrainedCopy(System::Array* sourceArray, int sourceIndex, System::Array* destinationArray, int destinationIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ConstrainedCopy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "ConstrainedCopy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceArray, sourceIndex, destinationArray, destinationIndex, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.Initialize
void System::Array::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.SortImpl
void System::Array::SortImpl(System::Array* keys, System::Array* items, int index, int length, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SortImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Array", "SortImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keys, items, index, length, comparer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items, index, length, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array/ArrayEnumerator
#include "System/Array_ArrayEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Array/ArrayEnumerator.MoveNext
bool System::Array::ArrayEnumerator::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array/ArrayEnumerator.Reset
void System::Array::ArrayEnumerator::Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Array/ArrayEnumerator.Clone
::Il2CppObject* System::Array::ArrayEnumerator::Clone_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::Clone_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Array/ArrayEnumerator.get_Current
::Il2CppObject* System::Array::ArrayEnumerator::get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array/SorterObjectArray
#include "System/Array_SorterObjectArray.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Array/SorterObjectArray.SwapIfGreaterWithItems
void System::Array::SorterObjectArray::SwapIfGreaterWithItems(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::SwapIfGreaterWithItems");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SwapIfGreaterWithItems", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, a, b);
}
// Autogenerated method: System.Array/SorterObjectArray.Swap
void System::Array::SorterObjectArray::Swap(int i, int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::Swap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Swap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, j)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, j);
}
// Autogenerated method: System.Array/SorterObjectArray.Sort
void System::Array::SorterObjectArray::Sort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/SorterObjectArray.IntrospectiveSort
void System::Array::SorterObjectArray::IntrospectiveSort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::IntrospectiveSort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "IntrospectiveSort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/SorterObjectArray.IntroSort
void System::Array::SorterObjectArray::IntroSort(int lo, int hi, int depthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::IntroSort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "IntroSort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lo, hi, depthLimit)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi, depthLimit);
}
// Autogenerated method: System.Array/SorterObjectArray.PickPivotAndPartition
int System::Array::SorterObjectArray::PickPivotAndPartition(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::PickPivotAndPartition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "PickPivotAndPartition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lo, hi)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/SorterObjectArray.Heapsort
void System::Array::SorterObjectArray::Heapsort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::Heapsort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Heapsort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lo, hi)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/SorterObjectArray.DownHeap
void System::Array::SorterObjectArray::DownHeap(int i, int n, int lo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::DownHeap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "DownHeap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, n, lo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, n, lo);
}
// Autogenerated method: System.Array/SorterObjectArray.InsertionSort
void System::Array::SorterObjectArray::InsertionSort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::InsertionSort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "InsertionSort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lo, hi)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Array/SorterGenericArray
#include "System/Array_SorterGenericArray.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Array/SorterGenericArray.SwapIfGreaterWithItems
void System::Array::SorterGenericArray::SwapIfGreaterWithItems(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::SwapIfGreaterWithItems");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SwapIfGreaterWithItems", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, a, b);
}
// Autogenerated method: System.Array/SorterGenericArray.Swap
void System::Array::SorterGenericArray::Swap(int i, int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::Swap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Swap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, j)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, j);
}
// Autogenerated method: System.Array/SorterGenericArray.Sort
void System::Array::SorterGenericArray::Sort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::Sort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Sort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/SorterGenericArray.IntrospectiveSort
void System::Array::SorterGenericArray::IntrospectiveSort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::IntrospectiveSort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "IntrospectiveSort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/SorterGenericArray.IntroSort
void System::Array::SorterGenericArray::IntroSort(int lo, int hi, int depthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::IntroSort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "IntroSort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lo, hi, depthLimit)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi, depthLimit);
}
// Autogenerated method: System.Array/SorterGenericArray.PickPivotAndPartition
int System::Array::SorterGenericArray::PickPivotAndPartition(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::PickPivotAndPartition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "PickPivotAndPartition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lo, hi)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/SorterGenericArray.Heapsort
void System::Array::SorterGenericArray::Heapsort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::Heapsort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Heapsort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lo, hi)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/SorterGenericArray.DownHeap
void System::Array::SorterGenericArray::DownHeap(int i, int n, int lo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::DownHeap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "DownHeap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, n, lo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, n, lo);
}
// Autogenerated method: System.Array/SorterGenericArray.InsertionSort
void System::Array::SorterGenericArray::InsertionSort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::InsertionSort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "InsertionSort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lo, hi)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ITupleInternal
#include "System/ITupleInternal.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ITupleInternal.ToString
::Il2CppString* System::ITupleInternal::ToString_NEW(System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ITupleInternal::ToString_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sb)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Tuple
#include "System/Tuple.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Tuple`3
#include "System/Tuple_3.hpp"
// Including type: System.Tuple`4
#include "System/Tuple_4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2, h3)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2, h3, h4)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MonoTODOAttribute
#include "System/MonoTODOAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MonoLimitationAttribute
#include "System/MonoLimitationAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.AggregateException.get_InnerExceptions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* System::AggregateException::get_InnerExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::get_InnerExceptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InnerExceptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.AggregateException.Flatten
System::AggregateException* System::AggregateException::Flatten() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::Flatten");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flatten", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::AggregateException*, false>(this, ___internal__method);
}
// Autogenerated method: System.AggregateException.GetObjectData
void System::AggregateException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.AggregateException.ToString
::Il2CppString* System::AggregateException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AppContextSwitches
#include "System/AppContextSwitches.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean ThrowExceptionIfDisposedCancellationTokenSource
bool System::AppContextSwitches::_get_ThrowExceptionIfDisposedCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_get_ThrowExceptionIfDisposedCancellationTokenSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "AppContextSwitches", "ThrowExceptionIfDisposedCancellationTokenSource"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean ThrowExceptionIfDisposedCancellationTokenSource
void System::AppContextSwitches::_set_ThrowExceptionIfDisposedCancellationTokenSource(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_set_ThrowExceptionIfDisposedCancellationTokenSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppContextSwitches", "ThrowExceptionIfDisposedCancellationTokenSource", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean SetActorAsReferenceWhenCopyingClaimsIdentity
bool System::AppContextSwitches::_get_SetActorAsReferenceWhenCopyingClaimsIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_get_SetActorAsReferenceWhenCopyingClaimsIdentity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "AppContextSwitches", "SetActorAsReferenceWhenCopyingClaimsIdentity"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean SetActorAsReferenceWhenCopyingClaimsIdentity
void System::AppContextSwitches::_set_SetActorAsReferenceWhenCopyingClaimsIdentity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_set_SetActorAsReferenceWhenCopyingClaimsIdentity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppContextSwitches", "SetActorAsReferenceWhenCopyingClaimsIdentity", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LazyHelpers
#include "System/LazyHelpers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Object PUBLICATION_ONLY_SENTINEL
::Il2CppObject* System::LazyHelpers::_get_PUBLICATION_ONLY_SENTINEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LazyHelpers::_get_PUBLICATION_ONLY_SENTINEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "LazyHelpers", "PUBLICATION_ONLY_SENTINEL"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Object PUBLICATION_ONLY_SENTINEL
void System::LazyHelpers::_set_PUBLICATION_ONLY_SENTINEL(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LazyHelpers::_set_PUBLICATION_ONLY_SENTINEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyHelpers", "PUBLICATION_ONLY_SENTINEL", value));
}
// Autogenerated method: System.LazyHelpers..cctor
void System::LazyHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LazyHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "LazyHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.__Filters
#include "System/__Filters.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.__Filters Instance
System::__Filters* System::__Filters::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::__Filters*>("System", "__Filters", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.__Filters Instance
void System::__Filters::_set_Instance(System::__Filters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "__Filters", "Instance", value));
}
// Autogenerated method: System.__Filters.FilterAttribute
bool System::__Filters::FilterAttribute_NEW(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::FilterAttribute_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FilterAttribute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(m, filterCriteria)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.__Filters.FilterName
bool System::__Filters::FilterName_NEW(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::FilterName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FilterName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(m, filterCriteria)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.__Filters.FilterIgnoreCase
bool System::__Filters::FilterIgnoreCase_NEW(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::FilterIgnoreCase_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FilterIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(m, filterCriteria)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.__Filters..cctor
void System::__Filters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "__Filters", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
