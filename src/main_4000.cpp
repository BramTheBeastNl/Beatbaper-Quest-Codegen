// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.LeaderboardEntryData
#include "OnlineServices/LeaderboardEntryData.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.LeaderboardEntryData.ToString
::Il2CppString* OnlineServices::LeaderboardEntryData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntryData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LeaderboardEntryData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntryData::*)(int, int, ::Il2CppString*, ::Il2CppString*, GlobalNamespace::GameplayModifiers*)>(&LeaderboardEntryData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntryData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntryData::*)(int, int, ::Il2CppString*, ::Il2CppString*, GlobalNamespace::GameplayModifiers*)>(&LeaderboardEntryData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntryData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardEntryData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LeaderboardEntryData::*)()>(&LeaderboardEntryData::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntryData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.GetLeaderboardEntriesResult
#include "OnlineServices/GetLeaderboardEntriesResult.hpp"
// Including type: OnlineServices.LeaderboardEntryData
#include "OnlineServices/LeaderboardEntryData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.GetLeaderboardEntriesResult.get_resultWithError
OnlineServices::GetLeaderboardEntriesResult OnlineServices::GetLeaderboardEntriesResult::get_resultWithError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::GetLeaderboardEntriesResult::get_resultWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices", "GetLeaderboardEntriesResult", "get_resultWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::GetLeaderboardEntriesResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: GetLeaderboardEntriesResult::GetLeaderboardEntriesResult
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GetLeaderboardEntriesResult::*)(bool, ::Array<OnlineServices::LeaderboardEntryData*>*, int)>(&GetLeaderboardEntriesResult::GetLeaderboardEntriesResult<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GetLeaderboardEntriesResult), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<OnlineServices::LeaderboardEntryData*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GetLeaderboardEntriesResult::*)(bool, ::Array<OnlineServices::LeaderboardEntryData*>*, int)>(&GetLeaderboardEntriesResult::GetLeaderboardEntriesResult<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GetLeaderboardEntriesResult), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<OnlineServices::LeaderboardEntryData*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GetLeaderboardEntriesResult::get_resultWithError
// Il2CppName: get_resultWithError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<OnlineServices::GetLeaderboardEntriesResult (*)()>(&GetLeaderboardEntriesResult::get_resultWithError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GetLeaderboardEntriesResult), "get_resultWithError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.ScoresScope
#include "OnlineServices/ScoresScope.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OnlineServices.ScoresScope Global
OnlineServices::ScoresScope OnlineServices::ScoresScope::_get_Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ScoresScope::_get_Global");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OnlineServices::ScoresScope>("OnlineServices", "ScoresScope", "Global"));
}
// Autogenerated static field setter
// Set static field: static public OnlineServices.ScoresScope Global
void OnlineServices::ScoresScope::_set_Global(OnlineServices::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ScoresScope::_set_Global");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices", "ScoresScope", "Global", value));
}
// Autogenerated static field getter
// Get static field: static public OnlineServices.ScoresScope Friends
OnlineServices::ScoresScope OnlineServices::ScoresScope::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ScoresScope::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OnlineServices::ScoresScope>("OnlineServices", "ScoresScope", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public OnlineServices.ScoresScope Friends
void OnlineServices::ScoresScope::_set_Friends(OnlineServices::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ScoresScope::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices", "ScoresScope", "Friends", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GetLeaderboardFilterData::GetLeaderboardFilterData
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GetLeaderboardFilterData::*)(GlobalNamespace::IDifficultyBeatmap*, int, int, OnlineServices::ScoresScope, GlobalNamespace::GameplayModifiers*)>(&GetLeaderboardFilterData::GetLeaderboardFilterData<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GetLeaderboardFilterData), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<OnlineServices::ScoresScope>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GetLeaderboardFilterData::*)(GlobalNamespace::IDifficultyBeatmap*, int, int, OnlineServices::ScoresScope, GlobalNamespace::GameplayModifiers*)>(&GetLeaderboardFilterData::GetLeaderboardFilterData<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GetLeaderboardFilterData), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<OnlineServices::ScoresScope>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.SendLeaderboardEntryResult
#include "OnlineServices/SendLeaderboardEntryResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OnlineServices.SendLeaderboardEntryResult OK
OnlineServices::SendLeaderboardEntryResult OnlineServices::SendLeaderboardEntryResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::SendLeaderboardEntryResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OnlineServices::SendLeaderboardEntryResult>("OnlineServices", "SendLeaderboardEntryResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public OnlineServices.SendLeaderboardEntryResult OK
void OnlineServices::SendLeaderboardEntryResult::_set_OK(OnlineServices::SendLeaderboardEntryResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::SendLeaderboardEntryResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices", "SendLeaderboardEntryResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public OnlineServices.SendLeaderboardEntryResult Failed
OnlineServices::SendLeaderboardEntryResult OnlineServices::SendLeaderboardEntryResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::SendLeaderboardEntryResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OnlineServices::SendLeaderboardEntryResult>("OnlineServices", "SendLeaderboardEntryResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public OnlineServices.SendLeaderboardEntryResult Failed
void OnlineServices::SendLeaderboardEntryResult::_set_Failed(OnlineServices::SendLeaderboardEntryResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::SendLeaderboardEntryResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices", "SendLeaderboardEntryResult", "Failed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.LevelScoreUploader
#include "OnlineServices/LevelScoreUploader.hpp"
// Including type: OnlineServices.LevelScoreUploader/LevelScoreResultsDataUploadInfo
#include "OnlineServices/LevelScoreUploader_LevelScoreResultsDataUploadInfo.hpp"
// Including type: OnlineServices.LevelScoreUploader/<SendLevelScoreResultAsync>d__13
#include "OnlineServices/LevelScoreUploader_-SendLevelScoreResultAsync-d__13.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: HTTPLeaderboardsModel
#include "GlobalNamespace/HTTPLeaderboardsModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OnlineServices.PlatformOnlineServicesAvailabilityModel
#include "OnlineServices/PlatformOnlineServicesAvailabilityModel.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxUploadAttempts
int OnlineServices::LevelScoreUploader::_get_kMaxUploadAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::_get_kMaxUploadAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OnlineServices", "LevelScoreUploader", "kMaxUploadAttempts"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxUploadAttempts
void OnlineServices::LevelScoreUploader::_set_kMaxUploadAttempts(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::_set_kMaxUploadAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices", "LevelScoreUploader", "kMaxUploadAttempts", value));
}
// Autogenerated method: OnlineServices.LevelScoreUploader.add_scoreForLeaderboardDidUploadEvent
void OnlineServices::LevelScoreUploader::add_scoreForLeaderboardDidUploadEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::add_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServices.LevelScoreUploader.remove_scoreForLeaderboardDidUploadEvent
void OnlineServices::LevelScoreUploader::remove_scoreForLeaderboardDidUploadEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::remove_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServices.LevelScoreUploader.SendLevelScoreResult
void OnlineServices::LevelScoreUploader::SendLevelScoreResult(OnlineServices::LevelScoreResultsData levelScoreResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::SendLevelScoreResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResultsData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelScoreResultsData);
}
// Autogenerated method: OnlineServices.LevelScoreUploader.TrySendPreviouslyUnsuccessfullySentResults
void OnlineServices::LevelScoreUploader::TrySendPreviouslyUnsuccessfullySentResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::TrySendPreviouslyUnsuccessfullySentResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySendPreviouslyUnsuccessfullySentResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.LevelScoreUploader.SendLevelScoreResultAsync
void OnlineServices::LevelScoreUploader::SendLevelScoreResultAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::SendLevelScoreResultAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.LevelScoreUploader.AddUnsuccessfullySentResults
void OnlineServices::LevelScoreUploader::AddUnsuccessfullySentResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::AddUnsuccessfullySentResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnsuccessfullySentResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.LevelScoreUploader.OnDestroy
void OnlineServices::LevelScoreUploader::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LevelScoreUploader::add_scoreForLeaderboardDidUploadEvent
// Il2CppName: add_scoreForLeaderboardDidUploadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)(System::Action_1<::Il2CppString*>*)>(&LevelScoreUploader::add_scoreForLeaderboardDidUploadEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: LevelScoreUploader::remove_scoreForLeaderboardDidUploadEvent
// Il2CppName: remove_scoreForLeaderboardDidUploadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)(System::Action_1<::Il2CppString*>*)>(&LevelScoreUploader::remove_scoreForLeaderboardDidUploadEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: LevelScoreUploader::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)(GlobalNamespace::HTTPLeaderboardsModel*, OnlineServices::PlatformOnlineServicesAvailabilityModel*)>(&LevelScoreUploader::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::HTTPLeaderboardsModel*>(), ::il2cpp_utils::ExtractIndependentType<OnlineServices::PlatformOnlineServicesAvailabilityModel*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)(GlobalNamespace::HTTPLeaderboardsModel*, OnlineServices::PlatformOnlineServicesAvailabilityModel*)>(&LevelScoreUploader::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::HTTPLeaderboardsModel*>(), ::il2cpp_utils::ExtractIndependentType<OnlineServices::PlatformOnlineServicesAvailabilityModel*>()});
  }
};
// Writing MetadataGetter for method: LevelScoreUploader::SendLevelScoreResult
// Il2CppName: SendLevelScoreResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)(OnlineServices::LevelScoreResultsData)>(&LevelScoreUploader::SendLevelScoreResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), "SendLevelScoreResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::LevelScoreResultsData>()});
  }
};
// Writing MetadataGetter for method: LevelScoreUploader::TrySendPreviouslyUnsuccessfullySentResults
// Il2CppName: TrySendPreviouslyUnsuccessfullySentResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)()>(&LevelScoreUploader::TrySendPreviouslyUnsuccessfullySentResults)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), "TrySendPreviouslyUnsuccessfullySentResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelScoreUploader::SendLevelScoreResultAsync
// Il2CppName: SendLevelScoreResultAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)()>(&LevelScoreUploader::SendLevelScoreResultAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), "SendLevelScoreResultAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelScoreUploader::AddUnsuccessfullySentResults
// Il2CppName: AddUnsuccessfullySentResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)()>(&LevelScoreUploader::AddUnsuccessfullySentResults)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), "AddUnsuccessfullySentResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelScoreUploader::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::*)()>(&LevelScoreUploader::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.LevelScoreUploader/LevelScoreResultsDataUploadInfo
#include "OnlineServices/LevelScoreUploader_LevelScoreResultsDataUploadInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LevelScoreUploader::LevelScoreResultsDataUploadInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::LevelScoreResultsDataUploadInfo::*)()>(&LevelScoreUploader::LevelScoreResultsDataUploadInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader::LevelScoreResultsDataUploadInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::LevelScoreResultsDataUploadInfo::*)()>(&LevelScoreUploader::LevelScoreResultsDataUploadInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader::LevelScoreResultsDataUploadInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.LevelScoreUploader/<SendLevelScoreResultAsync>d__13
#include "OnlineServices/LevelScoreUploader_-SendLevelScoreResultAsync-d__13.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
// Including type: OnlineServices.LevelScoreUploader/LevelScoreResultsDataUploadInfo
#include "OnlineServices/LevelScoreUploader_LevelScoreResultsDataUploadInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.LevelScoreUploader/<SendLevelScoreResultAsync>d__13.MoveNext
void OnlineServices::LevelScoreUploader::$SendLevelScoreResultAsync$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::$SendLevelScoreResultAsync$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.LevelScoreUploader/<SendLevelScoreResultAsync>d__13.SetStateMachine
void OnlineServices::LevelScoreUploader::$SendLevelScoreResultAsync$d__13::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreUploader::$SendLevelScoreResultAsync$d__13::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: LevelScoreUploader::$SendLevelScoreResultAsync$d__13::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::$SendLevelScoreResultAsync$d__13::*)()>(&LevelScoreUploader::$SendLevelScoreResultAsync$d__13::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader::$SendLevelScoreResultAsync$d__13), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelScoreUploader::$SendLevelScoreResultAsync$d__13::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreUploader::$SendLevelScoreResultAsync$d__13::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&LevelScoreUploader::$SendLevelScoreResultAsync$d__13::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreUploader::$SendLevelScoreResultAsync$d__13), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.PlatformOnlineServicesAvailabilityModel
#include "OnlineServices/PlatformOnlineServicesAvailabilityModel.hpp"
// Including type: OnlineServices.PlatformOnlineServicesAvailabilityModel/<GetPlatformServicesAvailabilityInfo>d__4
#include "OnlineServices/PlatformOnlineServicesAvailabilityModel_-GetPlatformServicesAvailabilityInfo-d__4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.PlatformOnlineServicesAvailabilityModel.add_platformServicesAvailabilityInfoChangedEvent
void OnlineServices::PlatformOnlineServicesAvailabilityModel::add_platformServicesAvailabilityInfoChangedEvent(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformOnlineServicesAvailabilityModel::add_platformServicesAvailabilityInfoChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServices.PlatformOnlineServicesAvailabilityModel.remove_platformServicesAvailabilityInfoChangedEvent
void OnlineServices::PlatformOnlineServicesAvailabilityModel::remove_platformServicesAvailabilityInfoChangedEvent(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformOnlineServicesAvailabilityModel::remove_platformServicesAvailabilityInfoChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServices.PlatformOnlineServicesAvailabilityModel.GetPlatformServicesAvailabilityInfo
System::Threading::Tasks::Task_1<OnlineServices::PlatformServicesAvailabilityInfo*>* OnlineServices::PlatformOnlineServicesAvailabilityModel::GetPlatformServicesAvailabilityInfo(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformOnlineServicesAvailabilityModel::GetPlatformServicesAvailabilityInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlatformServicesAvailabilityInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::PlatformServicesAvailabilityInfo*>*, false>(this, ___internal__method, cancellationToken);
}
// Writing MetadataGetter for method: PlatformOnlineServicesAvailabilityModel::add_platformServicesAvailabilityInfoChangedEvent
// Il2CppName: add_platformServicesAvailabilityInfoChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformOnlineServicesAvailabilityModel::*)(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*)>(&PlatformOnlineServicesAvailabilityModel::add_platformServicesAvailabilityInfoChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformOnlineServicesAvailabilityModel*), "add_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*>()});
  }
};
// Writing MetadataGetter for method: PlatformOnlineServicesAvailabilityModel::remove_platformServicesAvailabilityInfoChangedEvent
// Il2CppName: remove_platformServicesAvailabilityInfoChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformOnlineServicesAvailabilityModel::*)(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*)>(&PlatformOnlineServicesAvailabilityModel::remove_platformServicesAvailabilityInfoChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformOnlineServicesAvailabilityModel*), "remove_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*>()});
  }
};
// Writing MetadataGetter for method: PlatformOnlineServicesAvailabilityModel::GetPlatformServicesAvailabilityInfo
// Il2CppName: GetPlatformServicesAvailabilityInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::PlatformServicesAvailabilityInfo*>* (PlatformOnlineServicesAvailabilityModel::*)(System::Threading::CancellationToken)>(&PlatformOnlineServicesAvailabilityModel::GetPlatformServicesAvailabilityInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformOnlineServicesAvailabilityModel*), "GetPlatformServicesAvailabilityInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: PlatformOnlineServicesAvailabilityModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformOnlineServicesAvailabilityModel::*)()>(&PlatformOnlineServicesAvailabilityModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformOnlineServicesAvailabilityModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformOnlineServicesAvailabilityModel::*)()>(&PlatformOnlineServicesAvailabilityModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformOnlineServicesAvailabilityModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.PlatformOnlineServicesAvailabilityModel/<GetPlatformServicesAvailabilityInfo>d__4
#include "OnlineServices/PlatformOnlineServicesAvailabilityModel_-GetPlatformServicesAvailabilityInfo-d__4.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.PlatformOnlineServicesAvailabilityModel/<GetPlatformServicesAvailabilityInfo>d__4.MoveNext
void OnlineServices::PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.PlatformOnlineServicesAvailabilityModel/<GetPlatformServicesAvailabilityInfo>d__4.SetStateMachine
void OnlineServices::PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::*)()>(&PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformOnlineServicesAvailabilityModel::$GetPlatformServicesAvailabilityInfo$d__4), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.PlatformServicesAvailabilityInfo.get_everythingOK
OnlineServices::PlatformServicesAvailabilityInfo* OnlineServices::PlatformServicesAvailabilityInfo::get_everythingOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformServicesAvailabilityInfo::get_everythingOK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices", "PlatformServicesAvailabilityInfo", "get_everythingOK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::PlatformServicesAvailabilityInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OnlineServices.PlatformServicesAvailabilityInfo.get_onlineServicesUnavailableError
OnlineServices::PlatformServicesAvailabilityInfo* OnlineServices::PlatformServicesAvailabilityInfo::get_onlineServicesUnavailableError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformServicesAvailabilityInfo::get_onlineServicesUnavailableError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices", "PlatformServicesAvailabilityInfo", "get_onlineServicesUnavailableError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::PlatformServicesAvailabilityInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: PlatformServicesAvailabilityInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformServicesAvailabilityInfo::*)(OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability, ::Il2CppString*)>(&PlatformServicesAvailabilityInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformServicesAvailabilityInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformServicesAvailabilityInfo::*)(OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability, ::Il2CppString*)>(&PlatformServicesAvailabilityInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformServicesAvailabilityInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlatformServicesAvailabilityInfo::get_everythingOK
// Il2CppName: get_everythingOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<OnlineServices::PlatformServicesAvailabilityInfo* (*)()>(&PlatformServicesAvailabilityInfo::get_everythingOK)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformServicesAvailabilityInfo*), "get_everythingOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformServicesAvailabilityInfo::get_onlineServicesUnavailableError
// Il2CppName: get_onlineServicesUnavailableError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<OnlineServices::PlatformServicesAvailabilityInfo* (*)()>(&PlatformServicesAvailabilityInfo::get_onlineServicesUnavailableError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformServicesAvailabilityInfo*), "get_onlineServicesUnavailableError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.PlatformServicesAvailabilityInfo/OnlineServicesAvailability
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OnlineServices.PlatformServicesAvailabilityInfo/OnlineServicesAvailability Available
OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability::_get_Available() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability::_get_Available");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability>("OnlineServices", "PlatformServicesAvailabilityInfo/OnlineServicesAvailability", "Available"));
}
// Autogenerated static field setter
// Set static field: static public OnlineServices.PlatformServicesAvailabilityInfo/OnlineServicesAvailability Available
void OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability::_set_Available(OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability::_set_Available");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices", "PlatformServicesAvailabilityInfo/OnlineServicesAvailability", "Available", value));
}
// Autogenerated static field getter
// Get static field: static public OnlineServices.PlatformServicesAvailabilityInfo/OnlineServicesAvailability Unavailable
OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability::_get_Unavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability::_get_Unavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability>("OnlineServices", "PlatformServicesAvailabilityInfo/OnlineServicesAvailability", "Unavailable"));
}
// Autogenerated static field setter
// Set static field: static public OnlineServices.PlatformServicesAvailabilityInfo/OnlineServicesAvailability Unavailable
void OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability::_set_Unavailable(OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::PlatformServicesAvailabilityInfo::OnlineServicesAvailability::_set_Unavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices", "PlatformServicesAvailabilityInfo/OnlineServicesAvailability", "Unavailable", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: OnlineServices.ServerManager/<GetLeaderboardEntriesAsync>d__14
#include "OnlineServices/ServerManager_-GetLeaderboardEntriesAsync-d__14.hpp"
// Including type: HTTPLeaderboardsModel
#include "GlobalNamespace/HTTPLeaderboardsModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
// Including type: OnlineServices.LevelScoreUploader
#include "OnlineServices/LevelScoreUploader.hpp"
// Including type: OnlineServices.PlatformOnlineServicesAvailabilityModel
#include "OnlineServices/PlatformOnlineServicesAvailabilityModel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: OnlineServices.LeaderboardEntriesResult
#include "OnlineServices/LeaderboardEntriesResult.hpp"
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.ServerManager.add_platformServicesAvailabilityInfoChangedEvent
void OnlineServices::ServerManager::add_platformServicesAvailabilityInfoChangedEvent(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::add_platformServicesAvailabilityInfoChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServices.ServerManager.remove_platformServicesAvailabilityInfoChangedEvent
void OnlineServices::ServerManager::remove_platformServicesAvailabilityInfoChangedEvent(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::remove_platformServicesAvailabilityInfoChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServices.ServerManager.add_scoreForLeaderboardDidUploadEvent
void OnlineServices::ServerManager::add_scoreForLeaderboardDidUploadEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::add_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServices.ServerManager.remove_scoreForLeaderboardDidUploadEvent
void OnlineServices::ServerManager::remove_scoreForLeaderboardDidUploadEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::remove_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServices.ServerManager.get_initialized
bool OnlineServices::ServerManager::get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::get_initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.ServerManager.Init
void OnlineServices::ServerManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.ServerManager.GetLeaderboardId
::Il2CppString* OnlineServices::ServerManager::GetLeaderboardId(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::GetLeaderboardId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: OnlineServices.ServerManager.GetLeaderboardEntriesAsync
System::Threading::Tasks::Task_1<OnlineServices::LeaderboardEntriesResult*>* OnlineServices::ServerManager::GetLeaderboardEntriesAsync(OnlineServices::GetLeaderboardFilterData leaderboardFilterData, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::GetLeaderboardEntriesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardFilterData), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::LeaderboardEntriesResult*>*, false>(this, ___internal__method, leaderboardFilterData, cancellationToken);
}
// Autogenerated method: OnlineServices.ServerManager.SendLevelScoreResult
void OnlineServices::ServerManager::SendLevelScoreResult(OnlineServices::LevelScoreResultsData levelScoreResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::SendLevelScoreResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResultsData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelScoreResultsData);
}
// Autogenerated method: OnlineServices.ServerManager.<Init>b__12_0
void OnlineServices::ServerManager::$Init$b__12_0(OnlineServices::PlatformServicesAvailabilityInfo* availabilityInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::<Init>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(availabilityInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, availabilityInfo);
}
// Autogenerated method: OnlineServices.ServerManager.<Init>b__12_1
void OnlineServices::ServerManager::$Init$b__12_1(::Il2CppString* leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::<Init>b__12_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__12_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardId);
}
// Writing MetadataGetter for method: ServerManager::add_platformServicesAvailabilityInfoChangedEvent
// Il2CppName: add_platformServicesAvailabilityInfoChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*)>(&ServerManager::add_platformServicesAvailabilityInfoChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "add_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*>()});
  }
};
// Writing MetadataGetter for method: ServerManager::remove_platformServicesAvailabilityInfoChangedEvent
// Il2CppName: remove_platformServicesAvailabilityInfoChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*)>(&ServerManager::remove_platformServicesAvailabilityInfoChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "remove_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*>()});
  }
};
// Writing MetadataGetter for method: ServerManager::add_scoreForLeaderboardDidUploadEvent
// Il2CppName: add_scoreForLeaderboardDidUploadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)(System::Action_1<::Il2CppString*>*)>(&ServerManager::add_scoreForLeaderboardDidUploadEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: ServerManager::remove_scoreForLeaderboardDidUploadEvent
// Il2CppName: remove_scoreForLeaderboardDidUploadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)(System::Action_1<::Il2CppString*>*)>(&ServerManager::remove_scoreForLeaderboardDidUploadEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: ServerManager::get_initialized
// Il2CppName: get_initialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ServerManager::*)()>(&ServerManager::get_initialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "get_initialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerManager::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)()>(&ServerManager::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerManager::GetLeaderboardId
// Il2CppName: GetLeaderboardId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ServerManager::*)(GlobalNamespace::IDifficultyBeatmap*)>(&ServerManager::GetLeaderboardId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "GetLeaderboardId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: ServerManager::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::LeaderboardEntriesResult*>* (ServerManager::*)(OnlineServices::GetLeaderboardFilterData, System::Threading::CancellationToken)>(&ServerManager::GetLeaderboardEntriesAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::GetLeaderboardFilterData>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: ServerManager::SendLevelScoreResult
// Il2CppName: SendLevelScoreResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)(OnlineServices::LevelScoreResultsData)>(&ServerManager::SendLevelScoreResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "SendLevelScoreResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::LevelScoreResultsData>()});
  }
};
// Writing MetadataGetter for method: ServerManager::$Init$b__12_0
// Il2CppName: <Init>b__12_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)(OnlineServices::PlatformServicesAvailabilityInfo*)>(&ServerManager::$Init$b__12_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "<Init>b__12_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::PlatformServicesAvailabilityInfo*>()});
  }
};
// Writing MetadataGetter for method: ServerManager::$Init$b__12_1
// Il2CppName: <Init>b__12_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)(::Il2CppString*)>(&ServerManager::$Init$b__12_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), "<Init>b__12_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ServerManager::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)()>(&ServerManager::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::*)()>(&ServerManager::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.ServerManager/<GetLeaderboardEntriesAsync>d__14
#include "OnlineServices/ServerManager_-GetLeaderboardEntriesAsync-d__14.hpp"
// Including type: OnlineServices.LeaderboardEntriesResult
#include "OnlineServices/LeaderboardEntriesResult.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.ServerManager/<GetLeaderboardEntriesAsync>d__14.MoveNext
void OnlineServices::ServerManager::$GetLeaderboardEntriesAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::$GetLeaderboardEntriesAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.ServerManager/<GetLeaderboardEntriesAsync>d__14.SetStateMachine
void OnlineServices::ServerManager::$GetLeaderboardEntriesAsync$d__14::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::$GetLeaderboardEntriesAsync$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: ServerManager::$GetLeaderboardEntriesAsync$d__14::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::$GetLeaderboardEntriesAsync$d__14::*)()>(&ServerManager::$GetLeaderboardEntriesAsync$d__14::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager::$GetLeaderboardEntriesAsync$d__14), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerManager::$GetLeaderboardEntriesAsync$d__14::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerManager::$GetLeaderboardEntriesAsync$d__14::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&ServerManager::$GetLeaderboardEntriesAsync$d__14::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerManager::$GetLeaderboardEntriesAsync$d__14), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/LeaderboardsIdsDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_LeaderboardsIdsDto.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/ServerStatusResultDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_ServerStatusResultDto.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/LeaderboardsInfoDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_LeaderboardsInfoDto.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/LeaderboardsInfoResultDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_LeaderboardsInfoResultDto.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<ServerStatus>d__7
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-ServerStatus-d__7.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<LeaderboardsExist>d__8
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-LeaderboardsExist-d__8.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<CreateOrUpdateLeaderboards>d__9
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-CreateOrUpdateLeaderboards-d__9.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<SendWebRequestAsync>d__10
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-SendWebRequestAsync-d__10.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<SendAndWaitAsync>d__11
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-SendAndWaitAsync-d__11.hpp"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper.ServerStatus
System::Threading::Tasks::Task_1<::Il2CppString*>* OnlineServices::API::HTTPAdminLeaderboardsHelper::ServerStatus(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::ServerStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper.LeaderboardsExist
System::Threading::Tasks::Task_1<OnlineServices::API::HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto*>* OnlineServices::API::HTTPAdminLeaderboardsHelper::LeaderboardsExist(::Array<::Il2CppString*>* leaderboardIds, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::LeaderboardsExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaderboardsExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardIds), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::API::HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto*>*, false>(this, ___internal__method, leaderboardIds, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper.CreateOrUpdateLeaderboards
System::Threading::Tasks::Task_1<bool>* OnlineServices::API::HTTPAdminLeaderboardsHelper::CreateOrUpdateLeaderboards(::Array<::Il2CppString*>* leaderboardIds, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::CreateOrUpdateLeaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOrUpdateLeaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardIds), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, leaderboardIds, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper.SendWebRequestAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* OnlineServices::API::HTTPAdminLeaderboardsHelper::SendWebRequestAsync(::Il2CppString* uri, ::Il2CppString* method, ::Il2CppString* bodyData, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::SendWebRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendWebRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(bodyData), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method, uri, method, bodyData, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper.SendAndWaitAsync
System::Threading::Tasks::Task* OnlineServices::API::HTTPAdminLeaderboardsHelper::SendAndWaitAsync(UnityEngine::Networking::UnityWebRequest* webRequest, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::SendAndWaitAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAndWaitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, webRequest, cancellationToken);
}
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::*)(::Il2CppString*, ::Il2CppString*)>(&HTTPAdminLeaderboardsHelper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::*)(::Il2CppString*, ::Il2CppString*)>(&HTTPAdminLeaderboardsHelper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::ServerStatus
// Il2CppName: ServerStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (HTTPAdminLeaderboardsHelper::*)(System::Threading::CancellationToken)>(&HTTPAdminLeaderboardsHelper::ServerStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper*), "ServerStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::LeaderboardsExist
// Il2CppName: LeaderboardsExist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::API::HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto*>* (HTTPAdminLeaderboardsHelper::*)(::Array<::Il2CppString*>*, System::Threading::CancellationToken)>(&HTTPAdminLeaderboardsHelper::LeaderboardsExist)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper*), "LeaderboardsExist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::CreateOrUpdateLeaderboards
// Il2CppName: CreateOrUpdateLeaderboards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<bool>* (HTTPAdminLeaderboardsHelper::*)(::Array<::Il2CppString*>*, System::Threading::CancellationToken)>(&HTTPAdminLeaderboardsHelper::CreateOrUpdateLeaderboards)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper*), "CreateOrUpdateLeaderboards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::SendWebRequestAsync
// Il2CppName: SendWebRequestAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (HTTPAdminLeaderboardsHelper::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, System::Threading::CancellationToken)>(&HTTPAdminLeaderboardsHelper::SendWebRequestAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper*), "SendWebRequestAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::SendAndWaitAsync
// Il2CppName: SendAndWaitAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HTTPAdminLeaderboardsHelper::*)(UnityEngine::Networking::UnityWebRequest*, System::Threading::CancellationToken)>(&HTTPAdminLeaderboardsHelper::SendAndWaitAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper*), "SendAndWaitAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UnityWebRequest*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/LeaderboardsIdsDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_LeaderboardsIdsDto.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::LeaderboardsIdsDto::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::LeaderboardsIdsDto::*)()>(&HTTPAdminLeaderboardsHelper::LeaderboardsIdsDto::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::LeaderboardsIdsDto*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::LeaderboardsIdsDto::*)()>(&HTTPAdminLeaderboardsHelper::LeaderboardsIdsDto::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::LeaderboardsIdsDto*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/ServerStatusResultDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_ServerStatusResultDto.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::ServerStatusResultDto::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::ServerStatusResultDto::*)()>(&HTTPAdminLeaderboardsHelper::ServerStatusResultDto::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::ServerStatusResultDto*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::ServerStatusResultDto::*)()>(&HTTPAdminLeaderboardsHelper::ServerStatusResultDto::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::ServerStatusResultDto*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/LeaderboardsInfoDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_LeaderboardsInfoDto.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::LeaderboardsInfoDto::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::LeaderboardsInfoDto::*)()>(&HTTPAdminLeaderboardsHelper::LeaderboardsInfoDto::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::LeaderboardsInfoDto*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::LeaderboardsInfoDto::*)()>(&HTTPAdminLeaderboardsHelper::LeaderboardsInfoDto::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::LeaderboardsInfoDto*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/LeaderboardsInfoResultDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_LeaderboardsInfoResultDto.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/LeaderboardsInfoDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_LeaderboardsInfoDto.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto::*)()>(&HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto::*)()>(&HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::LeaderboardsInfoResultDto*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<ServerStatus>d__7
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-ServerStatus-d__7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<ServerStatus>d__7.MoveNext
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<ServerStatus>d__7.SetStateMachine
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::*)()>(&HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$ServerStatus$d__7), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPAdminLeaderboardsHelper::$ServerStatus$d__7::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$ServerStatus$d__7), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<LeaderboardsExist>d__8
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-LeaderboardsExist-d__8.hpp"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/LeaderboardsInfoResultDto
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_LeaderboardsInfoResultDto.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<LeaderboardsExist>d__8.MoveNext
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<LeaderboardsExist>d__8.SetStateMachine
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::*)()>(&HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$LeaderboardsExist$d__8), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<CreateOrUpdateLeaderboards>d__9
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-CreateOrUpdateLeaderboards-d__9.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<CreateOrUpdateLeaderboards>d__9.MoveNext
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<CreateOrUpdateLeaderboards>d__9.SetStateMachine
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::*)()>(&HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$CreateOrUpdateLeaderboards$d__9), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<SendWebRequestAsync>d__10
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-SendWebRequestAsync-d__10.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<SendWebRequestAsync>d__10.MoveNext
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<SendWebRequestAsync>d__10.SetStateMachine
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::*)()>(&HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$SendWebRequestAsync$d__10), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.HTTPAdminLeaderboardsHelper/<SendAndWaitAsync>d__11
#include "OnlineServices/API/HTTPAdminLeaderboardsHelper_-SendAndWaitAsync-d__11.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<SendAndWaitAsync>d__11.MoveNext
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPAdminLeaderboardsHelper/<SendAndWaitAsync>d__11.SetStateMachine
void OnlineServices::API::HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::*)()>(&HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPAdminLeaderboardsHelper::$SendAndWaitAsync$d__11), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper
#include "OnlineServices/API/HTTPLeaderboardsOathHelper.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendWebRequestWithOathAsync>d__5
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-SendWebRequestWithOathAsync-d__5.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<LogOut>d__6
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-LogOut-d__6.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<LoginIfNeededAsync>d__7
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-LoginIfNeededAsync-d__7.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<GetAccessTokenAsync>d__9
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-GetAccessTokenAsync-d__9.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<>c__DisplayClass10_0
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_--c__DisplayClass10_0.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<>c__DisplayClass10_1
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_--c__DisplayClass10_1.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendWebRequestAsync>d__10
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-SendWebRequestAsync-d__10.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendAndWaitAsync>d__11
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-SendAndWaitAsync-d__11.hpp"
// Including type: OnlineServices.API.IUserLoginDtoDataSource
#include "OnlineServices/API/IUserLoginDtoDataSource.hpp"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.AccessToken
#include "BeatSaberAPI/DataTransferObjects/AccessToken.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kLoginPath
::Il2CppString* OnlineServices::API::HTTPLeaderboardsOathHelper::_get_kLoginPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::_get_kLoginPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("OnlineServices.API", "HTTPLeaderboardsOathHelper", "kLoginPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLoginPath
void OnlineServices::API::HTTPLeaderboardsOathHelper::_set_kLoginPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::_set_kLoginPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices.API", "HTTPLeaderboardsOathHelper", "kLoginPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kLogoutPath
::Il2CppString* OnlineServices::API::HTTPLeaderboardsOathHelper::_get_kLogoutPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::_get_kLogoutPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("OnlineServices.API", "HTTPLeaderboardsOathHelper", "kLogoutPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLogoutPath
void OnlineServices::API::HTTPLeaderboardsOathHelper::_set_kLogoutPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::_set_kLogoutPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices.API", "HTTPLeaderboardsOathHelper", "kLogoutPath", value));
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper.SendWebRequestWithOathAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* OnlineServices::API::HTTPLeaderboardsOathHelper::SendWebRequestWithOathAsync(::Il2CppString* path, ::Il2CppString* method, ::Il2CppObject* objectToSendAsJson, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::SendWebRequestWithOathAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendWebRequestWithOathAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(objectToSendAsJson), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method, path, method, objectToSendAsJson, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper.LogOut
System::Threading::Tasks::Task* OnlineServices::API::HTTPLeaderboardsOathHelper::LogOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::LogOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper.LoginIfNeededAsync
System::Threading::Tasks::Task* OnlineServices::API::HTTPLeaderboardsOathHelper::LoginIfNeededAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::LoginIfNeededAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginIfNeededAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper.IsUserLoggedIn
bool OnlineServices::API::HTTPLeaderboardsOathHelper::IsUserLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::IsUserLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUserLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper.GetAccessTokenAsync
System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::AccessToken*>* OnlineServices::API::HTTPLeaderboardsOathHelper::GetAccessTokenAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::GetAccessTokenAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccessTokenAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::AccessToken*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper.SendWebRequestAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* OnlineServices::API::HTTPLeaderboardsOathHelper::SendWebRequestAsync(::Il2CppString* uri, ::Il2CppString* method, ::Il2CppString* bodyData, ::Il2CppString* bearerToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::SendWebRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendWebRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(bodyData), ::il2cpp_utils::ExtractType(bearerToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method, uri, method, bodyData, bearerToken);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper.SendAndWaitAsync
System::Threading::Tasks::Task* OnlineServices::API::HTTPLeaderboardsOathHelper::SendAndWaitAsync(UnityEngine::Networking::UnityWebRequest* webRequest, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::SendAndWaitAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAndWaitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, webRequest, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper.Log
void OnlineServices::API::HTTPLeaderboardsOathHelper::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices.API", "HTTPLeaderboardsOathHelper", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::SendWebRequestWithOathAsync
// Il2CppName: SendWebRequestWithOathAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (HTTPLeaderboardsOathHelper::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppObject*, System::Threading::CancellationToken)>(&HTTPLeaderboardsOathHelper::SendWebRequestWithOathAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), "SendWebRequestWithOathAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::LogOut
// Il2CppName: LogOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HTTPLeaderboardsOathHelper::*)()>(&HTTPLeaderboardsOathHelper::LogOut)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), "LogOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::LoginIfNeededAsync
// Il2CppName: LoginIfNeededAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HTTPLeaderboardsOathHelper::*)(System::Threading::CancellationToken)>(&HTTPLeaderboardsOathHelper::LoginIfNeededAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), "LoginIfNeededAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::IsUserLoggedIn
// Il2CppName: IsUserLoggedIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HTTPLeaderboardsOathHelper::*)()>(&HTTPLeaderboardsOathHelper::IsUserLoggedIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), "IsUserLoggedIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::GetAccessTokenAsync
// Il2CppName: GetAccessTokenAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::AccessToken*>* (HTTPLeaderboardsOathHelper::*)(System::Threading::CancellationToken)>(&HTTPLeaderboardsOathHelper::GetAccessTokenAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), "GetAccessTokenAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::SendWebRequestAsync
// Il2CppName: SendWebRequestAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (HTTPLeaderboardsOathHelper::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&HTTPLeaderboardsOathHelper::SendWebRequestAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), "SendWebRequestAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::SendAndWaitAsync
// Il2CppName: SendAndWaitAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HTTPLeaderboardsOathHelper::*)(UnityEngine::Networking::UnityWebRequest*, System::Threading::CancellationToken)>(&HTTPLeaderboardsOathHelper::SendAndWaitAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), "SendAndWaitAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UnityWebRequest*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&HTTPLeaderboardsOathHelper::Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::*)()>(&HTTPLeaderboardsOathHelper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::*)()>(&HTTPLeaderboardsOathHelper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendWebRequestWithOathAsync>d__5
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-SendWebRequestWithOathAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendWebRequestWithOathAsync>d__5.MoveNext
void OnlineServices::API::HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendWebRequestWithOathAsync>d__5.SetStateMachine
void OnlineServices::API::HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::*)()>(&HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$SendWebRequestWithOathAsync$d__5), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<LogOut>d__6
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-LogOut-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<LogOut>d__6.MoveNext
void OnlineServices::API::HTTPLeaderboardsOathHelper::$LogOut$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$LogOut$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<LogOut>d__6.SetStateMachine
void OnlineServices::API::HTTPLeaderboardsOathHelper::$LogOut$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$LogOut$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$LogOut$d__6::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$LogOut$d__6::*)()>(&HTTPLeaderboardsOathHelper::$LogOut$d__6::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$LogOut$d__6), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$LogOut$d__6::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$LogOut$d__6::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPLeaderboardsOathHelper::$LogOut$d__6::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$LogOut$d__6), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<LoginIfNeededAsync>d__7
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-LoginIfNeededAsync-d__7.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.AccessToken
#include "BeatSaberAPI/DataTransferObjects/AccessToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<LoginIfNeededAsync>d__7.MoveNext
void OnlineServices::API::HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<LoginIfNeededAsync>d__7.SetStateMachine
void OnlineServices::API::HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::*)()>(&HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$LoginIfNeededAsync$d__7), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<GetAccessTokenAsync>d__9
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-GetAccessTokenAsync-d__9.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.AccessToken
#include "BeatSaberAPI/DataTransferObjects/AccessToken.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.UserAuthenticationData
#include "BeatSaberAPI/DataTransferObjects/UserAuthenticationData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<GetAccessTokenAsync>d__9.MoveNext
void OnlineServices::API::HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<GetAccessTokenAsync>d__9.SetStateMachine
void OnlineServices::API::HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::*)()>(&HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$GetAccessTokenAsync$d__9), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<>c__DisplayClass10_0
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_--c__DisplayClass10_0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$$c__DisplayClass10_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$$c__DisplayClass10_0::*)()>(&HTTPLeaderboardsOathHelper::$$c__DisplayClass10_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$$c__DisplayClass10_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$$c__DisplayClass10_0::*)()>(&HTTPLeaderboardsOathHelper::$$c__DisplayClass10_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$$c__DisplayClass10_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<>c__DisplayClass10_1
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_--c__DisplayClass10_1.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<>c__DisplayClass10_0
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_--c__DisplayClass10_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<>c__DisplayClass10_1.<SendWebRequestAsync>b__0
void OnlineServices::API::HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::$SendWebRequestAsync$b__0(UnityEngine::AsyncOperation* asyncOperation2) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::<SendWebRequestAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendWebRequestAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncOperation2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncOperation2);
}
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::$SendWebRequestAsync$b__0
// Il2CppName: <SendWebRequestAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::*)(UnityEngine::AsyncOperation*)>(&HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::$SendWebRequestAsync$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1*), "<SendWebRequestAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::AsyncOperation*>()});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::*)()>(&HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::*)()>(&HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$$c__DisplayClass10_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendWebRequestAsync>d__10
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-SendWebRequestAsync-d__10.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<>c__DisplayClass10_1
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_--c__DisplayClass10_1.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<>c__DisplayClass10_0
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_--c__DisplayClass10_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendWebRequestAsync>d__10.MoveNext
void OnlineServices::API::HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendWebRequestAsync>d__10.SetStateMachine
void OnlineServices::API::HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::*)()>(&HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$SendWebRequestAsync$d__10), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendAndWaitAsync>d__11
#include "OnlineServices/API/HTTPLeaderboardsOathHelper_-SendAndWaitAsync-d__11.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendAndWaitAsync>d__11.MoveNext
void OnlineServices::API::HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPLeaderboardsOathHelper/<SendAndWaitAsync>d__11.SetStateMachine
void OnlineServices::API::HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::*)()>(&HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsOathHelper::$SendAndWaitAsync$d__11), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.IApiLeaderboardsModel
#include "OnlineServices/API/IApiLeaderboardsModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntries
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntries.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardQuery
#include "BeatSaberAPI/DataTransferObjects/LeaderboardQuery.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LevelScoreResult
#include "BeatSaberAPI/DataTransferObjects/LevelScoreResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.IApiLeaderboardsModel.GetLeaderboardEntriesAsync
System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>* OnlineServices::API::IApiLeaderboardsModel::GetLeaderboardEntriesAsync(BeatSaberAPI::DataTransferObjects::LeaderboardQuery* leaderboardQueryDTO, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::IApiLeaderboardsModel::GetLeaderboardEntriesAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardQueryDTO), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>*, false>(this, ___internal__method, leaderboardQueryDTO, cancellationToken);
}
// Autogenerated method: OnlineServices.API.IApiLeaderboardsModel.SendLevelScoreResultAsync
System::Threading::Tasks::Task_1<OnlineServices::API::Response>* OnlineServices::API::IApiLeaderboardsModel::SendLevelScoreResultAsync(BeatSaberAPI::DataTransferObjects::LevelScoreResult* levelScoreResultDto, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::IApiLeaderboardsModel::SendLevelScoreResultAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResultDto), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::API::Response>*, false>(this, ___internal__method, levelScoreResultDto, cancellationToken);
}
// Autogenerated method: OnlineServices.API.IApiLeaderboardsModel.LogoutAsync
void OnlineServices::API::IApiLeaderboardsModel::LogoutAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::IApiLeaderboardsModel::LogoutAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogoutAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IApiLeaderboardsModel::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>* (IApiLeaderboardsModel::*)(BeatSaberAPI::DataTransferObjects::LeaderboardQuery*, System::Threading::CancellationToken)>(&IApiLeaderboardsModel::GetLeaderboardEntriesAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IApiLeaderboardsModel*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<BeatSaberAPI::DataTransferObjects::LeaderboardQuery*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: IApiLeaderboardsModel::SendLevelScoreResultAsync
// Il2CppName: SendLevelScoreResultAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::API::Response>* (IApiLeaderboardsModel::*)(BeatSaberAPI::DataTransferObjects::LevelScoreResult*, System::Threading::CancellationToken)>(&IApiLeaderboardsModel::SendLevelScoreResultAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IApiLeaderboardsModel*), "SendLevelScoreResultAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<BeatSaberAPI::DataTransferObjects::LevelScoreResult*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: IApiLeaderboardsModel::LogoutAsync
// Il2CppName: LogoutAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IApiLeaderboardsModel::*)()>(&IApiLeaderboardsModel::LogoutAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IApiLeaderboardsModel*), "LogoutAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.Response
#include "OnlineServices/API/Response.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OnlineServices.API.Response Success
OnlineServices::API::Response OnlineServices::API::Response::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::Response::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OnlineServices::API::Response>("OnlineServices.API", "Response", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OnlineServices.API.Response Success
void OnlineServices::API::Response::_set_Success(OnlineServices::API::Response value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::Response::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices.API", "Response", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OnlineServices.API.Response UnknownError
OnlineServices::API::Response OnlineServices::API::Response::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::Response::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OnlineServices::API::Response>("OnlineServices.API", "Response", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public OnlineServices.API.Response UnknownError
void OnlineServices::API::Response::_set_UnknownError(OnlineServices::API::Response value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::Response::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices.API", "Response", "UnknownError", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.IUserLoginDtoDataSource
#include "OnlineServices/API/IUserLoginDtoDataSource.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.UserAuthenticationData
#include "BeatSaberAPI/DataTransferObjects/UserAuthenticationData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.IUserLoginDtoDataSource.UserAuthenticationDataAsync
System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::UserAuthenticationData*>* OnlineServices::API::IUserLoginDtoDataSource::UserAuthenticationDataAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::IUserLoginDtoDataSource::UserAuthenticationDataAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserAuthenticationDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::UserAuthenticationData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OnlineServices.API.IUserLoginDtoDataSource.GetUserFriendsUserIds
System::Threading::Tasks::Task_1<::Array<::Il2CppString*>*>* OnlineServices::API::IUserLoginDtoDataSource::GetUserFriendsUserIds(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::IUserLoginDtoDataSource::GetUserFriendsUserIds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserFriendsUserIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Array<::Il2CppString*>*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OnlineServices.API.IUserLoginDtoDataSource.GetPlatformUserIdAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* OnlineServices::API::IUserLoginDtoDataSource::GetPlatformUserIdAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::IUserLoginDtoDataSource::GetPlatformUserIdAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlatformUserIdAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method, cancellationToken);
}
// Writing MetadataGetter for method: IUserLoginDtoDataSource::UserAuthenticationDataAsync
// Il2CppName: UserAuthenticationDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::UserAuthenticationData*>* (IUserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&IUserLoginDtoDataSource::UserAuthenticationDataAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IUserLoginDtoDataSource*), "UserAuthenticationDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: IUserLoginDtoDataSource::GetUserFriendsUserIds
// Il2CppName: GetUserFriendsUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Array<::Il2CppString*>*>* (IUserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&IUserLoginDtoDataSource::GetUserFriendsUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IUserLoginDtoDataSource*), "GetUserFriendsUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: IUserLoginDtoDataSource::GetPlatformUserIdAsync
// Il2CppName: GetPlatformUserIdAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (IUserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&IUserLoginDtoDataSource::GetPlatformUserIdAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IUserLoginDtoDataSource*), "GetPlatformUserIdAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.TestApiLeaderboardsModel
#include "OnlineServices/API/TestApiLeaderboardsModel.hpp"
// Including type: OnlineServices.API.TestApiLeaderboardsModel/<LogoutAsync>d__0
#include "OnlineServices/API/TestApiLeaderboardsModel_-LogoutAsync-d__0.hpp"
// Including type: OnlineServices.API.TestApiLeaderboardsModel/<GetLeaderboardEntriesAsync>d__1
#include "OnlineServices/API/TestApiLeaderboardsModel_-GetLeaderboardEntriesAsync-d__1.hpp"
// Including type: OnlineServices.API.TestApiLeaderboardsModel/<SendLevelScoreResultAsync>d__2
#include "OnlineServices/API/TestApiLeaderboardsModel_-SendLevelScoreResultAsync-d__2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntries
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntries.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardQuery
#include "BeatSaberAPI/DataTransferObjects/LeaderboardQuery.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LevelScoreResult
#include "BeatSaberAPI/DataTransferObjects/LevelScoreResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel.LogoutAsync
void OnlineServices::API::TestApiLeaderboardsModel::LogoutAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::LogoutAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogoutAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel.GetLeaderboardEntriesAsync
System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>* OnlineServices::API::TestApiLeaderboardsModel::GetLeaderboardEntriesAsync(BeatSaberAPI::DataTransferObjects::LeaderboardQuery* leaderboardQueryDTO, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::GetLeaderboardEntriesAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardQueryDTO), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>*, false>(this, ___internal__method, leaderboardQueryDTO, cancellationToken);
}
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel.SendLevelScoreResultAsync
System::Threading::Tasks::Task_1<OnlineServices::API::Response>* OnlineServices::API::TestApiLeaderboardsModel::SendLevelScoreResultAsync(BeatSaberAPI::DataTransferObjects::LevelScoreResult* levelScoreResult, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::SendLevelScoreResultAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResult), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::API::Response>*, false>(this, ___internal__method, levelScoreResult, cancellationToken);
}
// Writing MetadataGetter for method: TestApiLeaderboardsModel::LogoutAsync
// Il2CppName: LogoutAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::*)()>(&TestApiLeaderboardsModel::LogoutAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel*), "LogoutAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestApiLeaderboardsModel::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>* (TestApiLeaderboardsModel::*)(BeatSaberAPI::DataTransferObjects::LeaderboardQuery*, System::Threading::CancellationToken)>(&TestApiLeaderboardsModel::GetLeaderboardEntriesAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<BeatSaberAPI::DataTransferObjects::LeaderboardQuery*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: TestApiLeaderboardsModel::SendLevelScoreResultAsync
// Il2CppName: SendLevelScoreResultAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::API::Response>* (TestApiLeaderboardsModel::*)(BeatSaberAPI::DataTransferObjects::LevelScoreResult*, System::Threading::CancellationToken)>(&TestApiLeaderboardsModel::SendLevelScoreResultAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel*), "SendLevelScoreResultAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<BeatSaberAPI::DataTransferObjects::LevelScoreResult*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: TestApiLeaderboardsModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::*)()>(&TestApiLeaderboardsModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::*)()>(&TestApiLeaderboardsModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.TestApiLeaderboardsModel/<LogoutAsync>d__0
#include "OnlineServices/API/TestApiLeaderboardsModel_-LogoutAsync-d__0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel/<LogoutAsync>d__0.MoveNext
void OnlineServices::API::TestApiLeaderboardsModel::$LogoutAsync$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::$LogoutAsync$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel/<LogoutAsync>d__0.SetStateMachine
void OnlineServices::API::TestApiLeaderboardsModel::$LogoutAsync$d__0::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::$LogoutAsync$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestApiLeaderboardsModel::$LogoutAsync$d__0::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::$LogoutAsync$d__0::*)()>(&TestApiLeaderboardsModel::$LogoutAsync$d__0::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel::$LogoutAsync$d__0), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestApiLeaderboardsModel::$LogoutAsync$d__0::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::$LogoutAsync$d__0::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestApiLeaderboardsModel::$LogoutAsync$d__0::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel::$LogoutAsync$d__0), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.TestApiLeaderboardsModel/<GetLeaderboardEntriesAsync>d__1
#include "OnlineServices/API/TestApiLeaderboardsModel_-GetLeaderboardEntriesAsync-d__1.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntries
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntries.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel/<GetLeaderboardEntriesAsync>d__1.MoveNext
void OnlineServices::API::TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel/<GetLeaderboardEntriesAsync>d__1.SetStateMachine
void OnlineServices::API::TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::*)()>(&TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.TestApiLeaderboardsModel/<SendLevelScoreResultAsync>d__2
#include "OnlineServices/API/TestApiLeaderboardsModel_-SendLevelScoreResultAsync-d__2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel/<SendLevelScoreResultAsync>d__2.MoveNext
void OnlineServices::API::TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.TestApiLeaderboardsModel/<SendLevelScoreResultAsync>d__2.SetStateMachine
void OnlineServices::API::TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::*)()>(&TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPApiLeaderboardsModel
#include "OnlineServices/API/HTTPApiLeaderboardsModel.hpp"
// Including type: OnlineServices.API.HTTPApiLeaderboardsModel/<LogoutAsync>d__3
#include "OnlineServices/API/HTTPApiLeaderboardsModel_-LogoutAsync-d__3.hpp"
// Including type: OnlineServices.API.HTTPApiLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4
#include "OnlineServices/API/HTTPApiLeaderboardsModel_-GetLeaderboardEntriesAsync-d__4.hpp"
// Including type: OnlineServices.API.HTTPApiLeaderboardsModel/<SendLevelScoreResultAsync>d__5
#include "OnlineServices/API/HTTPApiLeaderboardsModel_-SendLevelScoreResultAsync-d__5.hpp"
// Including type: OnlineServices.API.HTTPLeaderboardsOathHelper
#include "OnlineServices/API/HTTPLeaderboardsOathHelper.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntries
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntries.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardQuery
#include "BeatSaberAPI/DataTransferObjects/LeaderboardQuery.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LevelScoreResult
#include "BeatSaberAPI/DataTransferObjects/LevelScoreResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kSendLevelScoreResultPath
::Il2CppString* OnlineServices::API::HTTPApiLeaderboardsModel::_get_kSendLevelScoreResultPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::_get_kSendLevelScoreResultPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("OnlineServices.API", "HTTPApiLeaderboardsModel", "kSendLevelScoreResultPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSendLevelScoreResultPath
void OnlineServices::API::HTTPApiLeaderboardsModel::_set_kSendLevelScoreResultPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::_set_kSendLevelScoreResultPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices.API", "HTTPApiLeaderboardsModel", "kSendLevelScoreResultPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kGetLeaderboardEntriesPath
::Il2CppString* OnlineServices::API::HTTPApiLeaderboardsModel::_get_kGetLeaderboardEntriesPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::_get_kGetLeaderboardEntriesPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("OnlineServices.API", "HTTPApiLeaderboardsModel", "kGetLeaderboardEntriesPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String kGetLeaderboardEntriesPath
void OnlineServices::API::HTTPApiLeaderboardsModel::_set_kGetLeaderboardEntriesPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::_set_kGetLeaderboardEntriesPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OnlineServices.API", "HTTPApiLeaderboardsModel", "kGetLeaderboardEntriesPath", value));
}
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel.LogoutAsync
void OnlineServices::API::HTTPApiLeaderboardsModel::LogoutAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::LogoutAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogoutAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel.GetLeaderboardEntriesAsync
System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>* OnlineServices::API::HTTPApiLeaderboardsModel::GetLeaderboardEntriesAsync(BeatSaberAPI::DataTransferObjects::LeaderboardQuery* leaderboardQueryDTO, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::GetLeaderboardEntriesAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardQueryDTO), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>*, false>(this, ___internal__method, leaderboardQueryDTO, cancellationToken);
}
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel.SendLevelScoreResultAsync
System::Threading::Tasks::Task_1<OnlineServices::API::Response>* OnlineServices::API::HTTPApiLeaderboardsModel::SendLevelScoreResultAsync(BeatSaberAPI::DataTransferObjects::LevelScoreResult* levelScoreResult, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::SendLevelScoreResultAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResult), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::API::Response>*, false>(this, ___internal__method, levelScoreResult, cancellationToken);
}
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::LogoutAsync
// Il2CppName: LogoutAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::*)()>(&HTTPApiLeaderboardsModel::LogoutAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel*), "LogoutAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::API::ApiResponse_1<BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>* (HTTPApiLeaderboardsModel::*)(BeatSaberAPI::DataTransferObjects::LeaderboardQuery*, System::Threading::CancellationToken)>(&HTTPApiLeaderboardsModel::GetLeaderboardEntriesAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<BeatSaberAPI::DataTransferObjects::LeaderboardQuery*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::SendLevelScoreResultAsync
// Il2CppName: SendLevelScoreResultAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::API::Response>* (HTTPApiLeaderboardsModel::*)(BeatSaberAPI::DataTransferObjects::LevelScoreResult*, System::Threading::CancellationToken)>(&HTTPApiLeaderboardsModel::SendLevelScoreResultAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel*), "SendLevelScoreResultAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<BeatSaberAPI::DataTransferObjects::LevelScoreResult*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::*)()>(&HTTPApiLeaderboardsModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::*)()>(&HTTPApiLeaderboardsModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServices.API.HTTPApiLeaderboardsModel/<LogoutAsync>d__3
#include "OnlineServices/API/HTTPApiLeaderboardsModel_-LogoutAsync-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel/<LogoutAsync>d__3.MoveNext
void OnlineServices::API::HTTPApiLeaderboardsModel::$LogoutAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::$LogoutAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel/<LogoutAsync>d__3.SetStateMachine
void OnlineServices::API::HTTPApiLeaderboardsModel::$LogoutAsync$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::$LogoutAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::$LogoutAsync$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::$LogoutAsync$d__3::*)()>(&HTTPApiLeaderboardsModel::$LogoutAsync$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel::$LogoutAsync$d__3), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::$LogoutAsync$d__3::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::$LogoutAsync$d__3::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPApiLeaderboardsModel::$LogoutAsync$d__3::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel::$LogoutAsync$d__3), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPApiLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4
#include "OnlineServices/API/HTTPApiLeaderboardsModel_-GetLeaderboardEntriesAsync-d__4.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntries
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntries.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardQuery
#include "BeatSaberAPI/DataTransferObjects/LeaderboardQuery.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4.MoveNext
void OnlineServices::API::HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4.SetStateMachine
void OnlineServices::API::HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::*)()>(&HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.HTTPApiLeaderboardsModel/<SendLevelScoreResultAsync>d__5
#include "OnlineServices/API/HTTPApiLeaderboardsModel_-SendLevelScoreResultAsync-d__5.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LevelScoreResult
#include "BeatSaberAPI/DataTransferObjects/LevelScoreResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel/<SendLevelScoreResultAsync>d__5.MoveNext
void OnlineServices::API::HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServices.API.HTTPApiLeaderboardsModel/<SendLevelScoreResultAsync>d__5.SetStateMachine
void OnlineServices::API::HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::API::HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::*)()>(&HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPApiLeaderboardsModel::$SendLevelScoreResultAsync$d__5), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DataModels.PlayerAvatar.AvatarRandomizer
#include "DataModels/PlayerAvatar/AvatarRandomizer.hpp"
// Including type: DataModels.PlayerAvatar.RandomizeAvatarColorMap
#include "DataModels/PlayerAvatar/RandomizeAvatarColorMap.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE29924
// Autogenerated static field getter
// Get static field: static private readonly DataModels.PlayerAvatar.RandomizeAvatarColorMap[] _randomizeColorsParamsCollection
::Array<DataModels::PlayerAvatar::RandomizeAvatarColorMap*>* DataModels::PlayerAvatar::AvatarRandomizer::_get__randomizeColorsParamsCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::_get__randomizeColorsParamsCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<DataModels::PlayerAvatar::RandomizeAvatarColorMap*>*>("DataModels.PlayerAvatar", "AvatarRandomizer", "_randomizeColorsParamsCollection"));
}
// Autogenerated static field setter
// Set static field: static private readonly DataModels.PlayerAvatar.RandomizeAvatarColorMap[] _randomizeColorsParamsCollection
void DataModels::PlayerAvatar::AvatarRandomizer::_set__randomizeColorsParamsCollection(::Array<DataModels::PlayerAvatar::RandomizeAvatarColorMap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::_set__randomizeColorsParamsCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DataModels.PlayerAvatar", "AvatarRandomizer", "_randomizeColorsParamsCollection", value));
}
// Autogenerated method: DataModels.PlayerAvatar.AvatarRandomizer..cctor
void DataModels::PlayerAvatar::AvatarRandomizer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("DataModels.PlayerAvatar", "AvatarRandomizer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: DataModels.PlayerAvatar.AvatarRandomizer.RandomizeAll
void DataModels::PlayerAvatar::AvatarRandomizer::RandomizeAll(GlobalNamespace::AvatarData* avatarData, GlobalNamespace::AvatarPartsModel* avatarPartsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::RandomizeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("DataModels.PlayerAvatar", "AvatarRandomizer", "RandomizeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData), ::il2cpp_utils::ExtractType(avatarPartsModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarData, avatarPartsModel);
}
// Autogenerated method: DataModels.PlayerAvatar.AvatarRandomizer.RandomizeModels
void DataModels::PlayerAvatar::AvatarRandomizer::RandomizeModels(GlobalNamespace::AvatarData* avatarData, GlobalNamespace::AvatarPartsModel* avatarPartsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::RandomizeModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("DataModels.PlayerAvatar", "AvatarRandomizer", "RandomizeModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData), ::il2cpp_utils::ExtractType(avatarPartsModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarData, avatarPartsModel);
}
// Autogenerated method: DataModels.PlayerAvatar.AvatarRandomizer.RandomizeColors
void DataModels::PlayerAvatar::AvatarRandomizer::RandomizeColors(GlobalNamespace::AvatarData* avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::RandomizeColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("DataModels.PlayerAvatar", "AvatarRandomizer", "RandomizeColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarData);
}
// Writing MetadataGetter for method: AvatarRandomizer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&AvatarRandomizer::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarRandomizer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarRandomizer::RandomizeAll
// Il2CppName: RandomizeAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(GlobalNamespace::AvatarData*, GlobalNamespace::AvatarPartsModel*)>(&AvatarRandomizer::RandomizeAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarRandomizer*), "RandomizeAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarPartsModel*>()});
  }
};
// Writing MetadataGetter for method: AvatarRandomizer::RandomizeModels
// Il2CppName: RandomizeModels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(GlobalNamespace::AvatarData*, GlobalNamespace::AvatarPartsModel*)>(&AvatarRandomizer::RandomizeModels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarRandomizer*), "RandomizeModels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarPartsModel*>()});
  }
};
// Writing MetadataGetter for method: AvatarRandomizer::RandomizeColors
// Il2CppName: RandomizeColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(GlobalNamespace::AvatarData*)>(&AvatarRandomizer::RandomizeColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarRandomizer*), "RandomizeColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DataModels.PlayerAvatar.RandomizeAvatarColorMap
#include "DataModels/PlayerAvatar/RandomizeAvatarColorMap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DataModels.PlayerAvatar.RandomizeAvatarColorMap.get_totalIndices
int DataModels::PlayerAvatar::RandomizeAvatarColorMap::get_totalIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::RandomizeAvatarColorMap::get_totalIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DataModels.PlayerAvatar.RandomizeAvatarColorMap.get_colorIndices
::Array<int>* DataModels::PlayerAvatar::RandomizeAvatarColorMap::get_colorIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::RandomizeAvatarColorMap::get_colorIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: RandomizeAvatarColorMap::get_totalIndices
// Il2CppName: get_totalIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RandomizeAvatarColorMap::*)()>(&RandomizeAvatarColorMap::get_totalIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RandomizeAvatarColorMap*), "get_totalIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RandomizeAvatarColorMap::get_colorIndices
// Il2CppName: get_colorIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (RandomizeAvatarColorMap::*)()>(&RandomizeAvatarColorMap::get_colorIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RandomizeAvatarColorMap*), "get_colorIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RandomizeAvatarColorMap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RandomizeAvatarColorMap::*)(int, int, int, int, int, int, int, int)>(&RandomizeAvatarColorMap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RandomizeAvatarColorMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RandomizeAvatarColorMap::*)(int, int, int, int, int, int, int, int)>(&RandomizeAvatarColorMap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RandomizeAvatarColorMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DataModels.Levels.PerceivedLoudnessPerLevelModel
#include "DataModels/Levels/PerceivedLoudnessPerLevelModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PerceivedLoudnessPerLevelSO
#include "GlobalNamespace/PerceivedLoudnessPerLevelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultLoudness
float DataModels::Levels::PerceivedLoudnessPerLevelModel::_get_kDefaultLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::_get_kDefaultLoudness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("DataModels.Levels", "PerceivedLoudnessPerLevelModel", "kDefaultLoudness"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultLoudness
void DataModels::Levels::PerceivedLoudnessPerLevelModel::_set_kDefaultLoudness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::_set_kDefaultLoudness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DataModels.Levels", "PerceivedLoudnessPerLevelModel", "kDefaultLoudness", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPerceivedLoudnessTarget
float DataModels::Levels::PerceivedLoudnessPerLevelModel::_get_kPerceivedLoudnessTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::_get_kPerceivedLoudnessTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("DataModels.Levels", "PerceivedLoudnessPerLevelModel", "kPerceivedLoudnessTarget"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPerceivedLoudnessTarget
void DataModels::Levels::PerceivedLoudnessPerLevelModel::_set_kPerceivedLoudnessTarget(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::_set_kPerceivedLoudnessTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DataModels.Levels", "PerceivedLoudnessPerLevelModel", "kPerceivedLoudnessTarget", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPerceivedLoudnessToMaxSfxLevelDifference
float DataModels::Levels::PerceivedLoudnessPerLevelModel::_get_kPerceivedLoudnessToMaxSfxLevelDifference() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::_get_kPerceivedLoudnessToMaxSfxLevelDifference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("DataModels.Levels", "PerceivedLoudnessPerLevelModel", "kPerceivedLoudnessToMaxSfxLevelDifference"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPerceivedLoudnessToMaxSfxLevelDifference
void DataModels::Levels::PerceivedLoudnessPerLevelModel::_set_kPerceivedLoudnessToMaxSfxLevelDifference(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::_set_kPerceivedLoudnessToMaxSfxLevelDifference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DataModels.Levels", "PerceivedLoudnessPerLevelModel", "kPerceivedLoudnessToMaxSfxLevelDifference", value));
}
// Autogenerated method: DataModels.Levels.PerceivedLoudnessPerLevelModel.ContainsLevelId
bool DataModels::Levels::PerceivedLoudnessPerLevelModel::ContainsLevelId(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::ContainsLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: DataModels.Levels.PerceivedLoudnessPerLevelModel.GetLoudnessCorrectionByLevelId
float DataModels::Levels::PerceivedLoudnessPerLevelModel::GetLoudnessCorrectionByLevelId(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::GetLoudnessCorrectionByLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoudnessCorrectionByLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, levelId);
}
// Autogenerated method: DataModels.Levels.PerceivedLoudnessPerLevelModel.GetMaxSfxVolumeByLevelId
float DataModels::Levels::PerceivedLoudnessPerLevelModel::GetMaxSfxVolumeByLevelId(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::GetMaxSfxVolumeByLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxSfxVolumeByLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, levelId);
}
// Autogenerated method: DataModels.Levels.PerceivedLoudnessPerLevelModel.GetLoudnessByLevelId
float DataModels::Levels::PerceivedLoudnessPerLevelModel::GetLoudnessByLevelId(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::PerceivedLoudnessPerLevelModel::GetLoudnessByLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoudnessByLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, levelId);
}
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PerceivedLoudnessPerLevelModel::*)(GlobalNamespace::PerceivedLoudnessPerLevelSO*)>(&PerceivedLoudnessPerLevelModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PerceivedLoudnessPerLevelSO*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PerceivedLoudnessPerLevelModel::*)(GlobalNamespace::PerceivedLoudnessPerLevelSO*)>(&PerceivedLoudnessPerLevelModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PerceivedLoudnessPerLevelSO*>()});
  }
};
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelModel::ContainsLevelId
// Il2CppName: ContainsLevelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PerceivedLoudnessPerLevelModel::*)(::Il2CppString*)>(&PerceivedLoudnessPerLevelModel::ContainsLevelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelModel*), "ContainsLevelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelModel::GetLoudnessCorrectionByLevelId
// Il2CppName: GetLoudnessCorrectionByLevelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PerceivedLoudnessPerLevelModel::*)(::Il2CppString*)>(&PerceivedLoudnessPerLevelModel::GetLoudnessCorrectionByLevelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelModel*), "GetLoudnessCorrectionByLevelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelModel::GetMaxSfxVolumeByLevelId
// Il2CppName: GetMaxSfxVolumeByLevelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PerceivedLoudnessPerLevelModel::*)(::Il2CppString*)>(&PerceivedLoudnessPerLevelModel::GetMaxSfxVolumeByLevelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelModel*), "GetMaxSfxVolumeByLevelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelModel::GetLoudnessByLevelId
// Il2CppName: GetLoudnessByLevelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PerceivedLoudnessPerLevelModel::*)(::Il2CppString*)>(&PerceivedLoudnessPerLevelModel::GetLoudnessByLevelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelModel*), "GetLoudnessByLevelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SabersHotSwapping.SaberModelControllerProvider
#include "SabersHotSwapping/SaberModelControllerProvider.hpp"
// Including type: SabersHotSwapping.SabersLibrarySO
#include "SabersHotSwapping/SabersLibrarySO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: SaberModelController
#include "GlobalNamespace/SaberModelController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SabersHotSwapping.SaberModelControllerProvider.add_controllerChangedEvent
void SabersHotSwapping::SaberModelControllerProvider::add_controllerChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelControllerProvider::add_controllerChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_controllerChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SabersHotSwapping.SaberModelControllerProvider.remove_controllerChangedEvent
void SabersHotSwapping::SaberModelControllerProvider::remove_controllerChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelControllerProvider::remove_controllerChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_controllerChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SabersHotSwapping.SaberModelControllerProvider.GetSaber
GlobalNamespace::SaberModelController* SabersHotSwapping::SaberModelControllerProvider::GetSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelControllerProvider::GetSaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SaberModelController*, false>(this, ___internal__method);
}
// Autogenerated method: SabersHotSwapping.SaberModelControllerProvider.Awake
void SabersHotSwapping::SaberModelControllerProvider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelControllerProvider::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SabersHotSwapping.SaberModelControllerProvider.Update
void SabersHotSwapping::SaberModelControllerProvider::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelControllerProvider::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SabersHotSwapping.SaberModelControllerProvider.GetNext
void SabersHotSwapping::SaberModelControllerProvider::GetNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelControllerProvider::GetNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SabersHotSwapping.SaberModelControllerProvider.GetPrev
void SabersHotSwapping::SaberModelControllerProvider::GetPrev() {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelControllerProvider::GetPrev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SabersHotSwapping.SaberModelControllerProvider.InstantiatePrefab
GlobalNamespace::SaberModelController* SabersHotSwapping::SaberModelControllerProvider::InstantiatePrefab(GlobalNamespace::SaberModelController* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelControllerProvider::InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SaberModelController*, false>(this, ___internal__method, prefab);
}
// Writing MetadataGetter for method: SaberModelControllerProvider::add_controllerChangedEvent
// Il2CppName: add_controllerChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelControllerProvider::*)(System::Action*)>(&SaberModelControllerProvider::add_controllerChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), "add_controllerChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: SaberModelControllerProvider::remove_controllerChangedEvent
// Il2CppName: remove_controllerChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelControllerProvider::*)(System::Action*)>(&SaberModelControllerProvider::remove_controllerChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), "remove_controllerChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: SaberModelControllerProvider::GetSaber
// Il2CppName: GetSaber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SaberModelController* (SaberModelControllerProvider::*)()>(&SaberModelControllerProvider::GetSaber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), "GetSaber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SaberModelControllerProvider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelControllerProvider::*)()>(&SaberModelControllerProvider::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SaberModelControllerProvider::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelControllerProvider::*)()>(&SaberModelControllerProvider::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SaberModelControllerProvider::GetNext
// Il2CppName: GetNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelControllerProvider::*)()>(&SaberModelControllerProvider::GetNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), "GetNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SaberModelControllerProvider::GetPrev
// Il2CppName: GetPrev
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelControllerProvider::*)()>(&SaberModelControllerProvider::GetPrev)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), "GetPrev", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SaberModelControllerProvider::InstantiatePrefab
// Il2CppName: InstantiatePrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SaberModelController* (SaberModelControllerProvider::*)(GlobalNamespace::SaberModelController*)>(&SaberModelControllerProvider::InstantiatePrefab)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), "InstantiatePrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SaberModelController*>()});
  }
};
// Writing MetadataGetter for method: SaberModelControllerProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelControllerProvider::*)()>(&SaberModelControllerProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelControllerProvider::*)()>(&SaberModelControllerProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelControllerProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SabersHotSwapping.SaberModelInstaller
#include "SabersHotSwapping/SaberModelInstaller.hpp"
// Including type: SabersHotSwapping.SaberModelControllerProvider
#include "SabersHotSwapping/SaberModelControllerProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SabersHotSwapping.SaberModelInstaller.InstallBindings
void SabersHotSwapping::SaberModelInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SaberModelInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SaberModelInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelInstaller::*)()>(&SaberModelInstaller::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SaberModelInstaller::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelInstaller::*)()>(&SaberModelInstaller::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaberModelInstaller::*)()>(&SaberModelInstaller::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SaberModelInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SabersHotSwapping.SabersLibrarySO
#include "SabersHotSwapping/SabersLibrarySO.hpp"
// Including type: SaberModelController
#include "GlobalNamespace/SaberModelController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SabersHotSwapping.SabersLibrarySO.get_saberModelControllerPrefabs
::Array<GlobalNamespace::SaberModelController*>* SabersHotSwapping::SabersLibrarySO::get_saberModelControllerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SabersLibrarySO::get_saberModelControllerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberModelControllerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::SaberModelController*>*, false>(this, ___internal__method);
}
// Autogenerated method: SabersHotSwapping.SabersLibrarySO.get_sabersCount
int SabersHotSwapping::SabersLibrarySO::get_sabersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("SabersHotSwapping::SabersLibrarySO::get_sabersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sabersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SabersLibrarySO::get_saberModelControllerPrefabs
// Il2CppName: get_saberModelControllerPrefabs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::SaberModelController*>* (SabersLibrarySO::*)()>(&SabersLibrarySO::get_saberModelControllerPrefabs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SabersLibrarySO*), "get_saberModelControllerPrefabs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SabersLibrarySO::get_sabersCount
// Il2CppName: get_sabersCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SabersLibrarySO::*)()>(&SabersLibrarySO::get_sabersCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SabersLibrarySO*), "get_sabersCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SabersLibrarySO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SabersLibrarySO::*)()>(&SabersLibrarySO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SabersLibrarySO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SabersLibrarySO::*)()>(&SabersLibrarySO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SabersLibrarySO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SFB.IStandaloneFileBrowser
#include "SFB/IStandaloneFileBrowser.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SFB.IStandaloneFileBrowser.OpenFilePanel
::Array<::Il2CppString*>* SFB::IStandaloneFileBrowser::OpenFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Array<SFB::ExtensionFilter>* extensions, bool multiselect) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::IStandaloneFileBrowser::OpenFilePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenFilePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(multiselect)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, title, directory, extensions, multiselect);
}
// Autogenerated method: SFB.IStandaloneFileBrowser.OpenFolderPanel
::Array<::Il2CppString*>* SFB::IStandaloneFileBrowser::OpenFolderPanel(::Il2CppString* title, ::Il2CppString* directory, bool multiselect) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::IStandaloneFileBrowser::OpenFolderPanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenFolderPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(multiselect)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, title, directory, multiselect);
}
// Autogenerated method: SFB.IStandaloneFileBrowser.SaveFilePanel
::Il2CppString* SFB::IStandaloneFileBrowser::SaveFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Array<SFB::ExtensionFilter>* extensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::IStandaloneFileBrowser::SaveFilePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveFilePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(defaultName), ::il2cpp_utils::ExtractType(extensions)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, title, directory, defaultName, extensions);
}
// Autogenerated method: SFB.IStandaloneFileBrowser.OpenFilePanelAsync
void SFB::IStandaloneFileBrowser::OpenFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Array<SFB::ExtensionFilter>* extensions, bool multiselect, System::Action_1<::Array<::Il2CppString*>*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::IStandaloneFileBrowser::OpenFilePanelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenFilePanelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(multiselect), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, title, directory, extensions, multiselect, cb);
}
// Autogenerated method: SFB.IStandaloneFileBrowser.OpenFolderPanelAsync
void SFB::IStandaloneFileBrowser::OpenFolderPanelAsync(::Il2CppString* title, ::Il2CppString* directory, bool multiselect, System::Action_1<::Array<::Il2CppString*>*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::IStandaloneFileBrowser::OpenFolderPanelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenFolderPanelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(multiselect), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, title, directory, multiselect, cb);
}
// Autogenerated method: SFB.IStandaloneFileBrowser.SaveFilePanelAsync
void SFB::IStandaloneFileBrowser::SaveFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Array<SFB::ExtensionFilter>* extensions, System::Action_1<::Il2CppString*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::IStandaloneFileBrowser::SaveFilePanelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveFilePanelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(defaultName), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, title, directory, defaultName, extensions, cb);
}
// Writing MetadataGetter for method: IStandaloneFileBrowser::OpenFilePanel
// Il2CppName: OpenFilePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (IStandaloneFileBrowser::*)(::Il2CppString*, ::Il2CppString*, ::Array<SFB::ExtensionFilter>*, bool)>(&IStandaloneFileBrowser::OpenFilePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStandaloneFileBrowser*), "OpenFilePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<SFB::ExtensionFilter>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IStandaloneFileBrowser::OpenFolderPanel
// Il2CppName: OpenFolderPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (IStandaloneFileBrowser::*)(::Il2CppString*, ::Il2CppString*, bool)>(&IStandaloneFileBrowser::OpenFolderPanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStandaloneFileBrowser*), "OpenFolderPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IStandaloneFileBrowser::SaveFilePanel
// Il2CppName: SaveFilePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (IStandaloneFileBrowser::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Array<SFB::ExtensionFilter>*)>(&IStandaloneFileBrowser::SaveFilePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStandaloneFileBrowser*), "SaveFilePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<SFB::ExtensionFilter>*>()});
  }
};
// Writing MetadataGetter for method: IStandaloneFileBrowser::OpenFilePanelAsync
// Il2CppName: OpenFilePanelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IStandaloneFileBrowser::*)(::Il2CppString*, ::Il2CppString*, ::Array<SFB::ExtensionFilter>*, bool, System::Action_1<::Array<::Il2CppString*>*>*)>(&IStandaloneFileBrowser::OpenFilePanelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStandaloneFileBrowser*), "OpenFilePanelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<SFB::ExtensionFilter>*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<::Array<::Il2CppString*>*>*>()});
  }
};
// Writing MetadataGetter for method: IStandaloneFileBrowser::OpenFolderPanelAsync
// Il2CppName: OpenFolderPanelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IStandaloneFileBrowser::*)(::Il2CppString*, ::Il2CppString*, bool, System::Action_1<::Array<::Il2CppString*>*>*)>(&IStandaloneFileBrowser::OpenFolderPanelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStandaloneFileBrowser*), "OpenFolderPanelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<::Array<::Il2CppString*>*>*>()});
  }
};
// Writing MetadataGetter for method: IStandaloneFileBrowser::SaveFilePanelAsync
// Il2CppName: SaveFilePanelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IStandaloneFileBrowser::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Array<SFB::ExtensionFilter>*, System::Action_1<::Il2CppString*>*)>(&IStandaloneFileBrowser::SaveFilePanelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStandaloneFileBrowser*), "SaveFilePanelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<SFB::ExtensionFilter>*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SFB.ExtensionFilter
#include "SFB/ExtensionFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ExtensionFilter::ExtensionFilter
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtensionFilter::*)(::Il2CppString*, ::Array<::Il2CppString*>*)>(&ExtensionFilter::ExtensionFilter<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtensionFilter), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtensionFilter::*)(::Il2CppString*, ::Array<::Il2CppString*>*)>(&ExtensionFilter::ExtensionFilter<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtensionFilter), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SFB.StandaloneFileBrowser
#include "SFB/StandaloneFileBrowser.hpp"
// Including type: SFB.IStandaloneFileBrowser
#include "SFB/IStandaloneFileBrowser.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE299A4
// Autogenerated static field getter
// Get static field: static private readonly SFB.IStandaloneFileBrowser _platformWrapper
SFB::IStandaloneFileBrowser* SFB::StandaloneFileBrowser::_get__platformWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::_get__platformWrapper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<SFB::IStandaloneFileBrowser*>("SFB", "StandaloneFileBrowser", "_platformWrapper"));
}
// Autogenerated static field setter
// Set static field: static private readonly SFB.IStandaloneFileBrowser _platformWrapper
void SFB::StandaloneFileBrowser::_set__platformWrapper(SFB::IStandaloneFileBrowser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::_set__platformWrapper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SFB", "StandaloneFileBrowser", "_platformWrapper", value));
}
// Autogenerated method: SFB.StandaloneFileBrowser..cctor
void SFB::StandaloneFileBrowser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFilePanel
::Array<::Il2CppString*>* SFB::StandaloneFileBrowser::OpenFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* extension, bool multiselect) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::OpenFilePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFilePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(extension), ::il2cpp_utils::ExtractType(multiselect)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, extension, multiselect);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFilePanel
::Array<::Il2CppString*>* SFB::StandaloneFileBrowser::OpenFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Array<SFB::ExtensionFilter>* extensions, bool multiselect) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::OpenFilePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFilePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(multiselect)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, extensions, multiselect);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFilePanelAsync
void SFB::StandaloneFileBrowser::OpenFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* extension, bool multiselect, System::Action_1<::Array<::Il2CppString*>*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::OpenFilePanelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFilePanelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(extension), ::il2cpp_utils::ExtractType(multiselect), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, extension, multiselect, cb);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFilePanelAsync
void SFB::StandaloneFileBrowser::OpenFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Array<SFB::ExtensionFilter>* extensions, bool multiselect, System::Action_1<::Array<::Il2CppString*>*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::OpenFilePanelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFilePanelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(multiselect), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, extensions, multiselect, cb);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFolderPanel
::Array<::Il2CppString*>* SFB::StandaloneFileBrowser::OpenFolderPanel(::Il2CppString* title, ::Il2CppString* directory, bool multiselect) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::OpenFolderPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFolderPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(multiselect)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, multiselect);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFolderPanelAsync
void SFB::StandaloneFileBrowser::OpenFolderPanelAsync(::Il2CppString* title, ::Il2CppString* directory, bool multiselect, System::Action_1<::Array<::Il2CppString*>*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::OpenFolderPanelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFolderPanelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(multiselect), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, multiselect, cb);
}
// Autogenerated method: SFB.StandaloneFileBrowser.SaveFilePanel
::Il2CppString* SFB::StandaloneFileBrowser::SaveFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Il2CppString* extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::SaveFilePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "SaveFilePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(defaultName), ::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, defaultName, extension);
}
// Autogenerated method: SFB.StandaloneFileBrowser.SaveFilePanel
::Il2CppString* SFB::StandaloneFileBrowser::SaveFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Array<SFB::ExtensionFilter>* extensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::SaveFilePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "SaveFilePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(defaultName), ::il2cpp_utils::ExtractType(extensions)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, defaultName, extensions);
}
// Autogenerated method: SFB.StandaloneFileBrowser.SaveFilePanelAsync
void SFB::StandaloneFileBrowser::SaveFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Il2CppString* extension, System::Action_1<::Il2CppString*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::SaveFilePanelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "SaveFilePanelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(defaultName), ::il2cpp_utils::ExtractType(extension), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, defaultName, extension, cb);
}
// Autogenerated method: SFB.StandaloneFileBrowser.SaveFilePanelAsync
void SFB::StandaloneFileBrowser::SaveFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Array<SFB::ExtensionFilter>* extensions, System::Action_1<::Il2CppString*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("SFB::StandaloneFileBrowser::SaveFilePanelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "SaveFilePanelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(defaultName), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, defaultName, extensions, cb);
}
// Writing MetadataGetter for method: StandaloneFileBrowser::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&StandaloneFileBrowser::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::OpenFilePanel
// Il2CppName: OpenFilePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, bool)>(&StandaloneFileBrowser::OpenFilePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "OpenFilePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::OpenFilePanel
// Il2CppName: OpenFilePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)(::Il2CppString*, ::Il2CppString*, ::Array<SFB::ExtensionFilter>*, bool)>(&StandaloneFileBrowser::OpenFilePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "OpenFilePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<SFB::ExtensionFilter>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::OpenFilePanelAsync
// Il2CppName: OpenFilePanelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, bool, System::Action_1<::Array<::Il2CppString*>*>*)>(&StandaloneFileBrowser::OpenFilePanelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "OpenFilePanelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<::Array<::Il2CppString*>*>*>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::OpenFilePanelAsync
// Il2CppName: OpenFilePanelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Il2CppString*, ::Array<SFB::ExtensionFilter>*, bool, System::Action_1<::Array<::Il2CppString*>*>*)>(&StandaloneFileBrowser::OpenFilePanelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "OpenFilePanelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<SFB::ExtensionFilter>*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<::Array<::Il2CppString*>*>*>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::OpenFolderPanel
// Il2CppName: OpenFolderPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)(::Il2CppString*, ::Il2CppString*, bool)>(&StandaloneFileBrowser::OpenFolderPanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "OpenFolderPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::OpenFolderPanelAsync
// Il2CppName: OpenFolderPanelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Il2CppString*, bool, System::Action_1<::Array<::Il2CppString*>*>*)>(&StandaloneFileBrowser::OpenFolderPanelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "OpenFolderPanelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<::Array<::Il2CppString*>*>*>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::SaveFilePanel
// Il2CppName: SaveFilePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&StandaloneFileBrowser::SaveFilePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "SaveFilePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::SaveFilePanel
// Il2CppName: SaveFilePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Array<SFB::ExtensionFilter>*)>(&StandaloneFileBrowser::SaveFilePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "SaveFilePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<SFB::ExtensionFilter>*>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::SaveFilePanelAsync
// Il2CppName: SaveFilePanelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*, System::Action_1<::Il2CppString*>*)>(&StandaloneFileBrowser::SaveFilePanelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "SaveFilePanelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::SaveFilePanelAsync
// Il2CppName: SaveFilePanelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Array<SFB::ExtensionFilter>*, System::Action_1<::Il2CppString*>*)>(&StandaloneFileBrowser::SaveFilePanelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), "SaveFilePanelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<SFB::ExtensionFilter>*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: StandaloneFileBrowser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneFileBrowser::*)()>(&StandaloneFileBrowser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneFileBrowser::*)()>(&StandaloneFileBrowser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneFileBrowser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEase.DockerWrap
#include "NetEase/DockerWrap.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NetEase.Docker.UploadScoreData
#include "NetEase/Docker/UploadScoreData.hpp"
// Including type: NetEase.Docker.RequestHighscoreData
#include "NetEase/Docker/RequestHighscoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.DockerWrap.SetInitializeCallback
void NetEase::DockerWrap::SetInitializeCallback(System::Action_1<NetEase::Docker::InitializeData>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::SetInitializeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "SetInitializeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: NetEase.DockerWrap.Initialize
void NetEase::DockerWrap::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.DockerWrap.SetLoginCallback
void NetEase::DockerWrap::SetLoginCallback(System::Action_1<NetEase::Docker::LoginData>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::SetLoginCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "SetLoginCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: NetEase.DockerWrap.Login
void NetEase::DockerWrap::Login() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::Login");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "Login", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.DockerWrap.SetLogoutCallback
void NetEase::DockerWrap::SetLogoutCallback(System::Action_1<NetEase::Docker::LogoutData>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::SetLogoutCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "SetLogoutCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: NetEase.DockerWrap.Logout
void NetEase::DockerWrap::Logout() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::Logout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "Logout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.DockerWrap.UploadScore
void NetEase::DockerWrap::UploadScore(NetEase::Docker::UploadScoreData scoreData) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::UploadScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scoreData);
}
// Autogenerated method: NetEase.DockerWrap.WillProvideHighscore
bool NetEase::DockerWrap::WillProvideHighscore() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::WillProvideHighscore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "WillProvideHighscore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.DockerWrap.SetHighscoreReceivedCallback
void NetEase::DockerWrap::SetHighscoreReceivedCallback(System::Action_1<NetEase::Docker::ReceivedHighscoreData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::SetHighscoreReceivedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "SetHighscoreReceivedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackAction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.DockerWrap.RequestHighscoreList
void NetEase::DockerWrap::RequestHighscoreList(NetEase::Docker::RequestHighscoreData highscoreRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::RequestHighscoreList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "RequestHighscoreList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highscoreRequest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, highscoreRequest);
}
// Autogenerated method: NetEase.DockerWrap.UpdateLoop
void NetEase::DockerWrap::UpdateLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::DockerWrap::UpdateLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NetEase", "DockerWrap", "UpdateLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: DockerWrap::SetInitializeCallback
// Il2CppName: SetInitializeCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Action_1<NetEase::Docker::InitializeData>*)>(&DockerWrap::SetInitializeCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "SetInitializeCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<NetEase::Docker::InitializeData>*>()});
  }
};
// Writing MetadataGetter for method: DockerWrap::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DockerWrap::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DockerWrap::SetLoginCallback
// Il2CppName: SetLoginCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Action_1<NetEase::Docker::LoginData>*)>(&DockerWrap::SetLoginCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "SetLoginCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<NetEase::Docker::LoginData>*>()});
  }
};
// Writing MetadataGetter for method: DockerWrap::Login
// Il2CppName: Login
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DockerWrap::Login)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "Login", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DockerWrap::SetLogoutCallback
// Il2CppName: SetLogoutCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Action_1<NetEase::Docker::LogoutData>*)>(&DockerWrap::SetLogoutCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "SetLogoutCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<NetEase::Docker::LogoutData>*>()});
  }
};
// Writing MetadataGetter for method: DockerWrap::Logout
// Il2CppName: Logout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DockerWrap::Logout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "Logout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DockerWrap::UploadScore
// Il2CppName: UploadScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(NetEase::Docker::UploadScoreData)>(&DockerWrap::UploadScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "UploadScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NetEase::Docker::UploadScoreData>()});
  }
};
// Writing MetadataGetter for method: DockerWrap::WillProvideHighscore
// Il2CppName: WillProvideHighscore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&DockerWrap::WillProvideHighscore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "WillProvideHighscore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DockerWrap::SetHighscoreReceivedCallback
// Il2CppName: SetHighscoreReceivedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Action_1<NetEase::Docker::ReceivedHighscoreData>*)>(&DockerWrap::SetHighscoreReceivedCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "SetHighscoreReceivedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<NetEase::Docker::ReceivedHighscoreData>*>()});
  }
};
// Writing MetadataGetter for method: DockerWrap::RequestHighscoreList
// Il2CppName: RequestHighscoreList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(NetEase::Docker::RequestHighscoreData)>(&DockerWrap::RequestHighscoreList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "RequestHighscoreList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NetEase::Docker::RequestHighscoreData>()});
  }
};
// Writing MetadataGetter for method: DockerWrap::UpdateLoop
// Il2CppName: UpdateLoop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DockerWrap::UpdateLoop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DockerWrap*), "UpdateLoop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Priority_Queue.FastPriorityQueueNode
#include "Priority_Queue/FastPriorityQueueNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Priority_Queue.FastPriorityQueueNode.get_Priority
float Priority_Queue::FastPriorityQueueNode::get_Priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("Priority_Queue::FastPriorityQueueNode::get_Priority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Priority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Priority_Queue.FastPriorityQueueNode.set_Priority
void Priority_Queue::FastPriorityQueueNode::set_Priority(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Priority_Queue::FastPriorityQueueNode::set_Priority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Priority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Priority_Queue.FastPriorityQueueNode.get_QueueIndex
int Priority_Queue::FastPriorityQueueNode::get_QueueIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("Priority_Queue::FastPriorityQueueNode::get_QueueIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QueueIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Priority_Queue.FastPriorityQueueNode.set_QueueIndex
void Priority_Queue::FastPriorityQueueNode::set_QueueIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Priority_Queue::FastPriorityQueueNode::set_QueueIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QueueIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: FastPriorityQueueNode::get_Priority
// Il2CppName: get_Priority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FastPriorityQueueNode::*)()>(&FastPriorityQueueNode::get_Priority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastPriorityQueueNode*), "get_Priority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FastPriorityQueueNode::set_Priority
// Il2CppName: set_Priority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FastPriorityQueueNode::*)(float)>(&FastPriorityQueueNode::set_Priority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastPriorityQueueNode*), "set_Priority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FastPriorityQueueNode::get_QueueIndex
// Il2CppName: get_QueueIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FastPriorityQueueNode::*)()>(&FastPriorityQueueNode::get_QueueIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastPriorityQueueNode*), "get_QueueIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FastPriorityQueueNode::set_QueueIndex
// Il2CppName: set_QueueIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FastPriorityQueueNode::*)(int)>(&FastPriorityQueueNode::set_QueueIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastPriorityQueueNode*), "set_QueueIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FastPriorityQueueNode::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FastPriorityQueueNode::*)()>(&FastPriorityQueueNode::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastPriorityQueueNode*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FastPriorityQueueNode::*)()>(&FastPriorityQueueNode::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastPriorityQueueNode*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Priority_Queue.StablePriorityQueueNode
#include "Priority_Queue/StablePriorityQueueNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Priority_Queue.StablePriorityQueueNode.get_InsertionIndex
int64_t Priority_Queue::StablePriorityQueueNode::get_InsertionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("Priority_Queue::StablePriorityQueueNode::get_InsertionIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InsertionIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Priority_Queue.StablePriorityQueueNode.set_InsertionIndex
void Priority_Queue::StablePriorityQueueNode::set_InsertionIndex(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Priority_Queue::StablePriorityQueueNode::set_InsertionIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InsertionIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: StablePriorityQueueNode::get_InsertionIndex
// Il2CppName: get_InsertionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (StablePriorityQueueNode::*)()>(&StablePriorityQueueNode::get_InsertionIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StablePriorityQueueNode*), "get_InsertionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StablePriorityQueueNode::set_InsertionIndex
// Il2CppName: set_InsertionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StablePriorityQueueNode::*)(int64_t)>(&StablePriorityQueueNode::set_InsertionIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StablePriorityQueueNode*), "set_InsertionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: StablePriorityQueueNode::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StablePriorityQueueNode::*)()>(&StablePriorityQueueNode::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StablePriorityQueueNode*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StablePriorityQueueNode::*)()>(&StablePriorityQueueNode::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StablePriorityQueueNode*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.ErrorCodes
#include "BeatSaberAPI/DataTransferObjects/ErrorCodes.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kUserVerificationError
::Il2CppString* BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kUserVerificationError() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kUserVerificationError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kUserVerificationError"));
}
// Autogenerated static field setter
// Set static field: static public System.String kUserVerificationError
void BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kUserVerificationError(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kUserVerificationError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kUserVerificationError", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kUserRegistrationError
::Il2CppString* BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kUserRegistrationError() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kUserRegistrationError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kUserRegistrationError"));
}
// Autogenerated static field setter
// Set static field: static public System.String kUserRegistrationError
void BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kUserRegistrationError(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kUserRegistrationError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kUserRegistrationError", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kCreateAccessTokenError
::Il2CppString* BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kCreateAccessTokenError() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kCreateAccessTokenError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kCreateAccessTokenError"));
}
// Autogenerated static field setter
// Set static field: static public System.String kCreateAccessTokenError
void BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kCreateAccessTokenError(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kCreateAccessTokenError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kCreateAccessTokenError", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kLeaderboardNotFound
::Il2CppString* BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kLeaderboardNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kLeaderboardNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kLeaderboardNotFound"));
}
// Autogenerated static field setter
// Set static field: static public System.String kLeaderboardNotFound
void BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kLeaderboardNotFound(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kLeaderboardNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kLeaderboardNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kWrongInput
::Il2CppString* BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kWrongInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kWrongInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kWrongInput"));
}
// Autogenerated static field setter
// Set static field: static public System.String kWrongInput
void BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kWrongInput(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kWrongInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kWrongInput", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kLoginError
::Il2CppString* BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kLoginError() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kLoginError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kLoginError"));
}
// Autogenerated static field setter
// Set static field: static public System.String kLoginError
void BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kLoginError(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kLoginError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kLoginError", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kTokenError
::Il2CppString* BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kTokenError() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kTokenError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kTokenError"));
}
// Autogenerated static field setter
// Set static field: static public System.String kTokenError
void BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kTokenError(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kTokenError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kTokenError", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kLoginTimeOut
::Il2CppString* BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kLoginTimeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_get_kLoginTimeOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kLoginTimeOut"));
}
// Autogenerated static field setter
// Set static field: static public System.String kLoginTimeOut
void BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kLoginTimeOut(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ErrorCodes::_set_kLoginTimeOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ErrorCodes", "kLoginTimeOut", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntries
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntries.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntry
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LeaderboardEntries::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntries::*)()>(&LeaderboardEntries::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntries*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntries::*)()>(&LeaderboardEntries::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntries*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntry
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LeaderboardEntry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntry::*)()>(&LeaderboardEntry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntry::*)()>(&LeaderboardEntry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardQuery
#include "BeatSaberAPI/DataTransferObjects/LeaderboardQuery.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LeaderboardQuery::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardQuery::*)()>(&LeaderboardQuery::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardQuery*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardQuery::*)()>(&LeaderboardQuery::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardQuery*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatSaberAPI.DataTransferObjects.ScoresScope
#include "BeatSaberAPI/DataTransferObjects/ScoresScope.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.ScoresScope Global
BeatSaberAPI::DataTransferObjects::ScoresScope BeatSaberAPI::DataTransferObjects::ScoresScope::_get_Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ScoresScope::_get_Global");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::ScoresScope>("BeatSaberAPI.DataTransferObjects", "ScoresScope", "Global"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.ScoresScope Global
void BeatSaberAPI::DataTransferObjects::ScoresScope::_set_Global(BeatSaberAPI::DataTransferObjects::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ScoresScope::_set_Global");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ScoresScope", "Global", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.ScoresScope AroundPlayer
BeatSaberAPI::DataTransferObjects::ScoresScope BeatSaberAPI::DataTransferObjects::ScoresScope::_get_AroundPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ScoresScope::_get_AroundPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::ScoresScope>("BeatSaberAPI.DataTransferObjects", "ScoresScope", "AroundPlayer"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.ScoresScope AroundPlayer
void BeatSaberAPI::DataTransferObjects::ScoresScope::_set_AroundPlayer(BeatSaberAPI::DataTransferObjects::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ScoresScope::_set_AroundPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ScoresScope", "AroundPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.ScoresScope Friends
BeatSaberAPI::DataTransferObjects::ScoresScope BeatSaberAPI::DataTransferObjects::ScoresScope::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ScoresScope::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::ScoresScope>("BeatSaberAPI.DataTransferObjects", "ScoresScope", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.ScoresScope Friends
void BeatSaberAPI::DataTransferObjects::ScoresScope::_set_Friends(BeatSaberAPI::DataTransferObjects::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ScoresScope::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "ScoresScope", "Friends", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.LevelScoreResult
#include "BeatSaberAPI/DataTransferObjects/LevelScoreResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LevelScoreResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreResult::*)()>(&LevelScoreResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreResult::*)()>(&LevelScoreResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers
#include "BeatSaberAPI/DataTransferObjects/LevelScoreResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers None
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "None"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers None
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_None(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers InstaFail
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_InstaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_InstaFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "InstaFail"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers InstaFail
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_InstaFail(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_InstaFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "InstaFail", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers FailOnSaberClash
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_FailOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_FailOnSaberClash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "FailOnSaberClash"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers FailOnSaberClash
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_FailOnSaberClash(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_FailOnSaberClash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "FailOnSaberClash", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers FastNotes
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_FastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_FastNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "FastNotes"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers FastNotes
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_FastNotes(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_FastNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "FastNotes", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers DisappearingArrows
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_DisappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_DisappearingArrows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "DisappearingArrows"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers DisappearingArrows
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_DisappearingArrows(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_DisappearingArrows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "DisappearingArrows", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers NoBombs
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_NoBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_NoBombs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "NoBombs"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers NoBombs
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_NoBombs(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_NoBombs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "NoBombs", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers SongSpeedFaster
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_SongSpeedFaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_SongSpeedFaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "SongSpeedFaster"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers SongSpeedFaster
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_SongSpeedFaster(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_SongSpeedFaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "SongSpeedFaster", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers SongSpeedSlower
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_SongSpeedSlower() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_SongSpeedSlower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "SongSpeedSlower"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers SongSpeedSlower
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_SongSpeedSlower(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_SongSpeedSlower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "SongSpeedSlower", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers EnabledObstacleTypeFullHeightOnly
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_EnabledObstacleTypeFullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_EnabledObstacleTypeFullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "EnabledObstacleTypeFullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers EnabledObstacleTypeFullHeightOnly
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_EnabledObstacleTypeFullHeightOnly(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_EnabledObstacleTypeFullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "EnabledObstacleTypeFullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers EnabledObstacleTypeNoObstacles
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_EnabledObstacleTypeNoObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_EnabledObstacleTypeNoObstacles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "EnabledObstacleTypeNoObstacles"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers EnabledObstacleTypeNoObstacles
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_EnabledObstacleTypeNoObstacles(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_EnabledObstacleTypeNoObstacles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "EnabledObstacleTypeNoObstacles", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers EnergyTypeBattery
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_EnergyTypeBattery() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_EnergyTypeBattery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "EnergyTypeBattery"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers EnergyTypeBattery
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_EnergyTypeBattery(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_EnergyTypeBattery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "EnergyTypeBattery", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers StrictAngles
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_StrictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_StrictAngles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "StrictAngles"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers StrictAngles
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_StrictAngles(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_StrictAngles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "StrictAngles", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers NoArrows
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_NoArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_NoArrows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "NoArrows"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers NoArrows
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_NoArrows(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_NoArrows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "NoArrows", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers GhostNotes
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_GhostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_GhostNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "GhostNotes"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers GhostNotes
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_GhostNotes(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_GhostNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "GhostNotes", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers NoFailOn0Energy
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_NoFailOn0Energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_NoFailOn0Energy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "NoFailOn0Energy"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers NoFailOn0Energy
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_NoFailOn0Energy(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_NoFailOn0Energy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "NoFailOn0Energy", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers SongSpeedSuperFast
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_SongSpeedSuperFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_SongSpeedSuperFast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "SongSpeedSuperFast"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers SongSpeedSuperFast
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_SongSpeedSuperFast(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_SongSpeedSuperFast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "SongSpeedSuperFast", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers ProMode
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_ProMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_ProMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "ProMode"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers ProMode
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_ProMode(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_ProMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "ProMode", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers ZenMode
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_ZenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_ZenMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "ZenMode"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers ZenMode
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_ZenMode(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_ZenMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "ZenMode", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers SmallCubes
BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_SmallCubes() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_get_SmallCubes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "SmallCubes"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers SmallCubes
void BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_SmallCubes(BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers::_set_SmallCubes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "LevelScoreResult/GameplayModifiers", "SmallCubes", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.ResultProof
#include "BeatSaberAPI/DataTransferObjects/ResultProof.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatSaberAPI.DataTransferObjects.ResultProof.get_proof
::Il2CppString* BeatSaberAPI::DataTransferObjects::ResultProof::get_proof() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ResultProof::get_proof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_proof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatSaberAPI.DataTransferObjects.ResultProof.set_proof
void BeatSaberAPI::DataTransferObjects::ResultProof::set_proof(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::ResultProof::set_proof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_proof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: ResultProof::get_proof
// Il2CppName: get_proof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ResultProof::*)()>(&ResultProof::get_proof)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultProof*), "get_proof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultProof::set_proof
// Il2CppName: set_proof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultProof::*)(::Il2CppString*)>(&ResultProof::set_proof)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultProof*), "set_proof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ResultProof::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultProof::*)()>(&ResultProof::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultProof*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultProof::*)()>(&ResultProof::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultProof*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatSaberAPI.DataTransferObjects.UserPlatform
#include "BeatSaberAPI/DataTransferObjects/UserPlatform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform None
BeatSaberAPI::DataTransferObjects::UserPlatform BeatSaberAPI::DataTransferObjects::UserPlatform::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::UserPlatform>("BeatSaberAPI.DataTransferObjects", "UserPlatform", "None"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform None
void BeatSaberAPI::DataTransferObjects::UserPlatform::_set_None(BeatSaberAPI::DataTransferObjects::UserPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatform", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform Test
BeatSaberAPI::DataTransferObjects::UserPlatform BeatSaberAPI::DataTransferObjects::UserPlatform::_get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_get_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::UserPlatform>("BeatSaberAPI.DataTransferObjects", "UserPlatform", "Test"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform Test
void BeatSaberAPI::DataTransferObjects::UserPlatform::_set_Test(BeatSaberAPI::DataTransferObjects::UserPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_set_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatform", "Test", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform Steam
BeatSaberAPI::DataTransferObjects::UserPlatform BeatSaberAPI::DataTransferObjects::UserPlatform::_get_Steam() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_get_Steam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::UserPlatform>("BeatSaberAPI.DataTransferObjects", "UserPlatform", "Steam"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform Steam
void BeatSaberAPI::DataTransferObjects::UserPlatform::_set_Steam(BeatSaberAPI::DataTransferObjects::UserPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_set_Steam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatform", "Steam", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform PlayStation
BeatSaberAPI::DataTransferObjects::UserPlatform BeatSaberAPI::DataTransferObjects::UserPlatform::_get_PlayStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_get_PlayStation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::UserPlatform>("BeatSaberAPI.DataTransferObjects", "UserPlatform", "PlayStation"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform PlayStation
void BeatSaberAPI::DataTransferObjects::UserPlatform::_set_PlayStation(BeatSaberAPI::DataTransferObjects::UserPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_set_PlayStation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatform", "PlayStation", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform OculusPC
BeatSaberAPI::DataTransferObjects::UserPlatform BeatSaberAPI::DataTransferObjects::UserPlatform::_get_OculusPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_get_OculusPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::UserPlatform>("BeatSaberAPI.DataTransferObjects", "UserPlatform", "OculusPC"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform OculusPC
void BeatSaberAPI::DataTransferObjects::UserPlatform::_set_OculusPC(BeatSaberAPI::DataTransferObjects::UserPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_set_OculusPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatform", "OculusPC", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform OculusQuest
BeatSaberAPI::DataTransferObjects::UserPlatform BeatSaberAPI::DataTransferObjects::UserPlatform::_get_OculusQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_get_OculusQuest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::UserPlatform>("BeatSaberAPI.DataTransferObjects", "UserPlatform", "OculusQuest"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.UserPlatform OculusQuest
void BeatSaberAPI::DataTransferObjects::UserPlatform::_set_OculusQuest(BeatSaberAPI::DataTransferObjects::UserPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatform::_set_OculusQuest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatform", "OculusQuest", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatSaberAPI.DataTransferObjects.PlatformEnviroment
#include "BeatSaberAPI/DataTransferObjects/PlatformEnviroment.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.PlatformEnviroment Test
BeatSaberAPI::DataTransferObjects::PlatformEnviroment BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_get_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::PlatformEnviroment>("BeatSaberAPI.DataTransferObjects", "PlatformEnviroment", "Test"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.PlatformEnviroment Test
void BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_set_Test(BeatSaberAPI::DataTransferObjects::PlatformEnviroment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_set_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "PlatformEnviroment", "Test", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.PlatformEnviroment Developer
BeatSaberAPI::DataTransferObjects::PlatformEnviroment BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_get_Developer() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_get_Developer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::PlatformEnviroment>("BeatSaberAPI.DataTransferObjects", "PlatformEnviroment", "Developer"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.PlatformEnviroment Developer
void BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_set_Developer(BeatSaberAPI::DataTransferObjects::PlatformEnviroment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_set_Developer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "PlatformEnviroment", "Developer", value));
}
// Autogenerated static field getter
// Get static field: static public BeatSaberAPI.DataTransferObjects.PlatformEnviroment Production
BeatSaberAPI::DataTransferObjects::PlatformEnviroment BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_get_Production() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_get_Production");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<BeatSaberAPI::DataTransferObjects::PlatformEnviroment>("BeatSaberAPI.DataTransferObjects", "PlatformEnviroment", "Production"));
}
// Autogenerated static field setter
// Set static field: static public BeatSaberAPI.DataTransferObjects.PlatformEnviroment Production
void BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_set_Production(BeatSaberAPI::DataTransferObjects::PlatformEnviroment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::PlatformEnviroment::_set_Production");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "PlatformEnviroment", "Production", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.UserAuthenticationData
#include "BeatSaberAPI/DataTransferObjects/UserAuthenticationData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UserAuthenticationData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserAuthenticationData::*)()>(&UserAuthenticationData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserAuthenticationData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserAuthenticationData::*)()>(&UserAuthenticationData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserAuthenticationData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatSaberAPI.DataTransferObjects.UserAuthenticationResult
#include "BeatSaberAPI/DataTransferObjects/UserAuthenticationResult.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.UserInfo
#include "BeatSaberAPI/DataTransferObjects/UserInfo.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.AccessToken
#include "BeatSaberAPI/DataTransferObjects/AccessToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UserAuthenticationResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserAuthenticationResult::*)()>(&UserAuthenticationResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserAuthenticationResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserAuthenticationResult::*)()>(&UserAuthenticationResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserAuthenticationResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.AccessToken
#include "BeatSaberAPI/DataTransferObjects/AccessToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AccessToken::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AccessToken::*)()>(&AccessToken::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AccessToken*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AccessToken::*)()>(&AccessToken::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AccessToken*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.UserInfo
#include "BeatSaberAPI/DataTransferObjects/UserInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UserInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserInfo::*)()>(&UserInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserInfo::*)()>(&UserInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatSaberAPI.DataTransferObjects.UserPlatformExtension
#include "BeatSaberAPI/DataTransferObjects/UserPlatformExtension.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.UserPlatform
#include "BeatSaberAPI/DataTransferObjects/UserPlatform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kTest
::Il2CppString* BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kTest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kTest"));
}
// Autogenerated static field setter
// Set static field: static public System.String kTest
void BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kTest(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kTest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kTest", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kSteam
::Il2CppString* BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kSteam() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kSteam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kSteam"));
}
// Autogenerated static field setter
// Set static field: static public System.String kSteam
void BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kSteam(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kSteam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kSteam", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kPlayStation
::Il2CppString* BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kPlayStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kPlayStation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kPlayStation"));
}
// Autogenerated static field setter
// Set static field: static public System.String kPlayStation
void BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kPlayStation(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kPlayStation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kPlayStation", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kOculusPC
::Il2CppString* BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kOculusPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kOculusPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kOculusPC"));
}
// Autogenerated static field setter
// Set static field: static public System.String kOculusPC
void BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kOculusPC(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kOculusPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kOculusPC", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kOculusQuest
::Il2CppString* BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kOculusQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_get_kOculusQuest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kOculusQuest"));
}
// Autogenerated static field setter
// Set static field: static public System.String kOculusQuest
void BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kOculusQuest(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::_set_kOculusQuest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "kOculusQuest", value));
}
// Autogenerated method: BeatSaberAPI.DataTransferObjects.UserPlatformExtension.GetUserPlatformFromSerializedName
BeatSaberAPI::DataTransferObjects::UserPlatform BeatSaberAPI::DataTransferObjects::UserPlatformExtension::GetUserPlatformFromSerializedName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::GetUserPlatformFromSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "GetUserPlatformFromSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<BeatSaberAPI::DataTransferObjects::UserPlatform, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: BeatSaberAPI.DataTransferObjects.UserPlatformExtension.GetUserPlatformSerializedName
::Il2CppString* BeatSaberAPI::DataTransferObjects::UserPlatformExtension::GetUserPlatformSerializedName(BeatSaberAPI::DataTransferObjects::UserPlatform userPlatform) {
  static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::UserPlatformExtension::GetUserPlatformSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatSaberAPI.DataTransferObjects", "UserPlatformExtension", "GetUserPlatformSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userPlatform)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userPlatform);
}
// Writing MetadataGetter for method: UserPlatformExtension::GetUserPlatformFromSerializedName
// Il2CppName: GetUserPlatformFromSerializedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<BeatSaberAPI::DataTransferObjects::UserPlatform (*)(::Il2CppString*)>(&UserPlatformExtension::GetUserPlatformFromSerializedName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserPlatformExtension*), "GetUserPlatformFromSerializedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UserPlatformExtension::GetUserPlatformSerializedName
// Il2CppName: GetUserPlatformSerializedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(BeatSaberAPI::DataTransferObjects::UserPlatform)>(&UserPlatformExtension::GetUserPlatformSerializedName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserPlatformExtension*), "GetUserPlatformSerializedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<BeatSaberAPI::DataTransferObjects::UserPlatform>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioTypeHelper
#include "GlobalNamespace/AudioTypeHelper.hpp"
// Including type: UnityEngine.AudioType
#include "UnityEngine/AudioType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioTypeHelper.GetAudioTypeFromPath
UnityEngine::AudioType GlobalNamespace::AudioTypeHelper::GetAudioTypeFromPath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioTypeHelper::GetAudioTypeFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioTypeHelper", "GetAudioTypeFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Writing MetadataGetter for method: AudioTypeHelper::GetAudioTypeFromPath
// Il2CppName: GetAudioTypeFromPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AudioType (*)(::Il2CppString*)>(&AudioTypeHelper::GetAudioTypeFromPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioTypeHelper*), "GetAudioTypeFromPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CachedMediaAsyncLoader
#include "GlobalNamespace/CachedMediaAsyncLoader.hpp"
// Including type: CachedMediaAsyncLoader/<LoadAudioClipAsync>d__5
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadAudioClipAsync-d__5.hpp"
// Including type: CachedMediaAsyncLoader/<LoadSpriteAsync>d__6
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadSpriteAsync-d__6.hpp"
// Including type: AsyncCachedLoader`2
#include "GlobalNamespace/AsyncCachedLoader_2.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CachedMediaAsyncLoader.ClearCache
void GlobalNamespace::CachedMediaAsyncLoader::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::ClearCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader.LoadAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::CachedMediaAsyncLoader::LoadAudioClipAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::LoadAudioClipAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Autogenerated method: CachedMediaAsyncLoader.LoadSpriteAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::CachedMediaAsyncLoader::LoadSpriteAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::LoadSpriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Writing MetadataGetter for method: CachedMediaAsyncLoader::ClearCache
// Il2CppName: ClearCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedMediaAsyncLoader::*)()>(&CachedMediaAsyncLoader::ClearCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader*), "ClearCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CachedMediaAsyncLoader::LoadAudioClipAsync
// Il2CppName: LoadAudioClipAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* (CachedMediaAsyncLoader::*)(::Il2CppString*, System::Threading::CancellationToken)>(&CachedMediaAsyncLoader::LoadAudioClipAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader*), "LoadAudioClipAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: CachedMediaAsyncLoader::LoadSpriteAsync
// Il2CppName: LoadSpriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* (CachedMediaAsyncLoader::*)(::Il2CppString*, System::Threading::CancellationToken)>(&CachedMediaAsyncLoader::LoadSpriteAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader*), "LoadSpriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: CachedMediaAsyncLoader::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedMediaAsyncLoader::*)()>(&CachedMediaAsyncLoader::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedMediaAsyncLoader::*)()>(&CachedMediaAsyncLoader::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CachedMediaAsyncLoader/<LoadAudioClipAsync>d__5
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadAudioClipAsync-d__5.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CachedMediaAsyncLoader/<LoadAudioClipAsync>d__5.MoveNext
void GlobalNamespace::CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader/<LoadAudioClipAsync>d__5.SetStateMachine
void GlobalNamespace::CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::*)()>(&CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader::$LoadAudioClipAsync$d__5), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CachedMediaAsyncLoader/<LoadSpriteAsync>d__6
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadSpriteAsync-d__6.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CachedMediaAsyncLoader/<LoadSpriteAsync>d__6.MoveNext
void GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader/<LoadSpriteAsync>d__6.SetStateMachine
void GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::*)()>(&CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader::$LoadSpriteAsync$d__6), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&CachedMediaAsyncLoader::$LoadSpriteAsync$d__6::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedMediaAsyncLoader::$LoadSpriteAsync$d__6), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IAudioClipAsyncLoader
#include "GlobalNamespace/IAudioClipAsyncLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAudioClipAsyncLoader.LoadAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::IAudioClipAsyncLoader::LoadAudioClipAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAudioClipAsyncLoader::LoadAudioClipAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Writing MetadataGetter for method: IAudioClipAsyncLoader::LoadAudioClipAsync
// Il2CppName: LoadAudioClipAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* (IAudioClipAsyncLoader::*)(::Il2CppString*, System::Threading::CancellationToken)>(&IAudioClipAsyncLoader::LoadAudioClipAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAudioClipAsyncLoader*), "LoadAudioClipAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ISpriteAsyncLoader
#include "GlobalNamespace/ISpriteAsyncLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISpriteAsyncLoader.LoadSpriteAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::ISpriteAsyncLoader::LoadSpriteAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISpriteAsyncLoader::LoadSpriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Writing MetadataGetter for method: ISpriteAsyncLoader::LoadSpriteAsync
// Il2CppName: LoadSpriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* (ISpriteAsyncLoader::*)(::Il2CppString*, System::Threading::CancellationToken)>(&ISpriteAsyncLoader::LoadSpriteAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISpriteAsyncLoader*), "LoadSpriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InternetConnectionChecker
#include "GlobalNamespace/InternetConnectionChecker.hpp"
// Including type: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0
#include "GlobalNamespace/InternetConnectionChecker_-IsConnectedToInternetAsync-d__0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InternetConnectionChecker.IsConnectedToInternetAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::InternetConnectionChecker::IsConnectedToInternetAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::IsConnectedToInternetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "InternetConnectionChecker", "IsConnectedToInternetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cancellationToken);
}
// Writing MetadataGetter for method: InternetConnectionChecker::IsConnectedToInternetAsync
// Il2CppName: IsConnectedToInternetAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<bool>* (*)(System::Threading::CancellationToken)>(&InternetConnectionChecker::IsConnectedToInternetAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InternetConnectionChecker*), "IsConnectedToInternetAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: InternetConnectionChecker::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InternetConnectionChecker::*)()>(&InternetConnectionChecker::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InternetConnectionChecker*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InternetConnectionChecker::*)()>(&InternetConnectionChecker::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InternetConnectionChecker*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0
#include "GlobalNamespace/InternetConnectionChecker_-IsConnectedToInternetAsync-d__0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0.MoveNext
void GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0.SetStateMachine
void GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::*)()>(&InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InternetConnectionChecker::$IsConnectedToInternetAsync$d__0), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InternetConnectionChecker::$IsConnectedToInternetAsync$d__0), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader
#include "GlobalNamespace/MediaAsyncLoader.hpp"
// Including type: MediaAsyncLoader/<LoadWebpage>d__0
#include "GlobalNamespace/MediaAsyncLoader_-LoadWebpage-d__0.hpp"
// Including type: MediaAsyncLoader/<LoadAudioClipAsync>d__1
#include "GlobalNamespace/MediaAsyncLoader_-LoadAudioClipAsync-d__1.hpp"
// Including type: MediaAsyncLoader/<LoadTextureAsync>d__2
#include "GlobalNamespace/MediaAsyncLoader_-LoadTextureAsync-d__2.hpp"
// Including type: MediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/MediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MediaAsyncLoader.LoadWebpage
System::Threading::Tasks::Task_1<::Il2CppString*>* GlobalNamespace::MediaAsyncLoader::LoadWebpage(::Il2CppString* uri, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::LoadWebpage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadWebpage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::MediaAsyncLoader::LoadAudioClipAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::LoadAudioClipAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadTextureAsync
System::Threading::Tasks::Task_1<UnityEngine::Texture2D*>* GlobalNamespace::MediaAsyncLoader::LoadTextureAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::LoadTextureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadTextureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Texture2D*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadSpriteAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::MediaAsyncLoader::LoadSpriteAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::LoadSpriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.Log
void GlobalNamespace::MediaAsyncLoader::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Writing MetadataGetter for method: MediaAsyncLoader::LoadWebpage
// Il2CppName: LoadWebpage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (*)(::Il2CppString*, System::Threading::CancellationToken)>(&MediaAsyncLoader::LoadWebpage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader*), "LoadWebpage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::LoadAudioClipAsync
// Il2CppName: LoadAudioClipAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* (*)(::Il2CppString*, System::Threading::CancellationToken)>(&MediaAsyncLoader::LoadAudioClipAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader*), "LoadAudioClipAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::LoadTextureAsync
// Il2CppName: LoadTextureAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::Texture2D*>* (*)(::Il2CppString*, System::Threading::CancellationToken)>(&MediaAsyncLoader::LoadTextureAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader*), "LoadTextureAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::LoadSpriteAsync
// Il2CppName: LoadSpriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* (*)(::Il2CppString*, System::Threading::CancellationToken)>(&MediaAsyncLoader::LoadSpriteAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader*), "LoadSpriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&MediaAsyncLoader::Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::*)()>(&MediaAsyncLoader::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::*)()>(&MediaAsyncLoader::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
