// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Security.PbeUtilities
#include "Org/BouncyCastle/Security/PbeUtilities.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Org.BouncyCastle.Crypto.PbeParametersGenerator
#include "Org/BouncyCastle/Crypto/PbeParametersGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier
#include "Org/BouncyCastle/Asn1/X509/AlgorithmIdentifier.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary algorithms
System::Collections::IDictionary* Org::BouncyCastle::Security::PbeUtilities::_get_algorithms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::_get_algorithms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Security", "PbeUtilities", "algorithms"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary algorithms
void Org::BouncyCastle::Security::PbeUtilities::_set_algorithms(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::_set_algorithms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Security", "PbeUtilities", "algorithms", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary algorithmType
System::Collections::IDictionary* Org::BouncyCastle::Security::PbeUtilities::_get_algorithmType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::_get_algorithmType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Security", "PbeUtilities", "algorithmType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary algorithmType
void Org::BouncyCastle::Security::PbeUtilities::_set_algorithmType(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::_set_algorithmType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Security", "PbeUtilities", "algorithmType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary oids
System::Collections::IDictionary* Org::BouncyCastle::Security::PbeUtilities::_get_oids() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::_get_oids");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Security", "PbeUtilities", "oids"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary oids
void Org::BouncyCastle::Security::PbeUtilities::_set_oids(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::_set_oids");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Security", "PbeUtilities", "oids", value));
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities..cctor
void Org::BouncyCastle::Security::PbeUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities.MakePbeGenerator
Org::BouncyCastle::Crypto::PbeParametersGenerator* Org::BouncyCastle::Security::PbeUtilities::MakePbeGenerator(::Il2CppString* type, Org::BouncyCastle::Crypto::IDigest* digest, ::Array<uint8_t>* key, ::Array<uint8_t>* salt, int iterationCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::MakePbeGenerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", "MakePbeGenerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(digest), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::PbeParametersGenerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, digest, key, salt, iterationCount);
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities.IsPkcs12
bool Org::BouncyCastle::Security::PbeUtilities::IsPkcs12(::Il2CppString* algorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::IsPkcs12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", "IsPkcs12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algorithm);
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities.IsPkcs5Scheme2
bool Org::BouncyCastle::Security::PbeUtilities::IsPkcs5Scheme2(::Il2CppString* algorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::IsPkcs5Scheme2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", "IsPkcs5Scheme2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algorithm);
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities.GenerateCipherParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Security::PbeUtilities::GenerateCipherParameters(Org::BouncyCastle::Asn1::X509::AlgorithmIdentifier* algID, ::Array<::Il2CppChar>* password, bool wrongPkcs12Zero) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::GenerateCipherParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", "GenerateCipherParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algID), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(wrongPkcs12Zero)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algID, password, wrongPkcs12Zero);
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities.GenerateCipherParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Security::PbeUtilities::GenerateCipherParameters(::Il2CppString* algorithm, ::Array<::Il2CppChar>* password, bool wrongPkcs12Zero, Org::BouncyCastle::Asn1::Asn1Encodable* pbeParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::GenerateCipherParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", "GenerateCipherParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(wrongPkcs12Zero), ::il2cpp_utils::ExtractType(pbeParameters)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algorithm, password, wrongPkcs12Zero, pbeParameters);
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities.CreateEngine
::Il2CppObject* Org::BouncyCastle::Security::PbeUtilities::CreateEngine(Org::BouncyCastle::Asn1::X509::AlgorithmIdentifier* algID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::CreateEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", "CreateEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algID);
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities.CreateEngine
::Il2CppObject* Org::BouncyCastle::Security::PbeUtilities::CreateEngine(::Il2CppString* algorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::CreateEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", "CreateEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algorithm);
}
// Autogenerated method: Org.BouncyCastle.Security.PbeUtilities.FixDesParity
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Security::PbeUtilities::FixDesParity(::Il2CppString* mechanism, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PbeUtilities::FixDesParity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PbeUtilities", "FixDesParity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mechanism), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mechanism, parameters);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Security.PrivateKeyFactory
#include "Org/BouncyCastle/Security/PrivateKeyFactory.hpp"
// Including type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
#include "Org/BouncyCastle/Crypto/AsymmetricKeyParameter.hpp"
// Including type: Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo
#include "Org/BouncyCastle/Asn1/Pkcs/PrivateKeyInfo.hpp"
// Including type: Org.BouncyCastle.Asn1.Pkcs.EncryptedPrivateKeyInfo
#include "Org/BouncyCastle/Asn1/Pkcs/EncryptedPrivateKeyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Security.PrivateKeyFactory.CreateKey
Org::BouncyCastle::Crypto::AsymmetricKeyParameter* Org::BouncyCastle::Security::PrivateKeyFactory::CreateKey(Org::BouncyCastle::Asn1::Pkcs::PrivateKeyInfo* keyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PrivateKeyFactory::CreateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PrivateKeyFactory", "CreateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::AsymmetricKeyParameter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyInfo);
}
// Autogenerated method: Org.BouncyCastle.Security.PrivateKeyFactory.GetRawKey
::Array<uint8_t>* Org::BouncyCastle::Security::PrivateKeyFactory::GetRawKey(Org::BouncyCastle::Asn1::Pkcs::PrivateKeyInfo* keyInfo, int expectedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PrivateKeyFactory::GetRawKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PrivateKeyFactory", "GetRawKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyInfo), ::il2cpp_utils::ExtractType(expectedSize)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyInfo, expectedSize);
}
// Autogenerated method: Org.BouncyCastle.Security.PrivateKeyFactory.DecryptKey
Org::BouncyCastle::Crypto::AsymmetricKeyParameter* Org::BouncyCastle::Security::PrivateKeyFactory::DecryptKey(::Array<::Il2CppChar>* passPhrase, Org::BouncyCastle::Asn1::Pkcs::EncryptedPrivateKeyInfo* encInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PrivateKeyFactory::DecryptKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PrivateKeyFactory", "DecryptKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passPhrase), ::il2cpp_utils::ExtractType(encInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::AsymmetricKeyParameter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, passPhrase, encInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Security.PublicKeyFactory
#include "Org/BouncyCastle/Security/PublicKeyFactory.hpp"
// Including type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
#include "Org/BouncyCastle/Crypto/AsymmetricKeyParameter.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo
#include "Org/BouncyCastle/Asn1/X509/SubjectPublicKeyInfo.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Sequence
#include "Org/BouncyCastle/Asn1/Asn1Sequence.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.DHPublicKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/DHPublicKeyParameters.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey
Org::BouncyCastle::Crypto::AsymmetricKeyParameter* Org::BouncyCastle::Security::PublicKeyFactory::CreateKey(::Array<uint8_t>* keyInfoData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PublicKeyFactory::CreateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PublicKeyFactory", "CreateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyInfoData)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::AsymmetricKeyParameter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyInfoData);
}
// Autogenerated method: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey
Org::BouncyCastle::Crypto::AsymmetricKeyParameter* Org::BouncyCastle::Security::PublicKeyFactory::CreateKey(Org::BouncyCastle::Asn1::X509::SubjectPublicKeyInfo* keyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PublicKeyFactory::CreateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PublicKeyFactory", "CreateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::AsymmetricKeyParameter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyInfo);
}
// Autogenerated method: Org.BouncyCastle.Security.PublicKeyFactory.GetRawKey
::Array<uint8_t>* Org::BouncyCastle::Security::PublicKeyFactory::GetRawKey(Org::BouncyCastle::Asn1::X509::SubjectPublicKeyInfo* keyInfo, int expectedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PublicKeyFactory::GetRawKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PublicKeyFactory", "GetRawKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyInfo), ::il2cpp_utils::ExtractType(expectedSize)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyInfo, expectedSize);
}
// Autogenerated method: Org.BouncyCastle.Security.PublicKeyFactory.IsPkcsDHParam
bool Org::BouncyCastle::Security::PublicKeyFactory::IsPkcsDHParam(Org::BouncyCastle::Asn1::Asn1Sequence* seq) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PublicKeyFactory::IsPkcsDHParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PublicKeyFactory", "IsPkcsDHParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seq)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, seq);
}
// Autogenerated method: Org.BouncyCastle.Security.PublicKeyFactory.ReadPkcsDHParam
Org::BouncyCastle::Crypto::Parameters::DHPublicKeyParameters* Org::BouncyCastle::Security::PublicKeyFactory::ReadPkcsDHParam(Org::BouncyCastle::Asn1::DerObjectIdentifier* algOid, Org::BouncyCastle::Math::BigInteger* y, Org::BouncyCastle::Asn1::Asn1Sequence* seq) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::PublicKeyFactory::ReadPkcsDHParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "PublicKeyFactory", "ReadPkcsDHParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algOid), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(seq)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::Parameters::DHPublicKeyParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algOid, y, seq);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Security.SecurityUtilityException
#include "Org/BouncyCastle/Security/SecurityUtilityException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Security.SignatureException
#include "Org/BouncyCastle/Security/SignatureException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Security.SignerUtilities
#include "Org/BouncyCastle/Security/SignerUtilities.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Org.BouncyCastle.Crypto.ISigner
#include "Org/BouncyCastle/Crypto/ISigner.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.IDictionary algorithms
System::Collections::IDictionary* Org::BouncyCastle::Security::SignerUtilities::_get_algorithms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::SignerUtilities::_get_algorithms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Security", "SignerUtilities", "algorithms"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.IDictionary algorithms
void Org::BouncyCastle::Security::SignerUtilities::_set_algorithms(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::SignerUtilities::_set_algorithms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Security", "SignerUtilities", "algorithms", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.IDictionary oids
System::Collections::IDictionary* Org::BouncyCastle::Security::SignerUtilities::_get_oids() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::SignerUtilities::_get_oids");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Security", "SignerUtilities", "oids"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.IDictionary oids
void Org::BouncyCastle::Security::SignerUtilities::_set_oids(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::SignerUtilities::_set_oids");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Security", "SignerUtilities", "oids", value));
}
// Autogenerated method: Org.BouncyCastle.Security.SignerUtilities..cctor
void Org::BouncyCastle::Security::SignerUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::SignerUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "SignerUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Security.SignerUtilities.GetSigner
Org::BouncyCastle::Crypto::ISigner* Org::BouncyCastle::Security::SignerUtilities::GetSigner(::Il2CppString* algorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::SignerUtilities::GetSigner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "SignerUtilities", "GetSigner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ISigner*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algorithm);
}
// Autogenerated method: Org.BouncyCastle.Security.SignerUtilities.GetEncodingName
::Il2CppString* Org::BouncyCastle::Security::SignerUtilities::GetEncodingName(Org::BouncyCastle::Asn1::DerObjectIdentifier* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Security::SignerUtilities::GetEncodingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Security", "SignerUtilities", "GetEncodingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oid);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
#include "Org/BouncyCastle/Utilities/Collections/CollectionUtilities.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly
System::Collections::IDictionary* Org::BouncyCastle::Utilities::Collections::CollectionUtilities::ReadOnly(System::Collections::IDictionary* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::CollectionUtilities::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Collections", "CollectionUtilities", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.RequireNext
::Il2CppObject* Org::BouncyCastle::Utilities::Collections::CollectionUtilities::RequireNext(System::Collections::IEnumerator* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::CollectionUtilities::RequireNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Collections", "CollectionUtilities", "RequireNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString
::Il2CppString* Org::BouncyCastle::Utilities::Collections::CollectionUtilities::ToString(System::Collections::IEnumerable* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::CollectionUtilities::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Collections", "CollectionUtilities", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Utilities.Collections.EmptyEnumerable
#include "Org/BouncyCastle/Utilities/Collections/EmptyEnumerable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.IEnumerable Instance
System::Collections::IEnumerable* Org::BouncyCastle::Utilities::Collections::EmptyEnumerable::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerable::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IEnumerable*>("Org.BouncyCastle.Utilities.Collections", "EmptyEnumerable", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.IEnumerable Instance
void Org::BouncyCastle::Utilities::Collections::EmptyEnumerable::_set_Instance(System::Collections::IEnumerable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerable::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities.Collections", "EmptyEnumerable", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.EmptyEnumerable..cctor
void Org::BouncyCastle::Utilities::Collections::EmptyEnumerable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Collections", "EmptyEnumerable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.EmptyEnumerable.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Utilities::Collections::EmptyEnumerable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator
#include "Org/BouncyCastle/Utilities/Collections/EmptyEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.IEnumerator Instance
System::Collections::IEnumerator* Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IEnumerator*>("Org.BouncyCastle.Utilities.Collections", "EmptyEnumerator", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.IEnumerator Instance
void Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::_set_Instance(System::Collections::IEnumerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities.Collections", "EmptyEnumerator", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.get_Current
::Il2CppObject* Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator..cctor
void Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Collections", "EmptyEnumerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext
bool Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset
void Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EmptyEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Utilities.Collections.EnumerableProxy
#include "Org/BouncyCastle/Utilities/Collections/EnumerableProxy.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.IEnumerable inner
System::Collections::IEnumerable*& Org::BouncyCastle::Utilities::Collections::EnumerableProxy::dyn_inner() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EnumerableProxy::dyn_inner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inner"))->offset;
  return *reinterpret_cast<System::Collections::IEnumerable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.EnumerableProxy.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Utilities::Collections::EnumerableProxy::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::EnumerableProxy::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Collections.ISet
#include "Org/BouncyCastle/Utilities/Collections/ISet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.ISet.Add
void Org::BouncyCastle::Utilities::Collections::ISet::Add(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::ISet::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Collections.HashSet
#include "Org/BouncyCastle/Utilities/Collections/HashSet.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.IDictionary impl
System::Collections::IDictionary*& Org::BouncyCastle::Utilities::Collections::HashSet::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::HashSet::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<System::Collections::IDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.HashSet.get_Count
int Org::BouncyCastle::Utilities::Collections::HashSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::HashSet::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.HashSet.Add
void Org::BouncyCastle::Utilities::Collections::HashSet::Add(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::HashSet::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, o);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo
void Org::BouncyCastle::Utilities::Collections::HashSet::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::HashSet::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, array, index);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Utilities::Collections::HashSet::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::HashSet::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary
#include "Org/BouncyCastle/Utilities/Collections/UnmodifiableDictionary.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.get_Count
int Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.get_Keys
System::Collections::ICollection* Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.get_Item
::Il2CppObject* Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::get_Item(::Il2CppObject* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, k);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.set_Item
void Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::set_Item(::Il2CppObject* k, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, k, value);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.Add
void Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::Add(::Il2CppObject* k, ::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k), ::il2cpp_utils::ExtractType(v)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, k, v);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.Contains
bool Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::Contains(::Il2CppObject* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, k);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.CopyTo
void Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, array, index);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.GetEnumerator
System::Collections::IDictionaryEnumerator* Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary.GetValue
::Il2CppObject* Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::GetValue(::Il2CppObject* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionary::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy
#include "Org/BouncyCastle/Utilities/Collections/UnmodifiableDictionaryProxy.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.IDictionary d
System::Collections::IDictionary*& Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<System::Collections::IDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy.get_Count
int Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy.get_Keys
System::Collections::ICollection* Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy.Contains
bool Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::Contains(::Il2CppObject* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, k);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy.CopyTo
void Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, array, index);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy.GetEnumerator
System::Collections::IDictionaryEnumerator* Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy.GetValue
::Il2CppObject* Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::GetValue(::Il2CppObject* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Collections::UnmodifiableDictionaryProxy::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Date.DateTimeObject
#include "Org/BouncyCastle/Utilities/Date/DateTimeObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.DateTime dt
System::DateTime& Org::BouncyCastle::Utilities::Date::DateTimeObject::dyn_dt() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Date::DateTimeObject::dyn_dt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dt"))->offset;
  return *reinterpret_cast<System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Date.DateTimeObject.ToString
::Il2CppString* Org::BouncyCastle::Utilities::Date::DateTimeObject::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Date::DateTimeObject::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Utilities.Date.DateTimeUtilities
#include "Org/BouncyCastle/Utilities/Date/DateTimeUtilities.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.DateTime UnixEpoch
System::DateTime Org::BouncyCastle::Utilities::Date::DateTimeUtilities::_get_UnixEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Date::DateTimeUtilities::_get_UnixEpoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("Org.BouncyCastle.Utilities.Date", "DateTimeUtilities", "UnixEpoch"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTime UnixEpoch
void Org::BouncyCastle::Utilities::Date::DateTimeUtilities::_set_UnixEpoch(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Date::DateTimeUtilities::_set_UnixEpoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities.Date", "DateTimeUtilities", "UnixEpoch", value));
}
// Autogenerated method: Org.BouncyCastle.Utilities.Date.DateTimeUtilities..cctor
void Org::BouncyCastle::Utilities::Date::DateTimeUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Date::DateTimeUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Date", "DateTimeUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Date.DateTimeUtilities.DateTimeToUnixMs
int64_t Org::BouncyCastle::Utilities::Date::DateTimeUtilities::DateTimeToUnixMs(System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Date::DateTimeUtilities::DateTimeToUnixMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Date", "DateTimeUtilities", "DateTimeToUnixMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Date.DateTimeUtilities.CurrentUnixMs
int64_t Org::BouncyCastle::Utilities::Date::DateTimeUtilities::CurrentUnixMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Date::DateTimeUtilities::CurrentUnixMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Date", "DateTimeUtilities", "CurrentUnixMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Encoders.Base64
#include "Org/BouncyCastle/Utilities/Encoders/Base64.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.Base64.Decode
::Array<uint8_t>* Org::BouncyCastle::Utilities::Encoders::Base64::Decode(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Base64::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Encoders", "Base64", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Encoders.Hex
#include "Org/BouncyCastle/Utilities/Encoders/Hex.hpp"
// Including type: Org.BouncyCastle.Utilities.Encoders.HexEncoder
#include "Org/BouncyCastle/Utilities/Encoders/HexEncoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Org.BouncyCastle.Utilities.Encoders.HexEncoder encoder
Org::BouncyCastle::Utilities::Encoders::HexEncoder* Org::BouncyCastle::Utilities::Encoders::Hex::_get_encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Hex::_get_encoder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Utilities::Encoders::HexEncoder*>("Org.BouncyCastle.Utilities.Encoders", "Hex", "encoder"));
}
// Autogenerated static field setter
// Set static field: static private readonly Org.BouncyCastle.Utilities.Encoders.HexEncoder encoder
void Org::BouncyCastle::Utilities::Encoders::Hex::_set_encoder(Org::BouncyCastle::Utilities::Encoders::HexEncoder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Hex::_set_encoder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities.Encoders", "Hex", "encoder", value));
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.Hex..cctor
void Org::BouncyCastle::Utilities::Encoders::Hex::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Hex::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Encoders", "Hex", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.Hex.ToHexString
::Il2CppString* Org::BouncyCastle::Utilities::Encoders::Hex::ToHexString(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Hex::ToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Encoders", "Hex", "ToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.Hex.ToHexString
::Il2CppString* Org::BouncyCastle::Utilities::Encoders::Hex::ToHexString(::Array<uint8_t>* data, int off, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Hex::ToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Encoders", "Hex", "ToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, off, length);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.Hex.Encode
::Array<uint8_t>* Org::BouncyCastle::Utilities::Encoders::Hex::Encode(::Array<uint8_t>* data, int off, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Hex::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Encoders", "Hex", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, off, length);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.Hex.Decode
::Array<uint8_t>* Org::BouncyCastle::Utilities::Encoders::Hex::Decode(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Hex::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Encoders", "Hex", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.Hex.DecodeStrict
::Array<uint8_t>* Org::BouncyCastle::Utilities::Encoders::Hex::DecodeStrict(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::Hex::DecodeStrict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Encoders", "Hex", "DecodeStrict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Encoders.HexEncoder
#include "Org/BouncyCastle/Utilities/Encoders/HexEncoder.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly System.Byte[] encodingTable
::Array<uint8_t>*& Org::BouncyCastle::Utilities::Encoders::HexEncoder::dyn_encodingTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::HexEncoder::dyn_encodingTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encodingTable"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Byte[] decodingTable
::Array<uint8_t>*& Org::BouncyCastle::Utilities::Encoders::HexEncoder::dyn_decodingTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::HexEncoder::dyn_decodingTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decodingTable"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable
void Org::BouncyCastle::Utilities::Encoders::HexEncoder::InitialiseDecodingTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::HexEncoder::InitialiseDecodingTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitialiseDecodingTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode
int Org::BouncyCastle::Utilities::Encoders::HexEncoder::Encode(::Array<uint8_t>* inBuf, int inOff, int inLen, ::Array<uint8_t>* outBuf, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::HexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBuf), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen), ::il2cpp_utils::ExtractType(outBuf), ::il2cpp_utils::ExtractType(outOff)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, inBuf, inOff, inLen, outBuf, outOff);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode
int Org::BouncyCastle::Utilities::Encoders::HexEncoder::Encode(::Array<uint8_t>* buf, int off, int len, System::IO::Stream* outStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::HexEncoder::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(outStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, buf, off, len, outStream);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Ignore
bool Org::BouncyCastle::Utilities::Encoders::HexEncoder::Ignore(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::HexEncoder::Ignore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.Encoders", "HexEncoder", "Ignore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString
int Org::BouncyCastle::Utilities::Encoders::HexEncoder::DecodeString(::Il2CppString* data, System::IO::Stream* outStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::HexEncoder::DecodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(outStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, data, outStream);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeStrict
::Array<uint8_t>* Org::BouncyCastle::Utilities::Encoders::HexEncoder::DecodeStrict(::Il2CppString* str, int off, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Encoders::HexEncoder::DecodeStrict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeStrict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(len)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method, str, off, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.IO.Pem.PemHeader
#include "Org/BouncyCastle/Utilities/IO/Pem/PemHeader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
::Il2CppString*& Org::BouncyCastle::Utilities::IO::Pem::PemHeader::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemHeader::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String val
::Il2CppString*& Org::BouncyCastle::Utilities::IO::Pem::PemHeader::dyn_val() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemHeader::dyn_val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "val"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Pem.PemHeader.get_Name
::Il2CppString* Org::BouncyCastle::Utilities::IO::Pem::PemHeader::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemHeader::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Pem.PemHeader.get_Value
::Il2CppString* Org::BouncyCastle::Utilities::IO::Pem::PemHeader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemHeader::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Pem.PemHeader.GetHashCode
int Org::BouncyCastle::Utilities::IO::Pem::PemHeader::GetHashCode(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemHeader::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Pem.PemHeader.GetHashCode
int Org::BouncyCastle::Utilities::IO::Pem::PemHeader::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemHeader::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Pem.PemHeader.Equals
bool Org::BouncyCastle::Utilities::IO::Pem::PemHeader::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemHeader::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.IO.Pem.PemObject
#include "Org/BouncyCastle/Utilities/IO/Pem/PemObject.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String type
::Il2CppString*& Org::BouncyCastle::Utilities::IO::Pem::PemObject::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemObject::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IList headers
System::Collections::IList*& Org::BouncyCastle::Utilities::IO::Pem::PemObject::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemObject::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<System::Collections::IList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] content
::Array<uint8_t>*& Org::BouncyCastle::Utilities::IO::Pem::PemObject::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemObject::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Pem.PemObject.get_Type
::Il2CppString* Org::BouncyCastle::Utilities::IO::Pem::PemObject::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemObject::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Pem.PemObject.get_Headers
System::Collections::IList* Org::BouncyCastle::Utilities::IO::Pem::PemObject::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemObject::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Pem.PemObject.get_Content
::Array<uint8_t>* Org::BouncyCastle::Utilities::IO::Pem::PemObject::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemObject::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.IO.PushbackStream
#include "Org/BouncyCastle/Utilities/IO/PushbackStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf
int& Org::BouncyCastle::Utilities::IO::PushbackStream::dyn_buf() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::PushbackStream::dyn_buf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.PushbackStream.Unread
void Org::BouncyCastle::Utilities::IO::PushbackStream::Unread(int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::PushbackStream::Unread");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.PushbackStream.ReadByte
int Org::BouncyCastle::Utilities::IO::PushbackStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::PushbackStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.PushbackStream.Read
int Org::BouncyCastle::Utilities::IO::PushbackStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::PushbackStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.IO.Streams
#include "Org/BouncyCastle/Utilities/IO/Streams.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Streams.ReadAll
::Array<uint8_t>* Org::BouncyCastle::Utilities::IO::Streams::ReadAll(System::IO::Stream* inStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Streams::ReadAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.IO", "Streams", "ReadAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStr)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inStr);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Streams.ReadFully
int Org::BouncyCastle::Utilities::IO::Streams::ReadFully(System::IO::Stream* inStr, ::Array<uint8_t>* buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Streams::ReadFully");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.IO", "Streams", "ReadFully", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStr), ::il2cpp_utils::ExtractType(buf)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inStr, buf);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Streams.ReadFully
int Org::BouncyCastle::Utilities::IO::Streams::ReadFully(System::IO::Stream* inStr, ::Array<uint8_t>* buf, int off, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Streams::ReadFully");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.IO", "Streams", "ReadFully", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStr), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inStr, buf, off, len);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Streams.PipeAll
void Org::BouncyCastle::Utilities::IO::Streams::PipeAll(System::IO::Stream* inStr, System::IO::Stream* outStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Streams::PipeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.IO", "Streams", "PipeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStr), ::il2cpp_utils::ExtractType(outStr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inStr, outStr);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.Streams.WriteBufTo
int Org::BouncyCastle::Utilities::IO::Streams::WriteBufTo(System::IO::MemoryStream* buf, ::Array<uint8_t>* output, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Streams::WriteBufTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities.IO", "Streams", "WriteBufTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buf, output, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Arrays
#include "Org/BouncyCastle/Utilities/Arrays.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] EmptyBytes
::Array<uint8_t>* Org::BouncyCastle::Utilities::Arrays::_get_EmptyBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::_get_EmptyBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Utilities", "Arrays", "EmptyBytes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] EmptyBytes
void Org::BouncyCastle::Utilities::Arrays::_set_EmptyBytes(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::_set_EmptyBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities", "Arrays", "EmptyBytes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[] EmptyInts
::Array<int>* Org::BouncyCastle::Utilities::Arrays::_get_EmptyInts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::_get_EmptyInts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("Org.BouncyCastle.Utilities", "Arrays", "EmptyInts"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[] EmptyInts
void Org::BouncyCastle::Utilities::Arrays::_set_EmptyInts(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::_set_EmptyInts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities", "Arrays", "EmptyInts", value));
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays..cctor
void Org::BouncyCastle::Utilities::Arrays::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.AreEqual
bool Org::BouncyCastle::Utilities::Arrays::AreEqual(::Array<uint8_t>* a, ::Array<uint8_t>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual
bool Org::BouncyCastle::Utilities::Arrays::ConstantTimeAreEqual(::Array<uint8_t>* a, ::Array<uint8_t>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::ConstantTimeAreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "ConstantTimeAreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual
bool Org::BouncyCastle::Utilities::Arrays::ConstantTimeAreEqual(int len, ::Array<uint8_t>* a, int aOff, ::Array<uint8_t>* b, int bOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::ConstantTimeAreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "ConstantTimeAreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(aOff), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(bOff)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, len, a, aOff, b, bOff);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.AreEqual
bool Org::BouncyCastle::Utilities::Arrays::AreEqual(::Array<int>* a, ::Array<int>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.AreEqual
bool Org::BouncyCastle::Utilities::Arrays::AreEqual(::Array<uint>* a, ::Array<uint>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.HaveSameContents
bool Org::BouncyCastle::Utilities::Arrays::HaveSameContents(::Array<uint8_t>* a, ::Array<uint8_t>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::HaveSameContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "HaveSameContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.HaveSameContents
bool Org::BouncyCastle::Utilities::Arrays::HaveSameContents(::Array<int>* a, ::Array<int>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::HaveSameContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "HaveSameContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.HaveSameContents
bool Org::BouncyCastle::Utilities::Arrays::HaveSameContents(::Array<uint>* a, ::Array<uint>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::HaveSameContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "HaveSameContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.GetHashCode
int Org::BouncyCastle::Utilities::Arrays::GetHashCode(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.GetHashCode
int Org::BouncyCastle::Utilities::Arrays::GetHashCode(::Array<int>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.GetHashCode
int Org::BouncyCastle::Utilities::Arrays::GetHashCode(::Array<uint>* data, int off, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, off, len);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.GetHashCode
int Org::BouncyCastle::Utilities::Arrays::GetHashCode(::Array<uint64_t>* data, int off, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, off, len);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Clone
::Array<uint8_t>* Org::BouncyCastle::Utilities::Arrays::Clone(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Clone
::Array<int>* Org::BouncyCastle::Utilities::Arrays::Clone(::Array<int>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Clone
::Array<uint>* Org::BouncyCastle::Utilities::Arrays::Clone(::Array<uint>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Clone
::Array<int64_t>* Org::BouncyCastle::Utilities::Arrays::Clone(::Array<int64_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int64_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Clone
::Array<uint64_t>* Org::BouncyCastle::Utilities::Arrays::Clone(::Array<uint64_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint64_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Contains
bool Org::BouncyCastle::Utilities::Arrays::Contains(::Array<uint8_t>* a, uint8_t n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, n);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Fill
void Org::BouncyCastle::Utilities::Arrays::Fill(::Array<uint8_t>* buf, uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Fill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Fill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buf, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Fill
void Org::BouncyCastle::Utilities::Arrays::Fill(::Array<uint8_t>* buf, int from, int to, uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Fill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Fill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buf, from, to, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.CopyOfRange
::Array<uint8_t>* Org::BouncyCastle::Utilities::Arrays::CopyOfRange(::Array<uint8_t>* data, int from, int to) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::CopyOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "CopyOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, from, to);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.GetLength
int Org::BouncyCastle::Utilities::Arrays::GetLength(int from, int to) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Prepend
::Array<uint8_t>* Org::BouncyCastle::Utilities::Arrays::Prepend(::Array<uint8_t>* a, uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Prepend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Prepend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.Reverse
::Array<uint8_t>* Org::BouncyCastle::Utilities::Arrays::Reverse(::Array<uint8_t>* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::Reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Arrays.IsNullOrContainsNull
bool Org::BouncyCastle::Utilities::Arrays::IsNullOrContainsNull(::Array<::Il2CppObject*>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Arrays::IsNullOrContainsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Arrays", "IsNullOrContainsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.BigIntegers
#include "Org/BouncyCastle/Utilities/BigIntegers.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.BigIntegers.AsUnsignedByteArray
::Array<uint8_t>* Org::BouncyCastle::Utilities::BigIntegers::AsUnsignedByteArray(Org::BouncyCastle::Math::BigInteger* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::BigIntegers::AsUnsignedByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "BigIntegers", "AsUnsignedByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n);
}
// Autogenerated method: Org.BouncyCastle.Utilities.BigIntegers.AsUnsignedByteArray
::Array<uint8_t>* Org::BouncyCastle::Utilities::BigIntegers::AsUnsignedByteArray(int length, Org::BouncyCastle::Math::BigInteger* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::BigIntegers::AsUnsignedByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "BigIntegers", "AsUnsignedByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, length, n);
}
// Autogenerated method: Org.BouncyCastle.Utilities.BigIntegers.CreateRandomBigInteger
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Utilities::BigIntegers::CreateRandomBigInteger(int bitLength, Org::BouncyCastle::Security::SecureRandom* secureRandom) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::BigIntegers::CreateRandomBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "BigIntegers", "CreateRandomBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength), ::il2cpp_utils::ExtractType(secureRandom)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bitLength, secureRandom);
}
// Autogenerated method: Org.BouncyCastle.Utilities.BigIntegers.CreateRandomInRange
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Utilities::BigIntegers::CreateRandomInRange(Org::BouncyCastle::Math::BigInteger* min, Org::BouncyCastle::Math::BigInteger* max, Org::BouncyCastle::Security::SecureRandom* random) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::BigIntegers::CreateRandomInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "BigIntegers", "CreateRandomInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(random)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, min, max, random);
}
// Autogenerated method: Org.BouncyCastle.Utilities.BigIntegers.GetUnsignedByteLength
int Org::BouncyCastle::Utilities::BigIntegers::GetUnsignedByteLength(Org::BouncyCastle::Math::BigInteger* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::BigIntegers::GetUnsignedByteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "BigIntegers", "GetUnsignedByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Enums
#include "Org/BouncyCastle/Utilities/Enums.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.Enums.GetEnumValue
System::Enum* Org::BouncyCastle::Utilities::Enums::GetEnumValue(System::Type* enumType, ::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Enums::GetEnumValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Enums", "GetEnumValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<System::Enum*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, s);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Enums.GetEnumValues
System::Array* Org::BouncyCastle::Utilities::Enums::GetEnumValues(System::Type* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Enums::GetEnumValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Enums", "GetEnumValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Enums.GetArbitraryValue
System::Enum* Org::BouncyCastle::Utilities::Enums::GetArbitraryValue(System::Type* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Enums::GetArbitraryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Enums", "GetArbitraryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Enum*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Enums.IsEnumType
bool Org::BouncyCastle::Utilities::Enums::IsEnumType(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Enums::IsEnumType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Enums", "IsEnumType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Utilities.Integers
#include "Org/BouncyCastle/Utilities/Integers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.Integers.NumberOfLeadingZeros
int Org::BouncyCastle::Utilities::Integers::NumberOfLeadingZeros(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Integers::NumberOfLeadingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Integers", "NumberOfLeadingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Integers.NumberOfTrailingZeros
int Org::BouncyCastle::Utilities::Integers::NumberOfTrailingZeros(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Integers::NumberOfTrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Integers", "NumberOfTrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Integers.RotateLeft
int Org::BouncyCastle::Utilities::Integers::RotateLeft(int i, int distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Integers::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Integers", "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i, distance);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Integers.RotateLeft
uint Org::BouncyCastle::Utilities::Integers::RotateLeft(uint i, int distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Integers::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Integers", "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i, distance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.MemoableResetException
#include "Org/BouncyCastle/Utilities/MemoableResetException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Platform
#include "Org/BouncyCastle/Utilities/Platform.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.CompareInfo InvariantCompareInfo
System::Globalization::CompareInfo* Org::BouncyCastle::Utilities::Platform::_get_InvariantCompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::_get_InvariantCompareInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareInfo*>("Org.BouncyCastle.Utilities", "Platform", "InvariantCompareInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.CompareInfo InvariantCompareInfo
void Org::BouncyCastle::Utilities::Platform::_set_InvariantCompareInfo(System::Globalization::CompareInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::_set_InvariantCompareInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities", "Platform", "InvariantCompareInfo", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NewLine
::Il2CppString* Org::BouncyCastle::Utilities::Platform::_get_NewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::_get_NewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Utilities", "Platform", "NewLine"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NewLine
void Org::BouncyCastle::Utilities::Platform::_set_NewLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::_set_NewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities", "Platform", "NewLine", value));
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform..cctor
void Org::BouncyCastle::Utilities::Platform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.GetNewLine
::Il2CppString* Org::BouncyCastle::Utilities::Platform::GetNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::GetNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "GetNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.EqualsIgnoreCase
bool Org::BouncyCastle::Utilities::Platform::EqualsIgnoreCase(::Il2CppString* a, ::Il2CppString* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::EqualsIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "EqualsIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.GetEnvironmentVariable
::Il2CppString* Org::BouncyCastle::Utilities::Platform::GetEnvironmentVariable(::Il2CppString* variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::GetEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "GetEnvironmentVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, variable);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.CreateNotImplementedException
System::Exception* Org::BouncyCastle::Utilities::Platform::CreateNotImplementedException(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::CreateNotImplementedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "CreateNotImplementedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.CreateArrayList
System::Collections::IList* Org::BouncyCastle::Utilities::Platform::CreateArrayList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::CreateArrayList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "CreateArrayList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.CreateArrayList
System::Collections::IList* Org::BouncyCastle::Utilities::Platform::CreateArrayList(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::CreateArrayList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "CreateArrayList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.CreateArrayList
System::Collections::IList* Org::BouncyCastle::Utilities::Platform::CreateArrayList(System::Collections::ICollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::CreateArrayList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "CreateArrayList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, collection);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.CreateHashtable
System::Collections::IDictionary* Org::BouncyCastle::Utilities::Platform::CreateHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::CreateHashtable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "CreateHashtable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.CreateHashtable
System::Collections::IDictionary* Org::BouncyCastle::Utilities::Platform::CreateHashtable(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::CreateHashtable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "CreateHashtable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.ToUpperInvariant
::Il2CppString* Org::BouncyCastle::Utilities::Platform::ToUpperInvariant(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::ToUpperInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "ToUpperInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.Dispose
void Org::BouncyCastle::Utilities::Platform::Dispose(System::IO::Stream* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.IndexOf
int Org::BouncyCastle::Utilities::Platform::IndexOf(::Il2CppString* source, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, value);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.StartsWith
bool Org::BouncyCastle::Utilities::Platform::StartsWith(::Il2CppString* source, ::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, prefix);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.EndsWith
bool Org::BouncyCastle::Utilities::Platform::EndsWith(::Il2CppString* source, ::Il2CppString* suffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(suffix)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, suffix);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Platform.GetTypeName
::Il2CppString* Org::BouncyCastle::Utilities::Platform::GetTypeName(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Platform::GetTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Platform", "GetTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.Strings
#include "Org/BouncyCastle/Utilities/Strings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.Strings.IsOneOf
bool Org::BouncyCastle::Utilities::Strings::IsOneOf(::Il2CppString* s, ::Array<::Il2CppString*>* candidates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Strings::IsOneOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Strings", "IsOneOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(candidates)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, candidates);
}
// Creating initializer_list -> params proxy for: System.Boolean IsOneOf(System.String s, params System.String[] candidates)
bool Org::BouncyCastle::Utilities::Strings::IsOneOf(::Il2CppString* s, std::initializer_list<::Il2CppString*> candidates) {
  return Org::BouncyCastle::Utilities::Strings::IsOneOf(s, ::Array<::Il2CppString*>::New(candidates));
}
// Autogenerated method: Org.BouncyCastle.Utilities.Strings.FromByteArray
::Il2CppString* Org::BouncyCastle::Utilities::Strings::FromByteArray(::Array<uint8_t>* bs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Strings::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Strings", "FromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Strings.ToByteArray
::Array<uint8_t>* Org::BouncyCastle::Utilities::Strings::ToByteArray(::Array<::Il2CppChar>* cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Strings::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Strings", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cs);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Strings.ToByteArray
::Array<uint8_t>* Org::BouncyCastle::Utilities::Strings::ToByteArray(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Strings::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Strings", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Strings.FromAsciiByteArray
::Il2CppString* Org::BouncyCastle::Utilities::Strings::FromAsciiByteArray(::Array<uint8_t>* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Strings::FromAsciiByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Strings", "FromAsciiByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Strings.ToAsciiByteArray
::Array<uint8_t>* Org::BouncyCastle::Utilities::Strings::ToAsciiByteArray(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Strings::ToAsciiByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Strings", "ToAsciiByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Utilities.Times
#include "Org/BouncyCastle/Utilities/Times.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 NanosecondsPerTick
int64_t Org::BouncyCastle::Utilities::Times::_get_NanosecondsPerTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Times::_get_NanosecondsPerTick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Org.BouncyCastle.Utilities", "Times", "NanosecondsPerTick"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 NanosecondsPerTick
void Org::BouncyCastle::Utilities::Times::_set_NanosecondsPerTick(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Times::_set_NanosecondsPerTick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Utilities", "Times", "NanosecondsPerTick", value));
}
// Autogenerated method: Org.BouncyCastle.Utilities.Times..cctor
void Org::BouncyCastle::Utilities::Times::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Times::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Times", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.Times.NanoTime
int64_t Org::BouncyCastle::Utilities::Times::NanoTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::Times::NanoTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Utilities", "Times", "NanoTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.X509.Extension.X509ExtensionUtilities
#include "Org/BouncyCastle/X509/Extension/X509ExtensionUtilities.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1OctetString
#include "Org/BouncyCastle/Asn1/Asn1OctetString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.X509.Extension.X509ExtensionUtilities.FromExtensionValue
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::X509::Extension::X509ExtensionUtilities::FromExtensionValue(Org::BouncyCastle::Asn1::Asn1OctetString* extensionValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::Extension::X509ExtensionUtilities::FromExtensionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.X509.Extension", "X509ExtensionUtilities", "FromExtensionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extensionValue)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, extensionValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.X509.PemParser
#include "Org/BouncyCastle/X509/PemParser.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Sequence
#include "Org/BouncyCastle/Asn1/Asn1Sequence.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _header1
::Il2CppString*& Org::BouncyCastle::X509::PemParser::dyn__header1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::PemParser::dyn__header1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_header1"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _header2
::Il2CppString*& Org::BouncyCastle::X509::PemParser::dyn__header2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::PemParser::dyn__header2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_header2"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _footer1
::Il2CppString*& Org::BouncyCastle::X509::PemParser::dyn__footer1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::PemParser::dyn__footer1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_footer1"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _footer2
::Il2CppString*& Org::BouncyCastle::X509::PemParser::dyn__footer2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::PemParser::dyn__footer2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_footer2"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.X509.PemParser.ReadLine
::Il2CppString* Org::BouncyCastle::X509::PemParser::ReadLine(System::IO::Stream* inStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::PemParser::ReadLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, inStream);
}
// Autogenerated method: Org.BouncyCastle.X509.PemParser.ReadPemObject
Org::BouncyCastle::Asn1::Asn1Sequence* Org::BouncyCastle::X509::PemParser::ReadPemObject(System::IO::Stream* inStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::PemParser::ReadPemObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPemObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Sequence*, false>(___instance_arg, ___internal__method, inStream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.X509.X509Certificate
#include "Org/BouncyCastle/X509/X509Certificate.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509CertificateStructure
#include "Org/BouncyCastle/Asn1/X509/X509CertificateStructure.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.BasicConstraints
#include "Org/BouncyCastle/Asn1/X509/BasicConstraints.hpp"
// Including type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
#include "Org/BouncyCastle/Crypto/AsymmetricKeyParameter.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509Name
#include "Org/BouncyCastle/Asn1/X509/X509Name.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509Extensions
#include "Org/BouncyCastle/Asn1/X509/X509Extensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Asn1.X509.X509CertificateStructure c
Org::BouncyCastle::Asn1::X509::X509CertificateStructure*& Org::BouncyCastle::X509::X509Certificate::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::X509::X509CertificateStructure**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String sigAlgName
::Il2CppString*& Org::BouncyCastle::X509::X509Certificate::dyn_sigAlgName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_sigAlgName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sigAlgName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] sigAlgParams
::Array<uint8_t>*& Org::BouncyCastle::X509::X509Certificate::dyn_sigAlgParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_sigAlgParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sigAlgParams"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Asn1.X509.BasicConstraints basicConstraints
Org::BouncyCastle::Asn1::X509::BasicConstraints*& Org::BouncyCastle::X509::X509Certificate::dyn_basicConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_basicConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "basicConstraints"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::X509::BasicConstraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean[] keyUsage
::Array<bool>*& Org::BouncyCastle::X509::X509Certificate::dyn_keyUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_keyUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyUsage"))->offset;
  return *reinterpret_cast<::Array<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object cacheLock
::Il2CppObject*& Org::BouncyCastle::X509::X509Certificate::dyn_cacheLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_cacheLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cacheLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Org.BouncyCastle.Crypto.AsymmetricKeyParameter publicKeyValue
Org::BouncyCastle::Crypto::AsymmetricKeyParameter*& Org::BouncyCastle::X509::X509Certificate::dyn_publicKeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_publicKeyValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKeyValue"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Crypto::AsymmetricKeyParameter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hashValueSet
bool& Org::BouncyCastle::X509::X509Certificate::dyn_hashValueSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_hashValueSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashValueSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashValue
int& Org::BouncyCastle::X509::X509Certificate::dyn_hashValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::dyn_hashValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.get_Version
int Org::BouncyCastle::X509::X509Certificate::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.get_SerialNumber
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::X509::X509Certificate::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::get_SerialNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.get_IssuerDN
Org::BouncyCastle::Asn1::X509::X509Name* Org::BouncyCastle::X509::X509Certificate::get_IssuerDN() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::get_IssuerDN");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerDN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Name*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.get_SubjectDN
Org::BouncyCastle::Asn1::X509::X509Name* Org::BouncyCastle::X509::X509Certificate::get_SubjectDN() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::get_SubjectDN");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectDN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Name*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.get_NotBefore
System::DateTime Org::BouncyCastle::X509::X509Certificate::get_NotBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::get_NotBefore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NotBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.get_NotAfter
System::DateTime Org::BouncyCastle::X509::X509Certificate::get_NotAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::get_NotAfter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NotAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.get_SigAlgName
::Il2CppString* Org::BouncyCastle::X509::X509Certificate::get_SigAlgName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::get_SigAlgName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SigAlgName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.GetSignature
::Array<uint8_t>* Org::BouncyCastle::X509::X509Certificate::GetSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::GetSignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.GetPublicKey
Org::BouncyCastle::Crypto::AsymmetricKeyParameter* Org::BouncyCastle::X509::X509Certificate::GetPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::GetPublicKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::AsymmetricKeyParameter*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.GetEncoded
::Array<uint8_t>* Org::BouncyCastle::X509::X509Certificate::GetEncoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::GetEncoded");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.GetX509Extensions
Org::BouncyCastle::Asn1::X509::X509Extensions* Org::BouncyCastle::X509::X509Certificate::GetX509Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::GetX509Extensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetX509Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Extensions*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.Equals
bool Org::BouncyCastle::X509::X509Certificate::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.GetHashCode
int Org::BouncyCastle::X509::X509Certificate::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Certificate.ToString
::Il2CppString* Org::BouncyCastle::X509::X509Certificate::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Certificate::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.X509.X509CertificateParser
#include "Org/BouncyCastle/X509/X509CertificateParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Set
#include "Org/BouncyCastle/Asn1/Asn1Set.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Org.BouncyCastle.X509.PemParser
#include "Org/BouncyCastle/X509/PemParser.hpp"
// Including type: Org.BouncyCastle.X509.X509Certificate
#include "Org/BouncyCastle/X509/X509Certificate.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1InputStream
#include "Org/BouncyCastle/Asn1/Asn1InputStream.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509CertificateStructure
#include "Org/BouncyCastle/Asn1/X509/X509CertificateStructure.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Org.BouncyCastle.X509.PemParser PemCertParser
Org::BouncyCastle::X509::PemParser* Org::BouncyCastle::X509::X509CertificateParser::_get_PemCertParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::_get_PemCertParser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::X509::PemParser*>("Org.BouncyCastle.X509", "X509CertificateParser", "PemCertParser"));
}
// Autogenerated static field setter
// Set static field: static private readonly Org.BouncyCastle.X509.PemParser PemCertParser
void Org::BouncyCastle::X509::X509CertificateParser::_set_PemCertParser(Org::BouncyCastle::X509::PemParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::_set_PemCertParser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.X509", "X509CertificateParser", "PemCertParser", value));
}
// Autogenerated instance field getter
// Get instance field: private Org.BouncyCastle.Asn1.Asn1Set sData
Org::BouncyCastle::Asn1::Asn1Set*& Org::BouncyCastle::X509::X509CertificateParser::dyn_sData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::dyn_sData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sData"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::Asn1Set**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 sDataObjectCount
int& Org::BouncyCastle::X509::X509CertificateParser::dyn_sDataObjectCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::dyn_sDataObjectCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sDataObjectCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream currentStream
System::IO::Stream*& Org::BouncyCastle::X509::X509CertificateParser::dyn_currentStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::dyn_currentStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStream"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser..cctor
void Org::BouncyCastle::X509::X509CertificateParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.X509", "X509CertificateParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser.ReadDerCertificate
Org::BouncyCastle::X509::X509Certificate* Org::BouncyCastle::X509::X509CertificateParser::ReadDerCertificate(Org::BouncyCastle::Asn1::Asn1InputStream* dIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::ReadDerCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDerCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dIn)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Certificate*, false>(___instance_arg, ___internal__method, dIn);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser.GetCertificate
Org::BouncyCastle::X509::X509Certificate* Org::BouncyCastle::X509::X509CertificateParser::GetCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::GetCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Certificate*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser.ReadPemCertificate
Org::BouncyCastle::X509::X509Certificate* Org::BouncyCastle::X509::X509CertificateParser::ReadPemCertificate(System::IO::Stream* inStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::ReadPemCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPemCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Certificate*, false>(___instance_arg, ___internal__method, inStream);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser.CreateX509Certificate
Org::BouncyCastle::X509::X509Certificate* Org::BouncyCastle::X509::X509CertificateParser::CreateX509Certificate(Org::BouncyCastle::Asn1::X509::X509CertificateStructure* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::CreateX509Certificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateX509Certificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Certificate*, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate
Org::BouncyCastle::X509::X509Certificate* Org::BouncyCastle::X509::X509CertificateParser::ReadCertificate(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::ReadCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Certificate*, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser.ReadCertificates
System::Collections::ICollection* Org::BouncyCastle::X509::X509CertificateParser::ReadCertificates(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::ReadCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate
Org::BouncyCastle::X509::X509Certificate* Org::BouncyCastle::X509::X509CertificateParser::ReadCertificate(System::IO::Stream* inStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::ReadCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Certificate*, false>(___instance_arg, ___internal__method, inStream);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CertificateParser.ReadCertificates
System::Collections::ICollection* Org::BouncyCastle::X509::X509CertificateParser::ReadCertificates(System::IO::Stream* inStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CertificateParser::ReadCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(___instance_arg, ___internal__method, inStream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.X509.X509Crl
#include "Org/BouncyCastle/X509/X509Crl.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.CertificateList
#include "Org/BouncyCastle/Asn1/X509/CertificateList.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509Name
#include "Org/BouncyCastle/Asn1/X509/X509Name.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Org.BouncyCastle.Utilities.Date.DateTimeObject
#include "Org/BouncyCastle/Utilities/Date/DateTimeObject.hpp"
// Including type: Org.BouncyCastle.Utilities.Collections.ISet
#include "Org/BouncyCastle/Utilities/Collections/ISet.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509Extensions
#include "Org/BouncyCastle/Asn1/X509/X509Extensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Asn1.X509.CertificateList c
Org::BouncyCastle::Asn1::X509::CertificateList*& Org::BouncyCastle::X509::X509Crl::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::X509::CertificateList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String sigAlgName
::Il2CppString*& Org::BouncyCastle::X509::X509Crl::dyn_sigAlgName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::dyn_sigAlgName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sigAlgName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] sigAlgParams
::Array<uint8_t>*& Org::BouncyCastle::X509::X509Crl::dyn_sigAlgParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::dyn_sigAlgParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sigAlgParams"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean isIndirect
bool& Org::BouncyCastle::X509::X509Crl::dyn_isIndirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::dyn_isIndirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isIndirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hashValueSet
bool& Org::BouncyCastle::X509::X509Crl::dyn_hashValueSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::dyn_hashValueSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashValueSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashValue
int& Org::BouncyCastle::X509::X509Crl::dyn_hashValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::dyn_hashValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.get_Version
int Org::BouncyCastle::X509::X509Crl::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.get_IssuerDN
Org::BouncyCastle::Asn1::X509::X509Name* Org::BouncyCastle::X509::X509Crl::get_IssuerDN() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::get_IssuerDN");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerDN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Name*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.get_ThisUpdate
System::DateTime Org::BouncyCastle::X509::X509Crl::get_ThisUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::get_ThisUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThisUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.get_NextUpdate
Org::BouncyCastle::Utilities::Date::DateTimeObject* Org::BouncyCastle::X509::X509Crl::get_NextUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::get_NextUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::Date::DateTimeObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.get_SigAlgName
::Il2CppString* Org::BouncyCastle::X509::X509Crl::get_SigAlgName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::get_SigAlgName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SigAlgName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.get_IsIndirectCrl
bool Org::BouncyCastle::X509::X509Crl::get_IsIndirectCrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::get_IsIndirectCrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsIndirectCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.LoadCrlEntries
Org::BouncyCastle::Utilities::Collections::ISet* Org::BouncyCastle::X509::X509Crl::LoadCrlEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::LoadCrlEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadCrlEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::Collections::ISet*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.GetRevokedCertificates
Org::BouncyCastle::Utilities::Collections::ISet* Org::BouncyCastle::X509::X509Crl::GetRevokedCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::GetRevokedCertificates");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRevokedCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::Collections::ISet*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.GetSignature
::Array<uint8_t>* Org::BouncyCastle::X509::X509Crl::GetSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::GetSignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.GetX509Extensions
Org::BouncyCastle::Asn1::X509::X509Extensions* Org::BouncyCastle::X509::X509Crl::GetX509Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::GetX509Extensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetX509Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Extensions*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.Equals
bool Org::BouncyCastle::X509::X509Crl::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.GetHashCode
int Org::BouncyCastle::X509::X509Crl::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509Crl.ToString
::Il2CppString* Org::BouncyCastle::X509::X509Crl::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509Crl::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.X509.X509CrlEntry
#include "Org/BouncyCastle/X509/X509CrlEntry.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.CrlEntry
#include "Org/BouncyCastle/Asn1/X509/CrlEntry.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509Name
#include "Org/BouncyCastle/Asn1/X509/X509Name.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509Extensions
#include "Org/BouncyCastle/Asn1/X509/X509Extensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Org.BouncyCastle.Asn1.X509.CrlEntry c
Org::BouncyCastle::Asn1::X509::CrlEntry*& Org::BouncyCastle::X509::X509CrlEntry::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::X509::CrlEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isIndirect
bool& Org::BouncyCastle::X509::X509CrlEntry::dyn_isIndirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::dyn_isIndirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isIndirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Org.BouncyCastle.Asn1.X509.X509Name previousCertificateIssuer
Org::BouncyCastle::Asn1::X509::X509Name*& Org::BouncyCastle::X509::X509CrlEntry::dyn_previousCertificateIssuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::dyn_previousCertificateIssuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousCertificateIssuer"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::X509::X509Name**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Org.BouncyCastle.Asn1.X509.X509Name certificateIssuer
Org::BouncyCastle::Asn1::X509::X509Name*& Org::BouncyCastle::X509::X509CrlEntry::dyn_certificateIssuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::dyn_certificateIssuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateIssuer"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::X509::X509Name**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hashValueSet
bool& Org::BouncyCastle::X509::X509CrlEntry::dyn_hashValueSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::dyn_hashValueSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashValueSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashValue
int& Org::BouncyCastle::X509::X509CrlEntry::dyn_hashValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::dyn_hashValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlEntry.get_SerialNumber
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::X509::X509CrlEntry::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::get_SerialNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlEntry.get_RevocationDate
System::DateTime Org::BouncyCastle::X509::X509CrlEntry::get_RevocationDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::get_RevocationDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RevocationDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlEntry.loadCertificateIssuer
Org::BouncyCastle::Asn1::X509::X509Name* Org::BouncyCastle::X509::X509CrlEntry::loadCertificateIssuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::loadCertificateIssuer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "loadCertificateIssuer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Name*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlEntry.GetCertificateIssuer
Org::BouncyCastle::Asn1::X509::X509Name* Org::BouncyCastle::X509::X509CrlEntry::GetCertificateIssuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::GetCertificateIssuer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCertificateIssuer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Name*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlEntry.GetX509Extensions
Org::BouncyCastle::Asn1::X509::X509Extensions* Org::BouncyCastle::X509::X509CrlEntry::GetX509Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::GetX509Extensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetX509Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Extensions*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlEntry.Equals
bool Org::BouncyCastle::X509::X509CrlEntry::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlEntry.GetHashCode
int Org::BouncyCastle::X509::X509CrlEntry::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlEntry.ToString
::Il2CppString* Org::BouncyCastle::X509::X509CrlEntry::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlEntry::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.X509.X509CrlParser
#include "Org/BouncyCastle/X509/X509CrlParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Set
#include "Org/BouncyCastle/Asn1/Asn1Set.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Org.BouncyCastle.X509.PemParser
#include "Org/BouncyCastle/X509/PemParser.hpp"
// Including type: Org.BouncyCastle.X509.X509Crl
#include "Org/BouncyCastle/X509/X509Crl.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1InputStream
#include "Org/BouncyCastle/Asn1/Asn1InputStream.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.CertificateList
#include "Org/BouncyCastle/Asn1/X509/CertificateList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Org.BouncyCastle.X509.PemParser PemCrlParser
Org::BouncyCastle::X509::PemParser* Org::BouncyCastle::X509::X509CrlParser::_get_PemCrlParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::_get_PemCrlParser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::X509::PemParser*>("Org.BouncyCastle.X509", "X509CrlParser", "PemCrlParser"));
}
// Autogenerated static field setter
// Set static field: static private readonly Org.BouncyCastle.X509.PemParser PemCrlParser
void Org::BouncyCastle::X509::X509CrlParser::_set_PemCrlParser(Org::BouncyCastle::X509::PemParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::_set_PemCrlParser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.X509", "X509CrlParser", "PemCrlParser", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean lazyAsn1
bool& Org::BouncyCastle::X509::X509CrlParser::dyn_lazyAsn1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::dyn_lazyAsn1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyAsn1"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Org.BouncyCastle.Asn1.Asn1Set sCrlData
Org::BouncyCastle::Asn1::Asn1Set*& Org::BouncyCastle::X509::X509CrlParser::dyn_sCrlData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::dyn_sCrlData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sCrlData"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::Asn1Set**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 sCrlDataObjectCount
int& Org::BouncyCastle::X509::X509CrlParser::dyn_sCrlDataObjectCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::dyn_sCrlDataObjectCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sCrlDataObjectCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream currentCrlStream
System::IO::Stream*& Org::BouncyCastle::X509::X509CrlParser::dyn_currentCrlStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::dyn_currentCrlStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCrlStream"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlParser..cctor
void Org::BouncyCastle::X509::X509CrlParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.X509", "X509CrlParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlParser.ReadPemCrl
Org::BouncyCastle::X509::X509Crl* Org::BouncyCastle::X509::X509CrlParser::ReadPemCrl(System::IO::Stream* inStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::ReadPemCrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPemCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Crl*, false>(___instance_arg, ___internal__method, inStream);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlParser.ReadDerCrl
Org::BouncyCastle::X509::X509Crl* Org::BouncyCastle::X509::X509CrlParser::ReadDerCrl(Org::BouncyCastle::Asn1::Asn1InputStream* dIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::ReadDerCrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDerCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dIn)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Crl*, false>(___instance_arg, ___internal__method, dIn);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlParser.GetCrl
Org::BouncyCastle::X509::X509Crl* Org::BouncyCastle::X509::X509CrlParser::GetCrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::GetCrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Crl*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlParser.CreateX509Crl
Org::BouncyCastle::X509::X509Crl* Org::BouncyCastle::X509::X509CrlParser::CreateX509Crl(Org::BouncyCastle::Asn1::X509::CertificateList* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::CreateX509Crl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateX509Crl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Crl*, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlParser.ReadCrl
Org::BouncyCastle::X509::X509Crl* Org::BouncyCastle::X509::X509CrlParser::ReadCrl(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::ReadCrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Crl*, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.X509.X509CrlParser.ReadCrl
Org::BouncyCastle::X509::X509Crl* Org::BouncyCastle::X509::X509CrlParser::ReadCrl(System::IO::Stream* inStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509CrlParser::ReadCrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::X509::X509Crl*, false>(___instance_arg, ___internal__method, inStream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.X509.X509SignatureUtilities
#include "Org/BouncyCastle/X509/X509SignatureUtilities.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Null
#include "Org/BouncyCastle/Asn1/Asn1Null.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier
#include "Org/BouncyCastle/Asn1/X509/AlgorithmIdentifier.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Org.BouncyCastle.Asn1.Asn1Null derNull
Org::BouncyCastle::Asn1::Asn1Null* Org::BouncyCastle::X509::X509SignatureUtilities::_get_derNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509SignatureUtilities::_get_derNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::Asn1Null*>("Org.BouncyCastle.X509", "X509SignatureUtilities", "derNull"));
}
// Autogenerated static field setter
// Set static field: static private readonly Org.BouncyCastle.Asn1.Asn1Null derNull
void Org::BouncyCastle::X509::X509SignatureUtilities::_set_derNull(Org::BouncyCastle::Asn1::Asn1Null* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509SignatureUtilities::_set_derNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.X509", "X509SignatureUtilities", "derNull", value));
}
// Autogenerated method: Org.BouncyCastle.X509.X509SignatureUtilities..cctor
void Org::BouncyCastle::X509::X509SignatureUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509SignatureUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.X509", "X509SignatureUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509SignatureUtilities.GetSignatureName
::Il2CppString* Org::BouncyCastle::X509::X509SignatureUtilities::GetSignatureName(Org::BouncyCastle::Asn1::X509::AlgorithmIdentifier* sigAlgId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509SignatureUtilities::GetSignatureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.X509", "X509SignatureUtilities", "GetSignatureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sigAlgId)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sigAlgId);
}
// Autogenerated method: Org.BouncyCastle.X509.X509SignatureUtilities.GetDigestAlgName
::Il2CppString* Org::BouncyCastle::X509::X509SignatureUtilities::GetDigestAlgName(Org::BouncyCastle::Asn1::DerObjectIdentifier* digestAlgOID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509SignatureUtilities::GetDigestAlgName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.X509", "X509SignatureUtilities", "GetDigestAlgName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digestAlgOID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, digestAlgOID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.X509.X509V2AttributeCertificate
#include "Org/BouncyCastle/X509/X509V2AttributeCertificate.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.AttributeCertificate
#include "Org/BouncyCastle/Asn1/X509/AttributeCertificate.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Org.BouncyCastle.Asn1.X509.X509Extensions
#include "Org/BouncyCastle/Asn1/X509/X509Extensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Asn1.X509.AttributeCertificate cert
Org::BouncyCastle::Asn1::X509::AttributeCertificate*& Org::BouncyCastle::X509::X509V2AttributeCertificate::dyn_cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509V2AttributeCertificate::dyn_cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cert"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Asn1::X509::AttributeCertificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.DateTime notBefore
System::DateTime& Org::BouncyCastle::X509::X509V2AttributeCertificate::dyn_notBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509V2AttributeCertificate::dyn_notBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notBefore"))->offset;
  return *reinterpret_cast<System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.DateTime notAfter
System::DateTime& Org::BouncyCastle::X509::X509V2AttributeCertificate::dyn_notAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509V2AttributeCertificate::dyn_notAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notAfter"))->offset;
  return *reinterpret_cast<System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Org.BouncyCastle.X509.X509V2AttributeCertificate.GetObject
Org::BouncyCastle::Asn1::X509::AttributeCertificate* Org::BouncyCastle::X509::X509V2AttributeCertificate::GetObject(System::IO::Stream* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509V2AttributeCertificate::GetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.X509", "X509V2AttributeCertificate", "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::AttributeCertificate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.X509.X509V2AttributeCertificate.GetX509Extensions
Org::BouncyCastle::Asn1::X509::X509Extensions* Org::BouncyCastle::X509::X509V2AttributeCertificate::GetX509Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509V2AttributeCertificate::GetX509Extensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetX509Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X509::X509Extensions*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.X509.X509V2AttributeCertificate.Equals
bool Org::BouncyCastle::X509::X509V2AttributeCertificate::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509V2AttributeCertificate::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.X509.X509V2AttributeCertificate.GetHashCode
int Org::BouncyCastle::X509::X509V2AttributeCertificate::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::X509::X509V2AttributeCertificate::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSO.get_color
UnityEngine::Color GlobalNamespace::ColorSO::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSO::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _colorSchemeId
::Il2CppString*& GlobalNamespace::ColorScheme::dyn__colorSchemeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__colorSchemeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _colorSchemeNameLocalizationKey
::Il2CppString*& GlobalNamespace::ColorScheme::dyn__colorSchemeNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__colorSchemeNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeNameLocalizationKey"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useNonLocalizedName
bool& GlobalNamespace::ColorScheme::dyn__useNonLocalizedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__useNonLocalizedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useNonLocalizedName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _nonLocalizedName
::Il2CppString*& GlobalNamespace::ColorScheme::dyn__nonLocalizedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__nonLocalizedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonLocalizedName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isEditable
bool& GlobalNamespace::ColorScheme::dyn__isEditable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__isEditable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isEditable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _saberAColor
UnityEngine::Color& GlobalNamespace::ColorScheme::dyn__saberAColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__saberAColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberAColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _saberBColor
UnityEngine::Color& GlobalNamespace::ColorScheme::dyn__saberBColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__saberBColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _obstaclesColor
UnityEngine::Color& GlobalNamespace::ColorScheme::dyn__obstaclesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__obstaclesColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclesColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _environmentColor0
UnityEngine::Color& GlobalNamespace::ColorScheme::dyn__environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__environmentColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor0"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _environmentColor1
UnityEngine::Color& GlobalNamespace::ColorScheme::dyn__environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__environmentColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor1"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _supportsEnvironmentColorBoost
bool& GlobalNamespace::ColorScheme::dyn__supportsEnvironmentColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__supportsEnvironmentColorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_supportsEnvironmentColorBoost"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _environmentColor0Boost
UnityEngine::Color& GlobalNamespace::ColorScheme::dyn__environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__environmentColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor0Boost"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _environmentColor1Boost
UnityEngine::Color& GlobalNamespace::ColorScheme::dyn__environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::dyn__environmentColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor1Boost"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorScheme.get_colorSchemeId
::Il2CppString* GlobalNamespace::ColorScheme::get_colorSchemeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_colorSchemeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_colorSchemeNameLocalizationKey
::Il2CppString* GlobalNamespace::ColorScheme::get_colorSchemeNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_colorSchemeNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemeNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_nonLocalizedName
::Il2CppString* GlobalNamespace::ColorScheme::get_nonLocalizedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_nonLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nonLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_useNonLocalizedName
bool GlobalNamespace::ColorScheme::get_useNonLocalizedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_useNonLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useNonLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_isEditable
bool GlobalNamespace::ColorScheme::get_isEditable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_isEditable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEditable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_saberAColor
UnityEngine::Color GlobalNamespace::ColorScheme::get_saberAColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_saberAColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberAColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_saberBColor
UnityEngine::Color GlobalNamespace::ColorScheme::get_saberBColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_saberBColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberBColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_environmentColor0
UnityEngine::Color GlobalNamespace::ColorScheme::get_environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_environmentColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_environmentColor1
UnityEngine::Color GlobalNamespace::ColorScheme::get_environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_environmentColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_supportsEnvironmentColorBoost
bool GlobalNamespace::ColorScheme::get_supportsEnvironmentColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_supportsEnvironmentColorBoost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsEnvironmentColorBoost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_environmentColor0Boost
UnityEngine::Color GlobalNamespace::ColorScheme::get_environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_environmentColor0Boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor0Boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_environmentColor1Boost
UnityEngine::Color GlobalNamespace::ColorScheme::get_environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_environmentColor1Boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor1Boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorScheme.get_obstaclesColor
UnityEngine::Color GlobalNamespace::ColorScheme::get_obstaclesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorScheme::get_obstaclesColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorScheme _colorScheme
GlobalNamespace::ColorScheme*& GlobalNamespace::ColorSchemeSO::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeSO::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeSO.get_colorScheme
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemeSO::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeSO::get_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemesListSO
#include "GlobalNamespace/ColorSchemesListSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO[] _colorSchemes
::Array<GlobalNamespace::ColorSchemeSO*>*& GlobalNamespace::ColorSchemesListSO::dyn__colorSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesListSO::dyn__colorSchemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemes"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::ColorSchemeSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemesListSO.get_colorSchemes
::Array<GlobalNamespace::ColorSchemeSO*>* GlobalNamespace::ColorSchemesListSO::get_colorSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesListSO::get_colorSchemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::ColorSchemeSO*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultipliedAndAddedColorSO
#include "GlobalNamespace/MultipliedAndAddedColorSO.hpp"
// Including type: SimpleColorSO
#include "GlobalNamespace/SimpleColorSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _baseColor
GlobalNamespace::SimpleColorSO*& GlobalNamespace::MultipliedAndAddedColorSO::dyn__baseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultipliedAndAddedColorSO::dyn__baseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _multiplierColor
UnityEngine::Color& GlobalNamespace::MultipliedAndAddedColorSO::dyn__multiplierColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultipliedAndAddedColorSO::dyn__multiplierColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _addColor
UnityEngine::Color& GlobalNamespace::MultipliedAndAddedColorSO::dyn__addColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultipliedAndAddedColorSO::dyn__addColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultipliedAndAddedColorSO.get_color
UnityEngine::Color GlobalNamespace::MultipliedAndAddedColorSO::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultipliedAndAddedColorSO::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultipliedColorSO
#include "GlobalNamespace/MultipliedColorSO.hpp"
// Including type: SimpleColorSO
#include "GlobalNamespace/SimpleColorSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _baseColor
GlobalNamespace::SimpleColorSO*& GlobalNamespace::MultipliedColorSO::dyn__baseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultipliedColorSO::dyn__baseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _multiplierColor
UnityEngine::Color& GlobalNamespace::MultipliedColorSO::dyn__multiplierColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultipliedColorSO::dyn__multiplierColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultipliedColorSO.get_color
UnityEngine::Color GlobalNamespace::MultipliedColorSO::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultipliedColorSO::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleColorSO
#include "GlobalNamespace/SimpleColorSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::SimpleColorSO::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleColorSO::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleColorSO.SetColor
void GlobalNamespace::SimpleColorSO::SetColor(UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleColorSO::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated method: SimpleColorSO.get_color
UnityEngine::Color GlobalNamespace::SimpleColorSO::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleColorSO::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LayerMasks
#include "GlobalNamespace/LayerMasks.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE187F8
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.LayerMask saberLayerMask
UnityEngine::LayerMask GlobalNamespace::LayerMasks::_get_saberLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_get_saberLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LayerMask>("", "LayerMasks", "saberLayerMask"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.LayerMask saberLayerMask
void GlobalNamespace::LayerMasks::_set_saberLayerMask(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_set_saberLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LayerMasks", "saberLayerMask", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE18808
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.LayerMask noteLayerMask
UnityEngine::LayerMask GlobalNamespace::LayerMasks::_get_noteLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_get_noteLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LayerMask>("", "LayerMasks", "noteLayerMask"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.LayerMask noteLayerMask
void GlobalNamespace::LayerMasks::_set_noteLayerMask(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_set_noteLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LayerMasks", "noteLayerMask", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE18818
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.LayerMask noteDebrisLayerMask
UnityEngine::LayerMask GlobalNamespace::LayerMasks::_get_noteDebrisLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_get_noteDebrisLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LayerMask>("", "LayerMasks", "noteDebrisLayerMask"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.LayerMask noteDebrisLayerMask
void GlobalNamespace::LayerMasks::_set_noteDebrisLayerMask(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_set_noteDebrisLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LayerMasks", "noteDebrisLayerMask", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE18828
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.LayerMask cutEffectParticlesLayerMask
UnityEngine::LayerMask GlobalNamespace::LayerMasks::_get_cutEffectParticlesLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_get_cutEffectParticlesLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LayerMask>("", "LayerMasks", "cutEffectParticlesLayerMask"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.LayerMask cutEffectParticlesLayerMask
void GlobalNamespace::LayerMasks::_set_cutEffectParticlesLayerMask(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_set_cutEffectParticlesLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LayerMasks", "cutEffectParticlesLayerMask", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE18838
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 noteDebrisLayer
int GlobalNamespace::LayerMasks::_get_noteDebrisLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_get_noteDebrisLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LayerMasks", "noteDebrisLayer"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 noteDebrisLayer
void GlobalNamespace::LayerMasks::_set_noteDebrisLayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_set_noteDebrisLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LayerMasks", "noteDebrisLayer", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE18848
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 cutEffectParticlesLayer
int GlobalNamespace::LayerMasks::_get_cutEffectParticlesLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_get_cutEffectParticlesLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LayerMasks", "cutEffectParticlesLayer"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 cutEffectParticlesLayer
void GlobalNamespace::LayerMasks::_set_cutEffectParticlesLayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::_set_cutEffectParticlesLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LayerMasks", "cutEffectParticlesLayer", value));
}
// Autogenerated method: LayerMasks..cctor
void GlobalNamespace::LayerMasks::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LayerMasks", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LayerMasks.GetLayerMask
UnityEngine::LayerMask GlobalNamespace::LayerMasks::GetLayerMask(::Il2CppString* layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::GetLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LayerMasks", "GetLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerName);
}
// Autogenerated method: LayerMasks.GetLayerMask
UnityEngine::LayerMask GlobalNamespace::LayerMasks::GetLayerMask(int layerNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::GetLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LayerMasks", "GetLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNum)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerNum);
}
// Autogenerated method: LayerMasks.GetLayer
int GlobalNamespace::LayerMasks::GetLayer(::Il2CppString* layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LayerMasks::GetLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LayerMasks", "GetLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBone
#include "GlobalNamespace/DynamicBone.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: DynamicBone/Particle
#include "GlobalNamespace/DynamicBone_Particle.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DynamicBoneColliderBase
#include "GlobalNamespace/DynamicBoneColliderBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform m_Root
UnityEngine::Transform*& GlobalNamespace::DynamicBone::dyn_m_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Root"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_UpdateRate
float& GlobalNamespace::DynamicBone::dyn_m_UpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_UpdateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DynamicBone/UpdateMode m_UpdateMode
GlobalNamespace::DynamicBone::UpdateMode& GlobalNamespace::DynamicBone::dyn_m_UpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_UpdateMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateMode"))->offset;
  return *reinterpret_cast<GlobalNamespace::DynamicBone::UpdateMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Damping
float& GlobalNamespace::DynamicBone::dyn_m_Damping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Damping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Damping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve m_DampingDistrib
UnityEngine::AnimationCurve*& GlobalNamespace::DynamicBone::dyn_m_DampingDistrib() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_DampingDistrib");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DampingDistrib"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Elasticity
float& GlobalNamespace::DynamicBone::dyn_m_Elasticity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Elasticity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Elasticity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve m_ElasticityDistrib
UnityEngine::AnimationCurve*& GlobalNamespace::DynamicBone::dyn_m_ElasticityDistrib() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_ElasticityDistrib");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ElasticityDistrib"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Stiffness
float& GlobalNamespace::DynamicBone::dyn_m_Stiffness() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Stiffness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Stiffness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve m_StiffnessDistrib
UnityEngine::AnimationCurve*& GlobalNamespace::DynamicBone::dyn_m_StiffnessDistrib() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_StiffnessDistrib");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StiffnessDistrib"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Inert
float& GlobalNamespace::DynamicBone::dyn_m_Inert() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Inert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Inert"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve m_InertDistrib
UnityEngine::AnimationCurve*& GlobalNamespace::DynamicBone::dyn_m_InertDistrib() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_InertDistrib");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InertDistrib"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Radius
float& GlobalNamespace::DynamicBone::dyn_m_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve m_RadiusDistrib
UnityEngine::AnimationCurve*& GlobalNamespace::DynamicBone::dyn_m_RadiusDistrib() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_RadiusDistrib");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RadiusDistrib"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_EndLength
float& GlobalNamespace::DynamicBone::dyn_m_EndLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_EndLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_EndOffset
UnityEngine::Vector3& GlobalNamespace::DynamicBone::dyn_m_EndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_EndOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_Gravity
UnityEngine::Vector3& GlobalNamespace::DynamicBone::dyn_m_Gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Gravity"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_Force
UnityEngine::Vector3& GlobalNamespace::DynamicBone::dyn_m_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Force");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Force"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<DynamicBoneColliderBase> m_Colliders
System::Collections::Generic::List_1<GlobalNamespace::DynamicBoneColliderBase*>*& GlobalNamespace::DynamicBone::dyn_m_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Colliders"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::DynamicBoneColliderBase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Transform> m_Exclusions
System::Collections::Generic::List_1<UnityEngine::Transform*>*& GlobalNamespace::DynamicBone::dyn_m_Exclusions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Exclusions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Exclusions"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DynamicBone/FreezeAxis m_FreezeAxis
GlobalNamespace::DynamicBone::FreezeAxis& GlobalNamespace::DynamicBone::dyn_m_FreezeAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_FreezeAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FreezeAxis"))->offset;
  return *reinterpret_cast<GlobalNamespace::DynamicBone::FreezeAxis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_DistantDisable
bool& GlobalNamespace::DynamicBone::dyn_m_DistantDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_DistantDisable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DistantDisable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform m_ReferenceObject
UnityEngine::Transform*& GlobalNamespace::DynamicBone::dyn_m_ReferenceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_ReferenceObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceObject"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_DistanceToObject
float& GlobalNamespace::DynamicBone::dyn_m_DistanceToObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_DistanceToObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DistanceToObject"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_LocalGravity
UnityEngine::Vector3& GlobalNamespace::DynamicBone::dyn_m_LocalGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_LocalGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocalGravity"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ObjectMove
UnityEngine::Vector3& GlobalNamespace::DynamicBone::dyn_m_ObjectMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_ObjectMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectMove"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ObjectPrevPosition
UnityEngine::Vector3& GlobalNamespace::DynamicBone::dyn_m_ObjectPrevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_ObjectPrevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectPrevPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_BoneTotalLength
float& GlobalNamespace::DynamicBone::dyn_m_BoneTotalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_BoneTotalLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BoneTotalLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ObjectScale
float& GlobalNamespace::DynamicBone::dyn_m_ObjectScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_ObjectScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Time
float& GlobalNamespace::DynamicBone::dyn_m_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Weight
float& GlobalNamespace::DynamicBone::dyn_m_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DistantDisabled
bool& GlobalNamespace::DynamicBone::dyn_m_DistantDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_DistantDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DistantDisabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<DynamicBone/Particle> m_Particles
System::Collections::Generic::List_1<GlobalNamespace::DynamicBone::Particle*>*& GlobalNamespace::DynamicBone::dyn_m_Particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::dyn_m_Particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Particles"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::DynamicBone::Particle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicBone.Start
void GlobalNamespace::DynamicBone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.FixedUpdate
void GlobalNamespace::DynamicBone::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.Update
void GlobalNamespace::DynamicBone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.LateUpdate
void GlobalNamespace::DynamicBone::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.PreUpdate
void GlobalNamespace::DynamicBone::PreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::PreUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.CheckDistance
void GlobalNamespace::DynamicBone::CheckDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::CheckDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.OnEnable
void GlobalNamespace::DynamicBone::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.OnDisable
void GlobalNamespace::DynamicBone::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.OnValidate
void GlobalNamespace::DynamicBone::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.OnDrawGizmosSelected
void GlobalNamespace::DynamicBone::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.SetWeight
void GlobalNamespace::DynamicBone::SetWeight(float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::SetWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(w)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, w);
}
// Autogenerated method: DynamicBone.GetWeight
float GlobalNamespace::DynamicBone::GetWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::GetWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.UpdateDynamicBones
void GlobalNamespace::DynamicBone::UpdateDynamicBones(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateDynamicBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDynamicBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated method: DynamicBone.SetupParticles
void GlobalNamespace::DynamicBone::SetupParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::SetupParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.AppendParticles
void GlobalNamespace::DynamicBone::AppendParticles(UnityEngine::Transform* b, int parentIndex, float boneLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::AppendParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(parentIndex), ::il2cpp_utils::ExtractType(boneLength)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, b, parentIndex, boneLength);
}
// Autogenerated method: DynamicBone.UpdateParameters
void GlobalNamespace::DynamicBone::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.InitTransforms
void GlobalNamespace::DynamicBone::InitTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::InitTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.ResetParticlesPosition
void GlobalNamespace::DynamicBone::ResetParticlesPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::ResetParticlesPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetParticlesPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.UpdateParticles1
void GlobalNamespace::DynamicBone::UpdateParticles1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateParticles1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParticles1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.UpdateParticles2
void GlobalNamespace::DynamicBone::UpdateParticles2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateParticles2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParticles2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.SkipUpdateParticles
void GlobalNamespace::DynamicBone::SkipUpdateParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::SkipUpdateParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipUpdateParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBone.MirrorVector
UnityEngine::Vector3 GlobalNamespace::DynamicBone::MirrorVector(UnityEngine::Vector3 v, UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::MirrorVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DynamicBone", "MirrorVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v, axis);
}
// Autogenerated method: DynamicBone.ApplyParticlesToTransforms
void GlobalNamespace::DynamicBone::ApplyParticlesToTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::ApplyParticlesToTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyParticlesToTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBone/UpdateMode
#include "GlobalNamespace/DynamicBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DynamicBone/UpdateMode Normal
GlobalNamespace::DynamicBone::UpdateMode GlobalNamespace::DynamicBone::UpdateMode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateMode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBone::UpdateMode>("", "DynamicBone/UpdateMode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBone/UpdateMode Normal
void GlobalNamespace::DynamicBone::UpdateMode::_set_Normal(GlobalNamespace::DynamicBone::UpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateMode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBone/UpdateMode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicBone/UpdateMode AnimatePhysics
GlobalNamespace::DynamicBone::UpdateMode GlobalNamespace::DynamicBone::UpdateMode::_get_AnimatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateMode::_get_AnimatePhysics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBone::UpdateMode>("", "DynamicBone/UpdateMode", "AnimatePhysics"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBone/UpdateMode AnimatePhysics
void GlobalNamespace::DynamicBone::UpdateMode::_set_AnimatePhysics(GlobalNamespace::DynamicBone::UpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateMode::_set_AnimatePhysics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBone/UpdateMode", "AnimatePhysics", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicBone/UpdateMode UnscaledTime
GlobalNamespace::DynamicBone::UpdateMode GlobalNamespace::DynamicBone::UpdateMode::_get_UnscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateMode::_get_UnscaledTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBone::UpdateMode>("", "DynamicBone/UpdateMode", "UnscaledTime"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBone/UpdateMode UnscaledTime
void GlobalNamespace::DynamicBone::UpdateMode::_set_UnscaledTime(GlobalNamespace::DynamicBone::UpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateMode::_set_UnscaledTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBone/UpdateMode", "UnscaledTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::DynamicBone::UpdateMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::UpdateMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBone/FreezeAxis
#include "GlobalNamespace/DynamicBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DynamicBone/FreezeAxis None
GlobalNamespace::DynamicBone::FreezeAxis GlobalNamespace::DynamicBone::FreezeAxis::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBone::FreezeAxis>("", "DynamicBone/FreezeAxis", "None"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBone/FreezeAxis None
void GlobalNamespace::DynamicBone::FreezeAxis::_set_None(GlobalNamespace::DynamicBone::FreezeAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBone/FreezeAxis", "None", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicBone/FreezeAxis X
GlobalNamespace::DynamicBone::FreezeAxis GlobalNamespace::DynamicBone::FreezeAxis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBone::FreezeAxis>("", "DynamicBone/FreezeAxis", "X"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBone/FreezeAxis X
void GlobalNamespace::DynamicBone::FreezeAxis::_set_X(GlobalNamespace::DynamicBone::FreezeAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBone/FreezeAxis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicBone/FreezeAxis Y
GlobalNamespace::DynamicBone::FreezeAxis GlobalNamespace::DynamicBone::FreezeAxis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBone::FreezeAxis>("", "DynamicBone/FreezeAxis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBone/FreezeAxis Y
void GlobalNamespace::DynamicBone::FreezeAxis::_set_Y(GlobalNamespace::DynamicBone::FreezeAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBone/FreezeAxis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicBone/FreezeAxis Z
GlobalNamespace::DynamicBone::FreezeAxis GlobalNamespace::DynamicBone::FreezeAxis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBone::FreezeAxis>("", "DynamicBone/FreezeAxis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBone/FreezeAxis Z
void GlobalNamespace::DynamicBone::FreezeAxis::_set_Z(GlobalNamespace::DynamicBone::FreezeAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBone/FreezeAxis", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::DynamicBone::FreezeAxis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::FreezeAxis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBone/Particle
#include "GlobalNamespace/DynamicBone_Particle.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform m_Transform
UnityEngine::Transform*& GlobalNamespace::DynamicBone::Particle::dyn_m_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_Transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_ParentIndex
int& GlobalNamespace::DynamicBone::Particle::dyn_m_ParentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_ParentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Damping
float& GlobalNamespace::DynamicBone::Particle::dyn_m_Damping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_Damping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Damping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Elasticity
float& GlobalNamespace::DynamicBone::Particle::dyn_m_Elasticity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_Elasticity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Elasticity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Stiffness
float& GlobalNamespace::DynamicBone::Particle::dyn_m_Stiffness() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_Stiffness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Stiffness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Inert
float& GlobalNamespace::DynamicBone::Particle::dyn_m_Inert() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_Inert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Inert"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Radius
float& GlobalNamespace::DynamicBone::Particle::dyn_m_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_BoneLength
float& GlobalNamespace::DynamicBone::Particle::dyn_m_BoneLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_BoneLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BoneLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_Position
UnityEngine::Vector3& GlobalNamespace::DynamicBone::Particle::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_PrevPosition
UnityEngine::Vector3& GlobalNamespace::DynamicBone::Particle::dyn_m_PrevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_PrevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_EndOffset
UnityEngine::Vector3& GlobalNamespace::DynamicBone::Particle::dyn_m_EndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_EndOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_InitLocalPosition
UnityEngine::Vector3& GlobalNamespace::DynamicBone::Particle::dyn_m_InitLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_InitLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion m_InitLocalRotation
UnityEngine::Quaternion& GlobalNamespace::DynamicBone::Particle::dyn_m_InitLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBone::Particle::dyn_m_InitLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitLocalRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBoneCollider
#include "GlobalNamespace/DynamicBoneCollider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single m_Radius
float& GlobalNamespace::DynamicBoneCollider::dyn_m_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::dyn_m_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Height
float& GlobalNamespace::DynamicBoneCollider::dyn_m_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::dyn_m_Height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicBoneCollider.OnValidate
void GlobalNamespace::DynamicBoneCollider::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBoneCollider.OutsideSphere
void GlobalNamespace::DynamicBoneCollider::OutsideSphere(ByRef<UnityEngine::Vector3> particlePosition, float particleRadius, UnityEngine::Vector3 sphereCenter, float sphereRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::OutsideSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DynamicBoneCollider", "OutsideSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particlePosition), ::il2cpp_utils::ExtractType(particleRadius), ::il2cpp_utils::ExtractType(sphereCenter), ::il2cpp_utils::ExtractType(sphereRadius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(particlePosition), particleRadius, sphereCenter, sphereRadius);
}
// Autogenerated method: DynamicBoneCollider.InsideSphere
void GlobalNamespace::DynamicBoneCollider::InsideSphere(ByRef<UnityEngine::Vector3> particlePosition, float particleRadius, UnityEngine::Vector3 sphereCenter, float sphereRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::InsideSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DynamicBoneCollider", "InsideSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particlePosition), ::il2cpp_utils::ExtractType(particleRadius), ::il2cpp_utils::ExtractType(sphereCenter), ::il2cpp_utils::ExtractType(sphereRadius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(particlePosition), particleRadius, sphereCenter, sphereRadius);
}
// Autogenerated method: DynamicBoneCollider.OutsideCapsule
void GlobalNamespace::DynamicBoneCollider::OutsideCapsule(ByRef<UnityEngine::Vector3> particlePosition, float particleRadius, UnityEngine::Vector3 capsuleP0, UnityEngine::Vector3 capsuleP1, float capsuleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::OutsideCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DynamicBoneCollider", "OutsideCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particlePosition), ::il2cpp_utils::ExtractType(particleRadius), ::il2cpp_utils::ExtractType(capsuleP0), ::il2cpp_utils::ExtractType(capsuleP1), ::il2cpp_utils::ExtractType(capsuleRadius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(particlePosition), particleRadius, capsuleP0, capsuleP1, capsuleRadius);
}
// Autogenerated method: DynamicBoneCollider.InsideCapsule
void GlobalNamespace::DynamicBoneCollider::InsideCapsule(ByRef<UnityEngine::Vector3> particlePosition, float particleRadius, UnityEngine::Vector3 capsuleP0, UnityEngine::Vector3 capsuleP1, float capsuleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::InsideCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DynamicBoneCollider", "InsideCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particlePosition), ::il2cpp_utils::ExtractType(particleRadius), ::il2cpp_utils::ExtractType(capsuleP0), ::il2cpp_utils::ExtractType(capsuleP1), ::il2cpp_utils::ExtractType(capsuleRadius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(particlePosition), particleRadius, capsuleP0, capsuleP1, capsuleRadius);
}
// Autogenerated method: DynamicBoneCollider.OnDrawGizmosSelected
void GlobalNamespace::DynamicBoneCollider::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBoneCollider.Collide
void GlobalNamespace::DynamicBoneCollider::Collide(ByRef<UnityEngine::Vector3> particlePosition, float particleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneCollider::Collide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particlePosition), ::il2cpp_utils::ExtractType(particleRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(particlePosition), particleRadius);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBoneColliderBase
#include "GlobalNamespace/DynamicBoneColliderBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DynamicBoneColliderBase/Direction m_Direction
GlobalNamespace::DynamicBoneColliderBase::Direction& GlobalNamespace::DynamicBoneColliderBase::dyn_m_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::dyn_m_Direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Direction"))->offset;
  return *reinterpret_cast<GlobalNamespace::DynamicBoneColliderBase::Direction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_Center
UnityEngine::Vector3& GlobalNamespace::DynamicBoneColliderBase::dyn_m_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::dyn_m_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Center"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DynamicBoneColliderBase/Bound m_Bound
GlobalNamespace::DynamicBoneColliderBase::Bound& GlobalNamespace::DynamicBoneColliderBase::dyn_m_Bound() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::dyn_m_Bound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Bound"))->offset;
  return *reinterpret_cast<GlobalNamespace::DynamicBoneColliderBase::Bound*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicBoneColliderBase.Collide
void GlobalNamespace::DynamicBoneColliderBase::Collide(ByRef<UnityEngine::Vector3> particlePosition, float particleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Collide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particlePosition), ::il2cpp_utils::ExtractType(particleRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(particlePosition), particleRadius);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBoneColliderBase/Direction
#include "GlobalNamespace/DynamicBoneColliderBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DynamicBoneColliderBase/Direction X
GlobalNamespace::DynamicBoneColliderBase::Direction GlobalNamespace::DynamicBoneColliderBase::Direction::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Direction::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBoneColliderBase::Direction>("", "DynamicBoneColliderBase/Direction", "X"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBoneColliderBase/Direction X
void GlobalNamespace::DynamicBoneColliderBase::Direction::_set_X(GlobalNamespace::DynamicBoneColliderBase::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Direction::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBoneColliderBase/Direction", "X", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicBoneColliderBase/Direction Y
GlobalNamespace::DynamicBoneColliderBase::Direction GlobalNamespace::DynamicBoneColliderBase::Direction::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Direction::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBoneColliderBase::Direction>("", "DynamicBoneColliderBase/Direction", "Y"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBoneColliderBase/Direction Y
void GlobalNamespace::DynamicBoneColliderBase::Direction::_set_Y(GlobalNamespace::DynamicBoneColliderBase::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Direction::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBoneColliderBase/Direction", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicBoneColliderBase/Direction Z
GlobalNamespace::DynamicBoneColliderBase::Direction GlobalNamespace::DynamicBoneColliderBase::Direction::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Direction::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBoneColliderBase::Direction>("", "DynamicBoneColliderBase/Direction", "Z"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBoneColliderBase/Direction Z
void GlobalNamespace::DynamicBoneColliderBase::Direction::_set_Z(GlobalNamespace::DynamicBoneColliderBase::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Direction::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBoneColliderBase/Direction", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::DynamicBoneColliderBase::Direction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Direction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBoneColliderBase/Bound
#include "GlobalNamespace/DynamicBoneColliderBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DynamicBoneColliderBase/Bound Outside
GlobalNamespace::DynamicBoneColliderBase::Bound GlobalNamespace::DynamicBoneColliderBase::Bound::_get_Outside() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Bound::_get_Outside");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBoneColliderBase::Bound>("", "DynamicBoneColliderBase/Bound", "Outside"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBoneColliderBase/Bound Outside
void GlobalNamespace::DynamicBoneColliderBase::Bound::_set_Outside(GlobalNamespace::DynamicBoneColliderBase::Bound value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Bound::_set_Outside");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBoneColliderBase/Bound", "Outside", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicBoneColliderBase/Bound Inside
GlobalNamespace::DynamicBoneColliderBase::Bound GlobalNamespace::DynamicBoneColliderBase::Bound::_get_Inside() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Bound::_get_Inside");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DynamicBoneColliderBase::Bound>("", "DynamicBoneColliderBase/Bound", "Inside"));
}
// Autogenerated static field setter
// Set static field: static public DynamicBoneColliderBase/Bound Inside
void GlobalNamespace::DynamicBoneColliderBase::Bound::_set_Inside(GlobalNamespace::DynamicBoneColliderBase::Bound value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Bound::_set_Inside");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DynamicBoneColliderBase/Bound", "Inside", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::DynamicBoneColliderBase::Bound::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBoneColliderBase::Bound::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicBonePlaneCollider
#include "GlobalNamespace/DynamicBonePlaneCollider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DynamicBonePlaneCollider.OnValidate
void GlobalNamespace::DynamicBonePlaneCollider::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBonePlaneCollider::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBonePlaneCollider.OnDrawGizmosSelected
void GlobalNamespace::DynamicBonePlaneCollider::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBonePlaneCollider::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DynamicBonePlaneCollider.Collide
void GlobalNamespace::DynamicBonePlaneCollider::Collide(ByRef<UnityEngine::Vector3> particlePosition, float particleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBonePlaneCollider::Collide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particlePosition), ::il2cpp_utils::ExtractType(particleRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(particlePosition), particleRadius);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.Baker
#include "RootMotion/Baker.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameRate
int& RootMotion::Baker::dyn_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_frameRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single keyReductionError
float& RootMotion::Baker::dyn_keyReductionError() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_keyReductionError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyReductionError"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.Baker/RootMotion.Mode mode
RootMotion::Baker::Mode& RootMotion::Baker::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<RootMotion::Baker::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationClip[] animationClips
::Array<UnityEngine::AnimationClip*>*& RootMotion::Baker::dyn_animationClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_animationClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationClips"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::AnimationClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] animationStates
::Array<::Il2CppString*>*& RootMotion::Baker::dyn_animationStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_animationStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationStates"))->offset;
  return *reinterpret_cast<::Array<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean loop
bool& RootMotion::Baker::dyn_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String saveToFolder
::Il2CppString*& RootMotion::Baker::dyn_saveToFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_saveToFolder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveToFolder"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String appendName
::Il2CppString*& RootMotion::Baker::dyn_appendName() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_appendName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appendName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String saveName
::Il2CppString*& RootMotion::Baker::dyn_saveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_saveName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isBaking>k__BackingField
bool& RootMotion::Baker::dyn_$isBaking$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_$isBaking$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isBaking>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <bakingProgress>k__BackingField
float& RootMotion::Baker::dyn_$bakingProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_$bakingProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bakingProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animator animator
UnityEngine::Animator*& RootMotion::Baker::dyn_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animator"))->offset;
  return *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.PlayableDirector director
UnityEngine::Playables::PlayableDirector*& RootMotion::Baker::dyn_director() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_director");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "director"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <clipLength>k__BackingField
float& RootMotion::Baker::dyn_$clipLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::dyn_$clipLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clipLength>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.Baker.get_isBaking
bool RootMotion::Baker::get_isBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::get_isBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.set_isBaking
void RootMotion::Baker::set_isBaking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::set_isBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RootMotion.Baker.get_bakingProgress
float RootMotion::Baker::get_bakingProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::get_bakingProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakingProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.set_bakingProgress
void RootMotion::Baker::set_bakingProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::set_bakingProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bakingProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RootMotion.Baker.get_clipLength
float RootMotion::Baker::get_clipLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::get_clipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.set_clipLength
void RootMotion::Baker::set_clipLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::set_clipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RootMotion.Baker.OpenUserManual
void RootMotion::Baker::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.OpenScriptReference
void RootMotion::Baker::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.SupportGroup
void RootMotion::Baker::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.ASThread
void RootMotion::Baker::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.GetCharacterRoot
UnityEngine::Transform* RootMotion::Baker::GetCharacterRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::GetCharacterRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.OnStartBaking
void RootMotion::Baker::OnStartBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::OnStartBaking");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.OnSetLoopFrame
void RootMotion::Baker::OnSetLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::OnSetLoopFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetLoopFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: RootMotion.Baker.OnSetCurves
void RootMotion::Baker::OnSetCurves(ByRef<UnityEngine::AnimationClip*> clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::OnSetCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(clip));
}
// Autogenerated method: RootMotion.Baker.OnSetKeyframes
void RootMotion::Baker::OnSetKeyframes(float time, bool lastFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::OnSetKeyframes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lastFrame)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time, lastFrame);
}
// Autogenerated method: RootMotion.Baker.BakeClip
void RootMotion::Baker::BakeClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::BakeClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakeClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.StartBaking
void RootMotion::Baker::StartBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::StartBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.StopBaking
void RootMotion::Baker::StopBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::StopBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Baker/RootMotion.Mode
#include "RootMotion/Baker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.Baker/RootMotion.Mode AnimationClips
RootMotion::Baker::Mode RootMotion::Baker::Mode::_get_AnimationClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::_get_AnimationClips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Baker::Mode>("RootMotion", "Baker/Mode", "AnimationClips"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Baker/RootMotion.Mode AnimationClips
void RootMotion::Baker::Mode::_set_AnimationClips(RootMotion::Baker::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::_set_AnimationClips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Baker/Mode", "AnimationClips", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Baker/RootMotion.Mode AnimationStates
RootMotion::Baker::Mode RootMotion::Baker::Mode::_get_AnimationStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::_get_AnimationStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Baker::Mode>("RootMotion", "Baker/Mode", "AnimationStates"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Baker/RootMotion.Mode AnimationStates
void RootMotion::Baker::Mode::_set_AnimationStates(RootMotion::Baker::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::_set_AnimationStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Baker/Mode", "AnimationStates", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Baker/RootMotion.Mode PlayableDirector
RootMotion::Baker::Mode RootMotion::Baker::Mode::_get_PlayableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::_get_PlayableDirector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Baker::Mode>("RootMotion", "Baker/Mode", "PlayableDirector"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Baker/RootMotion.Mode PlayableDirector
void RootMotion::Baker::Mode::_set_PlayableDirector(RootMotion::Baker::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::_set_PlayableDirector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Baker/Mode", "PlayableDirector", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Baker/RootMotion.Mode Realtime
RootMotion::Baker::Mode RootMotion::Baker::Mode::_get_Realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::_get_Realtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Baker::Mode>("RootMotion", "Baker/Mode", "Realtime"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Baker/RootMotion.Mode Realtime
void RootMotion::Baker::Mode::_set_Realtime(RootMotion::Baker::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::_set_Realtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Baker/Mode", "Realtime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& RootMotion::Baker::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Baker::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.GenericBaker
#include "RootMotion/GenericBaker.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.BakerTransform
#include "RootMotion/BakerTransform.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean markAsLegacy
bool& RootMotion::GenericBaker::dyn_markAsLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::dyn_markAsLegacy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "markAsLegacy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform root
UnityEngine::Transform*& RootMotion::GenericBaker::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rootNode
UnityEngine::Transform*& RootMotion::GenericBaker::dyn_rootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::dyn_rootNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootNode"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] ignoreList
::Array<UnityEngine::Transform*>*& RootMotion::GenericBaker::dyn_ignoreList() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::dyn_ignoreList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreList"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] bakePositionList
::Array<UnityEngine::Transform*>*& RootMotion::GenericBaker::dyn_bakePositionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::dyn_bakePositionList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bakePositionList"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.BakerTransform[] children
::Array<RootMotion::BakerTransform*>*& RootMotion::GenericBaker::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::Array<RootMotion::BakerTransform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.BakerTransform rootChild
RootMotion::BakerTransform*& RootMotion::GenericBaker::dyn_rootChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::dyn_rootChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootChild"))->offset;
  return *reinterpret_cast<RootMotion::BakerTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 rootChildIndex
int& RootMotion::GenericBaker::dyn_rootChildIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::dyn_rootChildIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootChildIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.GenericBaker.Awake
void RootMotion::GenericBaker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.GenericBaker.IsIgnored
bool RootMotion::GenericBaker::IsIgnored(UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::IsIgnored");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIgnored", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated method: RootMotion.GenericBaker.BakePosition
bool RootMotion::GenericBaker::BakePosition(UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::BakePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated method: RootMotion.GenericBaker.GetCharacterRoot
UnityEngine::Transform* RootMotion::GenericBaker::GetCharacterRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::GetCharacterRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.GenericBaker.OnStartBaking
void RootMotion::GenericBaker::OnStartBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::OnStartBaking");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.GenericBaker.OnSetLoopFrame
void RootMotion::GenericBaker::OnSetLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::OnSetLoopFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetLoopFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: RootMotion.GenericBaker.OnSetCurves
void RootMotion::GenericBaker::OnSetCurves(ByRef<UnityEngine::AnimationClip*> clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::OnSetCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(clip));
}
// Autogenerated method: RootMotion.GenericBaker.OnSetKeyframes
void RootMotion::GenericBaker::OnSetKeyframes(float time, bool lastFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::GenericBaker::OnSetKeyframes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lastFrame)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time, lastFrame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.TQ
#include "RootMotion/TQ.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 t
UnityEngine::Vector3& RootMotion::TQ::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::TQ::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion q
UnityEngine::Quaternion& RootMotion::TQ::dyn_q() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::TQ::dyn_q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "q"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.AvatarUtility
#include "RootMotion/AvatarUtility.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
// Including type: RootMotion.TQ
#include "RootMotion/TQ.hpp"
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.AvatarUtility.GetPostRotation
UnityEngine::Quaternion RootMotion::AvatarUtility::GetPostRotation(UnityEngine::Avatar* avatar, UnityEngine::AvatarIKGoal avatarIKGoal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AvatarUtility::GetPostRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AvatarUtility", "GetPostRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(avatarIKGoal)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatar, avatarIKGoal);
}
// Autogenerated method: RootMotion.AvatarUtility.GetIKGoalTQ
RootMotion::TQ* RootMotion::AvatarUtility::GetIKGoalTQ(UnityEngine::Avatar* avatar, float humanScale, UnityEngine::AvatarIKGoal avatarIKGoal, RootMotion::TQ* bodyPositionRotation, RootMotion::TQ* boneTQ) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AvatarUtility::GetIKGoalTQ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AvatarUtility", "GetIKGoalTQ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(humanScale), ::il2cpp_utils::ExtractType(avatarIKGoal), ::il2cpp_utils::ExtractType(bodyPositionRotation), ::il2cpp_utils::ExtractType(boneTQ)})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::TQ*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatar, humanScale, avatarIKGoal, bodyPositionRotation, boneTQ);
}
// Autogenerated method: RootMotion.AvatarUtility.HumanIDFromAvatarIKGoal
UnityEngine::HumanBodyBones RootMotion::AvatarUtility::HumanIDFromAvatarIKGoal(UnityEngine::AvatarIKGoal avatarIKGoal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AvatarUtility::HumanIDFromAvatarIKGoal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AvatarUtility", "HumanIDFromAvatarIKGoal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarIKGoal)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::HumanBodyBones, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarIKGoal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BakerUtilities
#include "RootMotion/BakerUtilities.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.BakerUtilities.ReduceKeyframes
void RootMotion::BakerUtilities::ReduceKeyframes(UnityEngine::AnimationCurve* curve, float maxError) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerUtilities::ReduceKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BakerUtilities", "ReduceKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve), ::il2cpp_utils::ExtractType(maxError)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curve, maxError);
}
// Autogenerated method: RootMotion.BakerUtilities.GetReducedKeyframes
::Array<UnityEngine::Keyframe>* RootMotion::BakerUtilities::GetReducedKeyframes(UnityEngine::AnimationCurve* curve, float maxError) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerUtilities::GetReducedKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BakerUtilities", "GetReducedKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve), ::il2cpp_utils::ExtractType(maxError)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Keyframe>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curve, maxError);
}
// Autogenerated method: RootMotion.BakerUtilities.SetLoopFrame
void RootMotion::BakerUtilities::SetLoopFrame(float time, UnityEngine::AnimationCurve* curve) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerUtilities::SetLoopFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BakerUtilities", "SetLoopFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(curve)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, curve);
}
// Autogenerated method: RootMotion.BakerUtilities.SetTangentMode
void RootMotion::BakerUtilities::SetTangentMode(UnityEngine::AnimationCurve* curve) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerUtilities::SetTangentMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BakerUtilities", "SetTangentMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curve);
}
// Autogenerated method: RootMotion.BakerUtilities.EnsureQuaternionContinuity
UnityEngine::Quaternion RootMotion::BakerUtilities::EnsureQuaternionContinuity(UnityEngine::Quaternion lastQ, UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerUtilities::EnsureQuaternionContinuity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BakerUtilities", "EnsureQuaternionContinuity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastQ), ::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lastQ, q);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BakerHumanoidQT
#include "RootMotion/BakerHumanoidQT.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform transform
UnityEngine::Transform*& RootMotion::BakerHumanoidQT::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Qx
::Il2CppString*& RootMotion::BakerHumanoidQT::dyn_Qx() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_Qx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Qx"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Qy
::Il2CppString*& RootMotion::BakerHumanoidQT::dyn_Qy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_Qy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Qy"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Qz
::Il2CppString*& RootMotion::BakerHumanoidQT::dyn_Qz() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_Qz");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Qz"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Qw
::Il2CppString*& RootMotion::BakerHumanoidQT::dyn_Qw() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_Qw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Qw"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Tx
::Il2CppString*& RootMotion::BakerHumanoidQT::dyn_Tx() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_Tx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tx"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Ty
::Il2CppString*& RootMotion::BakerHumanoidQT::dyn_Ty() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_Ty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ty"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Tz
::Il2CppString*& RootMotion::BakerHumanoidQT::dyn_Tz() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_Tz");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tz"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve rotX
UnityEngine::AnimationCurve*& RootMotion::BakerHumanoidQT::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve rotY
UnityEngine::AnimationCurve*& RootMotion::BakerHumanoidQT::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve rotZ
UnityEngine::AnimationCurve*& RootMotion::BakerHumanoidQT::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve rotW
UnityEngine::AnimationCurve*& RootMotion::BakerHumanoidQT::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve posX
UnityEngine::AnimationCurve*& RootMotion::BakerHumanoidQT::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve posY
UnityEngine::AnimationCurve*& RootMotion::BakerHumanoidQT::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve posZ
UnityEngine::AnimationCurve*& RootMotion::BakerHumanoidQT::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AvatarIKGoal goal
UnityEngine::AvatarIKGoal& RootMotion::BakerHumanoidQT::dyn_goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_goal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goal"))->offset;
  return *reinterpret_cast<UnityEngine::AvatarIKGoal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion lastQ
UnityEngine::Quaternion& RootMotion::BakerHumanoidQT::dyn_lastQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_lastQ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastQ"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean lastQSet
bool& RootMotion::BakerHumanoidQT::dyn_lastQSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::dyn_lastQSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastQSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.BakerHumanoidQT.Reset
void RootMotion::BakerHumanoidQT::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.BakerHumanoidQT.SetIKKeyframes
void RootMotion::BakerHumanoidQT::SetIKKeyframes(float time, UnityEngine::Avatar* avatar, float humanScale, UnityEngine::Vector3 bodyPosition, UnityEngine::Quaternion bodyRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::SetIKKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(humanScale), ::il2cpp_utils::ExtractType(bodyPosition), ::il2cpp_utils::ExtractType(bodyRotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time, avatar, humanScale, bodyPosition, bodyRotation);
}
// Autogenerated method: RootMotion.BakerHumanoidQT.SetKeyframes
void RootMotion::BakerHumanoidQT::SetKeyframes(float time, UnityEngine::Vector3 pos, UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::SetKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time, pos, rot);
}
// Autogenerated method: RootMotion.BakerHumanoidQT.MoveLastKeyframes
void RootMotion::BakerHumanoidQT::MoveLastKeyframes(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::MoveLastKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLastKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: RootMotion.BakerHumanoidQT.SetLoopFrame
void RootMotion::BakerHumanoidQT::SetLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::SetLoopFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLoopFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: RootMotion.BakerHumanoidQT.MoveLastKeyframe
void RootMotion::BakerHumanoidQT::MoveLastKeyframe(float time, UnityEngine::AnimationCurve* curve) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::MoveLastKeyframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLastKeyframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(curve)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time, curve);
}
// Autogenerated method: RootMotion.BakerHumanoidQT.MultiplyLength
void RootMotion::BakerHumanoidQT::MultiplyLength(UnityEngine::AnimationCurve* curve, float mlp) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::MultiplyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MultiplyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve), ::il2cpp_utils::ExtractType(mlp)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, curve, mlp);
}
// Autogenerated method: RootMotion.BakerHumanoidQT.SetCurves
void RootMotion::BakerHumanoidQT::SetCurves(ByRef<UnityEngine::AnimationClip*> clip, float maxError, float lengthMlp) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerHumanoidQT::SetCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(maxError), ::il2cpp_utils::ExtractType(lengthMlp)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(clip), maxError, lengthMlp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BakerMuscle
#include "RootMotion/BakerMuscle.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve curve
UnityEngine::AnimationCurve*& RootMotion::BakerMuscle::dyn_curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::dyn_curve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 muscleIndex
int& RootMotion::BakerMuscle::dyn_muscleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::dyn_muscleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muscleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String propertyName
::Il2CppString*& RootMotion::BakerMuscle::dyn_propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::dyn_propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.BakerMuscle.MuscleNameToPropertyName
::Il2CppString* RootMotion::BakerMuscle::MuscleNameToPropertyName(::Il2CppString* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::MuscleNameToPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuscleNameToPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, n);
}
// Autogenerated method: RootMotion.BakerMuscle.MultiplyLength
void RootMotion::BakerMuscle::MultiplyLength(UnityEngine::AnimationCurve* curve, float mlp) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::MultiplyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MultiplyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve), ::il2cpp_utils::ExtractType(mlp)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, curve, mlp);
}
// Autogenerated method: RootMotion.BakerMuscle.SetCurves
void RootMotion::BakerMuscle::SetCurves(ByRef<UnityEngine::AnimationClip*> clip, float maxError, float lengthMlp) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::SetCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(maxError), ::il2cpp_utils::ExtractType(lengthMlp)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(clip), maxError, lengthMlp);
}
// Autogenerated method: RootMotion.BakerMuscle.Reset
void RootMotion::BakerMuscle::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.BakerMuscle.SetKeyframe
void RootMotion::BakerMuscle::SetKeyframe(float time, ::Array<float>* muscles) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::SetKeyframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(muscles)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time, muscles);
}
// Autogenerated method: RootMotion.BakerMuscle.SetLoopFrame
void RootMotion::BakerMuscle::SetLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerMuscle::SetLoopFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLoopFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BakerTransform
#include "RootMotion/BakerTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
UnityEngine::Transform*& RootMotion::BakerTransform::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve posX
UnityEngine::AnimationCurve*& RootMotion::BakerTransform::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve posY
UnityEngine::AnimationCurve*& RootMotion::BakerTransform::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve posZ
UnityEngine::AnimationCurve*& RootMotion::BakerTransform::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve rotX
UnityEngine::AnimationCurve*& RootMotion::BakerTransform::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve rotY
UnityEngine::AnimationCurve*& RootMotion::BakerTransform::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve rotZ
UnityEngine::AnimationCurve*& RootMotion::BakerTransform::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve rotW
UnityEngine::AnimationCurve*& RootMotion::BakerTransform::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String relativePath
::Il2CppString*& RootMotion::BakerTransform::dyn_relativePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_relativePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relativePath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recordPosition
bool& RootMotion::BakerTransform::dyn_recordPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_recordPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 relativePosition
UnityEngine::Vector3& RootMotion::BakerTransform::dyn_relativePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_relativePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relativePosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRootNode
bool& RootMotion::BakerTransform::dyn_isRootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_isRootNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRootNode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion relativeRotation
UnityEngine::Quaternion& RootMotion::BakerTransform::dyn_relativeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::dyn_relativeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relativeRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.BakerTransform.SetRelativeSpace
void RootMotion::BakerTransform::SetRelativeSpace(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::SetRelativeSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRelativeSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, position, rotation);
}
// Autogenerated method: RootMotion.BakerTransform.SetCurves
void RootMotion::BakerTransform::SetCurves(ByRef<UnityEngine::AnimationClip*> clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::SetCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(clip));
}
// Autogenerated method: RootMotion.BakerTransform.AddRootMotionCurves
void RootMotion::BakerTransform::AddRootMotionCurves(ByRef<UnityEngine::AnimationClip*> clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::AddRootMotionCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRootMotionCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(clip));
}
// Autogenerated method: RootMotion.BakerTransform.Reset
void RootMotion::BakerTransform::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.BakerTransform.ReduceKeyframes
void RootMotion::BakerTransform::ReduceKeyframes(float maxError) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::ReduceKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxError)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, maxError);
}
// Autogenerated method: RootMotion.BakerTransform.SetKeyframes
void RootMotion::BakerTransform::SetKeyframes(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::SetKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: RootMotion.BakerTransform.AddLoopFrame
void RootMotion::BakerTransform::AddLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BakerTransform::AddLoopFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLoopFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.HumanoidBaker
#include "RootMotion/HumanoidBaker.hpp"
// Including type: RootMotion.BakerMuscle
#include "RootMotion/BakerMuscle.hpp"
// Including type: RootMotion.BakerHumanoidQT
#include "RootMotion/BakerHumanoidQT.hpp"
// Including type: UnityEngine.HumanPoseHandler
#include "UnityEngine/HumanPoseHandler.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean bakeHandIK
bool& RootMotion::HumanoidBaker::dyn_bakeHandIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_bakeHandIK");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bakeHandIK"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single IKKeyReductionError
float& RootMotion::HumanoidBaker::dyn_IKKeyReductionError() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_IKKeyReductionError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKKeyReductionError"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 muscleFrameRateDiv
int& RootMotion::HumanoidBaker::dyn_muscleFrameRateDiv() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_muscleFrameRateDiv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muscleFrameRateDiv"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.BakerMuscle[] bakerMuscles
::Array<RootMotion::BakerMuscle*>*& RootMotion::HumanoidBaker::dyn_bakerMuscles() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_bakerMuscles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bakerMuscles"))->offset;
  return *reinterpret_cast<::Array<RootMotion::BakerMuscle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.BakerHumanoidQT rootQT
RootMotion::BakerHumanoidQT*& RootMotion::HumanoidBaker::dyn_rootQT() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_rootQT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootQT"))->offset;
  return *reinterpret_cast<RootMotion::BakerHumanoidQT**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.BakerHumanoidQT leftFootQT
RootMotion::BakerHumanoidQT*& RootMotion::HumanoidBaker::dyn_leftFootQT() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_leftFootQT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftFootQT"))->offset;
  return *reinterpret_cast<RootMotion::BakerHumanoidQT**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.BakerHumanoidQT rightFootQT
RootMotion::BakerHumanoidQT*& RootMotion::HumanoidBaker::dyn_rightFootQT() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_rightFootQT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightFootQT"))->offset;
  return *reinterpret_cast<RootMotion::BakerHumanoidQT**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.BakerHumanoidQT leftHandQT
RootMotion::BakerHumanoidQT*& RootMotion::HumanoidBaker::dyn_leftHandQT() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_leftHandQT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandQT"))->offset;
  return *reinterpret_cast<RootMotion::BakerHumanoidQT**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.BakerHumanoidQT rightHandQT
RootMotion::BakerHumanoidQT*& RootMotion::HumanoidBaker::dyn_rightHandQT() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_rightHandQT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandQT"))->offset;
  return *reinterpret_cast<RootMotion::BakerHumanoidQT**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] muscles
::Array<float>*& RootMotion::HumanoidBaker::dyn_muscles() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_muscles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muscles"))->offset;
  return *reinterpret_cast<::Array<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.HumanPose pose
UnityEngine::HumanPose& RootMotion::HumanoidBaker::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_pose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<UnityEngine::HumanPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.HumanPoseHandler handler
UnityEngine::HumanPoseHandler*& RootMotion::HumanoidBaker::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<UnityEngine::HumanPoseHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bodyPosition
UnityEngine::Vector3& RootMotion::HumanoidBaker::dyn_bodyPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_bodyPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion bodyRotation
UnityEngine::Quaternion& RootMotion::HumanoidBaker::dyn_bodyRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_bodyRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mN
int& RootMotion::HumanoidBaker::dyn_mN() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_mN");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mN"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion lastBodyRotation
UnityEngine::Quaternion& RootMotion::HumanoidBaker::dyn_lastBodyRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::dyn_lastBodyRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBodyRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.HumanoidBaker.Awake
void RootMotion::HumanoidBaker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.HumanoidBaker.UpdateHumanPose
void RootMotion::HumanoidBaker::UpdateHumanPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::UpdateHumanPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHumanPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.HumanoidBaker.GetCharacterRoot
UnityEngine::Transform* RootMotion::HumanoidBaker::GetCharacterRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::GetCharacterRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.HumanoidBaker.OnStartBaking
void RootMotion::HumanoidBaker::OnStartBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::OnStartBaking");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.HumanoidBaker.OnSetLoopFrame
void RootMotion::HumanoidBaker::OnSetLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::OnSetLoopFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetLoopFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: RootMotion.HumanoidBaker.OnSetCurves
void RootMotion::HumanoidBaker::OnSetCurves(ByRef<UnityEngine::AnimationClip*> clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::OnSetCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(clip));
}
// Autogenerated method: RootMotion.HumanoidBaker.OnSetKeyframes
void RootMotion::HumanoidBaker::OnSetKeyframes(float time, bool lastFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::HumanoidBaker::OnSetKeyframes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lastFrame)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time, lastFrame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Axis
#include "RootMotion/Axis.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.Axis X
RootMotion::Axis RootMotion::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Axis>("RootMotion", "Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Axis X
void RootMotion::Axis::_set_X(RootMotion::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Axis Y
RootMotion::Axis RootMotion::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Axis>("RootMotion", "Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Axis Y
void RootMotion::Axis::_set_Y(RootMotion::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Axis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Axis Z
RootMotion::Axis RootMotion::Axis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Axis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Axis>("RootMotion", "Axis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Axis Z
void RootMotion::Axis::_set_Z(RootMotion::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Axis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Axis", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& RootMotion::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.AxisTools
#include "RootMotion/AxisTools.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.Axis
#include "RootMotion/Axis.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.AxisTools.ToVector3
UnityEngine::Vector3 RootMotion::AxisTools::ToVector3(RootMotion::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AxisTools::ToVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AxisTools", "ToVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, axis);
}
// Autogenerated method: RootMotion.AxisTools.ToAxis
RootMotion::Axis RootMotion::AxisTools::ToAxis(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AxisTools::ToAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AxisTools", "ToAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::Axis, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: RootMotion.AxisTools.GetAxisToPoint
RootMotion::Axis RootMotion::AxisTools::GetAxisToPoint(UnityEngine::Transform* t, UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AxisTools::GetAxisToPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AxisTools", "GetAxisToPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::Axis, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, worldPosition);
}
// Autogenerated method: RootMotion.AxisTools.GetAxisToDirection
RootMotion::Axis RootMotion::AxisTools::GetAxisToDirection(UnityEngine::Transform* t, UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AxisTools::GetAxisToDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AxisTools", "GetAxisToDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::Axis, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, direction);
}
// Autogenerated method: RootMotion.AxisTools.GetAxisVectorToPoint
UnityEngine::Vector3 RootMotion::AxisTools::GetAxisVectorToPoint(UnityEngine::Transform* t, UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AxisTools::GetAxisVectorToPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AxisTools", "GetAxisVectorToPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, worldPosition);
}
// Autogenerated method: RootMotion.AxisTools.GetAxisVectorToDirection
UnityEngine::Vector3 RootMotion::AxisTools::GetAxisVectorToDirection(UnityEngine::Transform* t, UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AxisTools::GetAxisVectorToDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AxisTools", "GetAxisVectorToDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, direction);
}
// Autogenerated method: RootMotion.AxisTools.GetAxisVectorToDirection
UnityEngine::Vector3 RootMotion::AxisTools::GetAxisVectorToDirection(UnityEngine::Quaternion r, UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::AxisTools::GetAxisVectorToDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "AxisTools", "GetAxisVectorToDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, r, direction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.BipedLimbOrientations
#include "RootMotion/BipedLimbOrientations.hpp"
// Including type: RootMotion.BipedLimbOrientations/RootMotion.LimbOrientation
#include "RootMotion/BipedLimbOrientations_LimbOrientation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.BipedLimbOrientations/RootMotion.LimbOrientation leftArm
RootMotion::BipedLimbOrientations::LimbOrientation*& RootMotion::BipedLimbOrientations::dyn_leftArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::dyn_leftArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftArm"))->offset;
  return *reinterpret_cast<RootMotion::BipedLimbOrientations::LimbOrientation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.BipedLimbOrientations/RootMotion.LimbOrientation rightArm
RootMotion::BipedLimbOrientations::LimbOrientation*& RootMotion::BipedLimbOrientations::dyn_rightArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::dyn_rightArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightArm"))->offset;
  return *reinterpret_cast<RootMotion::BipedLimbOrientations::LimbOrientation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.BipedLimbOrientations/RootMotion.LimbOrientation leftLeg
RootMotion::BipedLimbOrientations::LimbOrientation*& RootMotion::BipedLimbOrientations::dyn_leftLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::dyn_leftLeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftLeg"))->offset;
  return *reinterpret_cast<RootMotion::BipedLimbOrientations::LimbOrientation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.BipedLimbOrientations/RootMotion.LimbOrientation rightLeg
RootMotion::BipedLimbOrientations::LimbOrientation*& RootMotion::BipedLimbOrientations::dyn_rightLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::dyn_rightLeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightLeg"))->offset;
  return *reinterpret_cast<RootMotion::BipedLimbOrientations::LimbOrientation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.BipedLimbOrientations.get_UMA
RootMotion::BipedLimbOrientations* RootMotion::BipedLimbOrientations::get_UMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::get_UMA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedLimbOrientations", "get_UMA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedLimbOrientations*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: RootMotion.BipedLimbOrientations.get_MaxBiped
RootMotion::BipedLimbOrientations* RootMotion::BipedLimbOrientations::get_MaxBiped() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::get_MaxBiped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedLimbOrientations", "get_MaxBiped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedLimbOrientations*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.BipedLimbOrientations/RootMotion.LimbOrientation
#include "RootMotion/BipedLimbOrientations_LimbOrientation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 upperBoneForwardAxis
UnityEngine::Vector3& RootMotion::BipedLimbOrientations::LimbOrientation::dyn_upperBoneForwardAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::LimbOrientation::dyn_upperBoneForwardAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upperBoneForwardAxis"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lowerBoneForwardAxis
UnityEngine::Vector3& RootMotion::BipedLimbOrientations::LimbOrientation::dyn_lowerBoneForwardAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::LimbOrientation::dyn_lowerBoneForwardAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowerBoneForwardAxis"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lastBoneLeftAxis
UnityEngine::Vector3& RootMotion::BipedLimbOrientations::LimbOrientation::dyn_lastBoneLeftAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::LimbOrientation::dyn_lastBoneLeftAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBoneLeftAxis"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BipedNaming
#include "RootMotion/BipedNaming.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String[] typeLeft
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeLeft
void RootMotion::BipedNaming::_set_typeLeft(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeLeft", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeRight
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeRight"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeRight
void RootMotion::BipedNaming::_set_typeRight(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeRight", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeSpine
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeSpine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeSpine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeSpine"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeSpine
void RootMotion::BipedNaming::_set_typeSpine(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeSpine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeSpine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeHead
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeHead"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeHead
void RootMotion::BipedNaming::_set_typeHead(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeHead", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeArm
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeArm"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeArm
void RootMotion::BipedNaming::_set_typeArm(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeArm", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeLeg
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeLeg"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeLeg
void RootMotion::BipedNaming::_set_typeLeg(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeLeg", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeTail
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeTail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeTail"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeTail
void RootMotion::BipedNaming::_set_typeTail(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeTail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeTail", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeEye
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeEye"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeEye
void RootMotion::BipedNaming::_set_typeEye(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeEye", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExclude
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExclude() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeExclude");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExclude"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExclude
void RootMotion::BipedNaming::_set_typeExclude(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeExclude");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExclude", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeSpine
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeSpine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeExcludeSpine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeSpine"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeSpine
void RootMotion::BipedNaming::_set_typeExcludeSpine(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeExcludeSpine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeSpine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeHead
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeExcludeHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeHead"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeHead
void RootMotion::BipedNaming::_set_typeExcludeHead(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeExcludeHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeHead", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeArm
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeExcludeArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeArm"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeArm
void RootMotion::BipedNaming::_set_typeExcludeArm(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeExcludeArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeArm", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeLeg
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeExcludeLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeLeg"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeLeg
void RootMotion::BipedNaming::_set_typeExcludeLeg(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeExcludeLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeLeg", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeTail
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeExcludeTail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeTail"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeTail
void RootMotion::BipedNaming::_set_typeExcludeTail(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeExcludeTail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeTail", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeEye
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_typeExcludeEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeEye"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeEye
void RootMotion::BipedNaming::_set_typeExcludeEye(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_typeExcludeEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeEye", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] pelvis
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_pelvis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "pelvis"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] pelvis
void RootMotion::BipedNaming::_set_pelvis(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_pelvis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "pelvis", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] hand
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_hand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "hand"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] hand
void RootMotion::BipedNaming::_set_hand(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_hand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "hand", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] foot
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_foot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_get_foot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "foot"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] foot
void RootMotion::BipedNaming::_set_foot(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::_set_foot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "foot", value));
}
// Autogenerated method: RootMotion.BipedNaming..cctor
void RootMotion::BipedNaming::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfType
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfType(RootMotion::BipedNaming::BoneType boneType, ::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::GetBonesOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBonesOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneType), ::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneType, bones);
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfSide
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfSide(RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::GetBonesOfSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBonesOfSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneSide), ::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneSide, bones);
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfTypeAndSide
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfTypeAndSide(RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::GetBonesOfTypeAndSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBonesOfTypeAndSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneType), ::il2cpp_utils::ExtractType(boneSide), ::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneType, boneSide, bones);
}
// Autogenerated method: RootMotion.BipedNaming.GetFirstBoneOfTypeAndSide
UnityEngine::Transform* RootMotion::BipedNaming::GetFirstBoneOfTypeAndSide(RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::GetFirstBoneOfTypeAndSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetFirstBoneOfTypeAndSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneType), ::il2cpp_utils::ExtractType(boneSide), ::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneType, boneSide, bones);
}
// Autogenerated method: RootMotion.BipedNaming.GetNamingMatch
UnityEngine::Transform* RootMotion::BipedNaming::GetNamingMatch(::Array<UnityEngine::Transform*>* transforms, ::Array<::Array<::Il2CppString*>*>* namings) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::GetNamingMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetNamingMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transforms), ::il2cpp_utils::ExtractType(namings)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transforms, namings);
}
// Creating initializer_list -> params proxy for: UnityEngine.Transform GetNamingMatch(UnityEngine.Transform[] transforms, params System.String[][] namings)
UnityEngine::Transform* RootMotion::BipedNaming::GetNamingMatch(::Array<UnityEngine::Transform*>* transforms, std::initializer_list<::Array<::Il2CppString*>*> namings) {
  return RootMotion::BipedNaming::GetNamingMatch(transforms, ::Array<::Array<::Il2CppString*>*>::New(namings));
}
// Autogenerated method: RootMotion.BipedNaming.GetBoneType
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::GetBoneType(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::GetBoneType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBoneType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedNaming::BoneType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.GetBoneSide
RootMotion::BipedNaming::BoneSide RootMotion::BipedNaming::GetBoneSide(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::GetBoneSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBoneSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedNaming::BoneSide, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.GetBone
UnityEngine::Transform* RootMotion::BipedNaming::GetBone(::Array<UnityEngine::Transform*>* transforms, RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<::Array<::Il2CppString*>*>* namings) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::GetBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transforms), ::il2cpp_utils::ExtractType(boneType), ::il2cpp_utils::ExtractType(boneSide), ::il2cpp_utils::ExtractType(namings)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transforms, boneType, boneSide, namings);
}
// Creating initializer_list -> params proxy for: UnityEngine.Transform GetBone(UnityEngine.Transform[] transforms, RootMotion.BipedNaming/RootMotion.BoneType boneType, RootMotion.BipedNaming/RootMotion.BoneSide boneSide, params System.String[][] namings)
UnityEngine::Transform* RootMotion::BipedNaming::GetBone(::Array<UnityEngine::Transform*>* transforms, RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, std::initializer_list<::Array<::Il2CppString*>*> namings) {
  return RootMotion::BipedNaming::GetBone(transforms, boneType, boneSide, ::Array<::Array<::Il2CppString*>*>::New(namings));
}
// Autogenerated method: RootMotion.BipedNaming.isLeft
bool RootMotion::BipedNaming::isLeft(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isRight
bool RootMotion::BipedNaming::isRight(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isSpine
bool RootMotion::BipedNaming::isSpine(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isSpine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isSpine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isHead
bool RootMotion::BipedNaming::isHead(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isArm
bool RootMotion::BipedNaming::isArm(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isArm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isArm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isLeg
bool RootMotion::BipedNaming::isLeg(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isLeg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isLeg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isTail
bool RootMotion::BipedNaming::isTail(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isTail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isTail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isEye
bool RootMotion::BipedNaming::isEye(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isEye");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isEye", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isTypeExclude
bool RootMotion::BipedNaming::isTypeExclude(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::isTypeExclude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isTypeExclude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.matchesNaming
bool RootMotion::BipedNaming::matchesNaming(::Il2CppString* boneName, ::Array<::Il2CppString*>* namingConvention) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::matchesNaming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "matchesNaming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName), ::il2cpp_utils::ExtractType(namingConvention)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName, namingConvention);
}
// Autogenerated method: RootMotion.BipedNaming.excludesNaming
bool RootMotion::BipedNaming::excludesNaming(::Il2CppString* boneName, ::Array<::Il2CppString*>* namingConvention) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::excludesNaming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "excludesNaming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName), ::il2cpp_utils::ExtractType(namingConvention)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName, namingConvention);
}
// Autogenerated method: RootMotion.BipedNaming.matchesLastLetter
bool RootMotion::BipedNaming::matchesLastLetter(::Il2CppString* boneName, ::Array<::Il2CppString*>* namingConvention) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::matchesLastLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "matchesLastLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName), ::il2cpp_utils::ExtractType(namingConvention)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName, namingConvention);
}
// Autogenerated method: RootMotion.BipedNaming.LastLetterIs
bool RootMotion::BipedNaming::LastLetterIs(::Il2CppString* boneName, ::Il2CppString* letter) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::LastLetterIs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "LastLetterIs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName), ::il2cpp_utils::ExtractType(letter)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName, letter);
}
// Autogenerated method: RootMotion.BipedNaming.firstLetter
::Il2CppString* RootMotion::BipedNaming::firstLetter(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::firstLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "firstLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.lastLetter
::Il2CppString* RootMotion::BipedNaming::lastLetter(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::lastLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "lastLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.BipedNaming/RootMotion.BoneType
#include "RootMotion/BipedNaming.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneType Unassigned
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::BoneType::_get_Unassigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_get_Unassigned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneType>("RootMotion", "BipedNaming/BoneType", "Unassigned"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneType Unassigned
void RootMotion::BipedNaming::BoneType::_set_Unassigned(RootMotion::BipedNaming::BoneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_set_Unassigned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneType", "Unassigned", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneType Spine
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::BoneType::_get_Spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_get_Spine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneType>("RootMotion", "BipedNaming/BoneType", "Spine"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneType Spine
void RootMotion::BipedNaming::BoneType::_set_Spine(RootMotion::BipedNaming::BoneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_set_Spine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneType", "Spine", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneType Head
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::BoneType::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneType>("RootMotion", "BipedNaming/BoneType", "Head"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneType Head
void RootMotion::BipedNaming::BoneType::_set_Head(RootMotion::BipedNaming::BoneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneType", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneType Arm
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::BoneType::_get_Arm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_get_Arm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneType>("RootMotion", "BipedNaming/BoneType", "Arm"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneType Arm
void RootMotion::BipedNaming::BoneType::_set_Arm(RootMotion::BipedNaming::BoneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_set_Arm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneType", "Arm", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneType Leg
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::BoneType::_get_Leg() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_get_Leg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneType>("RootMotion", "BipedNaming/BoneType", "Leg"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneType Leg
void RootMotion::BipedNaming::BoneType::_set_Leg(RootMotion::BipedNaming::BoneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_set_Leg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneType", "Leg", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneType Tail
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::BoneType::_get_Tail() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_get_Tail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneType>("RootMotion", "BipedNaming/BoneType", "Tail"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneType Tail
void RootMotion::BipedNaming::BoneType::_set_Tail(RootMotion::BipedNaming::BoneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_set_Tail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneType", "Tail", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneType Eye
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::BoneType::_get_Eye() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_get_Eye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneType>("RootMotion", "BipedNaming/BoneType", "Eye"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneType Eye
void RootMotion::BipedNaming::BoneType::_set_Eye(RootMotion::BipedNaming::BoneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::_set_Eye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneType", "Eye", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& RootMotion::BipedNaming::BoneType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.BipedNaming/RootMotion.BoneSide
#include "RootMotion/BipedNaming.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneSide Center
RootMotion::BipedNaming::BoneSide RootMotion::BipedNaming::BoneSide::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneSide::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneSide>("RootMotion", "BipedNaming/BoneSide", "Center"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneSide Center
void RootMotion::BipedNaming::BoneSide::_set_Center(RootMotion::BipedNaming::BoneSide value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneSide::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneSide", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneSide Left
RootMotion::BipedNaming::BoneSide RootMotion::BipedNaming::BoneSide::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneSide::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneSide>("RootMotion", "BipedNaming/BoneSide", "Left"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneSide Left
void RootMotion::BipedNaming::BoneSide::_set_Left(RootMotion::BipedNaming::BoneSide value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneSide::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneSide", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.BipedNaming/RootMotion.BoneSide Right
RootMotion::BipedNaming::BoneSide RootMotion::BipedNaming::BoneSide::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneSide::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::BipedNaming::BoneSide>("RootMotion", "BipedNaming/BoneSide", "Right"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.BipedNaming/RootMotion.BoneSide Right
void RootMotion::BipedNaming::BoneSide::_set_Right(RootMotion::BipedNaming::BoneSide value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneSide::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming/BoneSide", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& RootMotion::BipedNaming::BoneSide::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedNaming::BoneSide::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BipedReferences
#include "RootMotion/BipedReferences.hpp"
// Including type: RootMotion.BipedReferences/RootMotion.AutoDetectParams
#include "RootMotion/BipedReferences_AutoDetectParams.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform root
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pelvis
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_pelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvis"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftThigh
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_leftThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_leftThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftThigh"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftCalf
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_leftCalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_leftCalf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftCalf"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftFoot
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_leftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_leftFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftFoot"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightThigh
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_rightThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_rightThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightThigh"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightCalf
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_rightCalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_rightCalf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightCalf"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightFoot
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_rightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_rightFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightFoot"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftUpperArm
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_leftUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_leftUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftUpperArm"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftForearm
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_leftForearm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_leftForearm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftForearm"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHand
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightUpperArm
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_rightUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_rightUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightUpperArm"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightForearm
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_rightForearm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_rightForearm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightForearm"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHand
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform head
UnityEngine::Transform*& RootMotion::BipedReferences::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] spine
::Array<UnityEngine::Transform*>*& RootMotion::BipedReferences::dyn_spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_spine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spine"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] eyes
::Array<UnityEngine::Transform*>*& RootMotion::BipedReferences::dyn_eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::dyn_eyes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyes"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.BipedReferences.get_isFilled
bool RootMotion::BipedReferences::get_isFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::get_isFilled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFilled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.BipedReferences.get_isEmpty
bool RootMotion::BipedReferences::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.BipedReferences.IsEmpty
bool RootMotion::BipedReferences::IsEmpty(bool includeRoot) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::IsEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeRoot)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, includeRoot);
}
// Autogenerated method: RootMotion.BipedReferences.Contains
bool RootMotion::BipedReferences::Contains(UnityEngine::Transform* t, bool ignoreRoot) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(ignoreRoot)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, t, ignoreRoot);
}
// Autogenerated method: RootMotion.BipedReferences.AutoDetectReferences
bool RootMotion::BipedReferences::AutoDetectReferences(ByRef<RootMotion::BipedReferences*> references, UnityEngine::Transform* root, RootMotion::BipedReferences::AutoDetectParams autoDetectParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::AutoDetectReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "AutoDetectReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(autoDetectParams)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(references), root, autoDetectParams);
}
// Autogenerated method: RootMotion.BipedReferences.DetectReferencesByNaming
void RootMotion::BipedReferences::DetectReferencesByNaming(ByRef<RootMotion::BipedReferences*> references, UnityEngine::Transform* root, RootMotion::BipedReferences::AutoDetectParams autoDetectParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::DetectReferencesByNaming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "DetectReferencesByNaming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(autoDetectParams)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(references), root, autoDetectParams);
}
// Autogenerated method: RootMotion.BipedReferences.AssignHumanoidReferences
void RootMotion::BipedReferences::AssignHumanoidReferences(ByRef<RootMotion::BipedReferences*> references, UnityEngine::Animator* animator, RootMotion::BipedReferences::AutoDetectParams autoDetectParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::AssignHumanoidReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "AssignHumanoidReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(autoDetectParams)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(references), animator, autoDetectParams);
}
// Autogenerated method: RootMotion.BipedReferences.SetupError
bool RootMotion::BipedReferences::SetupError(RootMotion::BipedReferences* references, ByRef<::Il2CppString*> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::SetupError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "SetupError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(errorMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references, byref(errorMessage));
}
// Autogenerated method: RootMotion.BipedReferences.SetupWarning
bool RootMotion::BipedReferences::SetupWarning(RootMotion::BipedReferences* references, ByRef<::Il2CppString*> warningMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::SetupWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "SetupWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(warningMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references, byref(warningMessage));
}
// Autogenerated method: RootMotion.BipedReferences.IsNeckBone
bool RootMotion::BipedReferences::IsNeckBone(UnityEngine::Transform* bone, UnityEngine::Transform* leftUpperArm) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::IsNeckBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "IsNeckBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone), ::il2cpp_utils::ExtractType(leftUpperArm)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bone, leftUpperArm);
}
// Autogenerated method: RootMotion.BipedReferences.AddBoneToEyes
bool RootMotion::BipedReferences::AddBoneToEyes(UnityEngine::Transform* bone, ByRef<RootMotion::BipedReferences*> references, RootMotion::BipedReferences::AutoDetectParams autoDetectParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::AddBoneToEyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "AddBoneToEyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone), ::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(autoDetectParams)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bone, byref(references), autoDetectParams);
}
// Autogenerated method: RootMotion.BipedReferences.AddBoneToSpine
bool RootMotion::BipedReferences::AddBoneToSpine(UnityEngine::Transform* bone, ByRef<RootMotion::BipedReferences*> references, RootMotion::BipedReferences::AutoDetectParams autoDetectParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::AddBoneToSpine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "AddBoneToSpine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone), ::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(autoDetectParams)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bone, byref(references), autoDetectParams);
}
// Autogenerated method: RootMotion.BipedReferences.DetectLimb
void RootMotion::BipedReferences::DetectLimb(RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ByRef<UnityEngine::Transform*> firstBone, ByRef<UnityEngine::Transform*> secondBone, ByRef<UnityEngine::Transform*> lastBone, ::Array<UnityEngine::Transform*>* transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::DetectLimb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "DetectLimb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneType), ::il2cpp_utils::ExtractType(boneSide), ::il2cpp_utils::ExtractType(firstBone), ::il2cpp_utils::ExtractType(secondBone), ::il2cpp_utils::ExtractType(lastBone), ::il2cpp_utils::ExtractType(transforms)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneType, boneSide, byref(firstBone), byref(secondBone), byref(lastBone), transforms);
}
// Autogenerated method: RootMotion.BipedReferences.AddBoneToHierarchy
void RootMotion::BipedReferences::AddBoneToHierarchy(ByRef<::Array<UnityEngine::Transform*>*> bones, UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::AddBoneToHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "AddBoneToHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(bones), transform);
}
// Autogenerated method: RootMotion.BipedReferences.LimbError
bool RootMotion::BipedReferences::LimbError(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, ByRef<::Il2CppString*> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::LimbError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "LimbError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2), ::il2cpp_utils::ExtractType(bone3), ::il2cpp_utils::ExtractType(errorMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bone1, bone2, bone3, byref(errorMessage));
}
// Autogenerated method: RootMotion.BipedReferences.LimbWarning
bool RootMotion::BipedReferences::LimbWarning(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, ByRef<::Il2CppString*> warningMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::LimbWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "LimbWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2), ::il2cpp_utils::ExtractType(bone3), ::il2cpp_utils::ExtractType(warningMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bone1, bone2, bone3, byref(warningMessage));
}
// Autogenerated method: RootMotion.BipedReferences.SpineError
bool RootMotion::BipedReferences::SpineError(RootMotion::BipedReferences* references, ByRef<::Il2CppString*> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::SpineError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "SpineError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(errorMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references, byref(errorMessage));
}
// Autogenerated method: RootMotion.BipedReferences.SpineWarning
bool RootMotion::BipedReferences::SpineWarning(RootMotion::BipedReferences* references, ByRef<::Il2CppString*> warningMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::SpineWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "SpineWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(warningMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references, byref(warningMessage));
}
// Autogenerated method: RootMotion.BipedReferences.EyesError
bool RootMotion::BipedReferences::EyesError(RootMotion::BipedReferences* references, ByRef<::Il2CppString*> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::EyesError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "EyesError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(errorMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references, byref(errorMessage));
}
// Autogenerated method: RootMotion.BipedReferences.EyesWarning
bool RootMotion::BipedReferences::EyesWarning(RootMotion::BipedReferences* references, ByRef<::Il2CppString*> warningMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::EyesWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "EyesWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(warningMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references, byref(warningMessage));
}
// Autogenerated method: RootMotion.BipedReferences.RootHeightWarning
bool RootMotion::BipedReferences::RootHeightWarning(RootMotion::BipedReferences* references, ByRef<::Il2CppString*> warningMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::RootHeightWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "RootHeightWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(warningMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references, byref(warningMessage));
}
// Autogenerated method: RootMotion.BipedReferences.FacingAxisWarning
bool RootMotion::BipedReferences::FacingAxisWarning(RootMotion::BipedReferences* references, ByRef<::Il2CppString*> warningMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::FacingAxisWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "FacingAxisWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(warningMessage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references, byref(warningMessage));
}
// Autogenerated method: RootMotion.BipedReferences.GetVerticalOffset
float RootMotion::BipedReferences::GetVerticalOffset(UnityEngine::Vector3 p1, UnityEngine::Vector3 p2, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::GetVerticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences", "GetVerticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p1, p2, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.BipedReferences/RootMotion.AutoDetectParams
#include "RootMotion/BipedReferences_AutoDetectParams.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean legsParentInSpine
bool& RootMotion::BipedReferences::AutoDetectParams::dyn_legsParentInSpine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::AutoDetectParams::dyn_legsParentInSpine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legsParentInSpine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeEyes
bool& RootMotion::BipedReferences::AutoDetectParams::dyn_includeEyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::AutoDetectParams::dyn_includeEyes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeEyes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.BipedReferences/RootMotion.AutoDetectParams.get_Default
RootMotion::BipedReferences::AutoDetectParams RootMotion::BipedReferences::AutoDetectParams::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedReferences::AutoDetectParams::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "BipedReferences/AutoDetectParams", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedReferences::AutoDetectParams, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.Comments
#include "RootMotion/Comments.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String text
::Il2CppString*& RootMotion::Comments::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Comments::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.DemoGUIMessage
#include "RootMotion/DemoGUIMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String text
::Il2CppString*& RootMotion::DemoGUIMessage::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::DemoGUIMessage::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& RootMotion::DemoGUIMessage::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::DemoGUIMessage::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.DemoGUIMessage.OnGUI
void RootMotion::DemoGUIMessage::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::DemoGUIMessage::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.Hierarchy
#include "RootMotion/Hierarchy.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.Hierarchy.HierarchyIsValid
bool RootMotion::Hierarchy::HierarchyIsValid(::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::HierarchyIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "HierarchyIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones);
}
// Autogenerated method: RootMotion.Hierarchy.ContainsDuplicate
UnityEngine::Object* RootMotion::Hierarchy::ContainsDuplicate(::Array<UnityEngine::Object*>* objects) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::ContainsDuplicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "ContainsDuplicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objects)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, objects);
}
// Autogenerated method: RootMotion.Hierarchy.IsAncestor
bool RootMotion::Hierarchy::IsAncestor(UnityEngine::Transform* transform, UnityEngine::Transform* ancestor) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::IsAncestor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "IsAncestor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(ancestor)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, ancestor);
}
// Autogenerated method: RootMotion.Hierarchy.ContainsChild
bool RootMotion::Hierarchy::ContainsChild(UnityEngine::Transform* transform, UnityEngine::Transform* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::ContainsChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "ContainsChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(child)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, child);
}
// Autogenerated method: RootMotion.Hierarchy.AddAncestors
void RootMotion::Hierarchy::AddAncestors(UnityEngine::Transform* transform, UnityEngine::Transform* blocker, ByRef<::Array<UnityEngine::Transform*>*> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::AddAncestors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "AddAncestors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(blocker), ::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, blocker, byref(array));
}
// Autogenerated method: RootMotion.Hierarchy.GetAncestor
UnityEngine::Transform* RootMotion::Hierarchy::GetAncestor(UnityEngine::Transform* transform, int minChildCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::GetAncestor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "GetAncestor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(minChildCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, minChildCount);
}
// Autogenerated method: RootMotion.Hierarchy.GetFirstCommonAncestor
UnityEngine::Transform* RootMotion::Hierarchy::GetFirstCommonAncestor(UnityEngine::Transform* t1, UnityEngine::Transform* t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::GetFirstCommonAncestor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "GetFirstCommonAncestor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: RootMotion.Hierarchy.GetFirstCommonAncestor
UnityEngine::Transform* RootMotion::Hierarchy::GetFirstCommonAncestor(::Array<UnityEngine::Transform*>* transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::GetFirstCommonAncestor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "GetFirstCommonAncestor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transforms)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transforms);
}
// Autogenerated method: RootMotion.Hierarchy.GetFirstCommonAncestorRecursive
UnityEngine::Transform* RootMotion::Hierarchy::GetFirstCommonAncestorRecursive(UnityEngine::Transform* transform, ::Array<UnityEngine::Transform*>* transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::GetFirstCommonAncestorRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "GetFirstCommonAncestorRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(transforms)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, transforms);
}
// Autogenerated method: RootMotion.Hierarchy.IsCommonAncestor
bool RootMotion::Hierarchy::IsCommonAncestor(UnityEngine::Transform* transform, ::Array<UnityEngine::Transform*>* transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Hierarchy::IsCommonAncestor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Hierarchy", "IsCommonAncestor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(transforms)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, transforms);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.InspectorComment
#include "RootMotion/InspectorComment.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
::Il2CppString*& RootMotion::InspectorComment::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InspectorComment::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String color
::Il2CppString*& RootMotion::InspectorComment::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InspectorComment::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.InterpolationMode
#include "RootMotion/InterpolationMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode None
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode None
void RootMotion::InterpolationMode::_set_None(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InOutCubic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InOutCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InOutCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InOutCubic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InOutCubic
void RootMotion::InterpolationMode::_set_InOutCubic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InOutCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InOutCubic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InOutQuintic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InOutQuintic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InOutQuintic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InOutQuintic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InOutQuintic
void RootMotion::InterpolationMode::_set_InOutQuintic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InOutQuintic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InOutQuintic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InOutSine
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InOutSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InOutSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InOutSine"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InOutSine
void RootMotion::InterpolationMode::_set_InOutSine(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InOutSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InOutSine", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InQuintic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InQuintic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InQuintic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InQuintic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InQuintic
void RootMotion::InterpolationMode::_set_InQuintic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InQuintic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InQuintic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InQuartic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InQuartic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InQuartic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InQuartic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InQuartic
void RootMotion::InterpolationMode::_set_InQuartic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InQuartic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InQuartic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InCubic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InCubic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InCubic
void RootMotion::InterpolationMode::_set_InCubic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InCubic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InQuadratic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InQuadratic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InQuadratic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InQuadratic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InQuadratic
void RootMotion::InterpolationMode::_set_InQuadratic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InQuadratic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InQuadratic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InElastic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InElastic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InElastic
void RootMotion::InterpolationMode::_set_InElastic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InElastic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InElasticSmall
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InElasticSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InElasticSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InElasticSmall"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InElasticSmall
void RootMotion::InterpolationMode::_set_InElasticSmall(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InElasticSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InElasticSmall", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InElasticBig
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InElasticBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InElasticBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InElasticBig"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InElasticBig
void RootMotion::InterpolationMode::_set_InElasticBig(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InElasticBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InElasticBig", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InSine
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InSine"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InSine
void RootMotion::InterpolationMode::_set_InSine(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InSine", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode InBack
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_InBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_InBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "InBack"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode InBack
void RootMotion::InterpolationMode::_set_InBack(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_InBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "InBack", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutQuintic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutQuintic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutQuintic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutQuintic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutQuintic
void RootMotion::InterpolationMode::_set_OutQuintic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutQuintic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutQuintic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutQuartic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutQuartic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutQuartic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutQuartic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutQuartic
void RootMotion::InterpolationMode::_set_OutQuartic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutQuartic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutQuartic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutCubic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutCubic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutCubic
void RootMotion::InterpolationMode::_set_OutCubic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutCubic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutInCubic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutInCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutInCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutInCubic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutInCubic
void RootMotion::InterpolationMode::_set_OutInCubic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutInCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutInCubic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutInQuartic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutInQuartic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutInQuartic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutInQuartic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutInQuartic
void RootMotion::InterpolationMode::_set_OutInQuartic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutInQuartic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutInQuartic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutElastic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutElastic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutElastic
void RootMotion::InterpolationMode::_set_OutElastic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutElastic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutElasticSmall
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutElasticSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutElasticSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutElasticSmall"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutElasticSmall
void RootMotion::InterpolationMode::_set_OutElasticSmall(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutElasticSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutElasticSmall", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutElasticBig
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutElasticBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutElasticBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutElasticBig"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutElasticBig
void RootMotion::InterpolationMode::_set_OutElasticBig(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutElasticBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutElasticBig", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutSine
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutSine"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutSine
void RootMotion::InterpolationMode::_set_OutSine(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutSine", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutBack
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutBack"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutBack
void RootMotion::InterpolationMode::_set_OutBack(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutBack", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutBackCubic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutBackCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutBackCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutBackCubic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutBackCubic
void RootMotion::InterpolationMode::_set_OutBackCubic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutBackCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutBackCubic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode OutBackQuartic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_OutBackQuartic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_OutBackQuartic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "OutBackQuartic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode OutBackQuartic
void RootMotion::InterpolationMode::_set_OutBackQuartic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_OutBackQuartic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "OutBackQuartic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode BackInCubic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_BackInCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_BackInCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "BackInCubic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode BackInCubic
void RootMotion::InterpolationMode::_set_BackInCubic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_BackInCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "BackInCubic", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.InterpolationMode BackInQuartic
RootMotion::InterpolationMode RootMotion::InterpolationMode::_get_BackInQuartic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_get_BackInQuartic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::InterpolationMode>("RootMotion", "InterpolationMode", "BackInQuartic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.InterpolationMode BackInQuartic
void RootMotion::InterpolationMode::_set_BackInQuartic(RootMotion::InterpolationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::_set_BackInQuartic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "InterpolationMode", "BackInQuartic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& RootMotion::InterpolationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::InterpolationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Interp
#include "RootMotion/Interp.hpp"
// Including type: RootMotion.InterpolationMode
#include "RootMotion/InterpolationMode.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.Interp.Float
float RootMotion::Interp::Float(float t, RootMotion::InterpolationMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::Float");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "Float", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, mode);
}
// Autogenerated method: RootMotion.Interp.V3
UnityEngine::Vector3 RootMotion::Interp::V3(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, float t, RootMotion::InterpolationMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::V3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "V3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, v2, t, mode);
}
// Autogenerated method: RootMotion.Interp.LerpValue
float RootMotion::Interp::LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::LerpValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "LerpValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(increaseSpeed), ::il2cpp_utils::ExtractType(decreaseSpeed)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, target, increaseSpeed, decreaseSpeed);
}
// Autogenerated method: RootMotion.Interp.None
float RootMotion::Interp::None(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::None");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "None", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InOutCubic
float RootMotion::Interp::InOutCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InOutCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InOutCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InOutQuintic
float RootMotion::Interp::InOutQuintic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InOutQuintic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InOutQuintic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InQuintic
float RootMotion::Interp::InQuintic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InQuintic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InQuintic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InQuartic
float RootMotion::Interp::InQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InQuartic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InQuartic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InCubic
float RootMotion::Interp::InCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InQuadratic
float RootMotion::Interp::InQuadratic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InQuadratic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InQuadratic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutQuintic
float RootMotion::Interp::OutQuintic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutQuintic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutQuintic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutQuartic
float RootMotion::Interp::OutQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutQuartic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutQuartic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutCubic
float RootMotion::Interp::OutCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutInCubic
float RootMotion::Interp::OutInCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutInCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutInCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutInQuartic
float RootMotion::Interp::OutInQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutInQuartic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutInQuartic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.BackInCubic
float RootMotion::Interp::BackInCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::BackInCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "BackInCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.BackInQuartic
float RootMotion::Interp::BackInQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::BackInQuartic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "BackInQuartic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutBackCubic
float RootMotion::Interp::OutBackCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutBackCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutBackCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutBackQuartic
float RootMotion::Interp::OutBackQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutBackQuartic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutBackQuartic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutElasticSmall
float RootMotion::Interp::OutElasticSmall(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutElasticSmall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutElasticSmall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutElasticBig
float RootMotion::Interp::OutElasticBig(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutElasticBig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutElasticBig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InElasticSmall
float RootMotion::Interp::InElasticSmall(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InElasticSmall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InElasticSmall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InElasticBig
float RootMotion::Interp::InElasticBig(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InElasticBig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InElasticBig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InSine
float RootMotion::Interp::InSine(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InSine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InSine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutSine
float RootMotion::Interp::OutSine(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutSine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutSine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InOutSine
float RootMotion::Interp::InOutSine(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InOutSine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InOutSine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InElastic
float RootMotion::Interp::InElastic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InElastic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InElastic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutElastic
float RootMotion::Interp::OutElastic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutElastic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutElastic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InBack
float RootMotion::Interp::InBack(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::InBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "InBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutBack
float RootMotion::Interp::OutBack(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Interp::OutBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Interp", "OutBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.LargeHeader
#include "RootMotion/LargeHeader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
::Il2CppString*& RootMotion::LargeHeader::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LargeHeader::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String color
::Il2CppString*& RootMotion::LargeHeader::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LargeHeader::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.LayerMaskExtensions
#include "RootMotion/LayerMaskExtensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.LayerMaskExtensions.Contains
bool RootMotion::LayerMaskExtensions::Contains(UnityEngine::LayerMask mask, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask, layer);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.Create
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::Create(::Array<::Il2CppString*>* layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerNames);
}
// Creating initializer_list -> params proxy for: UnityEngine.LayerMask Create(params System.String[] layerNames)
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::Create(std::initializer_list<::Il2CppString*> layerNames) {
  return RootMotion::LayerMaskExtensions::Create(::Array<::Il2CppString*>::New(layerNames));
}
// Autogenerated method: RootMotion.LayerMaskExtensions.Create
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::Create(::Array<int>* layerNumbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNumbers)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerNumbers);
}
// Creating initializer_list -> params proxy for: UnityEngine.LayerMask Create(params System.Int32[] layerNumbers)
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::Create(std::initializer_list<int> layerNumbers) {
  return RootMotion::LayerMaskExtensions::Create(::Array<int>::New(layerNumbers));
}
// Autogenerated method: RootMotion.LayerMaskExtensions.NamesToMask
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::NamesToMask(::Array<::Il2CppString*>* layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::NamesToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "NamesToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerNames);
}
// Creating initializer_list -> params proxy for: UnityEngine.LayerMask NamesToMask(params System.String[] layerNames)
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::NamesToMask(std::initializer_list<::Il2CppString*> layerNames) {
  return RootMotion::LayerMaskExtensions::NamesToMask(::Array<::Il2CppString*>::New(layerNames));
}
// Autogenerated method: RootMotion.LayerMaskExtensions.LayerNumbersToMask
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::LayerNumbersToMask(::Array<int>* layerNumbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::LayerNumbersToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "LayerNumbersToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNumbers)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerNumbers);
}
// Creating initializer_list -> params proxy for: UnityEngine.LayerMask LayerNumbersToMask(params System.Int32[] layerNumbers)
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::LayerNumbersToMask(std::initializer_list<int> layerNumbers) {
  return RootMotion::LayerMaskExtensions::LayerNumbersToMask(::Array<int>::New(layerNumbers));
}
// Autogenerated method: RootMotion.LayerMaskExtensions.Inverse
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::Inverse(UnityEngine::LayerMask original) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, original);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.AddToMask
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::AddToMask(UnityEngine::LayerMask original, ::Array<::Il2CppString*>* layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::AddToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "AddToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, original, layerNames);
}
// Creating initializer_list -> params proxy for: UnityEngine.LayerMask AddToMask(UnityEngine.LayerMask original, params System.String[] layerNames)
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::AddToMask(UnityEngine::LayerMask original, std::initializer_list<::Il2CppString*> layerNames) {
  return RootMotion::LayerMaskExtensions::AddToMask(original, ::Array<::Il2CppString*>::New(layerNames));
}
// Autogenerated method: RootMotion.LayerMaskExtensions.RemoveFromMask
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::RemoveFromMask(UnityEngine::LayerMask original, ::Array<::Il2CppString*>* layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::RemoveFromMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "RemoveFromMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, original, layerNames);
}
// Creating initializer_list -> params proxy for: UnityEngine.LayerMask RemoveFromMask(UnityEngine.LayerMask original, params System.String[] layerNames)
UnityEngine::LayerMask RootMotion::LayerMaskExtensions::RemoveFromMask(UnityEngine::LayerMask original, std::initializer_list<::Il2CppString*> layerNames) {
  return RootMotion::LayerMaskExtensions::RemoveFromMask(original, ::Array<::Il2CppString*>::New(layerNames));
}
// Autogenerated method: RootMotion.LayerMaskExtensions.MaskToNames
::Array<::Il2CppString*>* RootMotion::LayerMaskExtensions::MaskToNames(UnityEngine::LayerMask original) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::MaskToNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "MaskToNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, original);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.MaskToNumbers
::Array<int>* RootMotion::LayerMaskExtensions::MaskToNumbers(UnityEngine::LayerMask original) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::MaskToNumbers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "MaskToNumbers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, original);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.MaskToString
::Il2CppString* RootMotion::LayerMaskExtensions::MaskToString(UnityEngine::LayerMask original) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::MaskToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "MaskToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, original);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.MaskToString
::Il2CppString* RootMotion::LayerMaskExtensions::MaskToString(UnityEngine::LayerMask original, ::Il2CppString* delimiter) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::LayerMaskExtensions::MaskToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "MaskToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(delimiter)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, original, delimiter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.QuaTools
#include "RootMotion/QuaTools.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.QuaTools.Lerp
UnityEngine::Quaternion RootMotion::QuaTools::Lerp(UnityEngine::Quaternion fromRotation, UnityEngine::Quaternion toRotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromRotation), ::il2cpp_utils::ExtractType(toRotation), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromRotation, toRotation, weight);
}
// Autogenerated method: RootMotion.QuaTools.Slerp
UnityEngine::Quaternion RootMotion::QuaTools::Slerp(UnityEngine::Quaternion fromRotation, UnityEngine::Quaternion toRotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::Slerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "Slerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromRotation), ::il2cpp_utils::ExtractType(toRotation), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromRotation, toRotation, weight);
}
// Autogenerated method: RootMotion.QuaTools.LinearBlend
UnityEngine::Quaternion RootMotion::QuaTools::LinearBlend(UnityEngine::Quaternion q, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::LinearBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "LinearBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q, weight);
}
// Autogenerated method: RootMotion.QuaTools.SphericalBlend
UnityEngine::Quaternion RootMotion::QuaTools::SphericalBlend(UnityEngine::Quaternion q, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::SphericalBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "SphericalBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q, weight);
}
// Autogenerated method: RootMotion.QuaTools.FromToAroundAxis
UnityEngine::Quaternion RootMotion::QuaTools::FromToAroundAxis(UnityEngine::Vector3 fromDirection, UnityEngine::Vector3 toDirection, UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::FromToAroundAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "FromToAroundAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromDirection), ::il2cpp_utils::ExtractType(toDirection), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromDirection, toDirection, axis);
}
// Autogenerated method: RootMotion.QuaTools.RotationToLocalSpace
UnityEngine::Quaternion RootMotion::QuaTools::RotationToLocalSpace(UnityEngine::Quaternion space, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::RotationToLocalSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "RotationToLocalSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, space, rotation);
}
// Autogenerated method: RootMotion.QuaTools.FromToRotation
UnityEngine::Quaternion RootMotion::QuaTools::FromToRotation(UnityEngine::Quaternion from, UnityEngine::Quaternion to) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::FromToRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "FromToRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: RootMotion.QuaTools.GetAxis
UnityEngine::Vector3 RootMotion::QuaTools::GetAxis(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::GetAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "GetAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: RootMotion.QuaTools.ClampRotation
UnityEngine::Quaternion RootMotion::QuaTools::ClampRotation(UnityEngine::Quaternion rotation, float clampWeight, int clampSmoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::ClampRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ClampRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation, clampWeight, clampSmoothing);
}
// Autogenerated method: RootMotion.QuaTools.ClampAngle
float RootMotion::QuaTools::ClampAngle(float angle, float clampWeight, int clampSmoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::ClampAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ClampAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angle, clampWeight, clampSmoothing);
}
// Autogenerated method: RootMotion.QuaTools.MatchRotation
UnityEngine::Quaternion RootMotion::QuaTools::MatchRotation(UnityEngine::Quaternion targetRotation, UnityEngine::Vector3 targetforwardAxis, UnityEngine::Vector3 targetUpAxis, UnityEngine::Vector3 forwardAxis, UnityEngine::Vector3 upAxis) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::MatchRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "MatchRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetRotation), ::il2cpp_utils::ExtractType(targetforwardAxis), ::il2cpp_utils::ExtractType(targetUpAxis), ::il2cpp_utils::ExtractType(forwardAxis), ::il2cpp_utils::ExtractType(upAxis)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, targetRotation, targetforwardAxis, targetUpAxis, forwardAxis, upAxis);
}
// Autogenerated method: RootMotion.QuaTools.ToBiPolar
UnityEngine::Vector3 RootMotion::QuaTools::ToBiPolar(UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::ToBiPolar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ToBiPolar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: RootMotion.QuaTools.ToBiPolar
float RootMotion::QuaTools::ToBiPolar(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::QuaTools::ToBiPolar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ToBiPolar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.SolverManager
#include "RootMotion/SolverManager.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean fixTransforms
bool& RootMotion::SolverManager::dyn_fixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::dyn_fixTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixTransforms"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator animator
UnityEngine::Animator*& RootMotion::SolverManager::dyn_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::dyn_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animator"))->offset;
  return *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation legacy
UnityEngine::Animation*& RootMotion::SolverManager::dyn_legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::dyn_legacy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legacy"))->offset;
  return *reinterpret_cast<UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean updateFrame
bool& RootMotion::SolverManager::dyn_updateFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::dyn_updateFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean componentInitiated
bool& RootMotion::SolverManager::dyn_componentInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::dyn_componentInitiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentInitiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean skipSolverUpdate
bool& RootMotion::SolverManager::dyn_skipSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::dyn_skipSolverUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipSolverUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.SolverManager.get_animatePhysics
bool RootMotion::SolverManager::get_animatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::get_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.get_isAnimated
bool RootMotion::SolverManager::get_isAnimated() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::get_isAnimated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAnimated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Disable
void RootMotion::SolverManager::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::Disable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.InitiateSolver
void RootMotion::SolverManager::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::InitiateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.UpdateSolver
void RootMotion::SolverManager::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::UpdateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.FixTransforms
void RootMotion::SolverManager::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.OnDisable
void RootMotion::SolverManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Start
void RootMotion::SolverManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Initiate
void RootMotion::SolverManager::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Update
void RootMotion::SolverManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.FindAnimatorRecursive
void RootMotion::SolverManager::FindAnimatorRecursive(UnityEngine::Transform* t, bool findInChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::FindAnimatorRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAnimatorRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(findInChildren)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t, findInChildren);
}
// Autogenerated method: RootMotion.SolverManager.FixedUpdate
void RootMotion::SolverManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.LateUpdate
void RootMotion::SolverManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.UpdateSolverExternal
void RootMotion::SolverManager::UpdateSolverExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::SolverManager::UpdateSolverExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolverExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.TriggerEventBroadcaster
#include "RootMotion/TriggerEventBroadcaster.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject target
UnityEngine::GameObject*& RootMotion::TriggerEventBroadcaster::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::TriggerEventBroadcaster::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.TriggerEventBroadcaster.OnTriggerEnter
void RootMotion::TriggerEventBroadcaster::OnTriggerEnter(UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::TriggerEventBroadcaster::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, collider);
}
// Autogenerated method: RootMotion.TriggerEventBroadcaster.OnTriggerStay
void RootMotion::TriggerEventBroadcaster::OnTriggerStay(UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::TriggerEventBroadcaster::OnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, collider);
}
// Autogenerated method: RootMotion.TriggerEventBroadcaster.OnTriggerExit
void RootMotion::TriggerEventBroadcaster::OnTriggerExit(UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::TriggerEventBroadcaster::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, collider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.V3Tools
#include "RootMotion/V3Tools.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.V3Tools.Lerp
UnityEngine::Vector3 RootMotion::V3Tools::Lerp(UnityEngine::Vector3 fromVector, UnityEngine::Vector3 toVector, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromVector), ::il2cpp_utils::ExtractType(toVector), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromVector, toVector, weight);
}
// Autogenerated method: RootMotion.V3Tools.Slerp
UnityEngine::Vector3 RootMotion::V3Tools::Slerp(UnityEngine::Vector3 fromVector, UnityEngine::Vector3 toVector, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::Slerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "Slerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromVector), ::il2cpp_utils::ExtractType(toVector), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromVector, toVector, weight);
}
// Autogenerated method: RootMotion.V3Tools.ExtractVertical
UnityEngine::Vector3 RootMotion::V3Tools::ExtractVertical(UnityEngine::Vector3 v, UnityEngine::Vector3 verticalAxis, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::ExtractVertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ExtractVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(verticalAxis), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v, verticalAxis, weight);
}
// Autogenerated method: RootMotion.V3Tools.ExtractHorizontal
UnityEngine::Vector3 RootMotion::V3Tools::ExtractHorizontal(UnityEngine::Vector3 v, UnityEngine::Vector3 normal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::ExtractHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ExtractHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v, normal, weight);
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(UnityEngine::Vector3 direction, UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::ClampDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ClampDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(normalDirection), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, direction, normalDirection, clampWeight, clampSmoothing);
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(UnityEngine::Vector3 direction, UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing, ByRef<bool> changed) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::ClampDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ClampDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(normalDirection), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, direction, normalDirection, clampWeight, clampSmoothing, byref(changed));
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(UnityEngine::Vector3 direction, UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing, ByRef<float> clampValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::ClampDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ClampDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(normalDirection), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, direction, normalDirection, clampWeight, clampSmoothing, byref(clampValue));
}
// Autogenerated method: RootMotion.V3Tools.LineToPlane
UnityEngine::Vector3 RootMotion::V3Tools::LineToPlane(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, UnityEngine::Vector3 planeNormal, UnityEngine::Vector3 planePoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::LineToPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "LineToPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(planeNormal), ::il2cpp_utils::ExtractType(planePoint)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, planeNormal, planePoint);
}
// Autogenerated method: RootMotion.V3Tools.PointToPlane
UnityEngine::Vector3 RootMotion::V3Tools::PointToPlane(UnityEngine::Vector3 point, UnityEngine::Vector3 planePosition, UnityEngine::Vector3 planeNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::PointToPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "PointToPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(planePosition), ::il2cpp_utils::ExtractType(planeNormal)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point, planePosition, planeNormal);
}
// Autogenerated method: RootMotion.V3Tools.TransformPointUnscaled
UnityEngine::Vector3 RootMotion::V3Tools::TransformPointUnscaled(UnityEngine::Transform* t, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::TransformPointUnscaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "TransformPointUnscaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, point);
}
// Autogenerated method: RootMotion.V3Tools.InverseTransformPointUnscaled
UnityEngine::Vector3 RootMotion::V3Tools::InverseTransformPointUnscaled(UnityEngine::Transform* t, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::V3Tools::InverseTransformPointUnscaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "InverseTransformPointUnscaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, point);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.Warning
#include "RootMotion/Warning.hpp"
// Including type: RootMotion.Warning/RootMotion.Logger
#include "RootMotion/Warning_Logger.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean logged
bool RootMotion::Warning::_get_logged() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Warning::_get_logged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("RootMotion", "Warning", "logged"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean logged
void RootMotion::Warning::_set_logged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Warning::_set_logged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Warning", "logged", value));
}
// Autogenerated method: RootMotion.Warning.Log
void RootMotion::Warning::Log(::Il2CppString* message, RootMotion::Warning::Logger* logger, bool logInEditMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Warning::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Warning", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(logger), ::il2cpp_utils::ExtractType(logInEditMode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message, logger, logInEditMode);
}
// Autogenerated method: RootMotion.Warning.Log
void RootMotion::Warning::Log(::Il2CppString* message, UnityEngine::Transform* context, bool logInEditMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Warning::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Warning", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(logInEditMode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message, context, logInEditMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.Warning/RootMotion.Logger
#include "RootMotion/Warning_Logger.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.Warning/RootMotion.Logger.Invoke
void RootMotion::Warning::Logger::Invoke(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Warning::Logger::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
// Autogenerated method: RootMotion.Warning/RootMotion.Logger.BeginInvoke
System::IAsyncResult* RootMotion::Warning::Logger::BeginInvoke(::Il2CppString* message, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Warning::Logger::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, message, callback, object);
}
// Autogenerated method: RootMotion.Warning/RootMotion.Logger.EndInvoke
void RootMotion::Warning::Logger::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Warning::Logger::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.Demos.Navigator
#include "RootMotion/Demos/Navigator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean activeTargetSeeking
bool& RootMotion::Demos::Navigator::dyn_activeTargetSeeking() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_activeTargetSeeking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeTargetSeeking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cornerRadius
float& RootMotion::Demos::Navigator::dyn_cornerRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_cornerRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cornerRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single recalculateOnPathDistance
float& RootMotion::Demos::Navigator::dyn_recalculateOnPathDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_recalculateOnPathDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recalculateOnPathDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSampleDistance
float& RootMotion::Demos::Navigator::dyn_maxSampleDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_maxSampleDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSampleDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nextPathInterval
float& RootMotion::Demos::Navigator::dyn_nextPathInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_nextPathInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPathInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <normalizedDeltaPosition>k__BackingField
UnityEngine::Vector3& RootMotion::Demos::Navigator::dyn_$normalizedDeltaPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_$normalizedDeltaPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<normalizedDeltaPosition>k__BackingField"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.Demos.Navigator/RootMotion.Demos.State <state>k__BackingField
RootMotion::Demos::Navigator::State& RootMotion::Demos::Navigator::dyn_$state$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_$state$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<state>k__BackingField"))->offset;
  return *reinterpret_cast<RootMotion::Demos::Navigator::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform transform
UnityEngine::Transform*& RootMotion::Demos::Navigator::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cornerIndex
int& RootMotion::Demos::Navigator::dyn_cornerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_cornerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cornerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] corners
::Array<UnityEngine::Vector3>*& RootMotion::Demos::Navigator::dyn_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "corners"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshPath path
UnityEngine::AI::NavMeshPath*& RootMotion::Demos::Navigator::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<UnityEngine::AI::NavMeshPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastTargetPosition
UnityEngine::Vector3& RootMotion::Demos::Navigator::dyn_lastTargetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_lastTargetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTargetPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
bool& RootMotion::Demos::Navigator::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPathTime
float& RootMotion::Demos::Navigator::dyn_nextPathTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::dyn_nextPathTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPathTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.Demos.Navigator.get_normalizedDeltaPosition
UnityEngine::Vector3 RootMotion::Demos::Navigator::get_normalizedDeltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::get_normalizedDeltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalizedDeltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Demos.Navigator.set_normalizedDeltaPosition
void RootMotion::Demos::Navigator::set_normalizedDeltaPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::set_normalizedDeltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedDeltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RootMotion.Demos.Navigator.get_state
RootMotion::Demos::Navigator::State RootMotion::Demos::Navigator::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::get_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<RootMotion::Demos::Navigator::State, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Demos.Navigator.set_state
void RootMotion::Demos::Navigator::set_state(RootMotion::Demos::Navigator::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::set_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RootMotion.Demos.Navigator.Initiate
void RootMotion::Demos::Navigator::Initiate(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transform);
}
// Autogenerated method: RootMotion.Demos.Navigator.Update
void RootMotion::Demos::Navigator::Update(UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.Demos.Navigator.CalculatePath
void RootMotion::Demos::Navigator::CalculatePath(UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::CalculatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.Demos.Navigator.Find
bool RootMotion::Demos::Navigator::Find(UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.Demos.Navigator.Stop
void RootMotion::Demos::Navigator::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.Demos.Navigator.HorDistance
float RootMotion::Demos::Navigator::HorDistance(UnityEngine::Vector3 p1, UnityEngine::Vector3 p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::HorDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HorDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, p1, p2);
}
// Autogenerated method: RootMotion.Demos.Navigator.Visualize
void RootMotion::Demos::Navigator::Visualize() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::Visualize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Demos.Navigator/RootMotion.Demos.State
#include "RootMotion/Demos/Navigator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State Idle
RootMotion::Demos::Navigator::State RootMotion::Demos::Navigator::State::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::State::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Demos::Navigator::State>("RootMotion.Demos", "Navigator/State", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State Idle
void RootMotion::Demos::Navigator::State::_set_Idle(RootMotion::Demos::Navigator::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::State::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.Demos", "Navigator/State", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State Seeking
RootMotion::Demos::Navigator::State RootMotion::Demos::Navigator::State::_get_Seeking() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::State::_get_Seeking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Demos::Navigator::State>("RootMotion.Demos", "Navigator/State", "Seeking"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State Seeking
void RootMotion::Demos::Navigator::State::_set_Seeking(RootMotion::Demos::Navigator::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::State::_set_Seeking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.Demos", "Navigator/State", "Seeking", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State OnPath
RootMotion::Demos::Navigator::State RootMotion::Demos::Navigator::State::_get_OnPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::State::_get_OnPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::Demos::Navigator::State>("RootMotion.Demos", "Navigator/State", "OnPath"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State OnPath
void RootMotion::Demos::Navigator::State::_set_OnPath(RootMotion::Demos::Navigator::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::State::_set_OnPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.Demos", "Navigator/State", "OnPath", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& RootMotion::Demos::Navigator::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::Demos::Navigator::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.BipedIK
#include "RootMotion/FinalIK/BipedIK.hpp"
// Including type: RootMotion.BipedReferences
#include "RootMotion/BipedReferences.hpp"
// Including type: RootMotion.FinalIK.BipedIKSolvers
#include "RootMotion/FinalIK/BipedIKSolvers.hpp"
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.BipedReferences references
RootMotion::BipedReferences*& RootMotion::FinalIK::BipedIK::dyn_references() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::dyn_references");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "references"))->offset;
  return *reinterpret_cast<RootMotion::BipedReferences**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.BipedIKSolvers solvers
RootMotion::FinalIK::BipedIKSolvers*& RootMotion::FinalIK::BipedIK::dyn_solvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::dyn_solvers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvers"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::BipedIKSolvers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.OpenUserManual
void RootMotion::FinalIK::BipedIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.OpenScriptReference
void RootMotion::FinalIK::BipedIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SupportGroup
void RootMotion::FinalIK::BipedIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.ASThread
void RootMotion::FinalIK::BipedIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetIKPositionWeight
float RootMotion::FinalIK::BipedIK::GetIKPositionWeight(UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::GetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetIKRotationWeight
float RootMotion::FinalIK::BipedIK::GetIKRotationWeight(UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::GetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetIKPositionWeight
void RootMotion::FinalIK::BipedIK::SetIKPositionWeight(UnityEngine::AvatarIKGoal goal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(weight)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, goal, weight);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetIKRotationWeight
void RootMotion::FinalIK::BipedIK::SetIKRotationWeight(UnityEngine::AvatarIKGoal goal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(weight)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, goal, weight);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetIKPosition
void RootMotion::FinalIK::BipedIK::SetIKPosition(UnityEngine::AvatarIKGoal goal, UnityEngine::Vector3 IKPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(IKPosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, goal, IKPosition);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetIKRotation
void RootMotion::FinalIK::BipedIK::SetIKRotation(UnityEngine::AvatarIKGoal goal, UnityEngine::Quaternion IKRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetIKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(IKRotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, goal, IKRotation);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetIKPosition
UnityEngine::Vector3 RootMotion::FinalIK::BipedIK::GetIKPosition(UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::GetIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetIKRotation
UnityEngine::Quaternion RootMotion::FinalIK::BipedIK::GetIKRotation(UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::GetIKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetLookAtWeight
void RootMotion::FinalIK::BipedIK::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight), ::il2cpp_utils::ExtractType(eyesWeight), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampWeightHead), ::il2cpp_utils::ExtractType(clampWeightEyes)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, weight, bodyWeight, headWeight, eyesWeight, clampWeight, clampWeightHead, clampWeightEyes);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetLookAtPosition
void RootMotion::FinalIK::BipedIK::SetLookAtPosition(UnityEngine::Vector3 lookAtPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetLookAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookAtPosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, lookAtPosition);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetSpinePosition
void RootMotion::FinalIK::BipedIK::SetSpinePosition(UnityEngine::Vector3 spinePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetSpinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spinePosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, spinePosition);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetSpineWeight
void RootMotion::FinalIK::BipedIK::SetSpineWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetSpineWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpineWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetGoalIK
RootMotion::FinalIK::IKSolverLimb* RootMotion::FinalIK::BipedIK::GetGoalIK(UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::GetGoalIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGoalIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverLimb*, false>(___instance_arg, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.InitiateBipedIK
void RootMotion::FinalIK::BipedIK::InitiateBipedIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::InitiateBipedIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateBipedIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.UpdateBipedIK
void RootMotion::FinalIK::BipedIK::UpdateBipedIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::UpdateBipedIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBipedIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetToDefaults
void RootMotion::FinalIK::BipedIK::SetToDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::SetToDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.LogWarning
void RootMotion::FinalIK::BipedIK::LogWarning(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.FixTransforms
void RootMotion::FinalIK::BipedIK::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.InitiateSolver
void RootMotion::FinalIK::BipedIK::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::InitiateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.UpdateSolver
void RootMotion::FinalIK::BipedIK::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIK::UpdateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.BipedIKSolvers
#include "RootMotion/FinalIK/BipedIKSolvers.hpp"
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
// Including type: RootMotion.FinalIK.IKSolverFABRIK
#include "RootMotion/FinalIK/IKSolverFABRIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverLookAt
#include "RootMotion/FinalIK/IKSolverLookAt.hpp"
// Including type: RootMotion.FinalIK.IKSolverAim
#include "RootMotion/FinalIK/IKSolverAim.hpp"
// Including type: RootMotion.FinalIK.Constraints
#include "RootMotion/FinalIK/Constraints.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.BipedReferences
#include "RootMotion/BipedReferences.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb leftFoot
RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::BipedIKSolvers::dyn_leftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn_leftFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftFoot"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb rightFoot
RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::BipedIKSolvers::dyn_rightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn_rightFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightFoot"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb leftHand
RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::BipedIKSolvers::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb rightHand
RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::BipedIKSolvers::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverFABRIK spine
RootMotion::FinalIK::IKSolverFABRIK*& RootMotion::FinalIK::BipedIKSolvers::dyn_spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn_spine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spine"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::IKSolverFABRIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLookAt lookAt
RootMotion::FinalIK::IKSolverLookAt*& RootMotion::FinalIK::BipedIKSolvers::dyn_lookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn_lookAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookAt"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::IKSolverLookAt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverAim aim
RootMotion::FinalIK::IKSolverAim*& RootMotion::FinalIK::BipedIKSolvers::dyn_aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn_aim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aim"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::IKSolverAim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Constraints pelvis
RootMotion::FinalIK::Constraints*& RootMotion::FinalIK::BipedIKSolvers::dyn_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn_pelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvis"))->offset;
  return *reinterpret_cast<RootMotion::FinalIK::Constraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverLimb[] _limbs
::Array<RootMotion::FinalIK::IKSolverLimb*>*& RootMotion::FinalIK::BipedIKSolvers::dyn__limbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn__limbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_limbs"))->offset;
  return *reinterpret_cast<::Array<RootMotion::FinalIK::IKSolverLimb*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolver[] _ikSolvers
::Array<RootMotion::FinalIK::IKSolver*>*& RootMotion::FinalIK::BipedIKSolvers::dyn__ikSolvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::dyn__ikSolvers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ikSolvers"))->offset;
  return *reinterpret_cast<::Array<RootMotion::FinalIK::IKSolver*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.BipedIKSolvers.get_limbs
::Array<RootMotion::FinalIK::IKSolverLimb*>* RootMotion::FinalIK::BipedIKSolvers::get_limbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::get_limbs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_limbs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolverLimb*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIKSolvers.get_ikSolvers
::Array<RootMotion::FinalIK::IKSolver*>* RootMotion::FinalIK::BipedIKSolvers::get_ikSolvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::get_ikSolvers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ikSolvers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIKSolvers.AssignReferences
void RootMotion::FinalIK::BipedIKSolvers::AssignReferences(RootMotion::BipedReferences* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BipedIKSolvers::AssignReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, references);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Constraint
#include "RootMotion/FinalIK/Constraint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
UnityEngine::Transform*& RootMotion::FinalIK::Constraint::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Constraint::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
float& RootMotion::FinalIK::Constraint::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Constraint::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.Constraint.get_isValid
bool RootMotion::FinalIK::Constraint::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Constraint::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Constraint.UpdateConstraint
void RootMotion::FinalIK::Constraint::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Constraint::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ConstraintPosition
#include "RootMotion/FinalIK/ConstraintPosition.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
UnityEngine::Vector3& RootMotion::FinalIK::ConstraintPosition::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintPosition::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintPosition.UpdateConstraint
void RootMotion::FinalIK::ConstraintPosition::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintPosition::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ConstraintPositionOffset
#include "RootMotion/FinalIK/ConstraintPositionOffset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
UnityEngine::Vector3& RootMotion::FinalIK::ConstraintPositionOffset::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintPositionOffset::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 defaultLocalPosition
UnityEngine::Vector3& RootMotion::FinalIK::ConstraintPositionOffset::dyn_defaultLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintPositionOffset::dyn_defaultLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLocalPosition
UnityEngine::Vector3& RootMotion::FinalIK::ConstraintPositionOffset::dyn_lastLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintPositionOffset::dyn_lastLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
bool& RootMotion::FinalIK::ConstraintPositionOffset::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintPositionOffset::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintPositionOffset.get_positionChanged
bool RootMotion::FinalIK::ConstraintPositionOffset::get_positionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintPositionOffset::get_positionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_positionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintPositionOffset.UpdateConstraint
void RootMotion::FinalIK::ConstraintPositionOffset::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintPositionOffset::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ConstraintRotation
#include "RootMotion/FinalIK/ConstraintRotation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
UnityEngine::Quaternion& RootMotion::FinalIK::ConstraintRotation::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintRotation::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintRotation.UpdateConstraint
void RootMotion::FinalIK::ConstraintRotation::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ConstraintRotation::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
